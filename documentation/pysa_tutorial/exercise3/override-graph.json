{
  "BaseException.__init__": [
    "setuptools.build_meta.SetupRequirementsError",
    "testslide.lib.CoroutineValueError",
    "testslide.strict_mock.NonAwaitableReturn",
    "testslide.strict_mock.NonCallableValue",
    "testslide.strict_mock.NonExistentAttribute",
    "testslide.strict_mock.UndefinedAttribute",
    "testslide.strict_mock.UnsupportedMagic",
    "typeshed.typeshed.stubs.setuptools.setuptools.build_meta.SetupRequirementsError"
  ],
  "BaseException.__repr__": [
    "exceptiongroup._exceptions.BaseExceptionGroup"
  ],
  "BaseException.__setstate__": [
    "psycopg2._psycopg.Error",
    "typeshed.typeshed.stubs.psycopg2.psycopg2._psycopg.Error"
  ],
  "BaseException.__str__": [
    "exceptiongroup._exceptions.BaseExceptionGroup",
    "testslide.lib.CoroutineValueError",
    "testslide.strict_mock.NonAwaitableReturn",
    "testslide.strict_mock.NonCallableValue",
    "testslide.strict_mock.NonExistentAttribute",
    "testslide.strict_mock.UndefinedAttribute",
    "testslide.strict_mock.UnsupportedMagic"
  ],
  "IPython.core.application.BaseIPythonApplication.init_config_files": [
    "IPython.core.profileapp.ProfileCreate"
  ],
  "IPython.core.application.BaseIPythonApplication.initialize": [
    "IPython.terminal.ipapp.TerminalIPythonApp"
  ],
  "IPython.core.application.BaseIPythonApplication.stage_default_config_file": [
    "IPython.core.profileapp.ProfileCreate"
  ],
  "IPython.core.autocall.ExitAutocall.__call__": [
    "IPython.core.autocall.ZMQExitAutocall"
  ],
  "IPython.core.completer.Completer.__init__": [
    "IPython.core.completer.IPCompleter"
  ],
  "IPython.core.completer.Completer.complete": [
    "IPython.core.completer.IPCompleter"
  ],
  "IPython.core.completer._MatcherAPIv1Base.__call__": [
    "IPython.core.completer._MatcherAPIv1Total"
  ],
  "IPython.core.crashhandler.CrashHandler.__init__": [
    "IPython.terminal.ipapp.IPAppCrashHandler"
  ],
  "IPython.core.crashhandler.CrashHandler.make_report": [
    "IPython.terminal.ipapp.IPAppCrashHandler"
  ],
  "IPython.core.debugger.Pdb.__init__": [
    "IPython.terminal.debugger.TerminalPdb"
  ],
  "IPython.core.display.DisplayObject.__init__": [
    "IPython.core.display.Image",
    "IPython.core.display.JSON",
    "IPython.core.display.ProgressBar",
    "IPython.core.display.Video",
    "IPython.lib.display.Audio"
  ],
  "IPython.core.display.DisplayObject.__repr__": [
    "IPython.core.display.ProgressBar"
  ],
  "IPython.core.display.DisplayObject._check_data": [
    "IPython.core.display.JSON",
    "IPython.core.display.TextDisplayObject"
  ],
  "IPython.core.display.DisplayObject._data_and_metadata": [
    "IPython.core.display.Image",
    "IPython.core.display.JSON",
    "IPython.lib.display.Audio"
  ],
  "IPython.core.display.DisplayObject.data": [
    "IPython.core.display.JSON",
    "IPython.core.display.SVG"
  ],
  "IPython.core.display.DisplayObject.data@setter": [
    "IPython.core.display.JSON",
    "IPython.core.display.SVG"
  ],
  "IPython.core.display.DisplayObject.reload": [
    "IPython.core.display.Image",
    "IPython.core.display.Video",
    "IPython.lib.display.Audio"
  ],
  "IPython.core.display.JSON.__init__": [
    "IPython.core.display.GeoJSON"
  ],
  "IPython.core.displayhook.DisplayHook.write_format_data": [
    "IPython.terminal.prompts.RichPromptDisplayHook"
  ],
  "IPython.core.displayhook.DisplayHook.write_output_prompt": [
    "IPython.terminal.prompts.RichPromptDisplayHook"
  ],
  "IPython.core.displaypub.DisplayPublisher.clear_output": [
    "IPython.core.displaypub.CapturingDisplayPublisher"
  ],
  "IPython.core.displaypub.DisplayPublisher.publish": [
    "IPython.core.displaypub.CapturingDisplayPublisher"
  ],
  "IPython.core.formatters.BaseFormatter.__call__": [
    "IPython.core.formatters.IPythonDisplayFormatter",
    "IPython.core.formatters.MimeBundleFormatter",
    "IPython.core.formatters.PlainTextFormatter",
    "pip._vendor.rich.pretty.install.RichFormatter"
  ],
  "IPython.core.formatters.BaseFormatter._check_return": [
    "IPython.core.formatters.JSONFormatter",
    "IPython.core.formatters.MimeBundleFormatter"
  ],
  "IPython.core.guarded_eval.EvaluationPolicy.can_get_attr": [
    "IPython.core.guarded_eval.SelectivePolicy"
  ],
  "IPython.core.guarded_eval.EvaluationPolicy.can_get_item": [
    "IPython.core.guarded_eval.SelectivePolicy"
  ],
  "IPython.core.guarded_eval.EvaluationPolicy.can_operate": [
    "IPython.core.guarded_eval.SelectivePolicy"
  ],
  "IPython.core.history.HistoryAccessor.__init__": [
    "IPython.core.history.HistoryManager"
  ],
  "IPython.core.history.HistoryAccessor._get_hist_file_name": [
    "IPython.core.history.HistoryManager"
  ],
  "IPython.core.history.HistoryAccessor.get_range": [
    "IPython.core.history.HistoryManager"
  ],
  "IPython.core.history.HistoryAccessor.get_session_info": [
    "IPython.core.history.HistoryManager"
  ],
  "IPython.core.history.HistoryAccessor.get_tail": [
    "IPython.core.history.HistoryManager"
  ],
  "IPython.core.history.HistoryAccessor.writeout_cache": [
    "IPython.core.history.HistoryManager"
  ],
  "IPython.core.history.HistoryAccessorBase.get_range": [
    "IPython.core.history.HistoryAccessor"
  ],
  "IPython.core.history.HistoryAccessorBase.get_range_by_str": [
    "IPython.core.history.HistoryAccessor"
  ],
  "IPython.core.history.HistoryAccessorBase.get_tail": [
    "IPython.core.history.HistoryAccessor"
  ],
  "IPython.core.history.HistoryAccessorBase.search": [
    "IPython.core.history.HistoryAccessor"
  ],
  "IPython.core.historyapp.HistoryTrim.start": [
    "IPython.core.historyapp.HistoryClear"
  ],
  "IPython.core.inputsplitter.InputSplitter.__init__": [
    "IPython.core.inputsplitter.IPythonInputSplitter"
  ],
  "IPython.core.inputsplitter.InputSplitter.push": [
    "IPython.core.inputsplitter.IPythonInputSplitter"
  ],
  "IPython.core.inputsplitter.InputSplitter.push_accepts_more": [
    "IPython.core.inputsplitter.IPythonInputSplitter"
  ],
  "IPython.core.inputsplitter.InputSplitter.reset": [
    "IPython.core.inputsplitter.IPythonInputSplitter"
  ],
  "IPython.core.inputsplitter.InputSplitter.source_reset": [
    "IPython.core.inputsplitter.IPythonInputSplitter"
  ],
  "IPython.core.inputtransformer.InputTransformer.push": [
    "IPython.core.inputtransformer.CoroutineInputTransformer",
    "IPython.core.inputtransformer.StatelessInputTransformer",
    "IPython.core.inputtransformer.TokenInputTransformer"
  ],
  "IPython.core.inputtransformer.InputTransformer.reset": [
    "IPython.core.inputtransformer.CoroutineInputTransformer",
    "IPython.core.inputtransformer.StatelessInputTransformer",
    "IPython.core.inputtransformer.TokenInputTransformer"
  ],
  "IPython.core.inputtransformer.TokenInputTransformer.__init__": [
    "IPython.core.inputtransformer.assemble_python_lines"
  ],
  "IPython.core.inputtransformer.TokenInputTransformer.output": [
    "IPython.core.inputtransformer.assemble_python_lines"
  ],
  "IPython.core.inputtransformer2.TokenTransformBase.__init__": [
    "IPython.core.inputtransformer2.HelpEnd"
  ],
  "IPython.core.inputtransformer2.TokenTransformBase.find": [
    "IPython.core.inputtransformer2.EscapedCommand",
    "IPython.core.inputtransformer2.HelpEnd",
    "IPython.core.inputtransformer2.MagicAssign",
    "IPython.core.inputtransformer2.SystemAssign"
  ],
  "IPython.core.inputtransformer2.TokenTransformBase.transform": [
    "IPython.core.inputtransformer2.EscapedCommand",
    "IPython.core.inputtransformer2.HelpEnd",
    "IPython.core.inputtransformer2.MagicAssign",
    "IPython.core.inputtransformer2.SystemAssign"
  ],
  "IPython.core.interactiveshell.InteractiveShell.__init__": [
    "IPython.terminal.interactiveshell.TerminalInteractiveShell"
  ],
  "IPython.core.interactiveshell.InteractiveShell.auto_rewrite_input": [
    "IPython.terminal.interactiveshell.TerminalInteractiveShell"
  ],
  "IPython.core.interactiveshell.InteractiveShell.debugger_cls": [
    "IPython.terminal.interactiveshell.TerminalInteractiveShell"
  ],
  "IPython.core.interactiveshell.InteractiveShell.enable_gui": [
    "IPython.terminal.interactiveshell.TerminalInteractiveShell"
  ],
  "IPython.core.interactiveshell.InteractiveShell.init_alias": [
    "IPython.terminal.interactiveshell.TerminalInteractiveShell"
  ],
  "IPython.core.interactiveshell.InteractiveShell.init_display_formatter": [
    "IPython.terminal.interactiveshell.TerminalInteractiveShell"
  ],
  "IPython.core.interactiveshell.InteractiveShell.init_io": [
    "IPython.terminal.interactiveshell.TerminalInteractiveShell"
  ],
  "IPython.core.interactiveshell.InteractiveShell.init_magics": [
    "IPython.terminal.interactiveshell.TerminalInteractiveShell"
  ],
  "IPython.core.interactiveshell.InteractiveShell.init_sys_modules": [
    "IPython.terminal.embed.InteractiveShellEmbed"
  ],
  "IPython.core.interactiveshell.InteractiveShell.refresh_style": [
    "IPython.terminal.interactiveshell.TerminalInteractiveShell"
  ],
  "IPython.core.interactiveshell.InteractiveShell.switch_doctest_mode": [
    "IPython.terminal.interactiveshell.TerminalInteractiveShell"
  ],
  "IPython.core.magic.Magics.__init__": [
    "IPython.core.magics.auto.AutoMagics",
    "IPython.core.magics.code.CodeMagics",
    "IPython.core.magics.config.ConfigMagics",
    "IPython.core.magics.execution.ExecutionMagics",
    "IPython.core.magics.osm.OSMagics",
    "IPython.core.magics.script.ScriptMagics",
    "IPython.extensions.autoreload.AutoreloadMagics",
    "IPython.extensions.storemagic.StoreMagics",
    "IPython.terminal.magics.TerminalMagics"
  ],
  "IPython.core.magic_arguments.ArgDecorator.__call__": [
    "IPython.core.magic_arguments.kwds",
    "IPython.core.magic_arguments.magic_arguments"
  ],
  "IPython.core.magic_arguments.ArgDecorator.add_to_parser": [
    "IPython.core.magic_arguments.ArgMethodWrapper"
  ],
  "IPython.core.magic_arguments.ArgMethodWrapper.add_to_parser": [
    "IPython.core.magic_arguments.argument_group"
  ],
  "IPython.core.prefilter.PrefilterChecker.check": [
    "IPython.core.prefilter.AssignmentChecker",
    "IPython.core.prefilter.AutoMagicChecker",
    "IPython.core.prefilter.AutocallChecker",
    "IPython.core.prefilter.EmacsChecker",
    "IPython.core.prefilter.IPyAutocallChecker",
    "IPython.core.prefilter.MacroChecker",
    "IPython.core.prefilter.PythonOpsChecker"
  ],
  "IPython.core.prefilter.PrefilterHandler.handle": [
    "IPython.core.prefilter.AutoHandler",
    "IPython.core.prefilter.EmacsHandler",
    "IPython.core.prefilter.MacroHandler",
    "IPython.core.prefilter.MagicHandler"
  ],
  "IPython.core.shellapp.InteractiveShellApp.init_shell": [
    "IPython.terminal.ipapp.TerminalIPythonApp"
  ],
  "IPython.core.ultratb.FormattedTB.__init__": [
    "IPython.core.ultratb.ColorTB"
  ],
  "IPython.core.ultratb.FormattedTB.structured_traceback": [
    "IPython.core.ultratb.AutoFormattedTB"
  ],
  "IPython.core.ultratb.ListTB.__call__": [
    "IPython.core.ultratb.SyntaxTB"
  ],
  "IPython.core.ultratb.ListTB.structured_traceback": [
    "IPython.core.ultratb.SyntaxTB"
  ],
  "IPython.core.ultratb.TBTools.__init__": [
    "IPython.core.ultratb.VerboseTB"
  ],
  "IPython.core.ultratb.TBTools.stb2text": [
    "IPython.core.ultratb.FormattedTB",
    "IPython.core.ultratb.SyntaxTB"
  ],
  "IPython.core.ultratb.TBTools.structured_traceback": [
    "IPython.core.ultratb.ListTB",
    "IPython.core.ultratb.VerboseTB"
  ],
  "IPython.core.ultratb.VerboseTB.__init__": [
    "IPython.core.ultratb.FormattedTB"
  ],
  "IPython.core.ultratb.VerboseTB.structured_traceback": [
    "IPython.core.ultratb.FormattedTB"
  ],
  "IPython.lib.backgroundjobs.BackgroundJobBase.__init__": [
    "IPython.lib.backgroundjobs.BackgroundJobExpr",
    "IPython.lib.backgroundjobs.BackgroundJobFunc"
  ],
  "IPython.lib.demo.Demo.reload": [
    "IPython.lib.demo.LineDemo"
  ],
  "IPython.lib.demo.Demo.run_cell": [
    "IPython.lib.demo.IPythonDemo"
  ],
  "IPython.lib.display.FileLink.__init__": [
    "IPython.lib.display.FileLinks"
  ],
  "IPython.lib.display.FileLink.__repr__": [
    "IPython.lib.display.FileLinks"
  ],
  "IPython.lib.display.FileLink._format_path": [
    "IPython.lib.display.FileLinks"
  ],
  "IPython.lib.display.IFrame.__init__": [
    "IPython.lib.display.ScribdDocument",
    "IPython.lib.display.VimeoVideo",
    "IPython.lib.display.YouTubeVideo"
  ],
  "IPython.lib.pretty.PrettyPrinter.__init__": [
    "IPython.lib.pretty.RepresentationPrinter"
  ],
  "IPython.lib.pretty.Printable.output": [
    "IPython.lib.pretty.Breakable",
    "IPython.lib.pretty.Text"
  ],
  "IPython.terminal.interactiveshell.TerminalInteractiveShell.__init__": [
    "IPython.terminal.embed.InteractiveShellEmbed"
  ],
  "IPython.terminal.interactiveshell.TerminalInteractiveShell.init_magics": [
    "IPython.terminal.embed.InteractiveShellEmbed"
  ],
  "IPython.terminal.interactiveshell.TerminalInteractiveShell.mainloop": [
    "IPython.terminal.embed.InteractiveShellEmbed"
  ],
  "IPython.terminal.prompts.Prompts.continuation_prompt_tokens": [
    "IPython.terminal.prompts.ClassicPrompts"
  ],
  "IPython.terminal.prompts.Prompts.in_prompt_tokens": [
    "IPython.terminal.prompts.ClassicPrompts"
  ],
  "IPython.terminal.prompts.Prompts.out_prompt_tokens": [
    "IPython.terminal.prompts.ClassicPrompts"
  ],
  "IPython.terminal.prompts.Prompts.rewrite_prompt_tokens": [
    "IPython.terminal.prompts.ClassicPrompts"
  ],
  "IPython.testing.plugin.ipdoctest.IPDoctestOutputChecker.check_output": [
    "IPython.testing.plugin.pytest_ipdoctest._init_checker_class.LiteralsOutputChecker"
  ],
  "ImportError.__init__": [
    "werkzeug.utils.ImportStringError"
  ],
  "ImportError.name": [
    "importlib.metadata.PackageNotFoundError",
    "importlib_metadata.PackageNotFoundError",
    "typeshed.typeshed.stdlib.importlib.metadata.PackageNotFoundError"
  ],
  "MySQLdb._mysql.connection.__init__": [
    "MySQLdb.connections.Connection"
  ],
  "MySQLdb._mysql.connection.autocommit": [
    "MySQLdb.connections.Connection"
  ],
  "MySQLdb._mysql.connection.query": [
    "MySQLdb.connections.Connection"
  ],
  "MySQLdb._mysql.connection.set_character_set": [
    "MySQLdb.connections.Connection"
  ],
  "MySQLdb._mysql.connection.warning_count": [
    "MySQLdb.connections.Connection"
  ],
  "PIL.ContainerIO.ContainerIO.__init__": [
    "PIL.TarIO.TarIO"
  ],
  "PIL.FontFile.FontFile.__init__": [
    "PIL.BdfFontFile.BdfFontFile",
    "PIL.PcfFontFile.PcfFontFile"
  ],
  "PIL.Image.Image.draft": [
    "PIL.JpegImagePlugin.JpegImageFile"
  ],
  "PIL.Image.Image.getexif": [
    "PIL.PngImagePlugin.PngImageFile"
  ],
  "PIL.Image.Image.is_animated": [
    "PIL.GifImagePlugin.GifImageFile",
    "PIL.ImImagePlugin.ImImageFile",
    "PIL.SpiderImagePlugin.SpiderImageFile"
  ],
  "PIL.Image.Image.load": [
    "PIL.ImageFile.ImageFile"
  ],
  "PIL.Image.Image.n_frames": [
    "PIL.GifImagePlugin.GifImageFile",
    "PIL.ImImagePlugin.ImImageFile",
    "PIL.SpiderImagePlugin.SpiderImageFile",
    "PIL.TiffImagePlugin.TiffImageFile"
  ],
  "PIL.Image.Image.seek": [
    "PIL.DcxImagePlugin.DcxImageFile",
    "PIL.FliImagePlugin.FliImageFile",
    "PIL.GifImagePlugin.GifImageFile",
    "PIL.ImImagePlugin.ImImageFile",
    "PIL.MpoImagePlugin.MpoImageFile",
    "PIL.PngImagePlugin.PngImageFile",
    "PIL.PsdImagePlugin.PsdImageFile",
    "PIL.SpiderImagePlugin.SpiderImageFile",
    "PIL.TiffImagePlugin.TiffImageFile",
    "PIL.WebPImagePlugin.WebPImageFile"
  ],
  "PIL.Image.Image.size": [
    "PIL.IcnsImagePlugin.IcnsImageFile",
    "PIL.IcoImagePlugin.IcoImageFile"
  ],
  "PIL.Image.Image.size@setter": [
    "PIL.IcnsImagePlugin.IcnsImageFile",
    "PIL.IcoImagePlugin.IcoImageFile"
  ],
  "PIL.Image.Image.tell": [
    "PIL.DcxImagePlugin.DcxImageFile",
    "PIL.FliImagePlugin.FliImageFile",
    "PIL.GifImagePlugin.GifImageFile",
    "PIL.ImImagePlugin.ImImageFile",
    "PIL.MpoImagePlugin.MpoImageFile",
    "PIL.PngImagePlugin.PngImageFile",
    "PIL.PsdImagePlugin.PsdImageFile",
    "PIL.SpiderImagePlugin.SpiderImageFile",
    "PIL.TiffImagePlugin.TiffImageFile",
    "PIL.WebPImagePlugin.WebPImageFile"
  ],
  "PIL.Image.Image.verify": [
    "PIL.ImageFile.ImageFile"
  ],
  "PIL.ImageFile.ImageFile.__init__": [
    "PIL.TiffImagePlugin.TiffImageFile"
  ],
  "PIL.ImageFile.ImageFile.load": [
    "PIL.EpsImagePlugin.EpsImageFile",
    "PIL.FpxImagePlugin.FpxImageFile",
    "PIL.GbrImagePlugin.GbrImageFile",
    "PIL.IcnsImagePlugin.IcnsImageFile",
    "PIL.IcoImagePlugin.IcoImageFile",
    "PIL.ImageFile.StubImageFile",
    "PIL.IptcImagePlugin.IptcImageFile",
    "PIL.Jpeg2KImagePlugin.Jpeg2KImageFile",
    "PIL.TiffImagePlugin.TiffImageFile",
    "PIL.WalImageFile.WalImageFile",
    "PIL.WebPImagePlugin.WebPImageFile"
  ],
  "PIL.ImageFile.ImageFile.load_end": [
    "PIL.PcdImagePlugin.PcdImageFile",
    "PIL.PngImagePlugin.PngImageFile",
    "PIL.TiffImagePlugin.TiffImageFile"
  ],
  "PIL.ImageFile.ImageFile.load_prepare": [
    "PIL.PngImagePlugin.PngImageFile",
    "PIL.PsdImagePlugin.PsdImageFile"
  ],
  "PIL.ImageFile.ImageFile.verify": [
    "PIL.PngImagePlugin.PngImageFile"
  ],
  "PIL.ImageFile.PyDecoder.decode": [
    "PIL.BlpImagePlugin._BLPBaseDecoder",
    "PIL.MspImagePlugin.MspDecoder",
    "PIL.SgiImagePlugin.SGI16Decoder"
  ],
  "PIL.ImageFile.StubImageFile.load": [
    "PIL.WmfImagePlugin.WmfStubImageFile"
  ],
  "PIL.ImageFilter.RankFilter.__init__": [
    "PIL.ImageFilter.MaxFilter",
    "PIL.ImageFilter.MedianFilter",
    "PIL.ImageFilter.MinFilter"
  ],
  "PIL.ImageShow.Viewer.get_command": [
    "PIL.ImageShow.MacViewer",
    "PIL.ImageShow.UnixViewer",
    "PIL.ImageShow.WindowsViewer"
  ],
  "PIL.ImageShow.Viewer.show_file": [
    "PIL.ImageShow.MacViewer",
    "PIL.ImageShow.UnixViewer"
  ],
  "PIL.ImageShow.Viewer.show_image": [
    "PIL.ImageShow.IPythonViewer"
  ],
  "PIL.ImageWin.Window.__init__": [
    "PIL.ImageWin.ImageWindow"
  ],
  "PIL.ImageWin.Window.ui_handle_repair": [
    "PIL.ImageWin.ImageWindow"
  ],
  "PIL.PngImagePlugin.ChunkStream.__init__": [
    "PIL.PngImagePlugin.PngStream"
  ],
  "PIL.TiffImagePlugin.ImageFileDirectory_v2.__contains__": [
    "PIL.TiffImagePlugin.ImageFileDirectory_v1"
  ],
  "PIL.TiffImagePlugin.ImageFileDirectory_v2.__getitem__": [
    "PIL.TiffImagePlugin.ImageFileDirectory_v1"
  ],
  "PIL.TiffImagePlugin.ImageFileDirectory_v2.__init__": [
    "PIL.TiffImagePlugin.ImageFileDirectory_v1"
  ],
  "PIL.TiffImagePlugin.ImageFileDirectory_v2.__iter__": [
    "PIL.TiffImagePlugin.ImageFileDirectory_v1"
  ],
  "PIL.TiffImagePlugin.ImageFileDirectory_v2.__len__": [
    "PIL.TiffImagePlugin.ImageFileDirectory_v1"
  ],
  "PIL.TiffImagePlugin.ImageFileDirectory_v2.__setitem__": [
    "PIL.TiffImagePlugin.ImageFileDirectory_v1"
  ],
  "PIL.TiffImagePlugin.TiffImageFile.seek": [
    "PIL.MicImagePlugin.MicImageFile"
  ],
  "PIL.TiffImagePlugin.TiffImageFile.tell": [
    "PIL.MicImagePlugin.MicImageFile"
  ],
  "PIL.TiffTags._TagInfo.__new__": [
    "PIL.TiffTags.TagInfo"
  ],
  "PyInstaller.lib.modulegraph.modulegraph.Node.__init__": [
    "PyInstaller.lib.modulegraph.modulegraph.BaseModule"
  ],
  "PyInstaller.lib.modulegraph.modulegraph.Node.infoTuple": [
    "PyInstaller.lib.modulegraph.modulegraph.BaseModule"
  ],
  "UnicodeDecodeError.__init__": [
    "django.utils.encoding.DjangoUnicodeDecodeError"
  ],
  "Xlib.error.DisplayError.__init__": [
    "Xlib.error.DisplayConnectionError",
    "typeshed.typeshed.stubs.python-xlib.Xlib.error.DisplayConnectionError"
  ],
  "Xlib.protocol.display.Display.__init__": [
    "Xlib.display._BaseDisplay",
    "Xlib.protocol.rq._BaseDisplay",
    "typeshed.typeshed.stubs.python-xlib.Xlib.display._BaseDisplay"
  ],
  "Xlib.protocol.rq.ConstantField.__init__": [
    "Xlib.protocol.rq.ReplyCode",
    "typeshed.typeshed.stubs.python-xlib.Xlib.protocol.rq.ReplyCode"
  ],
  "Xlib.protocol.rq.Field.check_value": [
    "Xlib.ext.xinput.FP1616",
    "Xlib.ext.xinput.FP3232",
    "Xlib.protocol.rq.Bool",
    "Xlib.protocol.rq.Object",
    "Xlib.protocol.rq.Resource",
    "Xlib.protocol.rq.Set",
    "typeshed.typeshed.stubs.python-xlib.Xlib.ext.xinput.FP1616",
    "typeshed.typeshed.stubs.python-xlib.Xlib.ext.xinput.FP3232",
    "typeshed.typeshed.stubs.python-xlib.Xlib.protocol.rq.Bool",
    "typeshed.typeshed.stubs.python-xlib.Xlib.protocol.rq.Object",
    "typeshed.typeshed.stubs.python-xlib.Xlib.protocol.rq.Resource",
    "typeshed.typeshed.stubs.python-xlib.Xlib.protocol.rq.Set"
  ],
  "Xlib.protocol.rq.Field.pack_value": [
    "Xlib.ext.record.RawField",
    "Xlib.protocol.rq.Binary",
    "Xlib.protocol.rq.EventField",
    "Xlib.protocol.rq.KeyboardMapping",
    "Xlib.protocol.rq.List",
    "Xlib.protocol.rq.ModifierMapping",
    "Xlib.protocol.rq.Object",
    "Xlib.protocol.rq.PropertyData",
    "Xlib.protocol.rq.String16",
    "Xlib.protocol.rq.String8",
    "Xlib.protocol.rq.TextElements8",
    "Xlib.protocol.rq.ValueList",
    "typeshed.typeshed.stubs.python-xlib.Xlib.ext.record.RawField",
    "typeshed.typeshed.stubs.python-xlib.Xlib.protocol.rq.Binary",
    "typeshed.typeshed.stubs.python-xlib.Xlib.protocol.rq.EventField",
    "typeshed.typeshed.stubs.python-xlib.Xlib.protocol.rq.KeyboardMapping",
    "typeshed.typeshed.stubs.python-xlib.Xlib.protocol.rq.List",
    "typeshed.typeshed.stubs.python-xlib.Xlib.protocol.rq.ModifierMapping",
    "typeshed.typeshed.stubs.python-xlib.Xlib.protocol.rq.Object",
    "typeshed.typeshed.stubs.python-xlib.Xlib.protocol.rq.PropertyData",
    "typeshed.typeshed.stubs.python-xlib.Xlib.protocol.rq.String16",
    "typeshed.typeshed.stubs.python-xlib.Xlib.protocol.rq.String8",
    "typeshed.typeshed.stubs.python-xlib.Xlib.protocol.rq.TextElements8",
    "typeshed.typeshed.stubs.python-xlib.Xlib.protocol.rq.ValueList"
  ],
  "Xlib.protocol.rq.Field.parse_binary_value": [
    "Xlib.ext.record.RawField",
    "Xlib.ext.xinput.ButtonState",
    "Xlib.protocol.rq.Binary",
    "Xlib.protocol.rq.EventField",
    "Xlib.protocol.rq.KeyboardMapping",
    "Xlib.protocol.rq.List",
    "Xlib.protocol.rq.ModifierMapping",
    "Xlib.protocol.rq.Object",
    "Xlib.protocol.rq.PropertyData",
    "Xlib.protocol.rq.String16",
    "Xlib.protocol.rq.String8",
    "Xlib.protocol.rq.TextElements8",
    "Xlib.protocol.rq.ValueList",
    "typeshed.typeshed.stubs.python-xlib.Xlib.ext.record.RawField",
    "typeshed.typeshed.stubs.python-xlib.Xlib.ext.xinput.ButtonState",
    "typeshed.typeshed.stubs.python-xlib.Xlib.protocol.rq.Binary",
    "typeshed.typeshed.stubs.python-xlib.Xlib.protocol.rq.EventField",
    "typeshed.typeshed.stubs.python-xlib.Xlib.protocol.rq.KeyboardMapping",
    "typeshed.typeshed.stubs.python-xlib.Xlib.protocol.rq.List",
    "typeshed.typeshed.stubs.python-xlib.Xlib.protocol.rq.ModifierMapping",
    "typeshed.typeshed.stubs.python-xlib.Xlib.protocol.rq.Object",
    "typeshed.typeshed.stubs.python-xlib.Xlib.protocol.rq.PropertyData",
    "typeshed.typeshed.stubs.python-xlib.Xlib.protocol.rq.String16",
    "typeshed.typeshed.stubs.python-xlib.Xlib.protocol.rq.String8",
    "typeshed.typeshed.stubs.python-xlib.Xlib.protocol.rq.TextElements8",
    "typeshed.typeshed.stubs.python-xlib.Xlib.protocol.rq.ValueList"
  ],
  "Xlib.protocol.rq.Field.parse_value": [
    "Xlib.ext.res.SizeOf",
    "Xlib.ext.xinput.FP1616",
    "Xlib.ext.xinput.FP3232",
    "Xlib.protocol.rq.Object",
    "Xlib.protocol.rq.OddLength",
    "Xlib.protocol.rq.Resource",
    "typeshed.typeshed.stubs.python-xlib.Xlib.ext.res.SizeOf",
    "typeshed.typeshed.stubs.python-xlib.Xlib.ext.xinput.FP1616",
    "typeshed.typeshed.stubs.python-xlib.Xlib.ext.xinput.FP3232",
    "typeshed.typeshed.stubs.python-xlib.Xlib.protocol.rq.Object",
    "typeshed.typeshed.stubs.python-xlib.Xlib.protocol.rq.OddLength",
    "typeshed.typeshed.stubs.python-xlib.Xlib.protocol.rq.Resource"
  ],
  "Xlib.protocol.rq.GetAttrData.__getattr__": [
    "Xlib.protocol.request.ListFontsWithInfo",
    "typeshed.typeshed.stubs.python-xlib.Xlib.protocol.request.ListFontsWithInfo"
  ],
  "Xlib.protocol.rq.GetAttrData.__setattr__": [
    "Xlib.protocol.rq.DictWrapper",
    "typeshed.typeshed.stubs.python-xlib.Xlib.protocol.rq.DictWrapper"
  ],
  "Xlib.protocol.rq.LengthOf.__init__": [
    "Xlib.ext.res.SizeOf",
    "typeshed.typeshed.stubs.python-xlib.Xlib.ext.res.SizeOf"
  ],
  "Xlib.protocol.rq.List.__init__": [
    "Xlib.ext.xinput.Mask",
    "Xlib.protocol.rq.FixedList",
    "typeshed.typeshed.stubs.python-xlib.Xlib.ext.xinput.Mask",
    "typeshed.typeshed.stubs.python-xlib.Xlib.protocol.rq.FixedList"
  ],
  "Xlib.protocol.rq.List.pack_value": [
    "Xlib.ext.xinput.Mask",
    "typeshed.typeshed.stubs.python-xlib.Xlib.ext.xinput.Mask"
  ],
  "Xlib.protocol.rq.List.parse_binary_value": [
    "Xlib.protocol.rq.FixedList",
    "typeshed.typeshed.stubs.python-xlib.Xlib.protocol.rq.FixedList"
  ],
  "Xlib.protocol.rq.ReplyRequest.__init__": [
    "Xlib.ext.record.EnableContext",
    "Xlib.protocol.request.ListFontsWithInfo",
    "typeshed.typeshed.stubs.python-xlib.Xlib.ext.record.EnableContext",
    "typeshed.typeshed.stubs.python-xlib.Xlib.protocol.request.ListFontsWithInfo"
  ],
  "Xlib.protocol.rq.Set.__init__": [
    "Xlib.ext.shape.KIND",
    "Xlib.protocol.rq.Gravity",
    "typeshed.typeshed.stubs.python-xlib.Xlib.ext.shape.KIND",
    "typeshed.typeshed.stubs.python-xlib.Xlib.protocol.rq.Gravity"
  ],
  "Xlib.protocol.rq.ValueField.__init__": [
    "Xlib.ext.xinput.ButtonState",
    "Xlib.protocol.rq.Binary",
    "Xlib.protocol.rq.FixedBinary",
    "Xlib.protocol.rq.List",
    "Xlib.protocol.rq.Object",
    "Xlib.protocol.rq.Set",
    "Xlib.protocol.rq.String16",
    "Xlib.protocol.rq.String8",
    "typeshed.typeshed.stubs.python-xlib.Xlib.ext.xinput.ButtonState",
    "typeshed.typeshed.stubs.python-xlib.Xlib.protocol.rq.Binary",
    "typeshed.typeshed.stubs.python-xlib.Xlib.protocol.rq.FixedBinary",
    "typeshed.typeshed.stubs.python-xlib.Xlib.protocol.rq.List",
    "typeshed.typeshed.stubs.python-xlib.Xlib.protocol.rq.Object",
    "typeshed.typeshed.stubs.python-xlib.Xlib.protocol.rq.Set",
    "typeshed.typeshed.stubs.python-xlib.Xlib.protocol.rq.String16",
    "typeshed.typeshed.stubs.python-xlib.Xlib.protocol.rq.String8"
  ],
  "Xlib.rdb.Option.parse": [
    "Xlib.rdb.ResArgClass",
    "typeshed.typeshed.stubs.python-xlib.Xlib.rdb.ResArgClass"
  ],
  "_compression.DecompressReader.__init__": [
    "gzip._GzipReader",
    "typeshed.typeshed.stdlib.gzip._GzipReader"
  ],
  "_dummy_thread.LockType.release": [
    "_dummy_thread.RLock"
  ],
  "_dummy_threading.Thread.__init__": [
    "_dummy_threading.Timer"
  ],
  "_markupbase.ParserBase.error": [
    "django.test.html.Parser",
    "fpdf.html.HTML2FPDF",
    "typeshed.typeshed.stubs.fpdf2.fpdf.html.HTML2FPDF"
  ],
  "_markupbase.ParserBase.reset": [
    "humanfriendly.terminal.html.HTMLConverter",
    "typeshed.typeshed.stubs.humanfriendly.humanfriendly.terminal.html.HTMLConverter"
  ],
  "_markupbase.ParserBase.unknown_decl": [
    "bs4.builder._htmlparser.BeautifulSoupHTMLParser",
    "bs4.diagnose.AnnouncingParser",
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.builder._htmlparser.BeautifulSoupHTMLParser",
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.diagnose.AnnouncingParser"
  ],
  "_random.Random.__init__": [
    "random.Random",
    "typeshed.typeshed.stdlib.random.Random"
  ],
  "_random.Random.getrandbits": [
    "random.SystemRandom",
    "typeshed.typeshed.stdlib.random.SystemRandom"
  ],
  "_random.Random.getstate": [
    "random.Random",
    "typeshed.typeshed.stdlib.random.Random"
  ],
  "_random.Random.seed": [
    "random.Random",
    "typeshed.typeshed.stdlib.random.Random"
  ],
  "_random.Random.setstate": [
    "random.Random",
    "typeshed.typeshed.stdlib.random.Random"
  ],
  "_socket.socket.__init__": [
    "socket.socket",
    "typeshed.typeshed.stdlib.socket.socket"
  ],
  "_socket.socket.connect": [
    "httplib2.socks.socksocket",
    "ssl.SSLSocket",
    "typeshed.typeshed.stdlib.ssl.SSLSocket",
    "typeshed.typeshed.stubs.httplib2.httplib2.socks.socksocket"
  ],
  "_socket.socket.connect_ex": [
    "ssl.SSLSocket",
    "typeshed.typeshed.stdlib.ssl.SSLSocket"
  ],
  "_socket.socket.family": [
    "socket.socket",
    "typeshed.typeshed.stdlib.socket.socket"
  ],
  "_socket.socket.getpeername": [
    "httplib2.socks.socksocket",
    "typeshed.typeshed.stubs.httplib2.httplib2.socks.socksocket"
  ],
  "_socket.socket.recv": [
    "ssl.SSLSocket",
    "typeshed.typeshed.stdlib.ssl.SSLSocket"
  ],
  "_socket.socket.recv_into": [
    "ssl.SSLSocket",
    "typeshed.typeshed.stdlib.ssl.SSLSocket"
  ],
  "_socket.socket.recvfrom": [
    "ssl.SSLSocket",
    "typeshed.typeshed.stdlib.ssl.SSLSocket"
  ],
  "_socket.socket.recvfrom_into": [
    "ssl.SSLSocket",
    "typeshed.typeshed.stdlib.ssl.SSLSocket"
  ],
  "_socket.socket.recvmsg": [
    "typeshed.typeshed.stdlib.ssl.SSLSocket"
  ],
  "_socket.socket.recvmsg_into": [
    "typeshed.typeshed.stdlib.ssl.SSLSocket"
  ],
  "_socket.socket.send": [
    "ssl.SSLSocket",
    "typeshed.typeshed.stdlib.ssl.SSLSocket"
  ],
  "_socket.socket.sendall": [
    "httplib2.socks.socksocket",
    "ssl.SSLSocket",
    "typeshed.typeshed.stdlib.ssl.SSLSocket",
    "typeshed.typeshed.stubs.httplib2.httplib2.socks.socksocket"
  ],
  "_socket.socket.sendmsg": [
    "typeshed.typeshed.stdlib.ssl.SSLSocket"
  ],
  "_socket.socket.sendto": [
    "ssl.SSLSocket",
    "typeshed.typeshed.stdlib.ssl.SSLSocket"
  ],
  "_socket.socket.shutdown": [
    "ssl.SSLSocket",
    "typeshed.typeshed.stdlib.ssl.SSLSocket"
  ],
  "_socket.socket.type": [
    "socket.socket",
    "typeshed.typeshed.stdlib.socket.socket"
  ],
  "_typeshed.structseq.__new__": [
    "os.sched_param",
    "typeshed.typeshed.stdlib.os.sched_param"
  ],
  "_weakref.ReferenceType.__call__": [
    "typeshed.typeshed.stdlib.weakref.WeakMethod",
    "weakref.WeakMethod"
  ],
  "_weakref.ReferenceType.__new__": [
    "typeshed.typeshed.stdlib.weakref.KeyedRef",
    "typeshed.typeshed.stdlib.weakref.WeakMethod",
    "weakref.KeyedRef",
    "weakref.WeakMethod"
  ],
  "abc.ABCMeta.__new__": [
    "bytes",
    "complex",
    "django.http.request.HttpRequest",
    "enum.EnumMeta",
    "fractions.Fraction",
    "marshmallow.schema.SchemaMeta",
    "pip._vendor.pyparsing.core.Literal",
    "typeshed.typeshed.stdlib.fractions.Fraction",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.python.feature_column.feature_column_v2.BucketizedColumn",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.python.feature_column.feature_column_v2.CrossedColumn",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.python.feature_column.feature_column_v2.EmbeddingColumn",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.python.feature_column.feature_column_v2.HashedCategoricalColumn",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.python.feature_column.feature_column_v2.IdentityCategoricalColumn",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.python.feature_column.feature_column_v2.IndicatorColumn",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.python.feature_column.feature_column_v2.NumericColumn",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.python.feature_column.feature_column_v2.SequenceCategoricalColumn",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.python.feature_column.feature_column_v2.SharedEmbeddingColumn",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.python.feature_column.feature_column_v2.VocabularyFileCategoricalColumn",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.python.feature_column.feature_column_v2.VocabularyListCategoricalColumn",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.python.feature_column.feature_column_v2.WeightedCategoricalColumn"
  ],
  "aiofiles.base.AiofilesContextManager.__aenter__": [
    "aiofiles.tempfile.AiofilesContextManagerTempDir"
  ],
  "argparse.Action.__call__": [
    "traitlets.config.loader._FlagAction",
    "traitlets.config.loader._KVAction"
  ],
  "argparse.Action.__init__": [
    "argparse.BooleanOptionalAction",
    "argparse._AppendConstAction",
    "argparse._CountAction",
    "argparse._HelpAction",
    "argparse._StoreConstAction",
    "argparse._SubParsersAction",
    "argparse._VersionAction",
    "traitlets.config.loader._FlagAction"
  ],
  "argparse.ArgumentParser.__init__": [
    "IPython.core.magic_arguments.MagicArgumentParser",
    "django.core.management.base.CommandParser"
  ],
  "argparse.ArgumentParser.error": [
    "IPython.core.magic_arguments.MagicArgumentParser",
    "django.core.management.base.CommandParser"
  ],
  "argparse.ArgumentParser.parse_known_args": [
    "traitlets.config.loader._KVArgParser"
  ],
  "argparse.ArgumentParser.print_help": [
    "traitlets.config.loader.ArgumentParser"
  ],
  "argparse.HelpFormatter.__init__": [
    "pip._vendor.pygments.cmdline.HelpFormatter",
    "pygments.cmdline.HelpFormatter",
    "typeshed.typeshed.stubs.Pygments.pygments.cmdline.HelpFormatter"
  ],
  "argparse.HelpFormatter._fill_text": [
    "IPython.core.magic_arguments.MagicHelpFormatter"
  ],
  "argparse.HelpFormatter._format_action_invocation": [
    "IPython.core.magic_arguments.MagicHelpFormatter"
  ],
  "argparse.HelpFormatter.add_arguments": [
    "django.core.management.base.DjangoHelpFormatter"
  ],
  "argparse.HelpFormatter.add_usage": [
    "IPython.core.magic_arguments.MagicHelpFormatter",
    "django.core.management.base.DjangoHelpFormatter"
  ],
  "argparse._ActionsContainer.__init__": [
    "argparse._ArgumentGroup"
  ],
  "argparse._ArgumentGroup.__init__": [
    "argparse._MutuallyExclusiveGroup"
  ],
  "argparse._StoreConstAction.__init__": [
    "argparse._StoreFalseAction",
    "argparse._StoreTrueAction"
  ],
  "array.array.__copy__": [
    "openpyxl.styles.cell_style.StyleArray",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.styles.cell_style.StyleArray"
  ],
  "array.array.__deepcopy__": [
    "openpyxl.styles.cell_style.StyleArray",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.styles.cell_style.StyleArray"
  ],
  "ast.NodeVisitor.generic_visit": [
    "ast.NodeTransformer"
  ],
  "ast.NodeVisitor.visit_ClassDef": [
    "executing.executing.QualnameVisitor",
    "typeguard.importhook.TypeguardTransformer"
  ],
  "ast.NodeVisitor.visit_Expr": [
    "IPython.core.magics.ast_mod.ReplaceCodeTransformer"
  ],
  "ast.NodeVisitor.visit_For": [
    "IPython.core.magics.execution.TimeitTemplateFiller"
  ],
  "ast.NodeVisitor.visit_FunctionDef": [
    "IPython.core.magics.ast_mod.Mangler",
    "IPython.core.magics.execution.TimeitTemplateFiller",
    "executing.executing.QualnameVisitor",
    "typeguard.importhook.TypeguardTransformer"
  ],
  "ast.NodeVisitor.visit_Import": [
    "IPython.core.magics.ast_mod.Mangler"
  ],
  "ast.NodeVisitor.visit_ImportFrom": [
    "IPython.core.magics.ast_mod.Mangler"
  ],
  "ast.NodeVisitor.visit_Lambda": [
    "executing.executing.QualnameVisitor"
  ],
  "ast.NodeVisitor.visit_Module": [
    "IPython.core.magics.ast_mod.ReplaceCodeTransformer",
    "typeguard.importhook.TypeguardTransformer"
  ],
  "ast.NodeVisitor.visit_Name": [
    "IPython.core.magics.ast_mod.Mangler"
  ],
  "asttokens.asttokens.ASTTextBase.__init__": [
    "asttokens.asttokens.ASTText",
    "asttokens.asttokens.ASTTokens"
  ],
  "asttokens.asttokens.ASTTextBase.get_text_positions": [
    "asttokens.asttokens.ASTText",
    "asttokens.asttokens.ASTTokens"
  ],
  "asynchat.async_chat.collect_incoming_data": [
    "smtpd.SMTPChannel",
    "typeshed.typeshed.stdlib.smtpd.SMTPChannel"
  ],
  "asynchat.async_chat.found_terminator": [
    "smtpd.SMTPChannel",
    "typeshed.typeshed.stdlib.smtpd.SMTPChannel"
  ],
  "asynchat.async_chat.push": [
    "smtpd.SMTPChannel",
    "typeshed.typeshed.stdlib.smtpd.SMTPChannel"
  ],
  "asyncio.events.AbstractEventLoop.add_reader": [
    "asyncio.base_events.BaseEventLoop",
    "typeshed.typeshed.stdlib.asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.add_signal_handler": [
    "asyncio.base_events.BaseEventLoop",
    "typeshed.typeshed.stdlib.asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.add_writer": [
    "asyncio.base_events.BaseEventLoop",
    "typeshed.typeshed.stdlib.asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.call_at": [
    "asyncio.base_events.BaseEventLoop",
    "typeshed.typeshed.stdlib.asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.call_exception_handler": [
    "asyncio.base_events.BaseEventLoop",
    "typeshed.typeshed.stdlib.asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.call_later": [
    "asyncio.base_events.BaseEventLoop",
    "typeshed.typeshed.stdlib.asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.call_soon": [
    "asyncio.base_events.BaseEventLoop",
    "typeshed.typeshed.stdlib.asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.call_soon_threadsafe": [
    "asyncio.base_events.BaseEventLoop",
    "typeshed.typeshed.stdlib.asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.close": [
    "asyncio.base_events.BaseEventLoop",
    "typeshed.typeshed.stdlib.asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.connect_read_pipe": [
    "asyncio.base_events.BaseEventLoop",
    "typeshed.typeshed.stdlib.asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.connect_write_pipe": [
    "asyncio.base_events.BaseEventLoop",
    "typeshed.typeshed.stdlib.asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.create_connection": [
    "asyncio.base_events.BaseEventLoop",
    "typeshed.typeshed.stdlib.asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.create_datagram_endpoint": [
    "asyncio.base_events.BaseEventLoop",
    "typeshed.typeshed.stdlib.asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.create_future": [
    "asyncio.base_events.BaseEventLoop",
    "typeshed.typeshed.stdlib.asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.create_server": [
    "asyncio.base_events.BaseEventLoop",
    "typeshed.typeshed.stdlib.asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.create_task": [
    "asyncio.base_events.BaseEventLoop",
    "typeshed.typeshed.stdlib.asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.default_exception_handler": [
    "asyncio.base_events.BaseEventLoop",
    "typeshed.typeshed.stdlib.asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.get_debug": [
    "asyncio.base_events.BaseEventLoop",
    "typeshed.typeshed.stdlib.asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.get_exception_handler": [
    "asyncio.base_events.BaseEventLoop",
    "typeshed.typeshed.stdlib.asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.get_task_factory": [
    "asyncio.base_events.BaseEventLoop",
    "typeshed.typeshed.stdlib.asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.getaddrinfo": [
    "asyncio.base_events.BaseEventLoop",
    "typeshed.typeshed.stdlib.asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.getnameinfo": [
    "asyncio.base_events.BaseEventLoop",
    "typeshed.typeshed.stdlib.asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.is_closed": [
    "asyncio.base_events.BaseEventLoop",
    "typeshed.typeshed.stdlib.asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.is_running": [
    "asyncio.base_events.BaseEventLoop",
    "typeshed.typeshed.stdlib.asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.remove_reader": [
    "asyncio.base_events.BaseEventLoop",
    "typeshed.typeshed.stdlib.asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.remove_signal_handler": [
    "asyncio.base_events.BaseEventLoop",
    "typeshed.typeshed.stdlib.asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.remove_writer": [
    "asyncio.base_events.BaseEventLoop",
    "typeshed.typeshed.stdlib.asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.run_forever": [
    "asyncio.base_events.BaseEventLoop",
    "typeshed.typeshed.stdlib.asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.run_in_executor": [
    "asyncio.base_events.BaseEventLoop",
    "typeshed.typeshed.stdlib.asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.run_until_complete": [
    "asyncio.base_events.BaseEventLoop",
    "typeshed.typeshed.stdlib.asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.sendfile": [
    "asyncio.base_events.BaseEventLoop",
    "typeshed.typeshed.stdlib.asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.set_debug": [
    "asyncio.base_events.BaseEventLoop",
    "typeshed.typeshed.stdlib.asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.set_default_executor": [
    "asyncio.base_events.BaseEventLoop",
    "typeshed.typeshed.stdlib.asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.set_exception_handler": [
    "asyncio.base_events.BaseEventLoop",
    "typeshed.typeshed.stdlib.asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.set_task_factory": [
    "asyncio.base_events.BaseEventLoop",
    "typeshed.typeshed.stdlib.asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.shutdown_asyncgens": [
    "asyncio.base_events.BaseEventLoop",
    "typeshed.typeshed.stdlib.asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.shutdown_default_executor": [
    "asyncio.base_events.BaseEventLoop",
    "typeshed.typeshed.stdlib.asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.sock_accept": [
    "asyncio.base_events.BaseEventLoop",
    "typeshed.typeshed.stdlib.asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.sock_connect": [
    "asyncio.base_events.BaseEventLoop",
    "typeshed.typeshed.stdlib.asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.sock_recv": [
    "asyncio.base_events.BaseEventLoop",
    "typeshed.typeshed.stdlib.asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.sock_recv_into": [
    "asyncio.base_events.BaseEventLoop",
    "typeshed.typeshed.stdlib.asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.sock_sendall": [
    "asyncio.base_events.BaseEventLoop",
    "typeshed.typeshed.stdlib.asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.sock_sendfile": [
    "asyncio.base_events.BaseEventLoop",
    "typeshed.typeshed.stdlib.asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.start_tls": [
    "asyncio.base_events.BaseEventLoop",
    "typeshed.typeshed.stdlib.asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.stop": [
    "asyncio.base_events.BaseEventLoop",
    "typeshed.typeshed.stdlib.asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.subprocess_exec": [
    "asyncio.base_events.BaseEventLoop",
    "typeshed.typeshed.stdlib.asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.subprocess_shell": [
    "asyncio.base_events.BaseEventLoop",
    "typeshed.typeshed.stdlib.asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoop.time": [
    "asyncio.base_events.BaseEventLoop",
    "typeshed.typeshed.stdlib.asyncio.base_events.BaseEventLoop"
  ],
  "asyncio.events.AbstractEventLoopPolicy.get_child_watcher": [
    "asyncio.unix_events._UnixDefaultEventLoopPolicy"
  ],
  "asyncio.events.AbstractEventLoopPolicy.get_event_loop": [
    "asyncio.events.BaseDefaultEventLoopPolicy"
  ],
  "asyncio.events.AbstractEventLoopPolicy.new_event_loop": [
    "asyncio.events.BaseDefaultEventLoopPolicy"
  ],
  "asyncio.events.AbstractEventLoopPolicy.set_child_watcher": [
    "asyncio.unix_events._UnixDefaultEventLoopPolicy"
  ],
  "asyncio.events.AbstractEventLoopPolicy.set_event_loop": [
    "asyncio.events.BaseDefaultEventLoopPolicy"
  ],
  "asyncio.events.AbstractServer.close": [
    "asyncio.base_events.Server",
    "typeshed.typeshed.stdlib.asyncio.base_events.Server"
  ],
  "asyncio.events.AbstractServer.get_loop": [
    "asyncio.base_events.Server",
    "typeshed.typeshed.stdlib.asyncio.base_events.Server"
  ],
  "asyncio.events.AbstractServer.is_serving": [
    "asyncio.base_events.Server",
    "typeshed.typeshed.stdlib.asyncio.base_events.Server"
  ],
  "asyncio.events.AbstractServer.serve_forever": [
    "asyncio.base_events.Server",
    "typeshed.typeshed.stdlib.asyncio.base_events.Server"
  ],
  "asyncio.events.AbstractServer.start_serving": [
    "asyncio.base_events.Server",
    "typeshed.typeshed.stdlib.asyncio.base_events.Server"
  ],
  "asyncio.events.AbstractServer.wait_closed": [
    "asyncio.base_events.Server",
    "typeshed.typeshed.stdlib.asyncio.base_events.Server"
  ],
  "asyncio.events.Handle.__init__": [
    "asyncio.events.TimerHandle"
  ],
  "asyncio.futures.Future.__class_getitem__": [
    "asyncio.tasks.Task"
  ],
  "asyncio.futures.Future.__init__": [
    "asyncio.tasks.Task"
  ],
  "asyncio.proactor_events._ProactorBasePipeTransport.__init__": [
    "asyncio.proactor_events._ProactorReadPipeTransport"
  ],
  "asyncio.proactor_events._ProactorReadPipeTransport.__init__": [
    "asyncio.proactor_events._ProactorSocketTransport"
  ],
  "asyncio.protocols.BaseProtocol.connection_lost": [
    "asyncio.sslproto.SSLProtocol",
    "typeshed.typeshed.stubs.pexpect.pexpect._async.PatternWaiter"
  ],
  "asyncio.protocols.BaseProtocol.connection_made": [
    "asyncio.protocols.DatagramProtocol",
    "typeshed.typeshed.stubs.pexpect.pexpect._async.PatternWaiter"
  ],
  "asyncio.protocols.Protocol.data_received": [
    "typeshed.typeshed.stubs.pexpect.pexpect._async.PatternWaiter"
  ],
  "asyncio.protocols.Protocol.eof_received": [
    "asyncio.sslproto.SSLProtocol",
    "typeshed.typeshed.stubs.pexpect.pexpect._async.PatternWaiter"
  ],
  "asyncio.protocols.SubprocessProtocol.pipe_data_received": [
    "asyncio.subprocess.SubprocessStreamProtocol",
    "typeshed.typeshed.stdlib.asyncio.subprocess.SubprocessStreamProtocol"
  ],
  "asyncio.streams.FlowControlMixin.__init__": [
    "asyncio.streams.StreamReaderProtocol",
    "asyncio.subprocess.SubprocessStreamProtocol",
    "typeshed.typeshed.stdlib.asyncio.subprocess.SubprocessStreamProtocol"
  ],
  "asyncio.transports.BaseTransport.get_extra_info": [
    "asyncio.sslproto._SSLProtocolTransport"
  ],
  "asyncio.transports.SubprocessTransport.get_pid": [
    "asyncio.base_subprocess.BaseSubprocessTransport"
  ],
  "asyncio.transports.SubprocessTransport.get_pipe_transport": [
    "asyncio.base_subprocess.BaseSubprocessTransport"
  ],
  "asyncio.transports.SubprocessTransport.send_signal": [
    "asyncio.base_subprocess.BaseSubprocessTransport"
  ],
  "asyncio.transports.WriteTransport.can_write_eof": [
    "asyncio.proactor_events._ProactorSocketTransport",
    "asyncio.sslproto._SSLProtocolTransport"
  ],
  "asyncio.transports.WriteTransport.write": [
    "asyncio.sslproto._SSLProtocolTransport"
  ],
  "asyncio.transports._FlowControlMixin.__init__": [
    "asyncio.proactor_events._ProactorBasePipeTransport",
    "asyncio.sslproto._SSLProtocolTransport"
  ],
  "asyncio.unix_events.AbstractChildWatcher.__enter__": [
    "asyncio.unix_events.FastChildWatcher",
    "asyncio.unix_events.MultiLoopChildWatcher",
    "asyncio.unix_events.PidfdChildWatcher",
    "asyncio.unix_events.SafeChildWatcher",
    "asyncio.unix_events.ThreadedChildWatcher"
  ],
  "asyncio.unix_events.AbstractChildWatcher.__exit__": [
    "asyncio.unix_events.FastChildWatcher",
    "asyncio.unix_events.MultiLoopChildWatcher",
    "asyncio.unix_events.PidfdChildWatcher",
    "asyncio.unix_events.SafeChildWatcher",
    "asyncio.unix_events.ThreadedChildWatcher"
  ],
  "asyncio.unix_events.AbstractChildWatcher.add_child_handler": [
    "asyncio.unix_events.FastChildWatcher",
    "asyncio.unix_events.MultiLoopChildWatcher",
    "asyncio.unix_events.PidfdChildWatcher",
    "asyncio.unix_events.SafeChildWatcher",
    "asyncio.unix_events.ThreadedChildWatcher"
  ],
  "asyncio.unix_events.AbstractChildWatcher.attach_loop": [
    "asyncio.unix_events.BaseChildWatcher",
    "asyncio.unix_events.MultiLoopChildWatcher",
    "asyncio.unix_events.PidfdChildWatcher",
    "asyncio.unix_events.ThreadedChildWatcher"
  ],
  "asyncio.unix_events.AbstractChildWatcher.close": [
    "asyncio.unix_events.BaseChildWatcher",
    "asyncio.unix_events.MultiLoopChildWatcher",
    "asyncio.unix_events.PidfdChildWatcher",
    "asyncio.unix_events.ThreadedChildWatcher"
  ],
  "asyncio.unix_events.AbstractChildWatcher.is_active": [
    "asyncio.unix_events.BaseChildWatcher",
    "asyncio.unix_events.MultiLoopChildWatcher",
    "asyncio.unix_events.PidfdChildWatcher",
    "asyncio.unix_events.ThreadedChildWatcher"
  ],
  "asyncio.unix_events.AbstractChildWatcher.remove_child_handler": [
    "asyncio.unix_events.FastChildWatcher",
    "asyncio.unix_events.MultiLoopChildWatcher",
    "asyncio.unix_events.PidfdChildWatcher",
    "asyncio.unix_events.SafeChildWatcher",
    "asyncio.unix_events.ThreadedChildWatcher"
  ],
  "asyncore.dispatcher.__init__": [
    "asyncore.file_dispatcher",
    "smtpd.SMTPServer",
    "typeshed.typeshed.stdlib.smtpd.SMTPServer"
  ],
  "aws_xray_sdk.core.context.Context.__init__": [
    "aws_xray_sdk.core.async_context.AsyncContext",
    "aws_xray_sdk.core.lambda_launcher.LambdaContext"
  ],
  "aws_xray_sdk.core.context.Context.clear_trace_entities": [
    "aws_xray_sdk.core.async_context.AsyncContext"
  ],
  "aws_xray_sdk.core.context.Context.context_missing": [
    "aws_xray_sdk.core.lambda_launcher.LambdaContext"
  ],
  "aws_xray_sdk.core.context.Context.context_missing@setter": [
    "aws_xray_sdk.core.lambda_launcher.LambdaContext"
  ],
  "aws_xray_sdk.core.context.Context.end_segment": [
    "aws_xray_sdk.core.lambda_launcher.LambdaContext"
  ],
  "aws_xray_sdk.core.context.Context.get_trace_entity": [
    "aws_xray_sdk.core.lambda_launcher.LambdaContext"
  ],
  "aws_xray_sdk.core.context.Context.handle_context_missing": [
    "aws_xray_sdk.core.lambda_launcher.LambdaContext"
  ],
  "aws_xray_sdk.core.context.Context.put_segment": [
    "aws_xray_sdk.core.lambda_launcher.LambdaContext"
  ],
  "aws_xray_sdk.core.context.Context.put_subsegment": [
    "aws_xray_sdk.core.lambda_launcher.LambdaContext"
  ],
  "aws_xray_sdk.core.models.entity.Entity.__init__": [
    "aws_xray_sdk.core.models.segment.Segment",
    "aws_xray_sdk.core.models.subsegment.Subsegment"
  ],
  "aws_xray_sdk.core.models.entity.Entity.add_error_flag": [
    "aws_xray_sdk.core.models.facade_segment.FacadeSegment"
  ],
  "aws_xray_sdk.core.models.entity.Entity.add_exception": [
    "aws_xray_sdk.core.models.dummy_entities.DummySegment",
    "aws_xray_sdk.core.models.dummy_entities.DummySubsegment",
    "aws_xray_sdk.core.models.facade_segment.FacadeSegment"
  ],
  "aws_xray_sdk.core.models.entity.Entity.add_fault_flag": [
    "aws_xray_sdk.core.models.facade_segment.FacadeSegment"
  ],
  "aws_xray_sdk.core.models.entity.Entity.add_subsegment": [
    "aws_xray_sdk.core.models.segment.Segment",
    "aws_xray_sdk.core.models.subsegment.Subsegment"
  ],
  "aws_xray_sdk.core.models.entity.Entity.add_throttle_flag": [
    "aws_xray_sdk.core.models.facade_segment.FacadeSegment"
  ],
  "aws_xray_sdk.core.models.entity.Entity.apply_status_code": [
    "aws_xray_sdk.core.models.dummy_entities.DummySegment",
    "aws_xray_sdk.core.models.dummy_entities.DummySubsegment",
    "aws_xray_sdk.core.models.facade_segment.FacadeSegment"
  ],
  "aws_xray_sdk.core.models.entity.Entity.close": [
    "aws_xray_sdk.core.models.facade_segment.FacadeSegment",
    "aws_xray_sdk.core.models.subsegment.Subsegment"
  ],
  "aws_xray_sdk.core.models.entity.Entity.put_annotation": [
    "aws_xray_sdk.core.models.dummy_entities.DummySegment",
    "aws_xray_sdk.core.models.dummy_entities.DummySubsegment",
    "aws_xray_sdk.core.models.facade_segment.FacadeSegment"
  ],
  "aws_xray_sdk.core.models.entity.Entity.put_http_meta": [
    "aws_xray_sdk.core.models.dummy_entities.DummySegment",
    "aws_xray_sdk.core.models.dummy_entities.DummySubsegment",
    "aws_xray_sdk.core.models.facade_segment.FacadeSegment"
  ],
  "aws_xray_sdk.core.models.entity.Entity.put_metadata": [
    "aws_xray_sdk.core.models.dummy_entities.DummySegment",
    "aws_xray_sdk.core.models.dummy_entities.DummySubsegment",
    "aws_xray_sdk.core.models.facade_segment.FacadeSegment"
  ],
  "aws_xray_sdk.core.models.entity.Entity.remove_subsegment": [
    "aws_xray_sdk.core.models.segment.Segment",
    "aws_xray_sdk.core.models.subsegment.Subsegment"
  ],
  "aws_xray_sdk.core.models.entity.Entity.serialize": [
    "aws_xray_sdk.core.models.dummy_entities.DummySegment",
    "aws_xray_sdk.core.models.dummy_entities.DummySubsegment",
    "aws_xray_sdk.core.models.facade_segment.FacadeSegment"
  ],
  "aws_xray_sdk.core.models.entity.Entity.set_aws": [
    "aws_xray_sdk.core.models.dummy_entities.DummySegment",
    "aws_xray_sdk.core.models.dummy_entities.DummySubsegment",
    "aws_xray_sdk.core.models.facade_segment.FacadeSegment"
  ],
  "aws_xray_sdk.core.models.entity.Entity.to_dict": [
    "aws_xray_sdk.core.models.segment.Segment",
    "aws_xray_sdk.core.models.subsegment.Subsegment"
  ],
  "aws_xray_sdk.core.models.segment.Segment.__init__": [
    "aws_xray_sdk.core.models.dummy_entities.DummySegment",
    "aws_xray_sdk.core.models.facade_segment.FacadeSegment"
  ],
  "aws_xray_sdk.core.models.segment.Segment.decrement_ref_counter": [
    "aws_xray_sdk.core.models.facade_segment.FacadeSegment"
  ],
  "aws_xray_sdk.core.models.segment.Segment.increment": [
    "aws_xray_sdk.core.models.facade_segment.FacadeSegment"
  ],
  "aws_xray_sdk.core.models.segment.Segment.ready_to_send": [
    "aws_xray_sdk.core.models.facade_segment.FacadeSegment"
  ],
  "aws_xray_sdk.core.models.segment.Segment.set_service": [
    "aws_xray_sdk.core.models.dummy_entities.DummySegment"
  ],
  "aws_xray_sdk.core.models.segment.Segment.set_user": [
    "aws_xray_sdk.core.models.dummy_entities.DummySegment",
    "aws_xray_sdk.core.models.facade_segment.FacadeSegment"
  ],
  "aws_xray_sdk.core.models.subsegment.Subsegment.__init__": [
    "aws_xray_sdk.core.models.dummy_entities.DummySubsegment"
  ],
  "aws_xray_sdk.core.models.subsegment.Subsegment.set_sql": [
    "aws_xray_sdk.core.models.dummy_entities.DummySubsegment"
  ],
  "aws_xray_sdk.core.models.subsegment.SubsegmentContextManager.__call__": [
    "aws_xray_sdk.core.async_recorder.AsyncSubsegmentContextManager"
  ],
  "babel.plural._Compiler.compile_not": [
    "babel.plural._UnicodeCompiler"
  ],
  "babel.plural._Compiler.compile_relation": [
    "babel.plural._GettextCompiler",
    "babel.plural._PythonCompiler",
    "babel.plural._UnicodeCompiler"
  ],
  "babel.plural._GettextCompiler.compile_relation": [
    "babel.plural._JavaScriptCompiler"
  ],
  "babel.support.NullTranslations.__init__": [
    "babel.support.Translations"
  ],
  "bdb.Bdb.__init__": [
    "pdb.Pdb",
    "typeshed.typeshed.stdlib.pdb.Pdb",
    "typeshed.typeshed.stubs.pywin32.win32comext.axdebug.adb.Adb"
  ],
  "bdb.Bdb.break_anywhere": [
    "IPython.core.debugger.Pdb",
    "typeshed.typeshed.stubs.pywin32.win32comext.axdebug.adb.Adb",
    "win32comext.axdebug.adb.Adb"
  ],
  "bdb.Bdb.break_here": [
    "typeshed.typeshed.stubs.pywin32.win32comext.axdebug.adb.Adb",
    "win32comext.axdebug.adb.Adb"
  ],
  "bdb.Bdb.canonic": [
    "typeshed.typeshed.stubs.pywin32.win32comext.axdebug.adb.Adb",
    "win32comext.axdebug.adb.Adb"
  ],
  "bdb.Bdb.dispatch_call": [
    "typeshed.typeshed.stubs.pywin32.win32comext.axdebug.adb.Adb",
    "win32comext.axdebug.adb.Adb"
  ],
  "bdb.Bdb.dispatch_line": [
    "typeshed.typeshed.stubs.pywin32.win32comext.axdebug.adb.Adb",
    "win32comext.axdebug.adb.Adb"
  ],
  "bdb.Bdb.dispatch_return": [
    "typeshed.typeshed.stubs.pywin32.win32comext.axdebug.adb.Adb",
    "win32comext.axdebug.adb.Adb"
  ],
  "bdb.Bdb.do_clear": [
    "pdb.Pdb",
    "typeshed.typeshed.stdlib.pdb.Pdb"
  ],
  "bdb.Bdb.format_stack_entry": [
    "IPython.core.debugger.Pdb"
  ],
  "bdb.Bdb.reset": [
    "typeshed.typeshed.stubs.pywin32.win32comext.axdebug.adb.Adb",
    "win32comext.axdebug.adb.Adb"
  ],
  "bdb.Bdb.set_trace": [
    "IPython.core.debugger.Pdb",
    "typeshed.typeshed.stubs.pywin32.win32comext.axdebug.adb.Adb",
    "win32comext.axdebug.adb.Adb"
  ],
  "bdb.Bdb.stop_here": [
    "IPython.core.debugger.Pdb",
    "typeshed.typeshed.stubs.pywin32.win32comext.axdebug.adb.Adb",
    "win32comext.axdebug.adb.Adb"
  ],
  "bdb.Bdb.trace_dispatch": [
    "prompt_toolkit.application.application.Application._breakpointhook.CustomPdb",
    "typeshed.typeshed.stubs.pywin32.win32comext.axdebug.adb.Adb",
    "win32comext.axdebug.adb.Adb"
  ],
  "bdb.Bdb.user_exception": [
    "typeshed.typeshed.stubs.pywin32.win32comext.axdebug.adb.Adb",
    "win32comext.axdebug.adb.Adb"
  ],
  "bdb.Bdb.user_line": [
    "typeshed.typeshed.stubs.pywin32.win32comext.axdebug.adb.Adb",
    "win32comext.axdebug.adb.Adb"
  ],
  "bdb.Bdb.user_return": [
    "typeshed.typeshed.stubs.pywin32.win32comext.axdebug.adb.Adb",
    "win32comext.axdebug.adb.Adb"
  ],
  "blinker.base.Signal.__init__": [
    "blinker.base.NamedSignal"
  ],
  "boto.auth.HmacAuthV4Handler.__init__": [
    "boto.auth.S3HmacAuthV4Handler"
  ],
  "boto.auth.HmacAuthV4Handler.add_auth": [
    "boto.auth.S3HmacAuthV4Handler"
  ],
  "boto.auth.HmacAuthV4Handler.canonical_query_string": [
    "boto.auth.S3HmacAuthV4Handler"
  ],
  "boto.auth.HmacAuthV4Handler.canonical_uri": [
    "boto.auth.S3HmacAuthV4Handler"
  ],
  "boto.auth.HmacAuthV4Handler.determine_region_name": [
    "boto.auth.S3HmacAuthV4Handler"
  ],
  "boto.auth.HmacAuthV4Handler.determine_service_name": [
    "boto.auth.S3HmacAuthV4Handler"
  ],
  "boto.auth.HmacAuthV4Handler.headers_to_sign": [
    "boto.auth.S3HmacAuthV4Handler"
  ],
  "boto.auth.HmacAuthV4Handler.host_header": [
    "boto.auth.S3HmacAuthV4Handler"
  ],
  "boto.auth.HmacAuthV4Handler.payload": [
    "boto.auth.S3HmacAuthV4Handler"
  ],
  "boto.auth.HmacKeys.update_provider": [
    "boto.auth.HmacAuthV1Handler",
    "boto.auth.HmacAuthV2Handler"
  ],
  "boto.auth.QuerySignatureHelper.add_auth": [
    "boto.auth.POSTPathQSV2AuthHandler"
  ],
  "boto.auth_handler.AuthHandler.__init__": [
    "boto.auth.AnonAuthHandler",
    "boto.auth.HmacAuthV1Handler",
    "boto.auth.HmacAuthV2Handler",
    "boto.auth.HmacAuthV3HTTPHandler",
    "boto.auth.HmacAuthV3Handler",
    "boto.auth.HmacAuthV4Handler",
    "typeshed.typeshed.stubs.boto.boto.auth.AnonAuthHandler",
    "typeshed.typeshed.stubs.boto.boto.auth.HmacAuthV1Handler",
    "typeshed.typeshed.stubs.boto.boto.auth.HmacAuthV2Handler",
    "typeshed.typeshed.stubs.boto.boto.auth.HmacAuthV3HTTPHandler",
    "typeshed.typeshed.stubs.boto.boto.auth.HmacAuthV3Handler",
    "typeshed.typeshed.stubs.boto.boto.auth.HmacAuthV4Handler"
  ],
  "boto.auth_handler.AuthHandler.add_auth": [
    "boto.auth.AnonAuthHandler",
    "boto.auth.HmacAuthV1Handler",
    "boto.auth.HmacAuthV2Handler",
    "boto.auth.HmacAuthV3HTTPHandler",
    "boto.auth.HmacAuthV3Handler",
    "boto.auth.HmacAuthV4Handler",
    "boto.auth.STSAnonHandler",
    "typeshed.typeshed.stubs.boto.boto.auth.AnonAuthHandler",
    "typeshed.typeshed.stubs.boto.boto.auth.HmacAuthV1Handler",
    "typeshed.typeshed.stubs.boto.boto.auth.HmacAuthV2Handler",
    "typeshed.typeshed.stubs.boto.boto.auth.HmacAuthV3HTTPHandler",
    "typeshed.typeshed.stubs.boto.boto.auth.HmacAuthV3Handler",
    "typeshed.typeshed.stubs.boto.boto.auth.HmacAuthV4Handler",
    "typeshed.typeshed.stubs.boto.boto.auth.STSAnonHandler"
  ],
  "boto.connection.AWSAuthConnection.__init__": [
    "boto.connection.AWSQueryConnection",
    "boto.s3.connection.S3Connection",
    "typeshed.typeshed.stubs.boto.boto.s3.connection.S3Connection"
  ],
  "boto.connection.AWSAuthConnection.make_request": [
    "boto.connection.AWSQueryConnection",
    "boto.s3.connection.S3Connection",
    "typeshed.typeshed.stubs.boto.boto.s3.connection.S3Connection"
  ],
  "boto.connection.AWSQueryConnection.__init__": [
    "boto.elb.ELBConnection",
    "boto.kms.layer1.KMSConnection",
    "typeshed.typeshed.stubs.boto.boto.elb.ELBConnection",
    "typeshed.typeshed.stubs.boto.boto.kms.layer1.KMSConnection"
  ],
  "boto.connection.AWSQueryConnection.build_list_params": [
    "boto.elb.ELBConnection",
    "typeshed.typeshed.stubs.boto.boto.elb.ELBConnection"
  ],
  "boto.exception.BotoClientError.__init__": [
    "boto.exception.SQSDecodeError"
  ],
  "boto.exception.BotoServerError.__init__": [
    "boto.exception.EC2ResponseError",
    "boto.exception.JSONResponseError",
    "boto.exception.SQSError",
    "boto.exception.StorageCreateError",
    "boto.exception.StorageResponseError"
  ],
  "boto.exception.BotoServerError.endElement": [
    "boto.exception.EC2ResponseError",
    "boto.exception.SQSError",
    "boto.exception.StorageCreateError",
    "boto.exception.StorageResponseError"
  ],
  "boto.exception.BotoServerError.startElement": [
    "boto.exception.EC2ResponseError",
    "boto.exception.SQSError",
    "boto.exception.StorageResponseError"
  ],
  "boto.regioninfo.RegionInfo.connect": [
    "boto.s3.S3RegionInfo",
    "typeshed.typeshed.stubs.boto.boto.s3.S3RegionInfo"
  ],
  "boto.s3.connection._CallingFormat.build_path_base": [
    "boto.s3.connection.OrdinaryCallingFormat"
  ],
  "boto.s3.connection._CallingFormat.build_url_base": [
    "boto.s3.connection.ProtocolIndependentOrdinaryCallingFormat"
  ],
  "boto.s3.connection._CallingFormat.get_bucket_server": [
    "boto.s3.connection.OrdinaryCallingFormat",
    "boto.s3.connection.SubdomainCallingFormat",
    "boto.s3.connection.VHostCallingFormat"
  ],
  "boto.s3.website._XMLKeyValue.__init__": [
    "boto.s3.website.Condition",
    "boto.s3.website.Redirect",
    "boto.s3.website.RedirectLocation"
  ],
  "boto.s3.website._XMLKeyValue.to_xml": [
    "boto.s3.website.Condition",
    "boto.s3.website.Redirect",
    "boto.s3.website.RedirectLocation"
  ],
  "braintree.attribute_getter.AttributeGetter.__init__": [
    "braintree.authorization_adjustment.AuthorizationAdjustment",
    "braintree.credit_card_verification.CreditCardVerification",
    "braintree.disbursement_detail.DisbursementDetail",
    "braintree.dispute.Dispute",
    "braintree.dispute_details.evidence.DisputeEvidence",
    "braintree.dispute_details.paypal_message.DisputePayPalMessage",
    "braintree.dispute_details.status_history.DisputeStatusHistory",
    "braintree.merchant_account.address_details.AddressDetails",
    "braintree.merchant_account.business_details.BusinessDetails",
    "braintree.merchant_account.funding_details.FundingDetails",
    "braintree.merchant_account.individual_details.IndividualDetails",
    "braintree.resource.Resource",
    "braintree.risk_data.RiskData",
    "braintree.transaction_details.TransactionDetails",
    "braintree.transaction_line_item.TransactionLineItem",
    "braintree.us_bank_account_verification.UsBankAccountVerification",
    "typeshed.typeshed.stubs.braintree.braintree.authorization_adjustment.AuthorizationAdjustment",
    "typeshed.typeshed.stubs.braintree.braintree.credit_card_verification.CreditCardVerification",
    "typeshed.typeshed.stubs.braintree.braintree.disbursement_detail.DisbursementDetail",
    "typeshed.typeshed.stubs.braintree.braintree.dispute.Dispute",
    "typeshed.typeshed.stubs.braintree.braintree.dispute_details.evidence.DisputeEvidence",
    "typeshed.typeshed.stubs.braintree.braintree.dispute_details.paypal_message.DisputePayPalMessage",
    "typeshed.typeshed.stubs.braintree.braintree.dispute_details.status_history.DisputeStatusHistory",
    "typeshed.typeshed.stubs.braintree.braintree.merchant_account.address_details.AddressDetails",
    "typeshed.typeshed.stubs.braintree.braintree.merchant_account.business_details.BusinessDetails",
    "typeshed.typeshed.stubs.braintree.braintree.merchant_account.funding_details.FundingDetails",
    "typeshed.typeshed.stubs.braintree.braintree.merchant_account.individual_details.IndividualDetails",
    "typeshed.typeshed.stubs.braintree.braintree.resource.Resource",
    "typeshed.typeshed.stubs.braintree.braintree.risk_data.RiskData",
    "typeshed.typeshed.stubs.braintree.braintree.transaction_details.TransactionDetails",
    "typeshed.typeshed.stubs.braintree.braintree.transaction_line_item.TransactionLineItem",
    "typeshed.typeshed.stubs.braintree.braintree.us_bank_account_verification.UsBankAccountVerification"
  ],
  "braintree.resource.Resource.__init__": [
    "braintree.account_updater_daily_report.AccountUpdaterDailyReport",
    "braintree.ach_mandate.AchMandate",
    "braintree.amex_express_checkout_card.AmexExpressCheckoutCard",
    "braintree.android_pay_card.AndroidPayCard",
    "braintree.apple_pay_card.ApplePayCard",
    "braintree.connected_merchant_paypal_status_changed.ConnectedMerchantPayPalStatusChanged",
    "braintree.connected_merchant_status_transitioned.ConnectedMerchantStatusTransitioned",
    "braintree.credit_card.CreditCard",
    "braintree.customer.Customer",
    "braintree.descriptor.Descriptor",
    "braintree.disbursement.Disbursement",
    "braintree.document_upload.DocumentUpload",
    "braintree.granted_payment_instrument_update.GrantedPaymentInstrumentUpdate",
    "braintree.local_payment_completed.LocalPaymentCompleted",
    "braintree.local_payment_reversed.LocalPaymentReversed",
    "braintree.masterpass_card.MasterpassCard",
    "braintree.merchant.Merchant",
    "braintree.merchant_account.merchant_account.MerchantAccount",
    "braintree.modification.Modification",
    "braintree.oauth_access_revocation.OAuthAccessRevocation",
    "braintree.partner_merchant.PartnerMerchant",
    "braintree.payment_method_nonce.PaymentMethodNonce",
    "braintree.paypal_account.PayPalAccount",
    "braintree.paypal_here.PayPalHere",
    "braintree.plan.Plan",
    "braintree.revoked_payment_method_metadata.RevokedPaymentMethodMetadata",
    "braintree.samsung_pay_card.SamsungPayCard",
    "braintree.status_event.StatusEvent",
    "braintree.subscription.Subscription",
    "braintree.subscription_status_event.SubscriptionStatusEvent",
    "braintree.transaction.Transaction",
    "braintree.us_bank_account.UsBankAccount",
    "braintree.venmo_account.VenmoAccount",
    "braintree.visa_checkout_card.VisaCheckoutCard",
    "braintree.webhook_notification.WebhookNotification",
    "typeshed.typeshed.stubs.braintree.braintree.account_updater_daily_report.AccountUpdaterDailyReport",
    "typeshed.typeshed.stubs.braintree.braintree.ach_mandate.AchMandate",
    "typeshed.typeshed.stubs.braintree.braintree.amex_express_checkout_card.AmexExpressCheckoutCard",
    "typeshed.typeshed.stubs.braintree.braintree.android_pay_card.AndroidPayCard",
    "typeshed.typeshed.stubs.braintree.braintree.apple_pay_card.ApplePayCard",
    "typeshed.typeshed.stubs.braintree.braintree.connected_merchant_paypal_status_changed.ConnectedMerchantPayPalStatusChanged",
    "typeshed.typeshed.stubs.braintree.braintree.connected_merchant_status_transitioned.ConnectedMerchantStatusTransitioned",
    "typeshed.typeshed.stubs.braintree.braintree.credit_card.CreditCard",
    "typeshed.typeshed.stubs.braintree.braintree.customer.Customer",
    "typeshed.typeshed.stubs.braintree.braintree.descriptor.Descriptor",
    "typeshed.typeshed.stubs.braintree.braintree.disbursement.Disbursement",
    "typeshed.typeshed.stubs.braintree.braintree.document_upload.DocumentUpload",
    "typeshed.typeshed.stubs.braintree.braintree.granted_payment_instrument_update.GrantedPaymentInstrumentUpdate",
    "typeshed.typeshed.stubs.braintree.braintree.local_payment_completed.LocalPaymentCompleted",
    "typeshed.typeshed.stubs.braintree.braintree.local_payment_reversed.LocalPaymentReversed",
    "typeshed.typeshed.stubs.braintree.braintree.masterpass_card.MasterpassCard",
    "typeshed.typeshed.stubs.braintree.braintree.merchant.Merchant",
    "typeshed.typeshed.stubs.braintree.braintree.merchant_account.merchant_account.MerchantAccount",
    "typeshed.typeshed.stubs.braintree.braintree.modification.Modification",
    "typeshed.typeshed.stubs.braintree.braintree.oauth_access_revocation.OAuthAccessRevocation",
    "typeshed.typeshed.stubs.braintree.braintree.partner_merchant.PartnerMerchant",
    "typeshed.typeshed.stubs.braintree.braintree.payment_method_nonce.PaymentMethodNonce",
    "typeshed.typeshed.stubs.braintree.braintree.paypal_account.PayPalAccount",
    "typeshed.typeshed.stubs.braintree.braintree.paypal_here.PayPalHere",
    "typeshed.typeshed.stubs.braintree.braintree.plan.Plan",
    "typeshed.typeshed.stubs.braintree.braintree.revoked_payment_method_metadata.RevokedPaymentMethodMetadata",
    "typeshed.typeshed.stubs.braintree.braintree.samsung_pay_card.SamsungPayCard",
    "typeshed.typeshed.stubs.braintree.braintree.status_event.StatusEvent",
    "typeshed.typeshed.stubs.braintree.braintree.subscription.Subscription",
    "typeshed.typeshed.stubs.braintree.braintree.subscription_status_event.SubscriptionStatusEvent",
    "typeshed.typeshed.stubs.braintree.braintree.transaction.Transaction",
    "typeshed.typeshed.stubs.braintree.braintree.us_bank_account.UsBankAccount",
    "typeshed.typeshed.stubs.braintree.braintree.venmo_account.VenmoAccount",
    "typeshed.typeshed.stubs.braintree.braintree.visa_checkout_card.VisaCheckoutCard",
    "typeshed.typeshed.stubs.braintree.braintree.webhook_notification.WebhookNotification"
  ],
  "braintree.util.http.Http.__init__": [
    "braintree.util.graphql_client.GraphQLClient",
    "typeshed.typeshed.stubs.braintree.braintree.util.graphql_client.GraphQLClient"
  ],
  "bs4.builder.TreeBuilder.__init__": [
    "bs4.builder._lxml.LXMLTreeBuilderForXML",
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.builder._lxml.LXMLTreeBuilderForXML"
  ],
  "bs4.builder.TreeBuilder.feed": [
    "bs4.builder.SAXTreeBuilder",
    "bs4.builder._html5lib.HTML5TreeBuilder",
    "bs4.builder._htmlparser.HTMLParserTreeBuilder",
    "bs4.builder._lxml.LXMLTreeBuilderForXML",
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.builder._html5lib.HTML5TreeBuilder",
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.builder._htmlparser.HTMLParserTreeBuilder",
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.builder._lxml.LXMLTreeBuilderForXML"
  ],
  "bs4.builder.TreeBuilder.initialize_soup": [
    "bs4.builder._lxml.LXMLTreeBuilderForXML",
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.builder._lxml.LXMLTreeBuilderForXML"
  ],
  "bs4.builder.TreeBuilder.prepare_markup": [
    "bs4.builder._html5lib.HTML5TreeBuilder",
    "bs4.builder._htmlparser.HTMLParserTreeBuilder",
    "bs4.builder._lxml.LXMLTreeBuilderForXML",
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.builder._html5lib.HTML5TreeBuilder",
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.builder._htmlparser.HTMLParserTreeBuilder",
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.builder._lxml.LXMLTreeBuilderForXML"
  ],
  "bs4.builder.TreeBuilder.set_up_substitutions": [
    "bs4.builder.HTMLTreeBuilder"
  ],
  "bs4.builder.TreeBuilder.test_fragment_to_document": [
    "bs4.builder._html5lib.HTML5TreeBuilder",
    "bs4.builder._lxml.LXMLTreeBuilderForXML",
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.builder._html5lib.HTML5TreeBuilder",
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.builder._lxml.LXMLTreeBuilderForXML"
  ],
  "bs4.builder._html5lib.Element.__init__": [
    "bs4.builder._html5lib.TextNode"
  ],
  "bs4.builder._html5lib.Element.cloneNode": [
    "bs4.builder._html5lib.TextNode"
  ],
  "bs4.builder._lxml.LXMLTreeBuilderForXML.default_parser": [
    "bs4.builder._lxml.LXMLTreeBuilder"
  ],
  "bs4.builder._lxml.LXMLTreeBuilderForXML.feed": [
    "bs4.builder._lxml.LXMLTreeBuilder"
  ],
  "bs4.builder._lxml.LXMLTreeBuilderForXML.test_fragment_to_document": [
    "bs4.builder._lxml.LXMLTreeBuilder"
  ],
  "bs4.element.NavigableString.output_ready": [
    "bs4.element.PreformattedString"
  ],
  "bs4.element.PageElement.insert_after": [
    "bs4.BeautifulSoup"
  ],
  "bs4.element.PageElement.insert_before": [
    "bs4.BeautifulSoup"
  ],
  "bs4.element.Tag.__copy__": [
    "bs4.BeautifulSoup"
  ],
  "bs4.element.Tag.__init__": [
    "bs4.BeautifulSoup"
  ],
  "bs4.element.Tag.decode": [
    "bs4.BeautifulSoup"
  ],
  "bs4.formatter.Formatter.__init__": [
    "bs4.formatter.HTMLFormatter",
    "bs4.formatter.XMLFormatter"
  ],
  "bytes.__eq__": [
    "google.cloud.ndb.model._CompressedValue",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.model._CompressedValue"
  ],
  "bytes.__iter__": [
    "html5lib._inputstream.EncodingBytes",
    "typeshed.typeshed.stubs.html5lib.html5lib._inputstream.EncodingBytes"
  ],
  "bytes.__new__": [
    "html5lib._inputstream.EncodingBytes",
    "typeshed.typeshed.stubs.html5lib.html5lib._inputstream.EncodingBytes"
  ],
  "cachetools.Cache.__init__": [
    "cachetools.RRCache",
    "cachetools._TimedCache"
  ],
  "cachetools.Cache.currsize": [
    "cachetools._TimedCache"
  ],
  "cachetools._TimedCache.__init__": [
    "cachetools.TLRUCache",
    "cachetools.TTLCache"
  ],
  "caldav.elements.base.BaseElement.__init__": [
    "caldav.elements.base.NamedBaseElement",
    "caldav.elements.base.ValuedBaseElement",
    "caldav.elements.cdav.Expand",
    "caldav.elements.cdav.TimeRange"
  ],
  "caldav.elements.base.ValuedBaseElement.__init__": [
    "caldav.elements.cdav.TextMatch"
  ],
  "caldav.objects.CalendarObjectResource.__init__": [
    "caldav.objects.FreeBusy"
  ],
  "caldav.objects.DAVObject.__init__": [
    "caldav.objects.CalendarObjectResource",
    "caldav.objects.Principal"
  ],
  "caldav.objects.DAVObject.save": [
    "caldav.objects.CalendarObjectResource"
  ],
  "calendar.HTMLCalendar.formatmonthname": [
    "calendar.LocaleHTMLCalendar"
  ],
  "calendar.HTMLCalendar.formatweekday": [
    "calendar.LocaleHTMLCalendar"
  ],
  "cffi.backend_ctypes.CTypesData.__hash__": [
    "cffi.backend_ctypes.CTypesGenericPrimitive"
  ],
  "cffi.backend_ctypes.CTypesData.__iter__": [
    "cffi.backend_ctypes.CTypesGenericArray"
  ],
  "cffi.model.BasePrimitiveType.is_complex_type": [
    "cffi.model.PrimitiveType"
  ],
  "cffi.model.BaseTypeByIdentity.get_cached_btype": [
    "cffi.model.StructOrUnion"
  ],
  "cffi.model.BaseTypeByIdentity.is_integer_type": [
    "cffi.model.PrimitiveType",
    "cffi.model.UnknownIntegerType"
  ],
  "cffi.model.PointerType.__init__": [
    "cffi.model.NamedPointerType"
  ],
  "cffi.model.StructOrUnionOrEnum.force_the_name": [
    "cffi.model.EnumType"
  ],
  "classmethod.__init__": [
    "abc.abstractclassmethod",
    "typeshed.typeshed.stdlib.abc.abstractclassmethod"
  ],
  "click.core.BaseCommand.__init__": [
    "click.core.Command"
  ],
  "click.core.BaseCommand.get_help": [
    "click.core.Command"
  ],
  "click.core.BaseCommand.get_usage": [
    "click.core.Command"
  ],
  "click.core.BaseCommand.invoke": [
    "click.core.Command"
  ],
  "click.core.BaseCommand.make_context": [
    "flask.cli.FlaskGroup"
  ],
  "click.core.BaseCommand.parse_args": [
    "click.core.Command"
  ],
  "click.core.BaseCommand.shell_complete": [
    "click.core.Command"
  ],
  "click.core.BaseCommand.to_info_dict": [
    "click.core.Command"
  ],
  "click.core.Command.__init__": [
    "click.core.MultiCommand"
  ],
  "click.core.Command.collect_usage_pieces": [
    "click.core.MultiCommand"
  ],
  "click.core.Command.format_options": [
    "click.core.MultiCommand"
  ],
  "click.core.Command.invoke": [
    "click.core.MultiCommand"
  ],
  "click.core.Command.parse_args": [
    "click.core.MultiCommand"
  ],
  "click.core.Command.shell_complete": [
    "click.core.MultiCommand"
  ],
  "click.core.Command.to_info_dict": [
    "click.core.MultiCommand"
  ],
  "click.core.Group.__init__": [
    "typeshed.typeshed.stubs.click-default-group.click_default_group.DefaultGroup"
  ],
  "click.core.Group.command": [
    "flask.cli.AppGroup",
    "typeshed.typeshed.stubs.click-default-group.click_default_group.DefaultGroup"
  ],
  "click.core.Group.get_command": [
    "flask.cli.FlaskGroup",
    "typeshed.typeshed.stubs.click-default-group.click_default_group.DefaultGroup"
  ],
  "click.core.Group.group": [
    "flask.cli.AppGroup"
  ],
  "click.core.Group.list_commands": [
    "flask.cli.FlaskGroup"
  ],
  "click.core.MultiCommand.__init__": [
    "click.core.CommandCollection",
    "click.core.Group"
  ],
  "click.core.MultiCommand.format_commands": [
    "typeshed.typeshed.stubs.click-default-group.click_default_group.DefaultGroup"
  ],
  "click.core.MultiCommand.get_command": [
    "click.core.CommandCollection",
    "click.core.Group"
  ],
  "click.core.MultiCommand.list_commands": [
    "click.core.CommandCollection",
    "click.core.Group"
  ],
  "click.core.MultiCommand.parse_args": [
    "flask.cli.FlaskGroup",
    "typeshed.typeshed.stubs.click-default-group.click_default_group.DefaultGroup"
  ],
  "click.core.MultiCommand.resolve_command": [
    "typeshed.typeshed.stubs.click-default-group.click_default_group.DefaultGroup"
  ],
  "click.core.Parameter.__init__": [
    "click.core.Argument",
    "click.core.Option"
  ],
  "click.core.Parameter._parse_decls": [
    "click.core.Argument",
    "click.core.Option"
  ],
  "click.core.Parameter.add_to_parser": [
    "click.core.Argument",
    "click.core.Option"
  ],
  "click.core.Parameter.consume_value": [
    "click.core.Option"
  ],
  "click.core.Parameter.get_default": [
    "click.core.Option"
  ],
  "click.core.Parameter.get_error_hint": [
    "click.core.Argument"
  ],
  "click.core.Parameter.get_help_record": [
    "click.core.Option"
  ],
  "click.core.Parameter.get_usage_pieces": [
    "click.core.Argument"
  ],
  "click.core.Parameter.human_readable_name": [
    "click.core.Argument"
  ],
  "click.core.Parameter.make_metavar": [
    "click.core.Argument"
  ],
  "click.core.Parameter.resolve_envvar_value": [
    "click.core.Option"
  ],
  "click.core.Parameter.to_info_dict": [
    "click.core.Option"
  ],
  "click.core.Parameter.value_from_envvar": [
    "click.core.Option"
  ],
  "click.exceptions.BadParameter.__init__": [
    "click.exceptions.MissingParameter"
  ],
  "click.exceptions.BadParameter.format_message": [
    "click.exceptions.MissingParameter"
  ],
  "click.exceptions.ClickException.__init__": [
    "click.exceptions.FileError",
    "click.exceptions.UsageError"
  ],
  "click.exceptions.ClickException.format_message": [
    "click.exceptions.BadParameter",
    "click.exceptions.FileError",
    "click.exceptions.NoSuchOption"
  ],
  "click.exceptions.ClickException.show": [
    "click.exceptions.UsageError"
  ],
  "click.exceptions.UsageError.__init__": [
    "click.exceptions.BadOptionUsage",
    "click.exceptions.BadParameter",
    "click.exceptions.NoSuchOption"
  ],
  "click.shell_completion.ShellComplete.format_completion": [
    "click.shell_completion.BashComplete",
    "click.shell_completion.FishComplete",
    "click.shell_completion.ZshComplete"
  ],
  "click.shell_completion.ShellComplete.get_completion_args": [
    "click.shell_completion.BashComplete",
    "click.shell_completion.FishComplete",
    "click.shell_completion.ZshComplete"
  ],
  "click.shell_completion.ShellComplete.source": [
    "click.shell_completion.BashComplete"
  ],
  "click.testing.CliRunner.__init__": [
    "flask.testing.FlaskCliRunner"
  ],
  "click.testing.CliRunner.invoke": [
    "flask.testing.FlaskCliRunner"
  ],
  "click.types.CompositeParamType.arity": [
    "click.types.Tuple"
  ],
  "click.types.ParamType.arity": [
    "click.types.CompositeParamType"
  ],
  "click.types.ParamType.convert": [
    "click.types.BoolParamType",
    "click.types.Choice",
    "click.types.DateTime",
    "click.types.File",
    "click.types.FuncParamType",
    "click.types.Path",
    "click.types.StringParamType",
    "click.types.Tuple",
    "click.types.UUIDParameterType",
    "click.types.UnprocessedParamType",
    "click.types._NumberParamTypeBase",
    "flask.cli.CertParamType"
  ],
  "click.types.ParamType.get_metavar": [
    "click.types.Choice",
    "click.types.DateTime"
  ],
  "click.types.ParamType.get_missing_message": [
    "click.types.Choice"
  ],
  "click.types.ParamType.name": [
    "click.types.Tuple"
  ],
  "click.types.ParamType.shell_complete": [
    "click.types.Choice",
    "click.types.File",
    "click.types.Path"
  ],
  "click.types.ParamType.to_info_dict": [
    "click.types.Choice",
    "click.types.DateTime",
    "click.types.File",
    "click.types.FuncParamType",
    "click.types.Path",
    "click.types.Tuple",
    "click.types._NumberRangeBase"
  ],
  "click.types.Path.convert": [
    "flask.cli.SeparatedPathType"
  ],
  "click.types._NumberParamTypeBase.convert": [
    "click.types._NumberRangeBase"
  ],
  "click.types._NumberRangeBase.__init__": [
    "click.types.FloatRange"
  ],
  "click.types._NumberRangeBase._clamp": [
    "click.types.FloatRange",
    "click.types.IntRange"
  ],
  "cmd.Cmd.cmdloop": [
    "IPython.core.debugger.InterruptiblePdb",
    "IPython.terminal.debugger.TerminalPdb"
  ],
  "cmd.Cmd.do_help": [
    "pdb.Pdb",
    "typeshed.typeshed.stdlib.pdb.Pdb"
  ],
  "cmd.Cmd.precmd": [
    "IPython.core.debugger.Pdb"
  ],
  "code.InteractiveInterpreter.__init__": [
    "code.InteractiveConsole",
    "werkzeug.debug.console._InteractiveConsole"
  ],
  "code.InteractiveInterpreter.runcode": [
    "werkzeug.debug.console._InteractiveConsole"
  ],
  "code.InteractiveInterpreter.runsource": [
    "werkzeug.debug.console._InteractiveConsole"
  ],
  "code.InteractiveInterpreter.showsyntaxerror": [
    "werkzeug.debug.console._InteractiveConsole"
  ],
  "code.InteractiveInterpreter.showtraceback": [
    "werkzeug.debug.console._InteractiveConsole"
  ],
  "code.InteractiveInterpreter.write": [
    "werkzeug.debug.console._InteractiveConsole"
  ],
  "codecs.BufferedIncrementalDecoder.__init__": [
    "encodings.utf_8_sig.IncrementalDecoder",
    "typeshed.typeshed.stdlib.encodings.utf_8_sig.IncrementalDecoder"
  ],
  "codecs.BufferedIncrementalDecoder._buffer_decode": [
    "encodings.utf_8.IncrementalDecoder",
    "encodings.utf_8_sig.IncrementalDecoder",
    "pip._vendor.idna.codec.IncrementalDecoder",
    "typeshed.typeshed.stdlib.encodings.utf_8.IncrementalDecoder",
    "typeshed.typeshed.stdlib.encodings.utf_8_sig.IncrementalDecoder"
  ],
  "codecs.BufferedIncrementalEncoder._buffer_encode": [
    "pip._vendor.idna.codec.IncrementalEncoder"
  ],
  "codecs.Codec.decode": [
    "encodings.utf_8.StreamReader",
    "encodings.utf_8_sig.StreamReader",
    "pip._vendor.idna.codec.Codec",
    "pip._vendor.webencodings.x_user_defined.Codec",
    "serial.tools.hexlify_codec.Codec",
    "typeshed.typeshed.stdlib.encodings.utf_8.StreamReader",
    "typeshed.typeshed.stdlib.encodings.utf_8_sig.StreamReader",
    "typeshed.typeshed.stubs.pyserial.serial.tools.hexlify_codec.Codec"
  ],
  "codecs.Codec.encode": [
    "encodings.utf_8.StreamWriter",
    "encodings.utf_8_sig.StreamWriter",
    "pip._vendor.idna.codec.Codec",
    "pip._vendor.webencodings.x_user_defined.Codec",
    "serial.tools.hexlify_codec.Codec",
    "typeshed.typeshed.stdlib.encodings.utf_8.StreamWriter",
    "typeshed.typeshed.stdlib.encodings.utf_8_sig.StreamWriter",
    "typeshed.typeshed.stubs.pyserial.serial.tools.hexlify_codec.Codec"
  ],
  "codecs.IncrementalDecoder.__init__": [
    "codecs.BufferedIncrementalDecoder",
    "io.IncrementalNewlineDecoder",
    "typeshed.typeshed.stdlib.io.IncrementalNewlineDecoder"
  ],
  "codecs.IncrementalDecoder.decode": [
    "codecs.BufferedIncrementalDecoder",
    "io.IncrementalNewlineDecoder",
    "pip._vendor.webencodings.x_user_defined.IncrementalDecoder",
    "serial.tools.hexlify_codec.IncrementalDecoder",
    "typeshed.typeshed.stdlib.io.IncrementalNewlineDecoder",
    "typeshed.typeshed.stubs.pyserial.serial.tools.hexlify_codec.IncrementalDecoder"
  ],
  "codecs.IncrementalDecoder.setstate": [
    "io.IncrementalNewlineDecoder",
    "typeshed.typeshed.stdlib.io.IncrementalNewlineDecoder"
  ],
  "codecs.IncrementalEncoder.__init__": [
    "codecs.BufferedIncrementalEncoder",
    "encodings.utf_8_sig.IncrementalEncoder",
    "typeshed.typeshed.stdlib.encodings.utf_8_sig.IncrementalEncoder"
  ],
  "codecs.IncrementalEncoder.encode": [
    "codecs.BufferedIncrementalEncoder",
    "encodings.utf_8.IncrementalEncoder",
    "encodings.utf_8_sig.IncrementalEncoder",
    "pip._vendor.webencodings.x_user_defined.IncrementalEncoder",
    "serial.tools.hexlify_codec.IncrementalEncoder",
    "typeshed.typeshed.stdlib.encodings.utf_8.IncrementalEncoder",
    "typeshed.typeshed.stdlib.encodings.utf_8_sig.IncrementalEncoder",
    "typeshed.typeshed.stubs.pyserial.serial.tools.hexlify_codec.IncrementalEncoder"
  ],
  "codecs.IncrementalEncoder.getstate": [
    "encodings.utf_8_sig.IncrementalEncoder",
    "typeshed.typeshed.stdlib.encodings.utf_8_sig.IncrementalEncoder"
  ],
  "codecs.IncrementalEncoder.setstate": [
    "encodings.utf_8_sig.IncrementalEncoder",
    "typeshed.typeshed.stdlib.encodings.utf_8_sig.IncrementalEncoder"
  ],
  "collections.OrderedDict.copy": [
    "graphql.pyutils.default_ordered_dict.DefaultOrderedDict"
  ],
  "collections.OrderedDict.fromkeys": [
    "humanfriendly.case.CaseInsensitiveDict",
    "typeshed.typeshed.stubs.humanfriendly.humanfriendly.case.CaseInsensitiveDict"
  ],
  "collections.OrderedDict.setdefault": [
    "humanfriendly.case.CaseInsensitiveDict",
    "typeshed.typeshed.stubs.humanfriendly.humanfriendly.case.CaseInsensitiveDict"
  ],
  "collections.UserList.__init__": [
    "django.forms.utils.ErrorList"
  ],
  "collections.UserString.__eq__": [
    "typeshed.typeshed.stubs.seaborn.seaborn._core.rules.VarType"
  ],
  "collections.UserString.__init__": [
    "typeshed.typeshed.stubs.seaborn.seaborn._core.rules.VarType"
  ],
  "collections.defaultdict.__init__": [
    "openpyxl.utils.bound_dictionary.BoundDictionary",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.utils.bound_dictionary.BoundDictionary"
  ],
  "collections.defaultdict.__missing__": [
    "importlib_metadata._collections.FreezableDefaultDict"
  ],
  "commonmark.blocks.Block.can_contain": [
    "commonmark.blocks.BlockQuote",
    "commonmark.blocks.CodeBlock",
    "commonmark.blocks.Document",
    "commonmark.blocks.Heading",
    "commonmark.blocks.HtmlBlock",
    "commonmark.blocks.Item",
    "commonmark.blocks.List",
    "commonmark.blocks.Paragraph",
    "commonmark.blocks.ThematicBreak"
  ],
  "commonmark.blocks.Block.continue_": [
    "commonmark.blocks.BlockQuote",
    "commonmark.blocks.CodeBlock",
    "commonmark.blocks.Document",
    "commonmark.blocks.Heading",
    "commonmark.blocks.HtmlBlock",
    "commonmark.blocks.Item",
    "commonmark.blocks.List",
    "commonmark.blocks.Paragraph",
    "commonmark.blocks.ThematicBreak"
  ],
  "commonmark.blocks.Block.finalize": [
    "commonmark.blocks.BlockQuote",
    "commonmark.blocks.CodeBlock",
    "commonmark.blocks.Document",
    "commonmark.blocks.Heading",
    "commonmark.blocks.HtmlBlock",
    "commonmark.blocks.Item",
    "commonmark.blocks.List",
    "commonmark.blocks.Paragraph",
    "commonmark.blocks.ThematicBreak"
  ],
  "commonmark.render.renderer.Renderer.cr": [
    "commonmark.render.rst.ReStructuredTextRenderer",
    "typeshed.typeshed.stubs.commonmark.commonmark.render.rst.ReStructuredTextRenderer"
  ],
  "commonmark.render.renderer.Renderer.lit": [
    "commonmark.render.rst.ReStructuredTextRenderer",
    "typeshed.typeshed.stubs.commonmark.commonmark.render.rst.ReStructuredTextRenderer"
  ],
  "commonmark.render.renderer.Renderer.out": [
    "commonmark.render.html.HtmlRenderer",
    "typeshed.typeshed.stubs.commonmark.commonmark.render.html.HtmlRenderer"
  ],
  "complex.__abs__": [
    "float"
  ],
  "complex.__add__": [
    "float"
  ],
  "complex.__bool__": [
    "float"
  ],
  "complex.__eq__": [
    "float"
  ],
  "complex.__mul__": [
    "float"
  ],
  "complex.__ne__": [
    "float"
  ],
  "complex.__neg__": [
    "float"
  ],
  "complex.__new__": [
    "float"
  ],
  "complex.__pos__": [
    "float"
  ],
  "complex.__pow__": [
    "float"
  ],
  "complex.__radd__": [
    "float"
  ],
  "complex.__rmul__": [
    "float"
  ],
  "complex.__rpow__": [
    "float"
  ],
  "complex.__rsub__": [
    "float"
  ],
  "complex.__rtruediv__": [
    "float"
  ],
  "complex.__sub__": [
    "float"
  ],
  "complex.__truediv__": [
    "float"
  ],
  "complex.conjugate": [
    "float"
  ],
  "complex.imag": [
    "float"
  ],
  "complex.real": [
    "float"
  ],
  "configparser.Error.__init__": [
    "configparser.DuplicateOptionError",
    "configparser.DuplicateSectionError",
    "configparser.InterpolationError",
    "configparser.NoOptionError",
    "configparser.NoSectionError",
    "configparser.ParsingError"
  ],
  "configparser.Interpolation.before_get": [
    "configparser.LegacyInterpolation"
  ],
  "configparser.InterpolationError.__init__": [
    "configparser.InterpolationDepthError",
    "configparser.InterpolationMissingOptionError"
  ],
  "configparser.ParsingError.__init__": [
    "configparser.MissingSectionHeaderError"
  ],
  "configparser.RawConfigParser.__init__": [
    "setuptools.package_index.PyPIConfig",
    "typeshed.typeshed.stubs.setuptools.setuptools.package_index.PyPIConfig"
  ],
  "configparser.RawConfigParser.get": [
    "configparser.ConfigParser"
  ],
  "consolemenu.console_menu.ConsoleMenu.__init__": [
    "consolemenu.multiselect_menu.MultiSelectMenu",
    "consolemenu.selection_menu.SelectionMenu",
    "typeshed.typeshed.stubs.console-menu.consolemenu.multiselect_menu.MultiSelectMenu",
    "typeshed.typeshed.stubs.console-menu.consolemenu.selection_menu.SelectionMenu"
  ],
  "consolemenu.console_menu.ConsoleMenu.append_item": [
    "consolemenu.multiselect_menu.MultiSelectMenu",
    "typeshed.typeshed.stubs.console-menu.consolemenu.multiselect_menu.MultiSelectMenu"
  ],
  "consolemenu.console_menu.ConsoleMenu.process_user_input": [
    "consolemenu.multiselect_menu.MultiSelectMenu",
    "typeshed.typeshed.stubs.console-menu.consolemenu.multiselect_menu.MultiSelectMenu"
  ],
  "consolemenu.console_menu.MenuItem.__init__": [
    "consolemenu.console_menu.ExitItem",
    "consolemenu.items.selection_item.SelectionItem",
    "consolemenu.items.submenu_item.SubmenuItem",
    "typeshed.typeshed.stubs.console-menu.consolemenu.items.selection_item.SelectionItem",
    "typeshed.typeshed.stubs.console-menu.consolemenu.items.submenu_item.SubmenuItem"
  ],
  "consolemenu.console_menu.MenuItem.action": [
    "consolemenu.items.command_item.CommandItem",
    "consolemenu.items.function_item.FunctionItem",
    "consolemenu.items.submenu_item.SubmenuItem",
    "typeshed.typeshed.stubs.console-menu.consolemenu.items.command_item.CommandItem",
    "typeshed.typeshed.stubs.console-menu.consolemenu.items.function_item.FunctionItem",
    "typeshed.typeshed.stubs.console-menu.consolemenu.items.submenu_item.SubmenuItem"
  ],
  "consolemenu.console_menu.MenuItem.clean_up": [
    "consolemenu.items.external_item.ExternalItem",
    "consolemenu.items.submenu_item.SubmenuItem",
    "typeshed.typeshed.stubs.console-menu.consolemenu.items.external_item.ExternalItem",
    "typeshed.typeshed.stubs.console-menu.consolemenu.items.submenu_item.SubmenuItem"
  ],
  "consolemenu.console_menu.MenuItem.get_return": [
    "consolemenu.items.command_item.CommandItem",
    "consolemenu.items.function_item.FunctionItem",
    "consolemenu.items.selection_item.SelectionItem",
    "consolemenu.items.submenu_item.SubmenuItem",
    "typeshed.typeshed.stubs.console-menu.consolemenu.items.command_item.CommandItem",
    "typeshed.typeshed.stubs.console-menu.consolemenu.items.function_item.FunctionItem",
    "typeshed.typeshed.stubs.console-menu.consolemenu.items.selection_item.SelectionItem",
    "typeshed.typeshed.stubs.console-menu.consolemenu.items.submenu_item.SubmenuItem"
  ],
  "consolemenu.console_menu.MenuItem.set_up": [
    "consolemenu.items.external_item.ExternalItem",
    "consolemenu.items.submenu_item.SubmenuItem",
    "typeshed.typeshed.stubs.console-menu.consolemenu.items.external_item.ExternalItem",
    "typeshed.typeshed.stubs.console-menu.consolemenu.items.submenu_item.SubmenuItem"
  ],
  "consolemenu.console_menu.MenuItem.show": [
    "consolemenu.console_menu.ExitItem"
  ],
  "consolemenu.format.menu_borders.DoubleLineBorderStyle.inner_horizontal": [
    "consolemenu.format.menu_borders.DoubleLineOuterLightInnerBorderStyle"
  ],
  "consolemenu.format.menu_borders.DoubleLineBorderStyle.inner_vertical": [
    "consolemenu.format.menu_borders.DoubleLineOuterLightInnerBorderStyle"
  ],
  "consolemenu.format.menu_borders.DoubleLineBorderStyle.intersection": [
    "consolemenu.format.menu_borders.DoubleLineOuterLightInnerBorderStyle"
  ],
  "consolemenu.format.menu_borders.DoubleLineBorderStyle.outer_horizontal_inner_down": [
    "consolemenu.format.menu_borders.DoubleLineOuterLightInnerBorderStyle"
  ],
  "consolemenu.format.menu_borders.DoubleLineBorderStyle.outer_horizontal_inner_up": [
    "consolemenu.format.menu_borders.DoubleLineOuterLightInnerBorderStyle"
  ],
  "consolemenu.format.menu_borders.DoubleLineBorderStyle.outer_vertical_inner_left": [
    "consolemenu.format.menu_borders.DoubleLineOuterLightInnerBorderStyle"
  ],
  "consolemenu.format.menu_borders.DoubleLineBorderStyle.outer_vertical_inner_right": [
    "consolemenu.format.menu_borders.DoubleLineOuterLightInnerBorderStyle"
  ],
  "consolemenu.format.menu_borders.HeavyBorderStyle.inner_horizontal": [
    "consolemenu.format.menu_borders.HeavyOuterLightInnerBorderStyle"
  ],
  "consolemenu.format.menu_borders.HeavyBorderStyle.inner_vertical": [
    "consolemenu.format.menu_borders.HeavyOuterLightInnerBorderStyle"
  ],
  "consolemenu.format.menu_borders.HeavyBorderStyle.intersection": [
    "consolemenu.format.menu_borders.HeavyOuterLightInnerBorderStyle"
  ],
  "consolemenu.format.menu_borders.HeavyBorderStyle.outer_horizontal_inner_down": [
    "consolemenu.format.menu_borders.HeavyOuterLightInnerBorderStyle"
  ],
  "consolemenu.format.menu_borders.HeavyBorderStyle.outer_horizontal_inner_up": [
    "consolemenu.format.menu_borders.HeavyOuterLightInnerBorderStyle"
  ],
  "consolemenu.format.menu_borders.HeavyBorderStyle.outer_vertical_inner_left": [
    "consolemenu.format.menu_borders.HeavyOuterLightInnerBorderStyle"
  ],
  "consolemenu.format.menu_borders.HeavyBorderStyle.outer_vertical_inner_right": [
    "consolemenu.format.menu_borders.HeavyOuterLightInnerBorderStyle"
  ],
  "consolemenu.format.menu_borders.MenuBorderStyle.bottom_left_corner": [
    "consolemenu.format.menu_borders.AsciiBorderStyle",
    "consolemenu.format.menu_borders.DoubleLineBorderStyle",
    "consolemenu.format.menu_borders.HeavyBorderStyle",
    "consolemenu.format.menu_borders.LightBorderStyle"
  ],
  "consolemenu.format.menu_borders.MenuBorderStyle.bottom_right_corner": [
    "consolemenu.format.menu_borders.AsciiBorderStyle",
    "consolemenu.format.menu_borders.DoubleLineBorderStyle",
    "consolemenu.format.menu_borders.HeavyBorderStyle",
    "consolemenu.format.menu_borders.LightBorderStyle"
  ],
  "consolemenu.format.menu_borders.MenuBorderStyle.inner_horizontal": [
    "consolemenu.format.menu_borders.AsciiBorderStyle",
    "consolemenu.format.menu_borders.DoubleLineBorderStyle",
    "consolemenu.format.menu_borders.HeavyBorderStyle",
    "consolemenu.format.menu_borders.LightBorderStyle"
  ],
  "consolemenu.format.menu_borders.MenuBorderStyle.inner_vertical": [
    "consolemenu.format.menu_borders.AsciiBorderStyle",
    "consolemenu.format.menu_borders.DoubleLineBorderStyle",
    "consolemenu.format.menu_borders.HeavyBorderStyle",
    "consolemenu.format.menu_borders.LightBorderStyle"
  ],
  "consolemenu.format.menu_borders.MenuBorderStyle.intersection": [
    "consolemenu.format.menu_borders.AsciiBorderStyle",
    "consolemenu.format.menu_borders.DoubleLineBorderStyle",
    "consolemenu.format.menu_borders.HeavyBorderStyle",
    "consolemenu.format.menu_borders.LightBorderStyle"
  ],
  "consolemenu.format.menu_borders.MenuBorderStyle.outer_horizontal": [
    "consolemenu.format.menu_borders.AsciiBorderStyle",
    "consolemenu.format.menu_borders.DoubleLineBorderStyle",
    "consolemenu.format.menu_borders.HeavyBorderStyle",
    "consolemenu.format.menu_borders.LightBorderStyle"
  ],
  "consolemenu.format.menu_borders.MenuBorderStyle.outer_horizontal_inner_down": [
    "consolemenu.format.menu_borders.AsciiBorderStyle",
    "consolemenu.format.menu_borders.DoubleLineBorderStyle",
    "consolemenu.format.menu_borders.HeavyBorderStyle",
    "consolemenu.format.menu_borders.LightBorderStyle"
  ],
  "consolemenu.format.menu_borders.MenuBorderStyle.outer_horizontal_inner_up": [
    "consolemenu.format.menu_borders.AsciiBorderStyle",
    "consolemenu.format.menu_borders.DoubleLineBorderStyle",
    "consolemenu.format.menu_borders.HeavyBorderStyle",
    "consolemenu.format.menu_borders.LightBorderStyle"
  ],
  "consolemenu.format.menu_borders.MenuBorderStyle.outer_vertical": [
    "consolemenu.format.menu_borders.AsciiBorderStyle",
    "consolemenu.format.menu_borders.DoubleLineBorderStyle",
    "consolemenu.format.menu_borders.HeavyBorderStyle",
    "consolemenu.format.menu_borders.LightBorderStyle"
  ],
  "consolemenu.format.menu_borders.MenuBorderStyle.outer_vertical_inner_left": [
    "consolemenu.format.menu_borders.AsciiBorderStyle",
    "consolemenu.format.menu_borders.DoubleLineBorderStyle",
    "consolemenu.format.menu_borders.HeavyBorderStyle",
    "consolemenu.format.menu_borders.LightBorderStyle"
  ],
  "consolemenu.format.menu_borders.MenuBorderStyle.outer_vertical_inner_right": [
    "consolemenu.format.menu_borders.AsciiBorderStyle",
    "consolemenu.format.menu_borders.DoubleLineBorderStyle",
    "consolemenu.format.menu_borders.HeavyBorderStyle",
    "consolemenu.format.menu_borders.LightBorderStyle"
  ],
  "consolemenu.format.menu_borders.MenuBorderStyle.top_left_corner": [
    "consolemenu.format.menu_borders.AsciiBorderStyle",
    "consolemenu.format.menu_borders.DoubleLineBorderStyle",
    "consolemenu.format.menu_borders.HeavyBorderStyle",
    "consolemenu.format.menu_borders.LightBorderStyle"
  ],
  "consolemenu.format.menu_borders.MenuBorderStyle.top_right_corner": [
    "consolemenu.format.menu_borders.AsciiBorderStyle",
    "consolemenu.format.menu_borders.DoubleLineBorderStyle",
    "consolemenu.format.menu_borders.HeavyBorderStyle",
    "consolemenu.format.menu_borders.LightBorderStyle"
  ],
  "consolemenu.items.external_item.ExternalItem.clean_up": [
    "consolemenu.items.function_item.FunctionItem",
    "typeshed.typeshed.stubs.console-menu.consolemenu.items.function_item.FunctionItem"
  ],
  "consolemenu.menu_component.MenuComponent.__init__": [
    "consolemenu.menu_component.MenuHeader",
    "consolemenu.menu_component.MenuItemsSection",
    "consolemenu.menu_component.MenuPrompt",
    "consolemenu.menu_component.MenuTextSection"
  ],
  "consolemenu.menu_component.MenuComponent.generate": [
    "consolemenu.menu_component.MenuFooter",
    "consolemenu.menu_component.MenuHeader",
    "consolemenu.menu_component.MenuItemsSection",
    "consolemenu.menu_component.MenuPrompt",
    "consolemenu.menu_component.MenuTextSection"
  ],
  "consolemenu.validators.base.BaseValidator.__init__": [
    "consolemenu.validators.regex.RegexValidator",
    "consolemenu.validators.url.UrlValidator",
    "typeshed.typeshed.stubs.console-menu.consolemenu.validators.regex.RegexValidator",
    "typeshed.typeshed.stubs.console-menu.consolemenu.validators.url.UrlValidator"
  ],
  "consolemenu.validators.base.BaseValidator.validate": [
    "consolemenu.validators.regex.RegexValidator",
    "consolemenu.validators.url.UrlValidator",
    "typeshed.typeshed.stubs.console-menu.consolemenu.validators.regex.RegexValidator",
    "typeshed.typeshed.stubs.console-menu.consolemenu.validators.url.UrlValidator"
  ],
  "contextlib.AbstractAsyncContextManager.__aexit__": [
    "contextlib._AsyncGeneratorContextManager"
  ],
  "contextlib.AbstractContextManager.__enter__": [
    "contextlib.nullcontext",
    "django.db.backends.base.schema.BaseDatabaseSchemaEditor",
    "exceptiongroup._suppress.suppress",
    "pip._vendor.rich.progress._ReadContext",
    "prompt_toolkit.utils.DummyContext"
  ],
  "contextlib.AbstractContextManager.__exit__": [
    "contextlib._GeneratorContextManager",
    "contextlib._RedirectStream",
    "contextlib.closing",
    "contextlib.nullcontext",
    "contextlib.suppress",
    "django.db.backends.base.schema.BaseDatabaseSchemaEditor",
    "exceptiongroup._suppress.suppress",
    "multiprocessing.synchronize.Condition",
    "multiprocessing.synchronize.SemLock",
    "os._ScandirIterator",
    "pip._vendor.rich.progress._ReadContext",
    "prompt_toolkit.utils.DummyContext",
    "typeshed.typeshed.stdlib.multiprocessing.synchronize.Condition",
    "typeshed.typeshed.stdlib.multiprocessing.synchronize.SemLock",
    "typeshed.typeshed.stdlib.os._ScandirIterator"
  ],
  "cronlog.LogReader.__init__": [
    "cronlog.CronLog"
  ],
  "cronlog.LogReader.__iter__": [
    "cronlog.CronLog"
  ],
  "ctypes._SimpleCData.__init__": [
    "ctypes.c_bool",
    "ctypes.c_char"
  ],
  "d3dshot.capture_output.CaptureOutput.__init__": [
    "d3dshot.capture_outputs.numpy_capture_output.NumpyCaptureOutput",
    "d3dshot.capture_outputs.pil_capture_output.PILCaptureOutput",
    "d3dshot.capture_outputs.pytorch_capture_output.PytorchCaptureOutput"
  ],
  "d3dshot.capture_output.CaptureOutput.process": [
    "d3dshot.capture_outputs.numpy_capture_output.NumpyCaptureOutput",
    "d3dshot.capture_outputs.pil_capture_output.PILCaptureOutput",
    "d3dshot.capture_outputs.pytorch_capture_output.PytorchCaptureOutput"
  ],
  "d3dshot.capture_output.CaptureOutput.stack": [
    "d3dshot.capture_outputs.numpy_capture_output.NumpyCaptureOutput",
    "d3dshot.capture_outputs.pil_capture_output.PILCaptureOutput",
    "d3dshot.capture_outputs.pytorch_capture_output.PytorchCaptureOutput"
  ],
  "d3dshot.capture_output.CaptureOutput.to_pil": [
    "d3dshot.capture_outputs.numpy_capture_output.NumpyCaptureOutput",
    "d3dshot.capture_outputs.pil_capture_output.PILCaptureOutput",
    "d3dshot.capture_outputs.pytorch_capture_output.PytorchCaptureOutput"
  ],
  "dataclasses_json.undefined._UndefinedParameterAction.create_init": [
    "dataclasses_json.undefined._CatchAllUndefinedParameters",
    "dataclasses_json.undefined._IgnoreUndefinedParameters"
  ],
  "dataclasses_json.undefined._UndefinedParameterAction.handle_dump": [
    "dataclasses_json.undefined._CatchAllUndefinedParameters"
  ],
  "dataclasses_json.undefined._UndefinedParameterAction.handle_from_dict": [
    "dataclasses_json.undefined._CatchAllUndefinedParameters",
    "dataclasses_json.undefined._IgnoreUndefinedParameters",
    "dataclasses_json.undefined._RaiseUndefinedParameters"
  ],
  "dataclasses_json.undefined._UndefinedParameterAction.handle_to_dict": [
    "dataclasses_json.undefined._CatchAllUndefinedParameters"
  ],
  "dateparser.languages.dictionary.Dictionary.__init__": [
    "dateparser.languages.dictionary.NormalizedDictionary"
  ],
  "dateparser.parser._parser.parse": [
    "dateparser.calendars.non_gregorian_parser",
    "typeshed.typeshed.stubs.dateparser.dateparser.calendars.non_gregorian_parser"
  ],
  "dateparser.search.detection.BaseLanguageDetector.__init__": [
    "dateparser.search.detection.AutoDetectLanguage",
    "dateparser.search.detection.ExactLanguages",
    "dateparser.search.text_detection.FullTextLanguageDetector",
    "typeshed.typeshed.stubs.dateparser.dateparser.search.text_detection.FullTextLanguageDetector"
  ],
  "dateparser.search.detection.BaseLanguageDetector.iterate_applicable_languages": [
    "dateparser.search.detection.AutoDetectLanguage",
    "dateparser.search.detection.ExactLanguages"
  ],
  "datetime.date.__ge__": [
    "datetime.datetime"
  ],
  "datetime.date.__gt__": [
    "datetime.datetime"
  ],
  "datetime.date.__le__": [
    "datetime.datetime"
  ],
  "datetime.date.__lt__": [
    "datetime.datetime"
  ],
  "datetime.date.__new__": [
    "datetime.datetime"
  ],
  "datetime.date.__sub__": [
    "datetime.datetime"
  ],
  "datetime.date.fromtimestamp": [
    "datetime.datetime"
  ],
  "datetime.date.isoformat": [
    "datetime.datetime"
  ],
  "datetime.date.replace": [
    "datetime.datetime"
  ],
  "datetime.date.strftime": [
    "django.utils.datetime_safe.date",
    "django.utils.datetime_safe.datetime"
  ],
  "datetime.datetime.combine": [
    "django.utils.datetime_safe.datetime"
  ],
  "datetime.datetime.fold": [
    "dateutil.tz._common._DatetimeWithFold",
    "typeshed.typeshed.stubs.python-dateutil.dateutil.tz._common._DatetimeWithFold"
  ],
  "datetime.tzinfo.dst": [
    "IPython.utils.tz.tzUTC",
    "babel.localtime._FallbackLocalTimezone",
    "babel.util.FixedOffsetTimezone",
    "dateparser.timezone_parser.StaticTzInfo",
    "datetime.timezone",
    "dateutil.tz._common.tzrangebase",
    "dateutil.tz.tz.tzfile",
    "dateutil.tz.tz.tzlocal",
    "dateutil.tz.tz.tzoffset",
    "dateutil.tz.tz.tzutc",
    "ldap3.core.timezone.OffsetTzInfo",
    "psycopg2.tz.FixedOffsetTimezone",
    "psycopg2.tz.LocalTimezone",
    "pyasn1.type.useful.TimeMixIn.FixedOffset",
    "pyrfc3339.utils.FixedOffset",
    "pytz._FixedOffset",
    "pytz.reference.FixedOffset",
    "pytz.reference.LocalTimezone",
    "pytz.reference.USTimeZone",
    "pytz.tzinfo.BaseTzInfo",
    "toml.tz.TomlTz",
    "typeshed.typeshed.stdlib.zoneinfo.ZoneInfo",
    "typeshed.typeshed.stubs.WebOb.webob.datetime_utils._UTC",
    "typeshed.typeshed.stubs.boltons.boltons.timeutils.ConstantTZInfo",
    "typeshed.typeshed.stubs.boltons.boltons.timeutils.LocalTZInfo",
    "typeshed.typeshed.stubs.boltons.boltons.timeutils.USTimeZone",
    "typeshed.typeshed.stubs.dateparser.dateparser.timezone_parser.StaticTzInfo",
    "typeshed.typeshed.stubs.ldap3.ldap3.core.timezone.OffsetTzInfo",
    "typeshed.typeshed.stubs.psycopg2.psycopg2.tz.FixedOffsetTimezone",
    "typeshed.typeshed.stubs.psycopg2.psycopg2.tz.LocalTimezone",
    "typeshed.typeshed.stubs.pyRFC3339.pyrfc3339.utils.FixedOffset",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.useful.TimeMixIn.FixedOffset",
    "typeshed.typeshed.stubs.python-dateutil.dateutil.tz._common.tzrangebase",
    "typeshed.typeshed.stubs.python-dateutil.dateutil.tz.tz.tzfile",
    "typeshed.typeshed.stubs.python-dateutil.dateutil.tz.tz.tzlocal",
    "typeshed.typeshed.stubs.python-dateutil.dateutil.tz.tz.tzoffset",
    "typeshed.typeshed.stubs.python-dateutil.dateutil.tz.tz.tzutc",
    "typeshed.typeshed.stubs.pytz.pytz._FixedOffset",
    "typeshed.typeshed.stubs.pytz.pytz.reference.FixedOffset",
    "typeshed.typeshed.stubs.pytz.pytz.reference.LocalTimezone",
    "typeshed.typeshed.stubs.pytz.pytz.reference.USTimeZone",
    "typeshed.typeshed.stubs.pytz.pytz.tzinfo.BaseTzInfo",
    "typeshed.typeshed.stubs.pywin32.win32.lib.win32timezone.TimeZoneInfo",
    "typeshed.typeshed.stubs.toml.toml.tz.TomlTz",
    "win32.lib.win32timezone.TimeZoneInfo",
    "zoneinfo.ZoneInfo"
  ],
  "datetime.tzinfo.fromutc": [
    "dateutil.tz._common._tzinfo",
    "dateutil.tz.tz.tzoffset",
    "dateutil.tz.tz.tzutc",
    "pytz.tzinfo.DstTzInfo",
    "pytz.tzinfo.StaticTzInfo",
    "typeshed.typeshed.stubs.python-dateutil.dateutil.tz._common._tzinfo",
    "typeshed.typeshed.stubs.python-dateutil.dateutil.tz.tz.tzoffset",
    "typeshed.typeshed.stubs.python-dateutil.dateutil.tz.tz.tzutc",
    "typeshed.typeshed.stubs.pytz.pytz.tzinfo.DstTzInfo",
    "typeshed.typeshed.stubs.pytz.pytz.tzinfo.StaticTzInfo"
  ],
  "datetime.tzinfo.tzname": [
    "babel.localtime._FallbackLocalTimezone",
    "babel.util.FixedOffsetTimezone",
    "dateparser.timezone_parser.StaticTzInfo",
    "datetime.timezone",
    "dateutil.tz._common.tzrangebase",
    "dateutil.tz.tz.tzfile",
    "dateutil.tz.tz.tzlocal",
    "dateutil.tz.tz.tzoffset",
    "dateutil.tz.tz.tzutc",
    "ldap3.core.timezone.OffsetTzInfo",
    "psycopg2.tz.FixedOffsetTimezone",
    "psycopg2.tz.LocalTimezone",
    "pyasn1.type.useful.TimeMixIn.FixedOffset",
    "pyrfc3339.utils.FixedOffset",
    "pytz._FixedOffset",
    "pytz.reference.FixedOffset",
    "pytz.reference.LocalTimezone",
    "pytz.reference.USTimeZone",
    "pytz.tzinfo.BaseTzInfo",
    "toml.tz.TomlTz",
    "typeshed.typeshed.stdlib.zoneinfo.ZoneInfo",
    "typeshed.typeshed.stubs.WebOb.webob.datetime_utils._UTC",
    "typeshed.typeshed.stubs.boltons.boltons.timeutils.ConstantTZInfo",
    "typeshed.typeshed.stubs.boltons.boltons.timeutils.LocalTZInfo",
    "typeshed.typeshed.stubs.boltons.boltons.timeutils.USTimeZone",
    "typeshed.typeshed.stubs.dateparser.dateparser.timezone_parser.StaticTzInfo",
    "typeshed.typeshed.stubs.ldap3.ldap3.core.timezone.OffsetTzInfo",
    "typeshed.typeshed.stubs.psycopg2.psycopg2.tz.FixedOffsetTimezone",
    "typeshed.typeshed.stubs.psycopg2.psycopg2.tz.LocalTimezone",
    "typeshed.typeshed.stubs.pyRFC3339.pyrfc3339.utils.FixedOffset",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.useful.TimeMixIn.FixedOffset",
    "typeshed.typeshed.stubs.python-dateutil.dateutil.tz._common.tzrangebase",
    "typeshed.typeshed.stubs.python-dateutil.dateutil.tz.tz.tzfile",
    "typeshed.typeshed.stubs.python-dateutil.dateutil.tz.tz.tzlocal",
    "typeshed.typeshed.stubs.python-dateutil.dateutil.tz.tz.tzoffset",
    "typeshed.typeshed.stubs.python-dateutil.dateutil.tz.tz.tzutc",
    "typeshed.typeshed.stubs.pytz.pytz._FixedOffset",
    "typeshed.typeshed.stubs.pytz.pytz.reference.FixedOffset",
    "typeshed.typeshed.stubs.pytz.pytz.reference.LocalTimezone",
    "typeshed.typeshed.stubs.pytz.pytz.reference.USTimeZone",
    "typeshed.typeshed.stubs.pytz.pytz.tzinfo.BaseTzInfo",
    "typeshed.typeshed.stubs.pywin32.win32.lib.win32timezone.TimeZoneInfo",
    "typeshed.typeshed.stubs.toml.toml.tz.TomlTz",
    "win32.lib.win32timezone.TimeZoneInfo",
    "zoneinfo.ZoneInfo"
  ],
  "datetime.tzinfo.utcoffset": [
    "IPython.utils.tz.tzUTC",
    "babel.localtime._FallbackLocalTimezone",
    "babel.util.FixedOffsetTimezone",
    "dateparser.timezone_parser.StaticTzInfo",
    "datetime.timezone",
    "dateutil.tz._common.tzrangebase",
    "dateutil.tz.tz.tzfile",
    "dateutil.tz.tz.tzlocal",
    "dateutil.tz.tz.tzoffset",
    "dateutil.tz.tz.tzutc",
    "ldap3.core.timezone.OffsetTzInfo",
    "psycopg2.tz.FixedOffsetTimezone",
    "psycopg2.tz.LocalTimezone",
    "pyasn1.type.useful.TimeMixIn.FixedOffset",
    "pyrfc3339.utils.FixedOffset",
    "pytz._FixedOffset",
    "pytz.reference.FixedOffset",
    "pytz.reference.LocalTimezone",
    "pytz.reference.USTimeZone",
    "pytz.tzinfo.BaseTzInfo",
    "toml.tz.TomlTz",
    "typeshed.typeshed.stdlib.zoneinfo.ZoneInfo",
    "typeshed.typeshed.stubs.WebOb.webob.datetime_utils._UTC",
    "typeshed.typeshed.stubs.boltons.boltons.timeutils.ConstantTZInfo",
    "typeshed.typeshed.stubs.boltons.boltons.timeutils.LocalTZInfo",
    "typeshed.typeshed.stubs.boltons.boltons.timeutils.USTimeZone",
    "typeshed.typeshed.stubs.dateparser.dateparser.timezone_parser.StaticTzInfo",
    "typeshed.typeshed.stubs.ldap3.ldap3.core.timezone.OffsetTzInfo",
    "typeshed.typeshed.stubs.psycopg2.psycopg2.tz.FixedOffsetTimezone",
    "typeshed.typeshed.stubs.psycopg2.psycopg2.tz.LocalTimezone",
    "typeshed.typeshed.stubs.pyRFC3339.pyrfc3339.utils.FixedOffset",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.useful.TimeMixIn.FixedOffset",
    "typeshed.typeshed.stubs.python-dateutil.dateutil.tz._common.tzrangebase",
    "typeshed.typeshed.stubs.python-dateutil.dateutil.tz.tz.tzfile",
    "typeshed.typeshed.stubs.python-dateutil.dateutil.tz.tz.tzlocal",
    "typeshed.typeshed.stubs.python-dateutil.dateutil.tz.tz.tzoffset",
    "typeshed.typeshed.stubs.python-dateutil.dateutil.tz.tz.tzutc",
    "typeshed.typeshed.stubs.pytz.pytz._FixedOffset",
    "typeshed.typeshed.stubs.pytz.pytz.reference.FixedOffset",
    "typeshed.typeshed.stubs.pytz.pytz.reference.LocalTimezone",
    "typeshed.typeshed.stubs.pytz.pytz.reference.USTimeZone",
    "typeshed.typeshed.stubs.pytz.pytz.tzinfo.BaseTzInfo",
    "typeshed.typeshed.stubs.pywin32.win32.lib.win32timezone.TimeZoneInfo",
    "typeshed.typeshed.stubs.toml.toml.tz.TomlTz",
    "win32.lib.win32timezone.TimeZoneInfo",
    "zoneinfo.ZoneInfo"
  ],
  "dateutil.rrule.rrulebase.__init__": [
    "dateutil.rrule.rrule",
    "dateutil.rrule.rruleset"
  ],
  "dateutil.tz._common._tzinfo.fromutc": [
    "dateutil.tz._common.tzrangebase"
  ],
  "dateutil.tz._common._tzinfo.is_ambiguous": [
    "dateutil.tz._common.tzrangebase",
    "dateutil.tz.tz.tzfile",
    "dateutil.tz.tz.tzlocal"
  ],
  "dateutil.tz._common.tzrangebase.__init__": [
    "dateutil.tz.tz.tzrange"
  ],
  "dateutil.tz.tz.tzrange.__init__": [
    "dateutil.tz.tz.tzstr"
  ],
  "deprecated.classic.ClassicAdapter.__call__": [
    "deprecated.sphinx.SphinxAdapter"
  ],
  "deprecated.classic.ClassicAdapter.__init__": [
    "deprecated.sphinx.SphinxAdapter"
  ],
  "dict.__class_getitem__": [
    "http.cookies.Morsel",
    "typeshed.typeshed.stdlib.http.cookies.Morsel"
  ],
  "dict.__delitem__": [
    "collections.Counter",
    "django.utils.datastructures.MultiValueDict",
    "dockerfile_parse.parser.KeyValues",
    "humanfriendly.case.CaseInsensitiveDict",
    "oauthlib.common.CaseInsensitiveDict",
    "passlib.utils.compat._ordered_dict.OrderedDict",
    "pip._vendor.distlib.compat.OrderedDict",
    "pip._vendor.pyparsing.util.UnboundedMemo",
    "sqlalchemy.ext.mutable.MutableDict",
    "stripe.stripe_object.StripeObject",
    "typeshed.typeshed.stdlib.collections.Counter",
    "typeshed.typeshed.stubs.boltons.boltons.cacheutils.LRI",
    "typeshed.typeshed.stubs.boltons.boltons.dictutils.ManyToMany",
    "typeshed.typeshed.stubs.dockerfile-parse.dockerfile_parse.parser.KeyValues",
    "typeshed.typeshed.stubs.humanfriendly.humanfriendly.case.CaseInsensitiveDict",
    "typeshed.typeshed.stubs.oauthlib.oauthlib.common.CaseInsensitiveDict",
    "typeshed.typeshed.stubs.passlib.passlib.utils.compat._ordered_dict.OrderedDict",
    "typeshed.typeshed.stubs.stripe.stripe.stripe_object.StripeObject",
    "werkzeug.datastructures.headers.Headers",
    "werkzeug.datastructures.mixins.ImmutableDictMixin",
    "werkzeug.datastructures.mixins.UpdateDictMixin",
    "werkzeug.datastructures.structures.OrderedMultiDict"
  ],
  "dict.__getitem__": [
    "django.utils.datastructures.DictWrapper",
    "django.utils.datastructures.MultiValueDict",
    "flask.sessions.SecureCookieSession",
    "html5lib._utils.MethodDispatcher",
    "oauthlib.common.CaseInsensitiveDict",
    "pip._vendor.distlib.compat.ConvertingDict",
    "pip._vendor.requests.structures.LookupDict",
    "requests.structures.LookupDict",
    "sqlalchemy.util._collections.LRUCache",
    "stripe.stripe_object.StripeObject",
    "traitlets.config.loader.Config",
    "traitlets.config.loader._DefaultOptionDict",
    "typeshed.typeshed.stdlib.logging.config.ConvertingDict",
    "typeshed.typeshed.stubs.boltons.boltons.cacheutils.LRI",
    "typeshed.typeshed.stubs.boltons.boltons.dictutils.ManyToMany",
    "typeshed.typeshed.stubs.boltons.boltons.strutils.DeaccenterDict",
    "typeshed.typeshed.stubs.html5lib.html5lib._utils.MethodDispatcher",
    "typeshed.typeshed.stubs.oauthlib.oauthlib.common.CaseInsensitiveDict",
    "typeshed.typeshed.stubs.pywin32.win32.lib.win32timezone.RangeMap",
    "typeshed.typeshed.stubs.requests.requests.structures.LookupDict",
    "typeshed.typeshed.stubs.stripe.stripe.stripe_object.StripeObject",
    "werkzeug.datastructures.headers.Headers",
    "werkzeug.datastructures.structures.MultiDict",
    "win32.lib.win32timezone.RangeMap"
  ],
  "dict.__hash__": [
    "dockerfile_parse.parser.KeyValues",
    "typeshed.typeshed.stubs.dockerfile-parse.dockerfile_parse.parser.KeyValues",
    "werkzeug.datastructures.mixins.ImmutableDictMixin"
  ],
  "dict.__init__": [
    "IPython.utils.coloransi.ColorSchemeTable",
    "IPython.utils.ipstruct.Struct",
    "boto.utils.LRUCache",
    "boto.utils.LazyLoadMetadata",
    "collections.Counter",
    "collections.defaultdict",
    "django.contrib.sessions.backends.base.SessionBase",
    "django.forms.utils.ErrorDict",
    "django.template.context.ContextDict",
    "django.utils.datastructures.DictWrapper",
    "django.utils.datastructures.MultiValueDict",
    "dockerfile_parse.parser.KeyValues",
    "enum._EnumDict",
    "flask.config.Config",
    "html5lib._utils.MethodDispatcher",
    "http.cookies.BaseCookie",
    "http.cookies.Morsel",
    "httplib2.Response",
    "oauthlib.common.CaseInsensitiveDict",
    "oauthlib.oauth2.rfc6749.tokens.OAuth2Token",
    "passlib.utils.compat._ordered_dict.OrderedDict",
    "pip._vendor.distlib.compat.OrderedDict",
    "pip._vendor.requests.structures.LookupDict",
    "prompt_toolkit.cache.FastDictCache",
    "prompt_toolkit.output.vt100._256ColorCache",
    "prompt_toolkit.output.vt100._EscapeCodeCache",
    "prompt_toolkit.renderer._StyleStringHasStyleCache",
    "prompt_toolkit.renderer._StyleStringToAttrsCache",
    "prompt_toolkit.utils._CharSizesCache",
    "redis.client.CaseInsensitiveDict",
    "requests.structures.LookupDict",
    "sqlalchemy.orm.collections.MappedCollection",
    "sqlalchemy.orm.mapper._ColumnMapping",
    "sqlalchemy.sql.traversals.anon_map",
    "sqlalchemy.util._collections.LRUCache",
    "sqlalchemy.util._collections.PopulateDict",
    "sqlalchemy.util._collections.WeakPopulateDict",
    "stripe.stripe_object.StripeObject",
    "traitlets.config.loader.Config",
    "typeshed.typeshed.stdlib.collections.Counter",
    "typeshed.typeshed.stdlib.collections.defaultdict",
    "typeshed.typeshed.stdlib.enum._EnumDict",
    "typeshed.typeshed.stdlib.http.cookies.BaseCookie",
    "typeshed.typeshed.stdlib.http.cookies.Morsel",
    "typeshed.typeshed.stubs.WebOb.webob.cookies.Cookie",
    "typeshed.typeshed.stubs.WebOb.webob.cookies.Morsel",
    "typeshed.typeshed.stubs.boltons.boltons.cacheutils.LRI",
    "typeshed.typeshed.stubs.boltons.boltons.dictutils.ManyToMany",
    "typeshed.typeshed.stubs.boto.boto.utils.LRUCache",
    "typeshed.typeshed.stubs.boto.boto.utils.LazyLoadMetadata",
    "typeshed.typeshed.stubs.dockerfile-parse.dockerfile_parse.parser.KeyValues",
    "typeshed.typeshed.stubs.html5lib.html5lib._utils.MethodDispatcher",
    "typeshed.typeshed.stubs.httplib2.httplib2.Response",
    "typeshed.typeshed.stubs.oauthlib.oauthlib.common.CaseInsensitiveDict",
    "typeshed.typeshed.stubs.oauthlib.oauthlib.oauth2.rfc6749.tokens.OAuth2Token",
    "typeshed.typeshed.stubs.passlib.passlib.utils.compat._ordered_dict.OrderedDict",
    "typeshed.typeshed.stubs.pywin32.win32.lib.win32timezone.RangeMap",
    "typeshed.typeshed.stubs.redis.redis.client.CaseInsensitiveDict",
    "typeshed.typeshed.stubs.requests.requests.structures.LookupDict",
    "typeshed.typeshed.stubs.stripe.stripe.stripe_object.StripeObject",
    "typeshed.typeshed.stubs.usersettings.usersettings.Settings",
    "werkzeug.datastructures.headers.Headers",
    "win32.lib.win32timezone.RangeMap"
  ],
  "dict.__ior__": [
    "collections.Counter",
    "typeshed.typeshed.stdlib.collections.Counter"
  ],
  "dict.__iter__": [
    "django.utils.datastructures.MultiValueDict",
    "passlib.utils.compat._ordered_dict.OrderedDict",
    "pip._vendor.distlib.compat.OrderedDict",
    "stripe.api_resources.list_object.ListObject",
    "stripe.api_resources.search_result_object.SearchResultObject",
    "typeshed.typeshed.stubs.boltons.boltons.dictutils.ManyToMany",
    "typeshed.typeshed.stubs.passlib.passlib.utils.compat._ordered_dict.OrderedDict",
    "typeshed.typeshed.stubs.stripe.stripe.api_resources.list_object.ListObject",
    "typeshed.typeshed.stubs.stripe.stripe.api_resources.search_result_object.SearchResultObject",
    "werkzeug.datastructures.headers.Headers",
    "werkzeug.datastructures.structures.CombinedMultiDict",
    "werkzeug.datastructures.structures.OrderedMultiDict"
  ],
  "dict.__len__": [
    "django.utils.datastructures.MultiValueDict",
    "stripe.api_resources.list_object.ListObject",
    "stripe.api_resources.search_result_object.SearchResultObject",
    "typeshed.typeshed.stubs.boltons.boltons.dictutils.ManyToMany",
    "typeshed.typeshed.stubs.stripe.stripe.api_resources.list_object.ListObject",
    "typeshed.typeshed.stubs.stripe.stripe.api_resources.search_result_object.SearchResultObject"
  ],
  "dict.__or__": [
    "collections.Counter",
    "typeshed.typeshed.stdlib.collections.Counter",
    "typeshed.typeshed.stdlib.collections.OrderedDict",
    "typeshed.typeshed.stdlib.collections.defaultdict"
  ],
  "dict.__reversed__": [
    "collections.OrderedDict",
    "passlib.utils.compat._ordered_dict.OrderedDict",
    "pip._vendor.distlib.compat.OrderedDict",
    "stripe.api_resources.list_object.ListObject",
    "typeshed.typeshed.stdlib.collections.OrderedDict",
    "typeshed.typeshed.stubs.passlib.passlib.utils.compat._ordered_dict.OrderedDict",
    "typeshed.typeshed.stubs.stripe.stripe.api_resources.list_object.ListObject"
  ],
  "dict.__ror__": [
    "typeshed.typeshed.stdlib.collections.OrderedDict",
    "typeshed.typeshed.stdlib.collections.defaultdict"
  ],
  "dict.__setitem__": [
    "IPython.utils.ipstruct.Struct",
    "django.utils.datastructures.MultiValueDict",
    "dockerfile_parse.parser.KeyValues",
    "enum._EnumDict",
    "http.cookies.BaseCookie",
    "http.cookies.Morsel",
    "humanfriendly.case.CaseInsensitiveDict",
    "oauthlib.common.CaseInsensitiveDict",
    "passlib.utils.compat._ordered_dict.OrderedDict",
    "pip._vendor.distlib.compat.OrderedDict",
    "psycopg2.extras.RealDictRow",
    "sqlalchemy.ext.mutable.MutableDict",
    "sqlalchemy.util._collections.LRUCache",
    "stripe.stripe_object.StripeObject",
    "traitlets.config.loader.Config",
    "typeshed.typeshed.stdlib.enum._EnumDict",
    "typeshed.typeshed.stdlib.http.cookies.BaseCookie",
    "typeshed.typeshed.stdlib.http.cookies.Morsel",
    "typeshed.typeshed.stubs.WebOb.webob.cookies.Cookie",
    "typeshed.typeshed.stubs.boltons.boltons.cacheutils.LRI",
    "typeshed.typeshed.stubs.boltons.boltons.dictutils.ManyToMany",
    "typeshed.typeshed.stubs.dockerfile-parse.dockerfile_parse.parser.KeyValues",
    "typeshed.typeshed.stubs.humanfriendly.humanfriendly.case.CaseInsensitiveDict",
    "typeshed.typeshed.stubs.oauthlib.oauthlib.common.CaseInsensitiveDict",
    "typeshed.typeshed.stubs.passlib.passlib.utils.compat._ordered_dict.OrderedDict",
    "typeshed.typeshed.stubs.psycopg2.psycopg2.extras.RealDictRow",
    "typeshed.typeshed.stubs.stripe.stripe.stripe_object.StripeObject",
    "werkzeug.datastructures.headers.Headers",
    "werkzeug.datastructures.mixins.ImmutableDictMixin",
    "werkzeug.datastructures.mixins.UpdateDictMixin",
    "werkzeug.datastructures.structures.MultiDict"
  ],
  "dict.copy": [
    "IPython.utils.coloransi.ColorSchemeTable",
    "IPython.utils.ipstruct.Struct",
    "collections.Counter",
    "collections.OrderedDict",
    "collections.defaultdict",
    "django.utils.datastructures.MultiValueDict",
    "passlib.utils.compat._ordered_dict.OrderedDict",
    "pip._vendor.distlib.compat.OrderedDict",
    "sqlalchemy.util._collections.FacadeDict",
    "traitlets.config.loader.Config",
    "typeshed.typeshed.stdlib.collections.Counter",
    "typeshed.typeshed.stdlib.collections.OrderedDict",
    "typeshed.typeshed.stdlib.collections.defaultdict",
    "typeshed.typeshed.stubs.boltons.boltons.cacheutils.LRI",
    "typeshed.typeshed.stubs.boltons.boltons.dictutils.OneToOne",
    "typeshed.typeshed.stubs.boltons.boltons.dictutils.OrderedMultiDict",
    "typeshed.typeshed.stubs.passlib.passlib.utils.compat._ordered_dict.OrderedDict",
    "werkzeug.datastructures.headers.Headers",
    "werkzeug.datastructures.structures.ImmutableDict",
    "werkzeug.datastructures.structures.ImmutableTypeConversionDict",
    "werkzeug.datastructures.structures.MultiDict"
  ],
  "dict.fromkeys": [
    "collections.Counter",
    "collections.OrderedDict",
    "django.http.request.QueryDict",
    "passlib.utils.compat._ordered_dict.OrderedDict",
    "pip._vendor.distlib.compat.OrderedDict",
    "typeshed.typeshed.stdlib.collections.Counter",
    "typeshed.typeshed.stdlib.collections.OrderedDict",
    "typeshed.typeshed.stubs.boltons.boltons.dictutils.FrozenDict",
    "typeshed.typeshed.stubs.boltons.boltons.dictutils.OrderedMultiDict",
    "typeshed.typeshed.stubs.passlib.passlib.utils.compat._ordered_dict.OrderedDict",
    "werkzeug.datastructures.mixins.ImmutableDictMixin"
  ],
  "dict.get": [
    "django.utils.datastructures.MultiValueDict",
    "flask.sessions.SecureCookieSession",
    "humanfriendly.case.CaseInsensitiveDict",
    "oauthlib.common.CaseInsensitiveDict",
    "openpyxl.worksheet.table.TableList",
    "pip._vendor.distlib.compat.ConvertingDict",
    "pip._vendor.pyparsing.core.ParserElement._CacheType",
    "pip._vendor.requests.structures.LookupDict",
    "redis.client.CaseInsensitiveDict",
    "requests.structures.LookupDict",
    "sqlalchemy.util._collections.LRUCache",
    "traitlets.config.loader._DefaultOptionDict",
    "typeshed.typeshed.stdlib.logging.config.ConvertingDict",
    "typeshed.typeshed.stubs.boltons.boltons.cacheutils.LRI",
    "typeshed.typeshed.stubs.boltons.boltons.dictutils.ManyToMany",
    "typeshed.typeshed.stubs.boltons.boltons.dictutils.OrderedMultiDict",
    "typeshed.typeshed.stubs.humanfriendly.humanfriendly.case.CaseInsensitiveDict",
    "typeshed.typeshed.stubs.oauthlib.oauthlib.common.CaseInsensitiveDict",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.table.TableList",
    "typeshed.typeshed.stubs.pywin32.win32.lib.win32timezone.RangeMap",
    "typeshed.typeshed.stubs.redis.redis.client.CaseInsensitiveDict",
    "typeshed.typeshed.stubs.requests.requests.structures.LookupDict",
    "werkzeug.datastructures.headers.Headers",
    "werkzeug.datastructures.structures.TypeConversionDict",
    "win32.lib.win32timezone.RangeMap"
  ],
  "dict.items": [
    "collections.OrderedDict",
    "django.contrib.sessions.backends.base.SessionBase",
    "django.utils.datastructures.MultiValueDict",
    "openpyxl.worksheet.table.TableList",
    "passlib.utils.compat._ordered_dict.OrderedDict",
    "pip._vendor.distlib.compat.OrderedDict",
    "typeshed.typeshed.stdlib.collections.OrderedDict",
    "typeshed.typeshed.stubs.boltons.boltons.dictutils.OrderedMultiDict",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.table.TableList",
    "typeshed.typeshed.stubs.passlib.passlib.utils.compat._ordered_dict.OrderedDict",
    "werkzeug.datastructures.headers.Headers",
    "werkzeug.datastructures.structures.MultiDict"
  ],
  "dict.keys": [
    "collections.OrderedDict",
    "django.contrib.sessions.backends.base.SessionBase",
    "passlib.utils.compat._ordered_dict.OrderedDict",
    "pip._vendor.distlib.compat.OrderedDict",
    "typeshed.typeshed.stdlib.collections.OrderedDict",
    "typeshed.typeshed.stubs.boltons.boltons.dictutils.ManyToMany",
    "typeshed.typeshed.stubs.boltons.boltons.dictutils.OrderedMultiDict",
    "typeshed.typeshed.stubs.passlib.passlib.utils.compat._ordered_dict.OrderedDict",
    "werkzeug.datastructures.headers.Headers",
    "werkzeug.datastructures.structures.CombinedMultiDict",
    "werkzeug.datastructures.structures.OrderedMultiDict"
  ],
  "dict.pop": [
    "django.http.request.QueryDict",
    "humanfriendly.case.CaseInsensitiveDict",
    "passlib.utils.compat._ordered_dict.OrderedDict",
    "pip._vendor.distlib.compat.OrderedDict",
    "sqlalchemy.ext.mutable.MutableDict",
    "typeshed.typeshed.stdlib.collections.OrderedDict",
    "typeshed.typeshed.stdlib.logging.config.ConvertingDict",
    "typeshed.typeshed.stubs.boltons.boltons.cacheutils.LRI",
    "typeshed.typeshed.stubs.boltons.boltons.dictutils.FrozenDict",
    "typeshed.typeshed.stubs.boltons.boltons.dictutils.OneToOne",
    "typeshed.typeshed.stubs.boltons.boltons.dictutils.OrderedMultiDict",
    "typeshed.typeshed.stubs.humanfriendly.humanfriendly.case.CaseInsensitiveDict",
    "typeshed.typeshed.stubs.passlib.passlib.utils.compat._ordered_dict.OrderedDict",
    "werkzeug.datastructures.headers.Headers",
    "werkzeug.datastructures.mixins.ImmutableDictMixin",
    "werkzeug.datastructures.mixins.UpdateDictMixin",
    "werkzeug.datastructures.structures.MultiDict"
  ],
  "dict.values": [
    "collections.OrderedDict",
    "django.contrib.sessions.backends.base.SessionBase",
    "django.utils.datastructures.MultiValueDict",
    "passlib.utils.compat._ordered_dict.OrderedDict",
    "pip._vendor.distlib.compat.OrderedDict",
    "sqlalchemy.util._collections.LRUCache",
    "typeshed.typeshed.stdlib.collections.OrderedDict",
    "typeshed.typeshed.stubs.WebOb.webob.cookies.Cookie",
    "typeshed.typeshed.stubs.boltons.boltons.dictutils.OrderedMultiDict",
    "typeshed.typeshed.stubs.passlib.passlib.utils.compat._ordered_dict.OrderedDict",
    "werkzeug.datastructures.headers.Headers",
    "werkzeug.datastructures.structures.MultiDict"
  ],
  "distutils.cmd.Command.__init__": [
    "babel.messages.frontend.Command"
  ],
  "distutils.cmd.Command.finalize_options": [
    "babel.messages.frontend.compile_catalog",
    "babel.messages.frontend.extract_messages",
    "babel.messages.frontend.init_catalog",
    "babel.messages.frontend.update_catalog",
    "distutils.command.bdist.bdist",
    "distutils.command.bdist_dumb.bdist_dumb",
    "distutils.command.bdist_rpm.bdist_rpm",
    "distutils.command.bdist_wininst.bdist_wininst",
    "distutils.command.build.build",
    "distutils.command.build_clib.build_clib",
    "distutils.command.build_ext.build_ext",
    "distutils.command.build_py.build_py",
    "distutils.command.build_scripts.build_scripts",
    "distutils.command.check.check",
    "distutils.command.clean.clean",
    "distutils.command.config.config",
    "distutils.command.install.install",
    "distutils.command.install_data.install_data",
    "distutils.command.install_egg_info.install_egg_info",
    "distutils.command.install_headers.install_headers",
    "distutils.command.install_lib.install_lib",
    "distutils.command.install_scripts.install_scripts",
    "distutils.command.sdist.sdist",
    "distutils.config.PyPIRCCommand",
    "typeshed.typeshed.stdlib.distutils.command.bdist_wininst.bdist_wininst",
    "typeshed.typeshed.stdlib.distutils.config.PyPIRCCommand"
  ],
  "distutils.cmd.Command.initialize_options": [
    "babel.messages.frontend.compile_catalog",
    "babel.messages.frontend.extract_messages",
    "babel.messages.frontend.init_catalog",
    "babel.messages.frontend.update_catalog",
    "distutils.command.bdist.bdist",
    "distutils.command.bdist_dumb.bdist_dumb",
    "distutils.command.bdist_rpm.bdist_rpm",
    "distutils.command.bdist_wininst.bdist_wininst",
    "distutils.command.build.build",
    "distutils.command.build_clib.build_clib",
    "distutils.command.build_ext.build_ext",
    "distutils.command.build_py.build_py",
    "distutils.command.build_scripts.build_scripts",
    "distutils.command.check.check",
    "distutils.command.clean.clean",
    "distutils.command.config.config",
    "distutils.command.install.install",
    "distutils.command.install_data.install_data",
    "distutils.command.install_egg_info.install_egg_info",
    "distutils.command.install_headers.install_headers",
    "distutils.command.install_lib.install_lib",
    "distutils.command.install_scripts.install_scripts",
    "distutils.command.sdist.sdist",
    "distutils.config.PyPIRCCommand",
    "typeshed.typeshed.stdlib.distutils.command.bdist_wininst.bdist_wininst",
    "typeshed.typeshed.stdlib.distutils.config.PyPIRCCommand"
  ],
  "distutils.cmd.Command.run": [
    "babel.messages.frontend.compile_catalog",
    "babel.messages.frontend.extract_messages",
    "babel.messages.frontend.init_catalog",
    "babel.messages.frontend.update_catalog",
    "distutils.command.bdist.bdist",
    "distutils.command.bdist_dumb.bdist_dumb",
    "distutils.command.bdist_rpm.bdist_rpm",
    "distutils.command.bdist_wininst.bdist_wininst",
    "distutils.command.build.build",
    "distutils.command.build_clib.build_clib",
    "distutils.command.build_ext.build_ext",
    "distutils.command.build_py.build_py",
    "distutils.command.build_scripts.build_scripts",
    "distutils.command.check.check",
    "distutils.command.clean.clean",
    "distutils.command.config.config",
    "distutils.command.install.install",
    "distutils.command.install_data.install_data",
    "distutils.command.install_egg_info.install_egg_info",
    "distutils.command.install_headers.install_headers",
    "distutils.command.install_lib.install_lib",
    "distutils.command.install_scripts.install_scripts",
    "distutils.command.sdist.sdist",
    "distutils.config.PyPIRCCommand",
    "typeshed.typeshed.stdlib.distutils.command.bdist_wininst.bdist_wininst",
    "typeshed.typeshed.stdlib.distutils.config.PyPIRCCommand"
  ],
  "distutils.cmd.Command.warn": [
    "distutils.command.check.check"
  ],
  "distutils.command.build_py.build_py.build_module": [
    "distutils.command.build_py.build_py_2to3"
  ],
  "distutils.command.build_py.build_py.run": [
    "distutils.command.build_py.build_py_2to3"
  ],
  "distutils.command.build_scripts.build_scripts.copy_scripts": [
    "distutils.command.build_scripts.build_scripts_2to3"
  ],
  "distutils.config.PyPIRCCommand.finalize_options": [
    "distutils.command.register.register",
    "distutils.command.upload.upload"
  ],
  "distutils.config.PyPIRCCommand.initialize_options": [
    "distutils.command.register.register",
    "distutils.command.upload.upload"
  ],
  "distutils.config.PyPIRCCommand.run": [
    "distutils.command.register.register",
    "distutils.command.upload.upload"
  ],
  "distutils.version.Version.__init__": [
    "distutils.version.LooseVersion",
    "distutils.version.StrictVersion"
  ],
  "distutils.version.Version.__str__": [
    "distutils.version.LooseVersion",
    "distutils.version.StrictVersion"
  ],
  "distutils.version.Version._cmp": [
    "distutils.version.LooseVersion",
    "distutils.version.StrictVersion"
  ],
  "distutils.version.Version.parse": [
    "distutils.version.LooseVersion",
    "distutils.version.StrictVersion"
  ],
  "django.apps.config.AppConfig.__init__": [
    "django.db.migrations.state.AppConfigStub"
  ],
  "django.apps.config.AppConfig.ready": [
    "django.contrib.postgres.apps.PostgresConfig"
  ],
  "django.apps.registry.Apps.__init__": [
    "django.db.migrations.state.StateApps"
  ],
  "django.apps.registry.Apps.register_model": [
    "django.db.migrations.state.StateApps"
  ],
  "django.contrib.admin.checks.BaseModelAdminChecks.check": [
    "django.contrib.admin.checks.InlineModelAdminChecks",
    "django.contrib.admin.checks.ModelAdminChecks"
  ],
  "django.contrib.admin.filters.ListFilter.__init__": [
    "django.contrib.admin.filters.FieldListFilter"
  ],
  "django.contrib.admin.filters.ListFilter.choices": [
    "django.contrib.admin.filters.AllValuesFieldListFilter",
    "django.contrib.admin.filters.BooleanFieldListFilter",
    "django.contrib.admin.filters.ChoicesFieldListFilter",
    "django.contrib.admin.filters.DateFieldListFilter",
    "django.contrib.admin.filters.EmptyFieldListFilter",
    "django.contrib.admin.filters.RelatedFieldListFilter",
    "django.contrib.admin.filters.SimpleListFilter"
  ],
  "django.contrib.admin.helpers.AdminForm.__init__": [
    "django.contrib.admin.helpers.InlineAdminForm"
  ],
  "django.contrib.admin.helpers.AdminForm.__iter__": [
    "django.contrib.admin.helpers.InlineAdminForm"
  ],
  "django.contrib.admin.helpers.Fieldset.__init__": [
    "django.contrib.admin.helpers.InlineFieldset"
  ],
  "django.contrib.admin.helpers.Fieldset.__iter__": [
    "django.contrib.admin.helpers.InlineFieldset"
  ],
  "django.contrib.admin.options.BaseModelAdmin.__init__": [
    "django.contrib.admin.options.InlineModelAdmin",
    "django.contrib.admin.options.ModelAdmin"
  ],
  "django.contrib.admin.options.BaseModelAdmin.get_queryset": [
    "django.contrib.admin.options.InlineModelAdmin"
  ],
  "django.contrib.admin.options.BaseModelAdmin.has_add_permission": [
    "django.contrib.admin.options.InlineModelAdmin"
  ],
  "django.contrib.admin.options.BaseModelAdmin.has_change_permission": [
    "django.contrib.admin.options.InlineModelAdmin"
  ],
  "django.contrib.admin.options.BaseModelAdmin.has_delete_permission": [
    "django.contrib.admin.options.InlineModelAdmin"
  ],
  "django.contrib.admin.options.BaseModelAdmin.has_view_permission": [
    "django.contrib.admin.options.InlineModelAdmin"
  ],
  "django.contrib.admin.options.ModelAdmin.media": [
    "django.contrib.gis.admin.options.GeoModelAdmin"
  ],
  "django.contrib.admin.widgets.ForeignKeyRawIdWidget.__init__": [
    "django.contrib.admin.widgets.ManyToManyRawIdWidget"
  ],
  "django.contrib.admin.widgets.ForeignKeyRawIdWidget.get_context": [
    "django.contrib.admin.widgets.ManyToManyRawIdWidget"
  ],
  "django.contrib.admin.widgets.ForeignKeyRawIdWidget.label_and_url_for_value": [
    "django.contrib.admin.widgets.ManyToManyRawIdWidget"
  ],
  "django.contrib.admin.widgets.ForeignKeyRawIdWidget.url_parameters": [
    "django.contrib.admin.widgets.ManyToManyRawIdWidget"
  ],
  "django.contrib.auth.backends.BaseBackend.authenticate": [
    "django.contrib.auth.backends.ModelBackend"
  ],
  "django.contrib.auth.hashers.BasePasswordHasher.decode": [
    "django.contrib.auth.hashers.BCryptSHA256PasswordHasher",
    "django.contrib.auth.hashers.MD5PasswordHasher",
    "django.contrib.auth.hashers.PBKDF2PasswordHasher",
    "django.contrib.auth.hashers.SHA1PasswordHasher",
    "django.contrib.auth.hashers.UnsaltedMD5PasswordHasher",
    "django.contrib.auth.hashers.UnsaltedSHA1PasswordHasher"
  ],
  "django.contrib.auth.hashers.BasePasswordHasher.encode": [
    "django.contrib.auth.hashers.PBKDF2PasswordHasher"
  ],
  "django.contrib.auth.views.RedirectURLMixin.get_redirect_url": [
    "django.contrib.auth.views.LoginView"
  ],
  "django.contrib.gis.db.backends.base.adapter.WKTAdapter.__init__": [
    "django.contrib.gis.db.backends.oracle.adapter.OracleSpatialAdapter"
  ],
  "django.contrib.gis.db.backends.base.features.BaseSpatialFeatures.supports_area_geodetic": [
    "django.contrib.gis.db.backends.spatialite.features.DatabaseFeatures"
  ],
  "django.contrib.gis.db.backends.base.features.BaseSpatialFeatures.supports_geometry_field_unique_index": [
    "django.contrib.gis.db.backends.mysql.features.DatabaseFeatures"
  ],
  "django.contrib.gis.db.backends.base.operations.BaseSpatialOperations.distance_expr_for_lookup": [
    "django.contrib.gis.db.backends.postgis.operations.PostGISOperations"
  ],
  "django.contrib.gis.db.backends.base.operations.BaseSpatialOperations.from_text": [
    "django.contrib.gis.db.backends.mysql.operations.MySQLOperations"
  ],
  "django.contrib.gis.db.backends.base.operations.BaseSpatialOperations.function_names": [
    "django.contrib.gis.db.backends.postgis.operations.PostGISOperations"
  ],
  "django.contrib.gis.db.backends.base.operations.BaseSpatialOperations.geo_db_type": [
    "django.contrib.gis.db.backends.mysql.operations.MySQLOperations",
    "django.contrib.gis.db.backends.oracle.operations.OracleOperations",
    "django.contrib.gis.db.backends.postgis.operations.PostGISOperations",
    "django.contrib.gis.db.backends.spatialite.operations.SpatiaLiteOperations"
  ],
  "django.contrib.gis.db.backends.base.operations.BaseSpatialOperations.geo_quote_name": [
    "django.contrib.gis.db.backends.oracle.operations.OracleOperations"
  ],
  "django.contrib.gis.db.backends.base.operations.BaseSpatialOperations.geometry_columns": [
    "django.contrib.gis.db.backends.oracle.operations.OracleOperations",
    "django.contrib.gis.db.backends.postgis.operations.PostGISOperations",
    "django.contrib.gis.db.backends.spatialite.operations.SpatiaLiteOperations"
  ],
  "django.contrib.gis.db.backends.base.operations.BaseSpatialOperations.get_area_att_for_field": [
    "django.contrib.gis.db.backends.oracle.operations.OracleOperations",
    "django.contrib.gis.db.backends.postgis.operations.PostGISOperations"
  ],
  "django.contrib.gis.db.backends.base.operations.BaseSpatialOperations.get_distance": [
    "django.contrib.gis.db.backends.mysql.operations.MySQLOperations",
    "django.contrib.gis.db.backends.oracle.operations.OracleOperations",
    "django.contrib.gis.db.backends.postgis.operations.PostGISOperations",
    "django.contrib.gis.db.backends.spatialite.operations.SpatiaLiteOperations"
  ],
  "django.contrib.gis.db.backends.base.operations.BaseSpatialOperations.get_geom_placeholder": [
    "django.contrib.gis.db.backends.oracle.operations.OracleOperations",
    "django.contrib.gis.db.backends.postgis.operations.PostGISOperations"
  ],
  "django.contrib.gis.db.backends.base.operations.BaseSpatialOperations.get_geometry_converter": [
    "django.contrib.gis.db.backends.mysql.operations.MySQLOperations",
    "django.contrib.gis.db.backends.oracle.operations.OracleOperations",
    "django.contrib.gis.db.backends.postgis.operations.PostGISOperations",
    "django.contrib.gis.db.backends.spatialite.operations.SpatiaLiteOperations"
  ],
  "django.contrib.gis.db.backends.base.operations.BaseSpatialOperations.mysql": [
    "django.contrib.gis.db.backends.mysql.operations.MySQLOperations"
  ],
  "django.contrib.gis.db.backends.base.operations.BaseSpatialOperations.select": [
    "django.contrib.gis.db.backends.mysql.operations.MySQLOperations"
  ],
  "django.contrib.gis.db.backends.base.operations.BaseSpatialOperations.spatial_aggregate_name": [
    "django.contrib.gis.db.backends.oracle.operations.OracleOperations",
    "django.contrib.gis.db.backends.postgis.operations.PostGISOperations",
    "django.contrib.gis.db.backends.spatialite.operations.SpatiaLiteOperations"
  ],
  "django.contrib.gis.db.backends.base.operations.BaseSpatialOperations.spatial_ref_sys": [
    "django.contrib.gis.db.backends.oracle.operations.OracleOperations",
    "django.contrib.gis.db.backends.postgis.operations.PostGISOperations",
    "django.contrib.gis.db.backends.spatialite.operations.SpatiaLiteOperations"
  ],
  "django.contrib.gis.db.backends.base.operations.BaseSpatialOperations.spatial_version": [
    "django.contrib.gis.db.backends.postgis.operations.PostGISOperations",
    "django.contrib.gis.db.backends.spatialite.operations.SpatiaLiteOperations"
  ],
  "django.contrib.gis.db.backends.base.operations.BaseSpatialOperations.unsupported_functions": [
    "django.contrib.gis.db.backends.mysql.operations.MySQLOperations",
    "django.contrib.gis.db.backends.spatialite.operations.SpatiaLiteOperations"
  ],
  "django.contrib.gis.db.backends.utils.SpatialOperator.__init__": [
    "django.contrib.gis.db.backends.postgis.operations.PostGISOperator"
  ],
  "django.contrib.gis.db.models.fields.BaseSpatialField.__init__": [
    "django.contrib.gis.db.models.fields.GeometryField"
  ],
  "django.contrib.gis.db.models.fields.BaseSpatialField.db_type": [
    "django.contrib.gis.db.models.fields.RasterField"
  ],
  "django.contrib.gis.db.models.functions.OracleToleranceMixin.as_oracle": [
    "django.contrib.gis.db.models.functions.BoundingCircle",
    "django.contrib.gis.db.models.functions.IsValid"
  ],
  "django.contrib.gis.db.models.functions.SQLiteDecimalToFloatMixin.as_sqlite": [
    "django.contrib.gis.db.models.functions.Translate"
  ],
  "django.contrib.gis.forms.widgets.BaseGeometryWidget.deserialize": [
    "django.contrib.gis.forms.widgets.OpenLayersWidget"
  ],
  "django.contrib.gis.forms.widgets.BaseGeometryWidget.serialize": [
    "django.contrib.gis.forms.widgets.OpenLayersWidget"
  ],
  "django.contrib.gis.gdal.field.Field.type": [
    "django.contrib.gis.gdal.field.OFTInteger"
  ],
  "django.contrib.gis.gdal.field.Field.value": [
    "django.contrib.gis.gdal.field.OFTDate",
    "django.contrib.gis.gdal.field.OFTDateTime",
    "django.contrib.gis.gdal.field.OFTInteger",
    "django.contrib.gis.gdal.field.OFTReal",
    "django.contrib.gis.gdal.field.OFTTime"
  ],
  "django.contrib.gis.gdal.geometries.OGRGeometry.point_count": [
    "django.contrib.gis.gdal.geometries.GeometryCollection",
    "django.contrib.gis.gdal.geometries.Polygon"
  ],
  "django.contrib.gis.geos.geometry.GEOSGeometry.__init__": [
    "django.contrib.gis.geos.collections.GeometryCollection",
    "django.contrib.gis.geos.point.Point",
    "django.contrib.gis.geos.polygon.Polygon"
  ],
  "django.contrib.gis.geos.libgeos.GEOSFuncFactory.__init__": [
    "django.contrib.gis.geos.prototypes.coordseq.CsOperation"
  ],
  "django.contrib.gis.geos.libgeos.GEOSFuncFactory.errcheck": [
    "django.contrib.gis.geos.prototypes.coordseq.CsOutput"
  ],
  "django.contrib.gis.geos.prototypes.io.IOBase.__init__": [
    "django.contrib.gis.geos.prototypes.io.WKBWriter",
    "django.contrib.gis.geos.prototypes.io.WKTWriter"
  ],
  "django.contrib.gis.geos.prototypes.io._WKBReader.read": [
    "django.contrib.gis.geos.io.WKBReader"
  ],
  "django.contrib.gis.geos.prototypes.io._WKTReader.read": [
    "django.contrib.gis.geos.io.WKTReader"
  ],
  "django.contrib.gis.ptr.CPointerBase.__del__": [
    "django.contrib.gis.gdal.raster.source.GDALRaster"
  ],
  "django.contrib.messages.storage.base.BaseStorage.__init__": [
    "django.contrib.messages.storage.fallback.FallbackStorage",
    "django.contrib.messages.storage.session.SessionStorage"
  ],
  "django.contrib.postgres.forms.ranges.RangeWidget.__init__": [
    "django.contrib.postgres.forms.ranges.HiddenRangeWidget"
  ],
  "django.contrib.postgres.operations.CreateExtension.__init__": [
    "django.contrib.postgres.operations.BloomExtension",
    "django.contrib.postgres.operations.BtreeGinExtension",
    "django.contrib.postgres.operations.BtreeGistExtension",
    "django.contrib.postgres.operations.CITextExtension",
    "django.contrib.postgres.operations.CryptoExtension",
    "django.contrib.postgres.operations.HStoreExtension",
    "django.contrib.postgres.operations.TrigramExtension",
    "django.contrib.postgres.operations.UnaccentExtension"
  ],
  "django.contrib.sessions.backends.base.SessionBase.__init__": [
    "django.contrib.sessions.backends.cache.SessionStore",
    "django.contrib.sessions.backends.db.SessionStore",
    "django.contrib.sessions.backends.file.SessionStore"
  ],
  "django.contrib.sessions.backends.db.SessionStore.__init__": [
    "django.contrib.sessions.backends.cached_db.SessionStore"
  ],
  "django.contrib.sitemaps.Sitemap.get_latest_lastmod": [
    "django.contrib.sitemaps.GenericSitemap"
  ],
  "django.contrib.sitemaps.Sitemap.items": [
    "django.contrib.gis.sitemaps.kml.KMLSitemap",
    "django.contrib.sitemaps.GenericSitemap"
  ],
  "django.contrib.sitemaps.Sitemap.location": [
    "django.contrib.gis.sitemaps.kml.KMLSitemap"
  ],
  "django.contrib.staticfiles.finders.BaseFinder.find": [
    "django.contrib.staticfiles.finders.AppDirectoriesFinder",
    "django.contrib.staticfiles.finders.BaseStorageFinder",
    "django.contrib.staticfiles.finders.FileSystemFinder"
  ],
  "django.contrib.staticfiles.finders.BaseFinder.list": [
    "django.contrib.staticfiles.finders.AppDirectoriesFinder",
    "django.contrib.staticfiles.finders.BaseStorageFinder",
    "django.contrib.staticfiles.finders.FileSystemFinder"
  ],
  "django.contrib.staticfiles.finders.BaseStorageFinder.__init__": [
    "django.contrib.staticfiles.finders.DefaultStorageFinder"
  ],
  "django.contrib.staticfiles.storage.HashedFilesMixin.__init__": [
    "django.contrib.staticfiles.storage.ManifestFilesMixin"
  ],
  "django.contrib.staticfiles.storage.HashedFilesMixin.post_process": [
    "django.contrib.staticfiles.storage.ManifestFilesMixin"
  ],
  "django.contrib.staticfiles.storage.HashedFilesMixin.stored_name": [
    "django.contrib.staticfiles.storage.ManifestFilesMixin"
  ],
  "django.core.cache.backends.base.BaseCache.__init__": [
    "django.core.cache.backends.db.BaseDatabaseCache",
    "django.core.cache.backends.dummy.DummyCache",
    "django.core.cache.backends.filebased.FileBasedCache",
    "django.core.cache.backends.locmem.LocMemCache",
    "django.core.cache.backends.memcached.BaseMemcachedCache"
  ],
  "django.core.cache.backends.memcached.BaseMemcachedCache.__init__": [
    "django.core.cache.backends.memcached.MemcachedCache",
    "django.core.cache.backends.memcached.PyLibMCCache",
    "django.core.cache.backends.memcached.PyMemcacheCache"
  ],
  "django.core.cache.backends.memcached.BaseMemcachedCache.client_servers": [
    "django.core.cache.backends.memcached.PyLibMCCache"
  ],
  "django.core.checks.messages.CheckMessage.__init__": [
    "django.core.checks.messages.Critical",
    "django.core.checks.messages.Debug",
    "django.core.checks.messages.Error",
    "django.core.checks.messages.Info",
    "django.core.checks.messages.Warning"
  ],
  "django.core.files.base.File.__bool__": [
    "django.core.files.base.ContentFile"
  ],
  "django.core.files.base.File.__init__": [
    "django.core.files.base.ContentFile",
    "django.core.files.uploadedfile.UploadedFile",
    "django.db.models.fields.files.FieldFile"
  ],
  "django.core.files.base.File.close": [
    "django.core.files.base.ContentFile"
  ],
  "django.core.files.base.File.open": [
    "django.core.files.base.ContentFile"
  ],
  "django.core.files.base.File.size": [
    "django.db.models.fields.files.FieldFile"
  ],
  "django.core.files.storage.base.Storage.path": [
    "django.contrib.staticfiles.storage.StaticFilesStorage"
  ],
  "django.core.files.storage.filesystem.FileSystemStorage.__init__": [
    "django.contrib.staticfiles.storage.StaticFilesStorage"
  ],
  "django.core.files.uploadedfile.InMemoryUploadedFile.__init__": [
    "django.core.files.uploadedfile.SimpleUploadedFile"
  ],
  "django.core.files.uploadedfile.UploadedFile.__init__": [
    "django.core.files.uploadedfile.InMemoryUploadedFile",
    "django.core.files.uploadedfile.TemporaryUploadedFile"
  ],
  "django.core.files.uploadhandler.FileUploadHandler.file_complete": [
    "django.core.files.uploadhandler.MemoryFileUploadHandler",
    "django.core.files.uploadhandler.TemporaryFileUploadHandler"
  ],
  "django.core.files.uploadhandler.FileUploadHandler.handle_raw_input": [
    "django.core.files.uploadhandler.MemoryFileUploadHandler"
  ],
  "django.core.files.uploadhandler.FileUploadHandler.new_file": [
    "django.core.files.uploadhandler.MemoryFileUploadHandler",
    "django.core.files.uploadhandler.TemporaryFileUploadHandler"
  ],
  "django.core.files.uploadhandler.FileUploadHandler.receive_data_chunk": [
    "django.core.files.uploadhandler.MemoryFileUploadHandler",
    "django.core.files.uploadhandler.TemporaryFileUploadHandler"
  ],
  "django.core.files.uploadhandler.FileUploadHandler.upload_interrupted": [
    "django.core.files.uploadhandler.TemporaryFileUploadHandler"
  ],
  "django.core.files.utils.FileProxyMixin.__iter__": [
    "django.core.files.base.File"
  ],
  "django.core.files.utils.FileProxyMixin.closed": [
    "django.db.models.fields.files.FieldFile"
  ],
  "django.core.files.utils.FileProxyMixin.write": [
    "django.core.files.base.ContentFile"
  ],
  "django.core.mail.message.EmailMessage.__init__": [
    "django.core.mail.message.EmailMultiAlternatives"
  ],
  "django.core.management.base.BaseCommand.__init__": [
    "django.contrib.staticfiles.management.commands.collectstatic.Command"
  ],
  "django.core.management.base.BaseCommand.add_arguments": [
    "django.core.management.base.AppCommand",
    "django.core.management.base.LabelCommand",
    "django.core.management.commands.test.Command",
    "django.core.management.templates.TemplateCommand"
  ],
  "django.core.management.base.BaseCommand.execute": [
    "django.core.management.commands.sqlmigrate.Command"
  ],
  "django.core.management.base.BaseCommand.handle": [
    "django.contrib.contenttypes.management.commands.remove_stale_contenttypes.Command",
    "django.contrib.sessions.management.commands.clearsessions.Command",
    "django.core.management.base.AppCommand",
    "django.core.management.base.LabelCommand",
    "django.core.management.commands.check.Command",
    "django.core.management.commands.compilemessages.Command",
    "django.core.management.commands.createcachetable.Command",
    "django.core.management.commands.dbshell.Command",
    "django.core.management.commands.diffsettings.Command",
    "django.core.management.commands.flush.Command",
    "django.core.management.commands.inspectdb.Command",
    "django.core.management.commands.shell.Command",
    "django.core.management.commands.sqlflush.Command",
    "django.core.management.commands.squashmigrations.Command",
    "django.core.management.templates.TemplateCommand"
  ],
  "django.core.management.base.BaseCommand.run_from_argv": [
    "django.core.management.commands.test.Command"
  ],
  "django.core.management.templates.TemplateCommand.handle": [
    "django.core.management.commands.startapp.Command",
    "django.core.management.commands.startproject.Command"
  ],
  "django.core.serializers.base.Deserializer.__init__": [
    "django.core.serializers.xml_serializer.Deserializer"
  ],
  "django.core.serializers.base.Deserializer.__next__": [
    "django.core.serializers.xml_serializer.Deserializer"
  ],
  "django.core.serializers.base.Serializer.end_object": [
    "django.core.serializers.xml_serializer.Serializer"
  ],
  "django.core.serializers.base.Serializer.end_serialization": [
    "django.contrib.gis.serializers.geojson.Serializer",
    "django.core.serializers.pyyaml.Serializer",
    "django.core.serializers.xml_serializer.Serializer"
  ],
  "django.core.serializers.base.Serializer.getvalue": [
    "django.core.serializers.pyyaml.Serializer"
  ],
  "django.core.serializers.base.Serializer.handle_field": [
    "django.contrib.gis.serializers.geojson.Serializer",
    "django.core.serializers.pyyaml.Serializer",
    "django.core.serializers.xml_serializer.Serializer"
  ],
  "django.core.serializers.base.Serializer.handle_fk_field": [
    "django.core.serializers.xml_serializer.Serializer"
  ],
  "django.core.serializers.base.Serializer.handle_m2m_field": [
    "django.core.serializers.xml_serializer.Serializer"
  ],
  "django.core.serializers.base.Serializer.start_object": [
    "django.contrib.gis.serializers.geojson.Serializer",
    "django.core.serializers.xml_serializer.Serializer"
  ],
  "django.core.serializers.base.Serializer.start_serialization": [
    "django.contrib.gis.serializers.geojson.Serializer",
    "django.core.serializers.xml_serializer.Serializer"
  ],
  "django.core.serializers.python.Serializer.get_dump_object": [
    "django.contrib.gis.serializers.geojson.Serializer"
  ],
  "django.core.signing.Signer.sign": [
    "django.core.signing.TimestampSigner"
  ],
  "django.core.signing.Signer.unsign": [
    "django.core.signing.TimestampSigner"
  ],
  "django.core.validators.BaseValidator.clean": [
    "django.core.validators.MaxLengthValidator",
    "django.core.validators.MinLengthValidator"
  ],
  "django.core.validators.RegexValidator.__call__": [
    "django.core.validators.URLValidator"
  ],
  "django.core.validators.RegexValidator.__init__": [
    "django.core.validators.URLValidator"
  ],
  "django.db.backends.base.base.BaseDatabaseWrapper.__init__": [
    "django.db.backends.oracle.base.DatabaseWrapper"
  ],
  "django.db.backends.base.base.BaseDatabaseWrapper.check_constraints": [
    "django.db.backends.mysql.base.DatabaseWrapper",
    "django.db.backends.oracle.base.DatabaseWrapper"
  ],
  "django.db.backends.base.base.BaseDatabaseWrapper.create_cursor": [
    "django.db.backends.mysql.base.DatabaseWrapper",
    "django.db.backends.oracle.base.DatabaseWrapper"
  ],
  "django.db.backends.base.base.BaseDatabaseWrapper.data_type_check_constraints": [
    "django.db.backends.mysql.base.DatabaseWrapper"
  ],
  "django.db.backends.base.base.BaseDatabaseWrapper.disable_constraint_checking": [
    "django.db.backends.mysql.base.DatabaseWrapper"
  ],
  "django.db.backends.base.base.BaseDatabaseWrapper.display_name": [
    "django.db.backends.mysql.base.DatabaseWrapper"
  ],
  "django.db.backends.base.base.BaseDatabaseWrapper.enable_constraint_checking": [
    "django.db.backends.mysql.base.DatabaseWrapper"
  ],
  "django.db.backends.base.base.BaseDatabaseWrapper.get_connection_params": [
    "django.db.backends.mysql.base.DatabaseWrapper",
    "django.db.backends.oracle.base.DatabaseWrapper"
  ],
  "django.db.backends.base.base.BaseDatabaseWrapper.get_new_connection": [
    "django.contrib.gis.db.backends.spatialite.base.DatabaseWrapper",
    "django.db.backends.mysql.base.DatabaseWrapper",
    "django.db.backends.oracle.base.DatabaseWrapper"
  ],
  "django.db.backends.base.base.BaseDatabaseWrapper.init_connection_state": [
    "django.db.backends.mysql.base.DatabaseWrapper",
    "django.db.backends.oracle.base.DatabaseWrapper"
  ],
  "django.db.backends.base.base.BaseDatabaseWrapper.is_usable": [
    "django.db.backends.mysql.base.DatabaseWrapper",
    "django.db.backends.oracle.base.DatabaseWrapper"
  ],
  "django.db.backends.base.base.BaseDatabaseWrapper.prepare_database": [
    "django.contrib.gis.db.backends.postgis.base.DatabaseWrapper",
    "django.contrib.gis.db.backends.spatialite.base.DatabaseWrapper"
  ],
  "django.db.backends.base.client.BaseDatabaseClient.runshell": [
    "django.db.backends.postgresql.client.DatabaseClient"
  ],
  "django.db.backends.base.client.BaseDatabaseClient.settings_to_cmd_args_env": [
    "django.db.backends.mysql.client.DatabaseClient",
    "django.db.backends.oracle.client.DatabaseClient",
    "django.db.backends.postgresql.client.DatabaseClient",
    "django.db.backends.sqlite3.client.DatabaseClient"
  ],
  "django.db.backends.base.creation.BaseDatabaseCreation.set_as_test_mirror": [
    "django.db.backends.oracle.creation.DatabaseCreation"
  ],
  "django.db.backends.base.creation.BaseDatabaseCreation.sql_table_creation_suffix": [
    "django.db.backends.mysql.creation.DatabaseCreation"
  ],
  "django.db.backends.base.creation.BaseDatabaseCreation.test_db_signature": [
    "django.db.backends.oracle.creation.DatabaseCreation"
  ],
  "django.db.backends.base.features.BaseDatabaseFeatures.allows_auto_pk_0": [
    "django.db.backends.mysql.features.DatabaseFeatures"
  ],
  "django.db.backends.base.features.BaseDatabaseFeatures.can_introspect_check_constraints": [
    "django.db.backends.mysql.features.DatabaseFeatures"
  ],
  "django.db.backends.base.features.BaseDatabaseFeatures.can_introspect_foreign_keys": [
    "django.db.backends.mysql.features.DatabaseFeatures"
  ],
  "django.db.backends.base.features.BaseDatabaseFeatures.can_introspect_json_field": [
    "django.db.backends.mysql.features.DatabaseFeatures"
  ],
  "django.db.backends.base.features.BaseDatabaseFeatures.can_return_columns_from_insert": [
    "django.db.backends.mysql.features.DatabaseFeatures"
  ],
  "django.db.backends.base.features.BaseDatabaseFeatures.django_test_skips": [
    "django.contrib.gis.db.backends.mysql.features.DatabaseFeatures"
  ],
  "django.db.backends.base.features.BaseDatabaseFeatures.has_select_for_update_nowait": [
    "django.db.backends.mysql.features.DatabaseFeatures"
  ],
  "django.db.backends.base.features.BaseDatabaseFeatures.has_select_for_update_of": [
    "django.db.backends.mysql.features.DatabaseFeatures"
  ],
  "django.db.backends.base.features.BaseDatabaseFeatures.has_select_for_update_skip_locked": [
    "django.db.backends.mysql.features.DatabaseFeatures"
  ],
  "django.db.backends.base.features.BaseDatabaseFeatures.has_zoneinfo_database": [
    "django.db.backends.mysql.features.DatabaseFeatures"
  ],
  "django.db.backends.base.features.BaseDatabaseFeatures.ignores_table_name_case": [
    "django.db.backends.mysql.features.DatabaseFeatures"
  ],
  "django.db.backends.base.features.BaseDatabaseFeatures.introspected_field_types": [
    "django.db.backends.mysql.features.DatabaseFeatures"
  ],
  "django.db.backends.base.features.BaseDatabaseFeatures.supported_explain_formats": [
    "django.db.backends.mysql.features.DatabaseFeatures"
  ],
  "django.db.backends.base.features.BaseDatabaseFeatures.supports_column_check_constraints": [
    "django.db.backends.mysql.features.DatabaseFeatures"
  ],
  "django.db.backends.base.features.BaseDatabaseFeatures.supports_default_in_lead_lag": [
    "django.db.backends.mysql.features.DatabaseFeatures"
  ],
  "django.db.backends.base.features.BaseDatabaseFeatures.supports_expression_indexes": [
    "django.db.backends.mysql.features.DatabaseFeatures"
  ],
  "django.db.backends.base.features.BaseDatabaseFeatures.supports_index_column_ordering": [
    "django.db.backends.mysql.features.DatabaseFeatures"
  ],
  "django.db.backends.base.features.BaseDatabaseFeatures.supports_json_field": [
    "django.db.backends.mysql.features.DatabaseFeatures"
  ],
  "django.db.backends.base.features.BaseDatabaseFeatures.supports_over_clause": [
    "django.db.backends.mysql.features.DatabaseFeatures"
  ],
  "django.db.backends.base.features.BaseDatabaseFeatures.supports_transactions": [
    "django.db.backends.mysql.features.DatabaseFeatures"
  ],
  "django.db.backends.base.features.BaseDatabaseFeatures.update_can_self_select": [
    "django.db.backends.mysql.features.DatabaseFeatures"
  ],
  "django.db.backends.base.introspection.BaseDatabaseIntrospection.data_types_reverse": [
    "django.db.backends.oracle.introspection.DatabaseIntrospection"
  ],
  "django.db.backends.base.introspection.BaseDatabaseIntrospection.get_constraints": [
    "django.contrib.gis.db.backends.spatialite.introspection.SpatiaLiteIntrospection"
  ],
  "django.db.backends.base.introspection.BaseDatabaseIntrospection.get_field_type": [
    "django.contrib.gis.db.backends.postgis.introspection.PostGISIntrospection"
  ],
  "django.db.backends.base.operations.BaseDatabaseOperations.adapt_datefield_value": [
    "django.db.backends.oracle.operations.DatabaseOperations"
  ],
  "django.db.backends.base.operations.BaseDatabaseOperations.adapt_datetimefield_value": [
    "django.db.backends.mysql.operations.DatabaseOperations",
    "django.db.backends.oracle.operations.DatabaseOperations"
  ],
  "django.db.backends.base.operations.BaseDatabaseOperations.adapt_timefield_value": [
    "django.db.backends.mysql.operations.DatabaseOperations",
    "django.db.backends.oracle.operations.DatabaseOperations"
  ],
  "django.db.backends.base.operations.BaseDatabaseOperations.binary_placeholder_sql": [
    "django.db.backends.mysql.operations.DatabaseOperations"
  ],
  "django.db.backends.base.operations.BaseDatabaseOperations.bulk_batch_size": [
    "django.db.backends.oracle.operations.DatabaseOperations"
  ],
  "django.db.backends.base.operations.BaseDatabaseOperations.cache_key_culling_sql": [
    "django.db.backends.oracle.operations.DatabaseOperations"
  ],
  "django.db.backends.base.operations.BaseDatabaseOperations.combine_expression": [
    "django.db.backends.mysql.operations.DatabaseOperations",
    "django.db.backends.oracle.operations.DatabaseOperations"
  ],
  "django.db.backends.base.operations.BaseDatabaseOperations.conditional_expression_supported_in_where_clause": [
    "django.db.backends.oracle.operations.DatabaseOperations"
  ],
  "django.db.backends.base.operations.BaseDatabaseOperations.date_extract_sql": [
    "django.db.backends.mysql.operations.DatabaseOperations",
    "django.db.backends.oracle.operations.DatabaseOperations"
  ],
  "django.db.backends.base.operations.BaseDatabaseOperations.date_trunc_sql": [
    "django.db.backends.mysql.operations.DatabaseOperations",
    "django.db.backends.oracle.operations.DatabaseOperations"
  ],
  "django.db.backends.base.operations.BaseDatabaseOperations.datetime_cast_date_sql": [
    "django.db.backends.mysql.operations.DatabaseOperations",
    "django.db.backends.oracle.operations.DatabaseOperations"
  ],
  "django.db.backends.base.operations.BaseDatabaseOperations.datetime_cast_time_sql": [
    "django.db.backends.mysql.operations.DatabaseOperations",
    "django.db.backends.oracle.operations.DatabaseOperations"
  ],
  "django.db.backends.base.operations.BaseDatabaseOperations.datetime_extract_sql": [
    "django.db.backends.mysql.operations.DatabaseOperations",
    "django.db.backends.oracle.operations.DatabaseOperations"
  ],
  "django.db.backends.base.operations.BaseDatabaseOperations.datetime_trunc_sql": [
    "django.db.backends.mysql.operations.DatabaseOperations",
    "django.db.backends.oracle.operations.DatabaseOperations"
  ],
  "django.db.backends.base.operations.BaseDatabaseOperations.deferrable_sql": [
    "django.db.backends.oracle.operations.DatabaseOperations"
  ],
  "django.db.backends.base.operations.BaseDatabaseOperations.explain_query_prefix": [
    "django.db.backends.mysql.operations.DatabaseOperations"
  ],
  "django.db.backends.base.operations.BaseDatabaseOperations.fetch_returned_insert_columns": [
    "django.db.backends.oracle.operations.DatabaseOperations"
  ],
  "django.db.backends.base.operations.BaseDatabaseOperations.field_cast_sql": [
    "django.db.backends.oracle.operations.DatabaseOperations"
  ],
  "django.db.backends.base.operations.BaseDatabaseOperations.force_no_ordering": [
    "django.db.backends.mysql.operations.DatabaseOperations"
  ],
  "django.db.backends.base.operations.BaseDatabaseOperations.format_for_duration_arithmetic": [
    "django.db.backends.mysql.operations.DatabaseOperations"
  ],
  "django.db.backends.base.operations.BaseDatabaseOperations.get_db_converters": [
    "django.db.backends.mysql.operations.DatabaseOperations",
    "django.db.backends.oracle.operations.DatabaseOperations"
  ],
  "django.db.backends.base.operations.BaseDatabaseOperations.insert_statement": [
    "django.db.backends.mysql.operations.DatabaseOperations"
  ],
  "django.db.backends.base.operations.BaseDatabaseOperations.last_executed_query": [
    "django.db.backends.mysql.operations.DatabaseOperations",
    "django.db.backends.oracle.operations.DatabaseOperations"
  ],
  "django.db.backends.base.operations.BaseDatabaseOperations.last_insert_id": [
    "django.db.backends.oracle.operations.DatabaseOperations"
  ],
  "django.db.backends.base.operations.BaseDatabaseOperations.limit_offset_sql": [
    "django.db.backends.oracle.operations.DatabaseOperations"
  ],
  "django.db.backends.base.operations.BaseDatabaseOperations.lookup_cast": [
    "django.db.backends.mysql.operations.DatabaseOperations",
    "django.db.backends.oracle.operations.DatabaseOperations"
  ],
  "django.db.backends.base.operations.BaseDatabaseOperations.max_in_list_size": [
    "django.db.backends.oracle.operations.DatabaseOperations"
  ],
  "django.db.backends.base.operations.BaseDatabaseOperations.max_name_length": [
    "django.db.backends.mysql.operations.DatabaseOperations",
    "django.db.backends.oracle.operations.DatabaseOperations"
  ],
  "django.db.backends.base.operations.BaseDatabaseOperations.modify_insert_params": [
    "django.contrib.gis.db.backends.oracle.operations.OracleOperations"
  ],
  "django.db.backends.base.operations.BaseDatabaseOperations.no_limit_value": [
    "django.db.backends.mysql.operations.DatabaseOperations",
    "django.db.backends.oracle.operations.DatabaseOperations"
  ],
  "django.db.backends.base.operations.BaseDatabaseOperations.pk_default_value": [
    "django.db.backends.oracle.operations.DatabaseOperations"
  ],
  "django.db.backends.base.operations.BaseDatabaseOperations.prep_for_iexact_query": [
    "django.db.backends.oracle.operations.DatabaseOperations"
  ],
  "django.db.backends.base.operations.BaseDatabaseOperations.process_clob": [
    "django.db.backends.oracle.operations.DatabaseOperations"
  ],
  "django.db.backends.base.operations.BaseDatabaseOperations.quote_name": [
    "django.db.backends.mysql.operations.DatabaseOperations",
    "django.db.backends.oracle.operations.DatabaseOperations"
  ],
  "django.db.backends.base.operations.BaseDatabaseOperations.regex_lookup": [
    "django.db.backends.mysql.operations.DatabaseOperations",
    "django.db.backends.oracle.operations.DatabaseOperations"
  ],
  "django.db.backends.base.operations.BaseDatabaseOperations.return_insert_columns": [
    "django.db.backends.mysql.operations.DatabaseOperations",
    "django.db.backends.oracle.operations.DatabaseOperations"
  ],
  "django.db.backends.base.operations.BaseDatabaseOperations.sequence_reset_by_name_sql": [
    "django.db.backends.mysql.operations.DatabaseOperations",
    "django.db.backends.oracle.operations.DatabaseOperations"
  ],
  "django.db.backends.base.operations.BaseDatabaseOperations.sequence_reset_sql": [
    "django.db.backends.oracle.operations.DatabaseOperations"
  ],
  "django.db.backends.base.operations.BaseDatabaseOperations.start_transaction_sql": [
    "django.db.backends.oracle.operations.DatabaseOperations"
  ],
  "django.db.backends.base.operations.BaseDatabaseOperations.subtract_temporals": [
    "django.db.backends.mysql.operations.DatabaseOperations",
    "django.db.backends.oracle.operations.DatabaseOperations"
  ],
  "django.db.backends.base.operations.BaseDatabaseOperations.tablespace_sql": [
    "django.db.backends.oracle.operations.DatabaseOperations"
  ],
  "django.db.backends.base.operations.BaseDatabaseOperations.time_trunc_sql": [
    "django.db.backends.mysql.operations.DatabaseOperations",
    "django.db.backends.oracle.operations.DatabaseOperations"
  ],
  "django.db.backends.base.operations.BaseDatabaseOperations.validate_autopk_value": [
    "django.db.backends.mysql.operations.DatabaseOperations"
  ],
  "django.db.backends.base.schema.BaseDatabaseSchemaEditor.add_field": [
    "django.contrib.gis.db.backends.oracle.schema.OracleGISSchemaEditor",
    "django.contrib.gis.db.backends.spatialite.schema.SpatialiteSchemaEditor",
    "django.db.backends.mysql.schema.DatabaseSchemaEditor"
  ],
  "django.db.backends.base.schema.BaseDatabaseSchemaEditor.add_index": [
    "django.db.backends.postgresql.schema.DatabaseSchemaEditor"
  ],
  "django.db.backends.base.schema.BaseDatabaseSchemaEditor.alter_db_table": [
    "django.contrib.gis.db.backends.spatialite.schema.SpatialiteSchemaEditor"
  ],
  "django.db.backends.base.schema.BaseDatabaseSchemaEditor.alter_field": [
    "django.db.backends.oracle.schema.DatabaseSchemaEditor"
  ],
  "django.db.backends.base.schema.BaseDatabaseSchemaEditor.column_sql": [
    "django.contrib.gis.db.backends.mysql.schema.MySQLGISSchemaEditor",
    "django.contrib.gis.db.backends.oracle.schema.OracleGISSchemaEditor",
    "django.contrib.gis.db.backends.spatialite.schema.SpatialiteSchemaEditor"
  ],
  "django.db.backends.base.schema.BaseDatabaseSchemaEditor.create_model": [
    "django.contrib.gis.db.backends.mysql.schema.MySQLGISSchemaEditor",
    "django.contrib.gis.db.backends.oracle.schema.OracleGISSchemaEditor",
    "django.contrib.gis.db.backends.spatialite.schema.SpatialiteSchemaEditor"
  ],
  "django.db.backends.base.schema.BaseDatabaseSchemaEditor.delete_model": [
    "django.contrib.gis.db.backends.spatialite.schema.SpatialiteSchemaEditor",
    "django.db.backends.oracle.schema.DatabaseSchemaEditor"
  ],
  "django.db.backends.base.schema.BaseDatabaseSchemaEditor.prepare_default": [
    "django.db.backends.oracle.schema.DatabaseSchemaEditor"
  ],
  "django.db.backends.base.schema.BaseDatabaseSchemaEditor.quote_value": [
    "django.db.backends.mysql.schema.DatabaseSchemaEditor",
    "django.db.backends.oracle.schema.DatabaseSchemaEditor",
    "django.db.backends.postgresql.schema.DatabaseSchemaEditor"
  ],
  "django.db.backends.base.schema.BaseDatabaseSchemaEditor.remove_field": [
    "django.contrib.gis.db.backends.mysql.schema.MySQLGISSchemaEditor",
    "django.contrib.gis.db.backends.spatialite.schema.SpatialiteSchemaEditor",
    "django.db.backends.oracle.schema.DatabaseSchemaEditor"
  ],
  "django.db.backends.base.schema.BaseDatabaseSchemaEditor.remove_index": [
    "django.db.backends.postgresql.schema.DatabaseSchemaEditor"
  ],
  "django.db.backends.base.schema.BaseDatabaseSchemaEditor.skip_default": [
    "django.db.backends.mysql.schema.DatabaseSchemaEditor"
  ],
  "django.db.backends.base.schema.BaseDatabaseSchemaEditor.sql_delete_check": [
    "django.db.backends.mysql.schema.DatabaseSchemaEditor"
  ],
  "django.db.backends.base.schema.BaseDatabaseSchemaEditor.sql_rename_column": [
    "django.db.backends.mysql.schema.DatabaseSchemaEditor"
  ],
  "django.db.backends.base.validation.BaseDatabaseValidation.check": [
    "django.db.backends.mysql.validation.DatabaseValidation"
  ],
  "django.db.backends.ddl_references.Columns.__init__": [
    "django.db.backends.ddl_references.IndexColumns"
  ],
  "django.db.backends.ddl_references.Reference.references_column": [
    "django.db.backends.ddl_references.Statement",
    "django.db.backends.ddl_references.TableColumns"
  ],
  "django.db.backends.ddl_references.Reference.references_table": [
    "django.db.backends.ddl_references.Statement",
    "django.db.backends.ddl_references.Table"
  ],
  "django.db.backends.ddl_references.Reference.rename_column_references": [
    "django.db.backends.ddl_references.Statement",
    "django.db.backends.ddl_references.TableColumns"
  ],
  "django.db.backends.ddl_references.Reference.rename_table_references": [
    "django.db.backends.ddl_references.Statement",
    "django.db.backends.ddl_references.Table"
  ],
  "django.db.backends.ddl_references.Table.__init__": [
    "django.db.backends.ddl_references.TableColumns"
  ],
  "django.db.backends.ddl_references.Table.references_table": [
    "django.db.backends.ddl_references.ForeignKeyName"
  ],
  "django.db.backends.ddl_references.Table.rename_table_references": [
    "django.db.backends.ddl_references.ForeignKeyName"
  ],
  "django.db.backends.ddl_references.TableColumns.__init__": [
    "django.db.backends.ddl_references.Columns",
    "django.db.backends.ddl_references.ForeignKeyName",
    "django.db.backends.ddl_references.IndexName"
  ],
  "django.db.backends.ddl_references.TableColumns.references_column": [
    "django.db.backends.ddl_references.ForeignKeyName"
  ],
  "django.db.backends.ddl_references.TableColumns.rename_column_references": [
    "django.db.backends.ddl_references.ForeignKeyName"
  ],
  "django.db.backends.mysql.schema.DatabaseSchemaEditor.add_field": [
    "django.contrib.gis.db.backends.mysql.schema.MySQLGISSchemaEditor"
  ],
  "django.db.backends.mysql.schema.DatabaseSchemaEditor.skip_default": [
    "django.contrib.gis.db.backends.mysql.schema.MySQLGISSchemaEditor"
  ],
  "django.db.backends.oracle.introspection.DatabaseIntrospection.data_types_reverse": [
    "django.contrib.gis.db.backends.oracle.introspection.OracleIntrospection"
  ],
  "django.db.backends.oracle.schema.DatabaseSchemaEditor.delete_model": [
    "django.contrib.gis.db.backends.oracle.schema.OracleGISSchemaEditor"
  ],
  "django.db.backends.oracle.schema.DatabaseSchemaEditor.remove_field": [
    "django.contrib.gis.db.backends.oracle.schema.OracleGISSchemaEditor"
  ],
  "django.db.migrations.graph.Node.__init__": [
    "django.db.migrations.graph.DummyNode"
  ],
  "django.db.migrations.operations.base.Operation.database_backwards": [
    "django.db.migrations.operations.models.AlterModelTableComment",
    "django.db.migrations.operations.models.AlterTogetherOptionOperation"
  ],
  "django.db.migrations.operations.base.Operation.database_forwards": [
    "django.db.migrations.operations.models.AlterModelTableComment",
    "django.db.migrations.operations.models.AlterTogetherOptionOperation"
  ],
  "django.db.migrations.operations.base.Operation.describe": [
    "django.db.migrations.operations.models.AlterModelTableComment",
    "django.db.migrations.operations.models.AlterTogetherOptionOperation"
  ],
  "django.db.migrations.operations.base.Operation.migration_name_fragment": [
    "django.db.migrations.operations.models.AlterModelTableComment",
    "django.db.migrations.operations.models.AlterTogetherOptionOperation"
  ],
  "django.db.migrations.operations.base.Operation.references_field": [
    "django.db.migrations.operations.models.AlterTogetherOptionOperation"
  ],
  "django.db.migrations.operations.base.Operation.reversible": [
    "django.db.migrations.operations.special.RunPython",
    "django.db.migrations.operations.special.RunSQL"
  ],
  "django.db.migrations.operations.base.Operation.state_forwards": [
    "django.db.migrations.operations.models.AlterModelTableComment",
    "django.db.migrations.operations.models.AlterTogetherOptionOperation"
  ],
  "django.db.migrations.operations.fields.FieldOperation.__init__": [
    "django.db.migrations.operations.fields.AddField",
    "django.db.migrations.operations.fields.AlterField",
    "django.db.migrations.operations.fields.RenameField"
  ],
  "django.db.migrations.operations.models.AlterTogetherOptionOperation.__init__": [
    "django.db.migrations.operations.models.AlterIndexTogether",
    "django.db.migrations.operations.models.AlterUniqueTogether"
  ],
  "django.db.migrations.operations.models.ModelOperation.__init__": [
    "django.db.migrations.operations.models.CreateModel",
    "django.db.migrations.operations.models.RenameModel"
  ],
  "django.db.migrations.operations.special.RunPython.__init__": [
    "django.contrib.contenttypes.management.RenameContentType"
  ],
  "django.db.migrations.serializer.BaseSerializer.serialize": [
    "django.contrib.postgres.serializers.RangeSerializer"
  ],
  "django.db.models.constraints.BaseConstraint.__init__": [
    "django.contrib.postgres.constraints.ExclusionConstraint",
    "django.db.models.constraints.CheckConstraint",
    "django.db.models.constraints.UniqueConstraint"
  ],
  "django.db.models.deletion.Collector.can_fast_delete": [
    "django.contrib.admin.utils.NestedObjects",
    "django.contrib.contenttypes.management.commands.remove_stale_contenttypes.NoFastDeleteCollector"
  ],
  "django.db.models.deletion.Collector.collect": [
    "django.contrib.admin.utils.NestedObjects"
  ],
  "django.db.models.deletion.Collector.related_objects": [
    "django.contrib.admin.utils.NestedObjects"
  ],
  "django.db.models.enums.Choices.value": [
    "django.db.models.enums.IntegerChoices",
    "django.db.models.enums.TextChoices"
  ],
  "django.db.models.enums.ChoicesMeta.choices": [
    "django.db.models.enums._IntegerChoicesMeta",
    "django.db.models.enums._TextChoicesMeta"
  ],
  "django.db.models.enums.ChoicesMeta.values": [
    "django.db.models.enums._IntegerChoicesMeta",
    "django.db.models.enums._TextChoicesMeta"
  ],
  "django.db.models.expressions.BaseExpression.__init__": [
    "django.db.models.expressions.Subquery",
    "django.db.models.sql.query.Query"
  ],
  "django.db.models.expressions.BaseExpression.as_sql": [
    "django.db.models.expressions.Func"
  ],
  "django.db.models.expressions.BaseExpression.asc": [
    "django.db.models.expressions.OrderBy"
  ],
  "django.db.models.expressions.BaseExpression.desc": [
    "django.db.models.expressions.OrderBy"
  ],
  "django.db.models.expressions.BaseExpression.output_field": [
    "django.contrib.gis.db.backends.postgis.operations.ST_Polygon",
    "django.contrib.gis.db.models.functions.Area",
    "django.contrib.gis.db.models.functions.GeomOutputGeoFunc",
    "django.contrib.postgres.aggregates.general.ArrayAgg",
    "django.contrib.postgres.expressions.ArraySubquery",
    "django.contrib.postgres.fields.ranges.RangeEndsWith",
    "django.contrib.postgres.fields.ranges.RangeStartsWith",
    "django.db.models.sql.query.Query"
  ],
  "django.db.models.expressions.BaseExpression.relabeled_clone": [
    "django.db.models.sql.query.Query"
  ],
  "django.db.models.expressions.BaseExpression.resolve_expression": [
    "django.db.models.indexes.IndexExpression",
    "django.db.models.sql.query.Query"
  ],
  "django.db.models.expressions.Combinable.__invert__": [
    "django.contrib.postgres.search.SearchQuery",
    "django.db.models.expressions.NegatedExpression"
  ],
  "django.db.models.expressions.CombinedExpression.__init__": [
    "django.db.models.expressions.TemporalSubtraction"
  ],
  "django.db.models.expressions.ExpressionWrapper.__init__": [
    "django.db.models.expressions.NegatedExpression"
  ],
  "django.db.models.expressions.F.__init__": [
    "django.db.models.expressions.OuterRef"
  ],
  "django.db.models.expressions.Func.__init__": [
    "django.contrib.gis.db.backends.postgis.operations.ST_Polygon",
    "django.contrib.postgres.indexes.OpClass",
    "django.contrib.postgres.search.SearchHeadline",
    "django.contrib.postgres.search.SearchRank",
    "django.contrib.postgres.search.TrigramBase",
    "django.contrib.postgres.search.TrigramWordBase",
    "django.db.backends.oracle.functions.IntervalToSeconds",
    "django.db.backends.oracle.functions.SecondsToInterval",
    "django.db.models.aggregates.Aggregate",
    "django.db.models.expressions.ExpressionList",
    "django.db.models.functions.comparison.Cast",
    "django.db.models.functions.comparison.Collate",
    "django.db.models.functions.comparison.JSONObject",
    "django.db.models.functions.text.Concat",
    "django.db.models.functions.text.LPad",
    "django.db.models.functions.text.Left",
    "django.db.models.functions.text.Repeat",
    "django.db.models.functions.text.Replace",
    "django.db.models.functions.text.Substr",
    "django.db.models.functions.window.LagLeadFunction",
    "django.db.models.functions.window.NthValue",
    "django.db.models.functions.window.Ntile"
  ],
  "django.db.models.expressions.SQLiteNumericMixin.as_sqlite": [
    "django.contrib.gis.db.models.functions.Area",
    "django.contrib.gis.db.models.functions.Distance",
    "django.contrib.gis.db.models.functions.Length",
    "django.contrib.gis.db.models.functions.Perimeter",
    "django.db.models.functions.text.Chr",
    "django.db.models.functions.text.ConcatPair",
    "django.db.models.functions.text.Left",
    "django.db.models.functions.text.Ord",
    "django.db.models.functions.text.Substr",
    "django.db.models.indexes.IndexExpression"
  ],
  "django.db.models.expressions.Subquery.__init__": [
    "django.contrib.postgres.expressions.ArraySubquery",
    "django.db.models.expressions.Exists"
  ],
  "django.db.models.fields.CharField.__init__": [
    "django.db.models.fields.SlugField",
    "django.db.models.fields.URLField"
  ],
  "django.db.models.fields.Field.__get__": [
    "django.contrib.postgres.fields.ranges.BigIntegerRangeField",
    "django.contrib.postgres.fields.ranges.DateRangeField",
    "django.contrib.postgres.fields.ranges.DateTimeRangeField",
    "django.contrib.postgres.fields.ranges.DecimalRangeField",
    "django.contrib.postgres.fields.ranges.IntegerRangeField",
    "django.db.models.fields.files.FileField",
    "django.db.models.fields.related.ForeignObject",
    "django.db.models.fields.related.ManyToManyField"
  ],
  "django.db.models.fields.Field.__init__": [
    "django.contrib.gis.db.models.fields.BaseSpatialField",
    "django.db.models.fields.CharField",
    "django.db.models.fields.DecimalField",
    "django.db.models.fields.FilePathField",
    "django.db.models.fields.GenericIPAddressField",
    "django.db.models.fields.TextField",
    "django.db.models.fields.UUIDField",
    "django.db.models.fields.files.FileField"
  ],
  "django.db.models.fields.Field.db_type": [
    "django.contrib.gis.db.models.fields.BaseSpatialField"
  ],
  "django.db.models.fields.Field.description": [
    "django.contrib.postgres.fields.array.ArrayField"
  ],
  "django.db.models.fields.Field.formfield": [
    "django.contrib.gis.db.models.fields.GeometryField"
  ],
  "django.db.models.fields.Field.get_db_prep_value": [
    "django.contrib.gis.db.models.fields.BaseSpatialField",
    "django.contrib.gis.db.models.sql.conversion.AreaField",
    "django.contrib.gis.db.models.sql.conversion.DistanceField"
  ],
  "django.db.models.fields.Field.get_internal_type": [
    "django.contrib.gis.db.models.fields.ExtentField",
    "django.contrib.gis.db.models.sql.conversion.AreaField",
    "django.contrib.gis.db.models.sql.conversion.DistanceField"
  ],
  "django.db.models.fields.Field.get_prep_value": [
    "django.contrib.gis.db.models.fields.BaseSpatialField",
    "django.contrib.gis.db.models.sql.conversion.AreaField",
    "django.contrib.gis.db.models.sql.conversion.DistanceField",
    "django.contrib.postgres.fields.ranges.RangeField"
  ],
  "django.db.models.fields.Field.related_model": [
    "django.db.models.fields.related.RelatedField"
  ],
  "django.db.models.fields.Field.to_python": [
    "django.contrib.postgres.fields.ranges.RangeField"
  ],
  "django.db.models.fields.files.FieldFile.delete": [
    "django.db.models.fields.files.ImageFieldFile"
  ],
  "django.db.models.fields.files.FileDescriptor.__set__": [
    "django.db.models.fields.files.ImageFileDescriptor"
  ],
  "django.db.models.fields.files.FileField.__get__": [
    "django.db.models.fields.files.ImageField"
  ],
  "django.db.models.fields.files.FileField.__init__": [
    "django.db.models.fields.files.ImageField"
  ],
  "django.db.models.fields.mixins.FieldCacheMixin.get_cache_name": [
    "django.contrib.contenttypes.fields.GenericForeignKey"
  ],
  "django.db.models.fields.related.ForeignKey.__init__": [
    "django.db.models.fields.related.OneToOneField"
  ],
  "django.db.models.fields.related.ForeignObject.__get__": [
    "django.db.models.fields.related.OneToOneField"
  ],
  "django.db.models.fields.related.ForeignObject.__init__": [
    "django.contrib.contenttypes.fields.GenericRelation",
    "django.db.models.fields.related.ForeignKey"
  ],
  "django.db.models.fields.related.ForeignObject.resolve_related_fields": [
    "django.contrib.contenttypes.fields.GenericRelation"
  ],
  "django.db.models.fields.related.RelatedField.__init__": [
    "django.db.models.fields.related.ForeignObject",
    "django.db.models.fields.related.ManyToManyField"
  ],
  "django.db.models.fields.related_descriptors.ForwardManyToOneDescriptor.get_object": [
    "django.db.models.fields.related_descriptors.ForwardOneToOneDescriptor"
  ],
  "django.db.models.fields.related_descriptors.ReverseManyToOneDescriptor.__get__": [
    "django.db.models.fields.related_descriptors.ManyToManyDescriptor"
  ],
  "django.db.models.fields.related_descriptors.ReverseManyToOneDescriptor.__init__": [
    "django.db.models.fields.related_descriptors.ManyToManyDescriptor"
  ],
  "django.db.models.fields.related_descriptors.ReverseManyToOneDescriptor.related_manager_cls": [
    "django.db.models.fields.related_descriptors.ManyToManyDescriptor"
  ],
  "django.db.models.fields.reverse_related.ForeignObjectRel.__init__": [
    "django.contrib.contenttypes.fields.GenericRel",
    "django.db.models.fields.reverse_related.ManyToManyRel",
    "django.db.models.fields.reverse_related.ManyToOneRel"
  ],
  "django.db.models.fields.reverse_related.ManyToOneRel.__init__": [
    "django.db.models.fields.reverse_related.OneToOneRel"
  ],
  "django.db.models.functions.text.Left.get_substr": [
    "django.db.models.functions.text.Right"
  ],
  "django.db.models.indexes.Index.create_sql": [
    "django.contrib.postgres.indexes.PostgresIndex"
  ],
  "django.db.models.indexes.Index.max_name_length": [
    "django.contrib.postgres.indexes.PostgresIndex"
  ],
  "django.db.models.lookups.FieldGetDbPrepValueIterableMixin.get_prep_lookup": [
    "django.db.models.fields.related_lookups.RelatedIn"
  ],
  "django.db.models.lookups.Lookup.__init__": [
    "django.contrib.gis.db.models.lookups.GISLookup"
  ],
  "django.db.models.lookups.Lookup.get_db_prep_lookup": [
    "django.contrib.gis.db.models.lookups.GISLookup"
  ],
  "django.db.models.lookups.Lookup.process_lhs": [
    "django.db.models.lookups.BuiltinLookup"
  ],
  "django.db.models.lookups.Lookup.process_rhs": [
    "django.contrib.gis.db.models.lookups.GISLookup"
  ],
  "django.db.models.lookups.YearLookup.get_bound_params": [
    "django.db.models.lookups.YearExact",
    "django.db.models.lookups.YearGt",
    "django.db.models.lookups.YearGte",
    "django.db.models.lookups.YearLt",
    "django.db.models.lookups.YearLte"
  ],
  "django.db.models.query.ValuesListIterable.__iter__": [
    "django.db.models.query.NamedValuesListIterable"
  ],
  "django.db.models.query_utils.DeferredAttribute.__init__": [
    "django.contrib.gis.db.models.proxy.SpatialProxy"
  ],
  "django.db.models.query_utils.RegisterLookupMixin.get_transform": [
    "django.contrib.gis.db.models.fields.RasterField",
    "django.contrib.postgres.fields.array.ArrayField",
    "django.contrib.postgres.fields.hstore.HStoreField"
  ],
  "django.db.models.sql.compiler.SQLCompiler.as_sql": [
    "django.db.models.sql.compiler.SQLAggregateCompiler",
    "django.db.models.sql.compiler.SQLDeleteCompiler",
    "django.db.models.sql.compiler.SQLInsertCompiler",
    "django.db.models.sql.compiler.SQLUpdateCompiler"
  ],
  "django.db.models.sql.compiler.SQLCompiler.as_subquery_condition": [
    "django.db.backends.mysql.compiler.SQLCompiler"
  ],
  "django.db.models.sql.compiler.SQLCompiler.execute_sql": [
    "django.db.models.sql.compiler.SQLInsertCompiler",
    "django.db.models.sql.compiler.SQLUpdateCompiler"
  ],
  "django.db.models.sql.compiler.SQLCompiler.pre_sql_setup": [
    "django.db.models.sql.compiler.SQLUpdateCompiler"
  ],
  "django.db.models.sql.compiler.SQLDeleteCompiler.as_sql": [
    "django.db.backends.mysql.compiler.SQLDeleteCompiler"
  ],
  "django.db.models.sql.query.Query.__init__": [
    "django.db.models.sql.subqueries.InsertQuery",
    "django.db.models.sql.subqueries.UpdateQuery"
  ],
  "django.dispatch.dispatcher.Signal.connect": [
    "django.db.models.signals.ModelSignal"
  ],
  "django.dispatch.dispatcher.Signal.disconnect": [
    "django.db.models.signals.ModelSignal"
  ],
  "django.forms.fields.BaseTemporalField.strptime": [
    "django.forms.fields.DateField",
    "django.forms.fields.DateTimeField",
    "django.forms.fields.TimeField"
  ],
  "django.forms.fields.BaseTemporalField.to_python": [
    "django.forms.fields.DateField",
    "django.forms.fields.DateTimeField",
    "django.forms.fields.TimeField"
  ],
  "django.forms.fields.BooleanField.to_python": [
    "django.forms.fields.NullBooleanField"
  ],
  "django.forms.fields.BooleanField.validate": [
    "django.forms.fields.NullBooleanField"
  ],
  "django.forms.fields.CharField.__init__": [
    "django.contrib.postgres.forms.array.SimpleArrayField",
    "django.forms.fields.EmailField",
    "django.forms.fields.GenericIPAddressField",
    "django.forms.fields.JSONField",
    "django.forms.fields.RegexField",
    "django.forms.fields.SlugField",
    "django.forms.fields.URLField"
  ],
  "django.forms.fields.CharField.to_python": [
    "django.contrib.auth.forms.UsernameField",
    "django.contrib.postgres.forms.array.SimpleArrayField",
    "django.contrib.postgres.forms.hstore.HStoreField",
    "django.forms.fields.GenericIPAddressField",
    "django.forms.fields.JSONField",
    "django.forms.fields.URLField",
    "django.forms.fields.UUIDField"
  ],
  "django.forms.fields.CharField.widget_attrs": [
    "django.contrib.auth.forms.UsernameField"
  ],
  "django.forms.fields.ChoiceField.__init__": [
    "django.forms.fields.FilePathField",
    "django.forms.fields.TypedChoiceField",
    "django.forms.models.ModelChoiceField"
  ],
  "django.forms.fields.ChoiceField.to_python": [
    "django.forms.fields.MultipleChoiceField",
    "django.forms.models.ModelChoiceField"
  ],
  "django.forms.fields.ChoiceField.validate": [
    "django.forms.fields.MultipleChoiceField",
    "django.forms.models.ModelChoiceField"
  ],
  "django.forms.fields.Field.__init__": [
    "django.contrib.auth.forms.ReadOnlyPasswordHashField",
    "django.contrib.gis.forms.fields.GeometryField",
    "django.contrib.postgres.forms.array.SplitArrayField",
    "django.forms.fields.BaseTemporalField",
    "django.forms.fields.CharField",
    "django.forms.fields.ChoiceField",
    "django.forms.fields.ComboField",
    "django.forms.fields.FileField",
    "django.forms.fields.IntegerField",
    "django.forms.fields.MultiValueField",
    "django.forms.models.InlineForeignKeyField"
  ],
  "django.forms.fields.Field.bound_data": [
    "django.forms.fields.FileField",
    "django.forms.fields.JSONField"
  ],
  "django.forms.fields.Field.clean": [
    "django.contrib.gis.forms.fields.GeometryField",
    "django.contrib.postgres.forms.array.SimpleArrayField",
    "django.contrib.postgres.forms.array.SplitArrayField",
    "django.forms.fields.ComboField",
    "django.forms.fields.FileField",
    "django.forms.fields.MultiValueField",
    "django.forms.fields.TypedChoiceField",
    "django.forms.fields.TypedMultipleChoiceField",
    "django.forms.models.InlineForeignKeyField",
    "django.forms.models.ModelMultipleChoiceField"
  ],
  "django.forms.fields.Field.has_changed": [
    "django.contrib.gis.forms.fields.GeometryField",
    "django.contrib.postgres.forms.array.SimpleArrayField",
    "django.contrib.postgres.forms.array.SplitArrayField",
    "django.contrib.postgres.forms.hstore.HStoreField",
    "django.forms.fields.BooleanField",
    "django.forms.fields.FileField",
    "django.forms.fields.JSONField",
    "django.forms.fields.MultiValueField",
    "django.forms.fields.MultipleChoiceField",
    "django.forms.models.InlineForeignKeyField",
    "django.forms.models.ModelChoiceField"
  ],
  "django.forms.fields.Field.prepare_value": [
    "django.contrib.postgres.forms.array.SimpleArrayField",
    "django.contrib.postgres.forms.hstore.HStoreField",
    "django.contrib.postgres.forms.ranges.BaseRangeField",
    "django.forms.fields.DurationField",
    "django.forms.fields.JSONField",
    "django.forms.fields.UUIDField",
    "django.forms.models.ModelChoiceField"
  ],
  "django.forms.fields.Field.run_validators": [
    "django.contrib.postgres.forms.array.SimpleArrayField"
  ],
  "django.forms.fields.Field.to_python": [
    "django.contrib.gis.forms.fields.GeometryField",
    "django.contrib.postgres.forms.array.SplitArrayField",
    "django.forms.fields.BaseTemporalField",
    "django.forms.fields.BooleanField",
    "django.forms.fields.CharField",
    "django.forms.fields.ChoiceField",
    "django.forms.fields.DurationField",
    "django.forms.fields.FileField",
    "django.forms.fields.IntegerField"
  ],
  "django.forms.fields.Field.validate": [
    "django.contrib.postgres.forms.array.SimpleArrayField",
    "django.forms.fields.BooleanField",
    "django.forms.fields.ChoiceField",
    "django.forms.fields.DecimalField",
    "django.forms.fields.FloatField",
    "django.forms.fields.MultiValueField"
  ],
  "django.forms.fields.Field.widget_attrs": [
    "django.forms.fields.CharField",
    "django.forms.fields.ImageField",
    "django.forms.fields.IntegerField"
  ],
  "django.forms.fields.FileField.to_python": [
    "django.forms.fields.ImageField"
  ],
  "django.forms.fields.IntegerField.__init__": [
    "django.forms.fields.DecimalField",
    "django.forms.fields.FloatField"
  ],
  "django.forms.fields.IntegerField.to_python": [
    "django.forms.fields.DecimalField",
    "django.forms.fields.FloatField"
  ],
  "django.forms.fields.IntegerField.widget_attrs": [
    "django.forms.fields.DecimalField",
    "django.forms.fields.FloatField"
  ],
  "django.forms.fields.JSONField.__init__": [
    "django.contrib.postgres.forms.jsonb.JSONField"
  ],
  "django.forms.fields.MultiValueField.__init__": [
    "django.contrib.postgres.forms.ranges.BaseRangeField",
    "django.forms.fields.SplitDateTimeField"
  ],
  "django.forms.fields.MultiValueField.compress": [
    "django.contrib.postgres.forms.ranges.BaseRangeField",
    "django.forms.fields.SplitDateTimeField"
  ],
  "django.forms.fields.MultipleChoiceField.validate": [
    "django.forms.fields.TypedMultipleChoiceField"
  ],
  "django.forms.forms.BaseForm.changed_data": [
    "django.contrib.auth.forms.AdminPasswordChangeForm"
  ],
  "django.forms.forms.BaseForm.clean": [
    "django.contrib.auth.forms.AuthenticationForm",
    "django.forms.formsets.ManagementForm"
  ],
  "django.forms.models.BaseModelForm.save": [
    "django.contrib.auth.forms.BaseUserCreationForm"
  ],
  "django.forms.models.ModelChoiceField.__init__": [
    "django.forms.models.ModelMultipleChoiceField"
  ],
  "django.forms.models.ModelChoiceField.has_changed": [
    "django.forms.models.ModelMultipleChoiceField"
  ],
  "django.forms.models.ModelChoiceField.prepare_value": [
    "django.forms.models.ModelMultipleChoiceField"
  ],
  "django.forms.models.ModelChoiceField.to_python": [
    "django.forms.models.ModelMultipleChoiceField"
  ],
  "django.forms.renderers.BaseRenderer.get_template": [
    "django.forms.renderers.TemplatesSetting"
  ],
  "django.forms.utils.ErrorList.__init__": [
    "django.contrib.admin.helpers.AdminErrorList"
  ],
  "django.forms.widgets.ChoiceWidget.format_value": [
    "django.forms.widgets.NullBooleanSelect"
  ],
  "django.forms.widgets.ChoiceWidget.get_context": [
    "django.forms.widgets.Select"
  ],
  "django.forms.widgets.ChoiceWidget.id_for_label": [
    "django.forms.widgets.CheckboxSelectMultiple"
  ],
  "django.forms.widgets.ChoiceWidget.value_from_datadict": [
    "django.forms.widgets.NullBooleanSelect",
    "django.forms.widgets.SelectMultiple"
  ],
  "django.forms.widgets.FileInput.value_from_datadict": [
    "django.forms.widgets.ClearableFileInput"
  ],
  "django.forms.widgets.FileInput.value_omitted_from_data": [
    "django.forms.widgets.ClearableFileInput"
  ],
  "django.forms.widgets.MultiWidget.__init__": [
    "django.contrib.postgres.forms.ranges.RangeWidget",
    "django.forms.widgets.SplitDateTimeWidget"
  ],
  "django.forms.widgets.MultiWidget.decompress": [
    "django.contrib.postgres.forms.ranges.RangeWidget",
    "django.forms.widgets.SplitDateTimeWidget"
  ],
  "django.forms.widgets.MultiWidget.get_context": [
    "django.contrib.admin.widgets.AdminSplitDateTime"
  ],
  "django.forms.widgets.SplitDateTimeWidget.__init__": [
    "django.contrib.admin.widgets.AdminSplitDateTime",
    "django.forms.widgets.SplitHiddenDateTimeWidget"
  ],
  "django.forms.widgets.Textarea.__init__": [
    "django.contrib.admin.widgets.AdminTextareaWidget"
  ],
  "django.forms.widgets.Widget.__init__": [
    "django.contrib.admin.widgets.RelatedFieldWidgetWrapper",
    "django.contrib.gis.forms.widgets.BaseGeometryWidget",
    "django.contrib.postgres.forms.array.SplitArrayWidget",
    "django.forms.widgets.ChoiceWidget",
    "django.forms.widgets.MultiWidget",
    "django.forms.widgets.SelectDateWidget",
    "django.forms.widgets.Textarea"
  ],
  "django.forms.widgets.Widget.format_value": [
    "django.contrib.admin.widgets.ManyToManyRawIdWidget",
    "django.forms.widgets.ChoiceWidget",
    "django.forms.widgets.FileInput",
    "django.forms.widgets.SelectDateWidget"
  ],
  "django.forms.widgets.Widget.get_context": [
    "django.contrib.admin.widgets.AdminURLFieldWidget",
    "django.contrib.admin.widgets.ForeignKeyRawIdWidget",
    "django.contrib.admin.widgets.RelatedFieldWidgetWrapper",
    "django.contrib.auth.forms.ReadOnlyPasswordHashWidget",
    "django.contrib.gis.admin.widgets.OpenLayersWidget",
    "django.contrib.gis.forms.widgets.BaseGeometryWidget",
    "django.contrib.postgres.forms.array.SplitArrayWidget",
    "django.forms.widgets.ChoiceWidget",
    "django.forms.widgets.ClearableFileInput",
    "django.forms.widgets.MultiWidget",
    "django.forms.widgets.PasswordInput",
    "django.forms.widgets.SelectDateWidget"
  ],
  "django.forms.widgets.Widget.id_for_label": [
    "django.contrib.admin.widgets.RelatedFieldWidgetWrapper",
    "django.contrib.postgres.forms.array.SplitArrayWidget",
    "django.forms.widgets.ChoiceWidget",
    "django.forms.widgets.MultiWidget",
    "django.forms.widgets.SelectDateWidget"
  ],
  "django.forms.widgets.Widget.is_hidden": [
    "django.contrib.admin.widgets.RelatedFieldWidgetWrapper",
    "django.contrib.postgres.forms.array.SplitArrayWidget",
    "django.forms.widgets.MultiWidget"
  ],
  "django.forms.widgets.Widget.needs_multipart_form": [
    "django.contrib.postgres.forms.array.SplitArrayWidget",
    "django.forms.widgets.MultiWidget"
  ],
  "django.forms.widgets.Widget.subwidgets": [
    "django.forms.widgets.ChoiceWidget"
  ],
  "django.forms.widgets.Widget.use_required_attribute": [
    "django.forms.widgets.CheckboxSelectMultiple",
    "django.forms.widgets.FileInput",
    "django.forms.widgets.Select"
  ],
  "django.forms.widgets.Widget.value_from_datadict": [
    "django.contrib.admin.widgets.ManyToManyRawIdWidget",
    "django.contrib.admin.widgets.RelatedFieldWidgetWrapper",
    "django.contrib.postgres.forms.array.SplitArrayWidget",
    "django.forms.widgets.ChoiceWidget",
    "django.forms.widgets.FileInput",
    "django.forms.widgets.MultiWidget",
    "django.forms.widgets.SelectDateWidget"
  ],
  "django.forms.widgets.Widget.value_omitted_from_data": [
    "django.contrib.admin.widgets.RelatedFieldWidgetWrapper",
    "django.contrib.postgres.forms.array.SplitArrayWidget",
    "django.forms.widgets.CheckboxSelectMultiple",
    "django.forms.widgets.FileInput",
    "django.forms.widgets.MultiWidget",
    "django.forms.widgets.SelectDateWidget",
    "django.forms.widgets.SelectMultiple"
  ],
  "django.http.request.HttpRequest.COOKIES": [
    "django.core.handlers.asgi.ASGIRequest"
  ],
  "django.http.request.HttpRequest.GET": [
    "django.core.handlers.asgi.ASGIRequest"
  ],
  "django.http.request.QueryDict.__delitem__": [
    "django.http.request._ImmutableQueryDict"
  ],
  "django.http.request.QueryDict.__setitem__": [
    "django.http.request._ImmutableQueryDict"
  ],
  "django.http.request.QueryDict.appendlist": [
    "django.http.request._ImmutableQueryDict"
  ],
  "django.http.request.QueryDict.clear": [
    "django.http.request._ImmutableQueryDict"
  ],
  "django.http.request.QueryDict.copy": [
    "django.http.request._ImmutableQueryDict"
  ],
  "django.http.request.QueryDict.pop": [
    "django.http.request._ImmutableQueryDict"
  ],
  "django.http.request.QueryDict.popitem": [
    "django.http.request._ImmutableQueryDict"
  ],
  "django.http.request.QueryDict.setdefault": [
    "django.http.request._ImmutableQueryDict"
  ],
  "django.http.request.QueryDict.setlist": [
    "django.http.request._ImmutableQueryDict"
  ],
  "django.http.request.QueryDict.setlistdefault": [
    "django.http.request._ImmutableQueryDict"
  ],
  "django.http.request.QueryDict.urlencode": [
    "django.http.request._ImmutableQueryDict"
  ],
  "django.http.response.HttpResponse.__init__": [
    "django.http.response.HttpResponseNotAllowed",
    "django.http.response.HttpResponseNotModified",
    "django.http.response.HttpResponseRedirectBase",
    "django.http.response.JsonResponse",
    "django.template.response.SimpleTemplateResponse"
  ],
  "django.http.response.HttpResponse.__iter__": [
    "django.template.response.SimpleTemplateResponse"
  ],
  "django.http.response.HttpResponseBase.__init__": [
    "django.http.response.HttpResponse",
    "django.http.response.StreamingHttpResponse"
  ],
  "django.http.response.HttpResponseBase.__iter__": [
    "django.http.response.HttpResponse",
    "django.http.response.StreamingHttpResponse"
  ],
  "django.http.response.HttpResponseBase.getvalue": [
    "django.http.response.HttpResponse",
    "django.http.response.StreamingHttpResponse"
  ],
  "django.http.response.StreamingHttpResponse.__init__": [
    "django.http.response.FileResponse"
  ],
  "django.template.backends.base.BaseEngine.__init__": [
    "django.template.backends.django.DjangoTemplates",
    "django.template.backends.dummy.TemplateStrings",
    "django.template.backends.jinja2.Jinja2"
  ],
  "django.template.base.Lexer.tokenize": [
    "django.template.base.DebugLexer"
  ],
  "django.template.base.Node.__iter__": [
    "django.template.defaulttags.IfNode"
  ],
  "django.template.base.Node.render": [
    "django.contrib.admin.templatetags.base.InclusionAdminNode",
    "django.contrib.admin.templatetags.log.AdminLogNode",
    "django.contrib.flatpages.templatetags.flatpages.FlatpageNode",
    "django.template.loader_tags.BlockNode",
    "django.template.loader_tags.ExtendsNode",
    "django.template.loader_tags.IncludeNode",
    "django.templatetags.i18n.BlockTranslateNode",
    "django.templatetags.i18n.GetAvailableLanguagesNode",
    "django.templatetags.i18n.GetCurrentLanguageBidiNode",
    "django.templatetags.i18n.GetCurrentLanguageNode",
    "django.templatetags.i18n.GetLanguageInfoListNode",
    "django.templatetags.i18n.GetLanguageInfoNode",
    "django.templatetags.i18n.LanguageNode",
    "django.templatetags.i18n.TranslateNode"
  ],
  "django.template.context.BaseContext.__init__": [
    "django.template.context.Context"
  ],
  "django.template.context.BaseContext.new": [
    "django.template.context.RequestContext"
  ],
  "django.template.context.Context.__init__": [
    "django.template.context.RequestContext"
  ],
  "django.template.context.Context.bind_template": [
    "django.template.context.RequestContext"
  ],
  "django.template.library.InclusionNode.__init__": [
    "django.contrib.admin.templatetags.base.InclusionAdminNode"
  ],
  "django.template.library.TagHelperNode.__init__": [
    "django.template.library.InclusionNode",
    "django.template.library.SimpleNode"
  ],
  "django.template.loaders.base.Loader.__init__": [
    "django.template.loaders.cached.Loader",
    "django.template.loaders.filesystem.Loader",
    "django.template.loaders.locmem.Loader"
  ],
  "django.template.loaders.base.Loader.get_template_sources": [
    "django.template.loaders.filesystem.Loader"
  ],
  "django.template.response.SimpleTemplateResponse.__init__": [
    "django.template.response.TemplateResponse"
  ],
  "django.template.smartif.IfParser.__init__": [
    "django.template.defaulttags.TemplateIfParser"
  ],
  "django.template.smartif.Literal.__init__": [
    "django.template.defaulttags.TemplateLiteral"
  ],
  "django.template.smartif.Literal.display": [
    "django.template.defaulttags.TemplateLiteral"
  ],
  "django.template.smartif.TokenBase.display": [
    "django.template.smartif.Literal"
  ],
  "django.template.smartif.TokenBase.nud": [
    "django.template.smartif.EndToken"
  ],
  "django.test.client._RequestFactory.delete": [
    "django.test.client.Client"
  ],
  "django.test.client._RequestFactory.get": [
    "django.test.client.Client"
  ],
  "django.test.client._RequestFactory.head": [
    "django.test.client.Client"
  ],
  "django.test.client._RequestFactory.options": [
    "django.test.client.Client"
  ],
  "django.test.client._RequestFactory.patch": [
    "django.test.client.Client"
  ],
  "django.test.client._RequestFactory.post": [
    "django.test.client.Client"
  ],
  "django.test.client._RequestFactory.put": [
    "django.test.client.Client"
  ],
  "django.test.client._RequestFactory.request": [
    "django.test.client.AsyncClient",
    "django.test.client.Client"
  ],
  "django.test.client._RequestFactory.trace": [
    "django.test.client.Client"
  ],
  "django.test.html.Element.__init__": [
    "django.test.html.RootElement"
  ],
  "django.test.utils.TestContextDecorator.__init__": [
    "django.test.utils.ignore_warnings",
    "django.test.utils.isolate_apps",
    "django.test.utils.override_script_prefix",
    "django.test.utils.override_settings",
    "django.test.utils.override_system_checks"
  ],
  "django.test.utils.TestContextDecorator.decorate_class": [
    "django.test.utils.override_settings"
  ],
  "django.test.utils.override_settings.__init__": [
    "django.test.utils.modify_settings"
  ],
  "django.test.utils.override_settings.save_options": [
    "django.test.utils.modify_settings"
  ],
  "django.utils.archive.BaseArchive.extract": [
    "django.utils.archive.TarArchive",
    "django.utils.archive.ZipArchive"
  ],
  "django.utils.archive.BaseArchive.list": [
    "django.utils.archive.TarArchive",
    "django.utils.archive.ZipArchive"
  ],
  "django.utils.autoreload.BaseReloader.__init__": [
    "django.utils.autoreload.WatchmanReloader"
  ],
  "django.utils.autoreload.BaseReloader.check_availability": [
    "django.utils.autoreload.StatReloader",
    "django.utils.autoreload.WatchmanReloader"
  ],
  "django.utils.autoreload.BaseReloader.stop": [
    "django.utils.autoreload.WatchmanReloader"
  ],
  "django.utils.connection.BaseConnectionHandler.all": [
    "django.core.cache.CacheHandler"
  ],
  "django.utils.connection.BaseConnectionHandler.close_all": [
    "django.db.utils.ConnectionHandler"
  ],
  "django.utils.connection.BaseConnectionHandler.create_connection": [
    "django.core.cache.CacheHandler",
    "django.db.utils.ConnectionHandler"
  ],
  "django.utils.datastructures.CaseInsensitiveMapping.__init__": [
    "django.http.request.HttpHeaders",
    "django.http.response.ResponseHeaders"
  ],
  "django.utils.datastructures.MultiValueDict.__delitem__": [
    "django.http.request.QueryDict"
  ],
  "django.utils.datastructures.MultiValueDict.__getitem__": [
    "django.http.request._ImmutableQueryDict"
  ],
  "django.utils.datastructures.MultiValueDict.__init__": [
    "django.http.request.QueryDict"
  ],
  "django.utils.datastructures.MultiValueDict.__setitem__": [
    "django.http.request.QueryDict"
  ],
  "django.utils.datastructures.MultiValueDict.appendlist": [
    "django.http.request.QueryDict"
  ],
  "django.utils.datastructures.MultiValueDict.copy": [
    "django.http.request.QueryDict"
  ],
  "django.utils.datastructures.MultiValueDict.dict": [
    "django.http.request._ImmutableQueryDict"
  ],
  "django.utils.datastructures.MultiValueDict.setdefault": [
    "django.http.request.QueryDict"
  ],
  "django.utils.datastructures.MultiValueDict.setlist": [
    "django.http.request.QueryDict"
  ],
  "django.utils.datastructures.MultiValueDict.setlistdefault": [
    "django.http.request.QueryDict"
  ],
  "django.utils.dateformat.TimeFormat.__init__": [
    "django.utils.dateformat.DateFormat"
  ],
  "django.utils.feedgenerator.RssFeed.rss_attributes": [
    "django.contrib.gis.feeds.GeoRSSFeed",
    "django.contrib.gis.feeds.W3CGeoFeed"
  ],
  "django.utils.functional.LazyObject.__copy__": [
    "django.utils.functional.SimpleLazyObject"
  ],
  "django.utils.functional.LazyObject.__getattr__": [
    "django.conf._DjangoConfLazyObject"
  ],
  "django.utils.functional.LazyObject.__init__": [
    "django.utils.functional.SimpleLazyObject"
  ],
  "django.utils.functional.Promise.__add__": [
    "django.utils.functional._StrPromise"
  ],
  "django.utils.functional.Promise.__lt__": [
    "django.utils.functional._StrPromise"
  ],
  "django.utils.functional.Promise.__mod__": [
    "django.utils.functional._StrPromise"
  ],
  "django.utils.functional.SimpleLazyObject.__init__": [
    "django.utils.text.Truncator"
  ],
  "django.utils.jslex.Lexer.__init__": [
    "django.utils.jslex.JsLexer"
  ],
  "django.utils.tree.Node.__init__": [
    "django.db.models.query_utils.Q"
  ],
  "django.views.generic.base.ContextMixin.get_context_data": [
    "django.views.generic.edit.FormMixin",
    "django.views.generic.list.MultipleObjectMixin"
  ],
  "django.views.generic.base.View.dispatch": [
    "django.contrib.auth.views.LogoutView"
  ],
  "django.views.generic.base.View.options": [
    "django.views.generic.base.RedirectView"
  ],
  "django.views.generic.dates.BaseDateListView.get_dated_items": [
    "django.views.generic.dates.BaseArchiveIndexView",
    "django.views.generic.dates.BaseDayArchiveView",
    "django.views.generic.dates.BaseMonthArchiveView",
    "django.views.generic.dates.BaseWeekArchiveView",
    "django.views.generic.dates.BaseYearArchiveView"
  ],
  "django.views.generic.dates.BaseDayArchiveView.get_dated_items": [
    "django.views.generic.dates.BaseTodayArchiveView"
  ],
  "django.views.generic.detail.SingleObjectMixin.get_object": [
    "django.views.generic.dates.BaseDateDetailView"
  ],
  "django.views.generic.edit.FormMixin.form_valid": [
    "django.views.generic.edit.ModelFormMixin"
  ],
  "django.views.generic.edit.FormMixin.get_form_class": [
    "django.views.generic.edit.ModelFormMixin"
  ],
  "django.views.generic.edit.FormMixin.get_form_kwargs": [
    "django.views.generic.edit.ModelFormMixin"
  ],
  "django.views.generic.edit.FormMixin.get_success_url": [
    "django.views.generic.edit.ModelFormMixin"
  ],
  "django.views.generic.edit.ProcessFormView.get": [
    "django.views.generic.edit.BaseCreateView",
    "django.views.generic.edit.BaseUpdateView"
  ],
  "django.views.generic.edit.ProcessFormView.post": [
    "django.views.generic.edit.BaseCreateView",
    "django.views.generic.edit.BaseUpdateView"
  ],
  "django.views.generic.list.MultipleObjectMixin.get_ordering": [
    "django.views.generic.dates.BaseDateListView"
  ],
  "doctest.DocTestParser.parse": [
    "IPython.testing.plugin.ipdoctest.IPDocTestParser"
  ],
  "doctest.DocTestRunner.report_failure": [
    "IPython.testing.plugin.pytest_ipdoctest._init_runner_class.PytestDoctestRunner"
  ],
  "doctest.DocTestRunner.report_unexpected_exception": [
    "IPython.testing.plugin.pytest_ipdoctest._init_runner_class.PytestDoctestRunner"
  ],
  "doctest.DocTestRunner.run": [
    "IPython.testing.plugin.ipdoctest.IPDocTestRunner"
  ],
  "doctest.OutputChecker.check_output": [
    "IPython.testing.plugin.ipdoctest.IPDoctestOutputChecker"
  ],
  "docutils._VersionInfo.__new__": [
    "docutils.VersionInfo"
  ],
  "docutils.io.Input.read": [
    "docutils.io.FileInput",
    "docutils.io.NullInput"
  ],
  "docutils.io.Output.write": [
    "docutils.io.NullOutput"
  ],
  "docutils.nodes.Element.__getattr__": [
    "docutils.nodes.document"
  ],
  "docutils.nodes.Element.astext": [
    "docutils.nodes.document"
  ],
  "docutils.nodes.Element.copy": [
    "docutils.nodes.document"
  ],
  "docutils.nodes.Element.deepcopy": [
    "docutils.nodes.document"
  ],
  "docutils.nodes.Element.pformat": [
    "docutils.nodes.document"
  ],
  "docutils.nodes.Node.astext": [
    "docutils.nodes.Element",
    "docutils.nodes.Text"
  ],
  "docutils.nodes.Node.copy": [
    "docutils.nodes.Element",
    "docutils.nodes.Text"
  ],
  "docutils.nodes.Node.deepcopy": [
    "docutils.nodes.Element",
    "docutils.nodes.Text"
  ],
  "docutils.nodes.Node.pformat": [
    "docutils.nodes.Element",
    "docutils.nodes.Text"
  ],
  "email._header_value_parser.TokenList.fold": [
    "email._header_value_parser.MsgID"
  ],
  "email.generator.Generator.__init__": [
    "email.generator.DecodedGenerator"
  ],
  "email.message.Message.__getitem__": [
    "importlib_metadata._adapters.Message"
  ],
  "email.message.Message.__init__": [
    "email.message.MIMEPart",
    "email.mime.base.MIMEBase",
    "importlib_metadata._adapters.Message",
    "mailbox.Message",
    "typeshed.typeshed.stdlib.email.mime.base.MIMEBase",
    "typeshed.typeshed.stdlib.mailbox.Message"
  ],
  "email.message.Message.__iter__": [
    "importlib_metadata._adapters.Message"
  ],
  "email.message.Message.__setitem__": [
    "django.core.mail.message.SafeMIMEMessage",
    "django.core.mail.message.SafeMIMEMultipart",
    "django.core.mail.message.SafeMIMEText"
  ],
  "email.message.Message.as_string": [
    "email.message.MIMEPart"
  ],
  "email.message.Message.set_payload": [
    "django.core.mail.message.SafeMIMEText"
  ],
  "email.mime.base.MIMEBase.__init__": [
    "email.mime.multipart.MIMEMultipart",
    "typeshed.typeshed.stdlib.email.mime.multipart.MIMEMultipart"
  ],
  "email.parser.BytesParser.parse": [
    "email.parser.BytesHeaderParser"
  ],
  "email.parser.BytesParser.parsebytes": [
    "email.parser.BytesHeaderParser"
  ],
  "email.parser.Parser.parse": [
    "email.parser.HeaderParser"
  ],
  "email.parser.Parser.parsestr": [
    "email.parser.HeaderParser"
  ],
  "email.policy.Policy.__init__": [
    "email.policy.EmailPolicy"
  ],
  "email.policy.Policy.fold": [
    "email.policy.Compat32",
    "email.policy.EmailPolicy"
  ],
  "email.policy.Policy.fold_binary": [
    "email.policy.Compat32",
    "email.policy.EmailPolicy"
  ],
  "email.policy.Policy.header_fetch_parse": [
    "email.policy.Compat32",
    "email.policy.EmailPolicy"
  ],
  "email.policy.Policy.header_source_parse": [
    "email.policy.Compat32",
    "email.policy.EmailPolicy"
  ],
  "email.policy.Policy.header_store_parse": [
    "email.policy.Compat32",
    "email.policy.EmailPolicy"
  ],
  "enum.Enum.name": [
    "enum.Flag"
  ],
  "enum.Enum.value": [
    "django.db.models.enums.Choices",
    "enum.Flag",
    "enum.IntEnum"
  ],
  "enum.EnumMeta.__bool__": [
    "enum.Flag"
  ],
  "enum.EnumMeta.__contains__": [
    "django.db.models.enums.ChoicesMeta",
    "enum.Flag"
  ],
  "enum.EnumMeta.__new__": [
    "django.db.models.enums.ChoicesMeta"
  ],
  "enum.Flag.value": [
    "enum.auto"
  ],
  "enum.IntFlag.__new__": [
    "enum.auto"
  ],
  "exceptiongroup._exceptions.BaseExceptionGroup.__new__": [
    "exceptiongroup._exceptions.ExceptionGroup"
  ],
  "exceptiongroup._exceptions.BaseExceptionGroup.exceptions": [
    "exceptiongroup._exceptions.ExceptionGroup"
  ],
  "exceptiongroup._exceptions.BaseExceptionGroup.split": [
    "exceptiongroup._exceptions.ExceptionGroup"
  ],
  "exceptiongroup._exceptions.BaseExceptionGroup.subgroup": [
    "exceptiongroup._exceptions.ExceptionGroup"
  ],
  "flask.json.provider.JSONProvider.dumps": [
    "flask.json.provider.DefaultJSONProvider"
  ],
  "flask.json.provider.JSONProvider.loads": [
    "flask.json.provider.DefaultJSONProvider"
  ],
  "flask.json.provider.JSONProvider.response": [
    "flask.json.provider.DefaultJSONProvider"
  ],
  "flask.json.tag.JSONTag.check": [
    "flask.json.tag.PassDict",
    "flask.json.tag.PassList",
    "flask.json.tag.TagBytes",
    "flask.json.tag.TagDateTime",
    "flask.json.tag.TagDict",
    "flask.json.tag.TagMarkup",
    "flask.json.tag.TagTuple",
    "flask.json.tag.TagUUID"
  ],
  "flask.json.tag.JSONTag.to_json": [
    "flask.json.tag.PassDict",
    "flask.json.tag.PassList",
    "flask.json.tag.TagBytes",
    "flask.json.tag.TagDateTime",
    "flask.json.tag.TagDict",
    "flask.json.tag.TagMarkup",
    "flask.json.tag.TagTuple",
    "flask.json.tag.TagUUID"
  ],
  "flask.json.tag.JSONTag.to_python": [
    "flask.json.tag.TagBytes",
    "flask.json.tag.TagDateTime",
    "flask.json.tag.TagDict",
    "flask.json.tag.TagMarkup",
    "flask.json.tag.TagTuple",
    "flask.json.tag.TagUUID"
  ],
  "flask.sansio.app.App.__init__": [
    "flask.app.Flask"
  ],
  "flask.sansio.app.App.create_jinja_environment": [
    "flask.app.Flask"
  ],
  "flask.sansio.scaffold.Scaffold.__init__": [
    "flask.sansio.app.App",
    "flask.sansio.blueprints.Blueprint"
  ],
  "flask.sansio.scaffold.Scaffold._check_setup_finished": [
    "flask.sansio.app.App",
    "flask.sansio.blueprints.Blueprint"
  ],
  "flask.sansio.scaffold.Scaffold.add_url_rule": [
    "flask.sansio.app.App",
    "flask.sansio.blueprints.Blueprint"
  ],
  "flask.sansio.scaffold.Scaffold.name": [
    "flask.sansio.app.App"
  ],
  "flask.sessions.SessionInterface.open_session": [
    "flask.sessions.SecureCookieSessionInterface"
  ],
  "flask.sessions.SessionInterface.save_session": [
    "flask.sessions.SecureCookieSessionInterface"
  ],
  "flask.views.View.dispatch_request": [
    "flask.views.MethodView"
  ],
  "float.__abs__": [
    "int"
  ],
  "float.__add__": [
    "int"
  ],
  "float.__bool__": [
    "int"
  ],
  "float.__ceil__": [
    "int"
  ],
  "float.__divmod__": [
    "int"
  ],
  "float.__eq__": [
    "int"
  ],
  "float.__float__": [
    "int"
  ],
  "float.__floor__": [
    "int"
  ],
  "float.__floordiv__": [
    "int"
  ],
  "float.__ge__": [
    "int"
  ],
  "float.__getnewargs__": [
    "int"
  ],
  "float.__gt__": [
    "int"
  ],
  "float.__int__": [
    "int"
  ],
  "float.__le__": [
    "int"
  ],
  "float.__lt__": [
    "int"
  ],
  "float.__mod__": [
    "int"
  ],
  "float.__mul__": [
    "int"
  ],
  "float.__ne__": [
    "int"
  ],
  "float.__neg__": [
    "int"
  ],
  "float.__new__": [
    "int"
  ],
  "float.__pos__": [
    "int"
  ],
  "float.__pow__": [
    "int"
  ],
  "float.__radd__": [
    "int"
  ],
  "float.__rdivmod__": [
    "int"
  ],
  "float.__rfloordiv__": [
    "int"
  ],
  "float.__rmod__": [
    "int"
  ],
  "float.__rmul__": [
    "int"
  ],
  "float.__round__": [
    "int"
  ],
  "float.__rpow__": [
    "int"
  ],
  "float.__rsub__": [
    "int"
  ],
  "float.__rtruediv__": [
    "int"
  ],
  "float.__sub__": [
    "int"
  ],
  "float.__truediv__": [
    "int"
  ],
  "float.__trunc__": [
    "int"
  ],
  "float.as_integer_ratio": [
    "int"
  ],
  "float.conjugate": [
    "int"
  ],
  "float.imag": [
    "int"
  ],
  "float.real": [
    "int"
  ],
  "fpdf._fonttools_shims.AbstractPen.addComponent": [
    "fpdf._fonttools_shims.DecomposingPen"
  ],
  "fpdf._fonttools_shims.AbstractPen.closePath": [
    "fpdf._fonttools_shims.BasePen"
  ],
  "fpdf._fonttools_shims.AbstractPen.curveTo": [
    "fpdf._fonttools_shims.BasePen"
  ],
  "fpdf._fonttools_shims.AbstractPen.endPath": [
    "fpdf._fonttools_shims.BasePen"
  ],
  "fpdf._fonttools_shims.AbstractPen.lineTo": [
    "fpdf._fonttools_shims.BasePen"
  ],
  "fpdf._fonttools_shims.AbstractPen.moveTo": [
    "fpdf._fonttools_shims.BasePen"
  ],
  "fpdf._fonttools_shims.AbstractPen.qCurveTo": [
    "fpdf._fonttools_shims.BasePen"
  ],
  "fpdf._fonttools_shims.BasePen.__init__": [
    "fpdf.svg.PathPen"
  ],
  "fpdf._fonttools_shims.DecomposingPen.__init__": [
    "fpdf._fonttools_shims.BasePen"
  ],
  "fpdf.actions.Action.__init__": [
    "fpdf.actions.GoToAction",
    "fpdf.actions.GoToRemoteAction",
    "fpdf.actions.LaunchAction",
    "fpdf.actions.NamedAction",
    "fpdf.actions.URIAction"
  ],
  "fpdf.actions.Action.serialize": [
    "fpdf.actions.GoToAction",
    "fpdf.actions.GoToRemoteAction",
    "fpdf.actions.LaunchAction",
    "fpdf.actions.NamedAction",
    "fpdf.actions.URIAction"
  ],
  "fpdf.drawing.PaintedPath.__init__": [
    "fpdf.drawing.ClippingPath"
  ],
  "fpdf.drawing.PaintedPath.render": [
    "fpdf.drawing.ClippingPath"
  ],
  "fpdf.drawing.PaintedPath.render_debug": [
    "fpdf.drawing.ClippingPath"
  ],
  "fpdf.drawing._DeviceCMYKBase.__new__": [
    "fpdf.drawing.DeviceCMYK"
  ],
  "fpdf.drawing._DeviceGrayBase.__new__": [
    "fpdf.drawing.DeviceGray"
  ],
  "fpdf.drawing._DeviceRGBBase.__new__": [
    "fpdf.drawing.DeviceRGB"
  ],
  "fpdf.output.ContentWithoutID.serialize": [
    "fpdf.linearization.PDFXrefAndTrailer",
    "fpdf.output.PDFHeader",
    "fpdf.output.PDFXrefAndTrailer"
  ],
  "fpdf.output.OutputProducer.bufferize": [
    "fpdf.linearization.LinearizedOutputProducer"
  ],
  "fpdf.syntax.Destination.serialize": [
    "fpdf.syntax.DestinationXYZ"
  ],
  "fpdf.syntax.PDFContentStream.__init__": [
    "fpdf.annotations.PDFEmbeddedFile",
    "fpdf.output.PDFFontStream",
    "fpdf.output.PDFXObject",
    "fpdf.output.PDFXmpMetadata"
  ],
  "fpdf.syntax.PDFObject.__init__": [
    "fpdf.encryption.EncryptionDictionary",
    "fpdf.linearization.PDFLinearization",
    "fpdf.outline.OutlineDictionary",
    "fpdf.outline.OutlineItemDictionary",
    "fpdf.output.CIDSystemInfo",
    "fpdf.output.PDFCatalog",
    "fpdf.output.PDFExtGState",
    "fpdf.output.PDFFont",
    "fpdf.output.PDFFontDescriptor",
    "fpdf.output.PDFInfo",
    "fpdf.output.PDFPage",
    "fpdf.output.PDFPagesRoot",
    "fpdf.output.PDFResources",
    "fpdf.structure_tree.NumberTree",
    "fpdf.structure_tree.StructElem",
    "fpdf.structure_tree.StructTreeRoot",
    "fpdf.syntax.PDFContentStream"
  ],
  "fpdf.syntax.PDFObject.serialize": [
    "fpdf.output.PDFExtGState",
    "fpdf.structure_tree.NumberTree"
  ],
  "fpdf.template.FlexTemplate.__init__": [
    "fpdf.template.Template"
  ],
  "fpdf.template.FlexTemplate.render": [
    "fpdf.template.Template"
  ],
  "fpdf.transitions.Transition.serialize": [
    "fpdf.transitions.BlindsTransition",
    "fpdf.transitions.BoxTransition",
    "fpdf.transitions.CoverTransition",
    "fpdf.transitions.DissolveTransition",
    "fpdf.transitions.FadeTransition",
    "fpdf.transitions.FlyTransition",
    "fpdf.transitions.GlitterTransition",
    "fpdf.transitions.PushTransition",
    "fpdf.transitions.SplitTransition",
    "fpdf.transitions.UncoverTransition",
    "fpdf.transitions.WipeTransition"
  ],
  "fractions.Fraction.__new__": [
    "exifread.utils.Ratio",
    "typeshed.typeshed.stubs.ExifRead.exifread.utils.Ratio"
  ],
  "frozenset.__new__": [
    "sqlalchemy.orm.util.CascadeOptions"
  ],
  "ftplib.FTP.__init__": [
    "ftplib.FTP_TLS"
  ],
  "ftplib.FTP.login": [
    "ftplib.FTP_TLS"
  ],
  "gdb.Breakpoint.__init__": [
    "gdb.FinishBreakpoint"
  ],
  "gdb.printing.PrettyPrinter.__init__": [
    "gdb.printing.FlagEnumerationPrinter",
    "gdb.printing.RegexpCollectionPrettyPrinter"
  ],
  "gettext.NullTranslations.__init__": [
    "babel.support.NullTranslations"
  ],
  "gettext.NullTranslations.ngettext": [
    "django.utils.translation.trans_real.DjangoTranslation"
  ],
  "gettext.NullTranslations.npgettext": [
    "babel.support.NullTranslations"
  ],
  "gettext.NullTranslations.pgettext": [
    "babel.support.NullTranslations"
  ],
  "gflags.ArgumentParser.WriteCustomInfoInXMLFormat": [
    "gflags.NumericParser"
  ],
  "gflags.ArgumentSerializer.Serialize": [
    "gflags.ListSerializer"
  ],
  "gflags.BaseListParser.__init__": [
    "gflags.ListParser",
    "gflags.WhitespaceSeparatedListParser"
  ],
  "gflags.BooleanFlag.__init__": [
    "gflags.HelpFlag",
    "gflags.HelpXMLFlag",
    "gflags.HelpshortFlag"
  ],
  "gflags.Flag.Parse": [
    "gflags.HelpFlag",
    "gflags.HelpXMLFlag",
    "gflags.HelpshortFlag",
    "gflags.MultiFlag"
  ],
  "gflags.Flag.Serialize": [
    "gflags.MultiFlag"
  ],
  "gflags.Flag.__init__": [
    "gflags.BooleanFlag",
    "gflags.EnumFlag",
    "gflags.MultiFlag"
  ],
  "gflags.NumericParser.Convert": [
    "gflags.FloatParser",
    "gflags.IntegerParser"
  ],
  "google.cloud.ndb._cache._GlobalCacheBatch.done_callback": [
    "google.cloud.ndb._cache._GlobalCacheGetBatch",
    "google.cloud.ndb._cache._GlobalCacheSetBatch"
  ],
  "google.cloud.ndb._cache._GlobalCacheBatch.future_info": [
    "google.cloud.ndb._cache._GlobalCacheDeleteBatch",
    "google.cloud.ndb._cache._GlobalCacheGetBatch",
    "google.cloud.ndb._cache._GlobalCacheSetBatch"
  ],
  "google.cloud.ndb._cache._GlobalCacheBatch.make_call": [
    "google.cloud.ndb._cache._GlobalCacheDeleteBatch",
    "google.cloud.ndb._cache._GlobalCacheGetBatch",
    "google.cloud.ndb._cache._GlobalCacheSetBatch"
  ],
  "google.cloud.ndb._cache._GlobalCacheDeleteBatch.future_info": [
    "google.cloud.ndb._cache._GlobalCacheUnwatchBatch",
    "google.cloud.ndb._cache._GlobalCacheWatchBatch"
  ],
  "google.cloud.ndb._cache._GlobalCacheDeleteBatch.make_call": [
    "google.cloud.ndb._cache._GlobalCacheUnwatchBatch",
    "google.cloud.ndb._cache._GlobalCacheWatchBatch"
  ],
  "google.cloud.ndb._cache._GlobalCacheSetBatch.add": [
    "google.cloud.ndb._cache._GlobalCacheSetIfNotExistsBatch"
  ],
  "google.cloud.ndb._cache._GlobalCacheSetBatch.future_info": [
    "google.cloud.ndb._cache._GlobalCacheCompareAndSwapBatch",
    "google.cloud.ndb._cache._GlobalCacheSetIfNotExistsBatch"
  ],
  "google.cloud.ndb._cache._GlobalCacheSetBatch.make_call": [
    "google.cloud.ndb._cache._GlobalCacheCompareAndSwapBatch",
    "google.cloud.ndb._cache._GlobalCacheSetIfNotExistsBatch"
  ],
  "google.cloud.ndb._options.Options.__init__": [
    "google.cloud.ndb._options.ReadOptions"
  ],
  "google.cloud.ndb._options.ReadOptions.__init__": [
    "google.cloud.ndb.query.QueryOptions",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.query.QueryOptions"
  ],
  "google.cloud.ndb.context._ContextTuple.__new__": [
    "google.cloud.ndb.context._Context"
  ],
  "google.cloud.ndb.global_cache.GlobalCache.clear": [
    "google.cloud.ndb.global_cache.MemcacheCache",
    "google.cloud.ndb.global_cache.RedisCache",
    "google.cloud.ndb.global_cache._InProcessGlobalCache"
  ],
  "google.cloud.ndb.global_cache.GlobalCache.compare_and_swap": [
    "google.cloud.ndb.global_cache.MemcacheCache",
    "google.cloud.ndb.global_cache.RedisCache",
    "google.cloud.ndb.global_cache._InProcessGlobalCache"
  ],
  "google.cloud.ndb.global_cache.GlobalCache.delete": [
    "google.cloud.ndb.global_cache.MemcacheCache",
    "google.cloud.ndb.global_cache.RedisCache",
    "google.cloud.ndb.global_cache._InProcessGlobalCache"
  ],
  "google.cloud.ndb.global_cache.GlobalCache.get": [
    "google.cloud.ndb.global_cache.MemcacheCache",
    "google.cloud.ndb.global_cache.RedisCache",
    "google.cloud.ndb.global_cache._InProcessGlobalCache"
  ],
  "google.cloud.ndb.global_cache.GlobalCache.set": [
    "google.cloud.ndb.global_cache.MemcacheCache",
    "google.cloud.ndb.global_cache.RedisCache",
    "google.cloud.ndb.global_cache._InProcessGlobalCache"
  ],
  "google.cloud.ndb.global_cache.GlobalCache.unwatch": [
    "google.cloud.ndb.global_cache.MemcacheCache",
    "google.cloud.ndb.global_cache.RedisCache",
    "google.cloud.ndb.global_cache._InProcessGlobalCache"
  ],
  "google.cloud.ndb.global_cache.GlobalCache.watch": [
    "google.cloud.ndb.global_cache.MemcacheCache",
    "google.cloud.ndb.global_cache.RedisCache",
    "google.cloud.ndb.global_cache._InProcessGlobalCache"
  ],
  "google.cloud.ndb.model.BlobProperty.__init__": [
    "google.cloud.ndb.model.CompressedTextProperty",
    "google.cloud.ndb.model.JsonProperty",
    "google.cloud.ndb.model.LocalStructuredProperty"
  ],
  "google.cloud.ndb.model.GenericProperty.__init__": [
    "google.cloud.ndb.model.ComputedProperty"
  ],
  "google.cloud.ndb.model.Property.IN": [
    "google.cloud.ndb.model.StructuredProperty"
  ],
  "google.cloud.ndb.model.Property.__init__": [
    "google.cloud.ndb.model.BlobProperty",
    "google.cloud.ndb.model.DateTimeProperty",
    "google.cloud.ndb.model.GenericProperty",
    "google.cloud.ndb.model.KeyProperty",
    "google.cloud.ndb.model.ModelKey",
    "google.cloud.ndb.model.StructuredProperty",
    "google.cloud.ndb.model.TextProperty",
    "google.cloud.ndb.model.UserProperty"
  ],
  "google.cloud.ndb.model.StringProperty.__init__": [
    "google.cloud.ndb.polymodel._ClassKeyProperty",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.polymodel._ClassKeyProperty"
  ],
  "google.cloud.ndb.model.TextProperty.__init__": [
    "google.cloud.ndb.model.StringProperty"
  ],
  "google.cloud.ndb.query.Node.__eq__": [
    "google.cloud.ndb.query.ConjunctionNode",
    "google.cloud.ndb.query.DisjunctionNode",
    "google.cloud.ndb.query.FalseNode",
    "google.cloud.ndb.query.FilterNode",
    "google.cloud.ndb.query.ParameterNode",
    "google.cloud.ndb.query.PostFilterNode"
  ],
  "google.cloud.ndb.query.Node.__new__": [
    "google.cloud.ndb.query.ConjunctionNode",
    "google.cloud.ndb.query.DisjunctionNode",
    "google.cloud.ndb.query.FilterNode",
    "google.cloud.ndb.query.ParameterNode",
    "google.cloud.ndb.query.PostFilterNode"
  ],
  "google.cloud.ndb.query.Node.resolve": [
    "google.cloud.ndb.query.ConjunctionNode",
    "google.cloud.ndb.query.DisjunctionNode",
    "google.cloud.ndb.query.ParameterNode"
  ],
  "google.cloud.ndb.query.ParameterizedThing.__eq__": [
    "google.cloud.ndb.query.Parameter",
    "google.cloud.ndb.query.ParameterizedFunction"
  ],
  "google.cloud.ndb.tasklets.Future.__init__": [
    "google.cloud.ndb.tasklets._MultiFuture",
    "google.cloud.ndb.tasklets._TaskletFuture"
  ],
  "google.cloud.ndb.tasklets.Future.cancel": [
    "google.cloud.ndb.tasklets._MultiFuture",
    "google.cloud.ndb.tasklets._TaskletFuture"
  ],
  "google.protobuf.descriptor.DescriptorBase.GetOptions": [
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.EnumDescriptor",
    "google.protobuf.descriptor.EnumValueDescriptor",
    "google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.descriptor.MethodDescriptor",
    "google.protobuf.descriptor.ServiceDescriptor"
  ],
  "google.protobuf.descriptor.DescriptorBase.__init__": [
    "google.protobuf.descriptor.EnumValueDescriptor",
    "google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.descriptor.MethodDescriptor",
    "google.protobuf.descriptor._NestedDescriptorBase"
  ],
  "google.protobuf.descriptor._NestedDescriptorBase.CopyToProto": [
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.EnumDescriptor",
    "google.protobuf.descriptor.ServiceDescriptor"
  ],
  "google.protobuf.descriptor._NestedDescriptorBase.__init__": [
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.EnumDescriptor",
    "google.protobuf.descriptor.ServiceDescriptor"
  ],
  "google.protobuf.internal.containers.BaseContainer.__init__": [
    "google.protobuf.internal.containers.RepeatedCompositeFieldContainer",
    "google.protobuf.internal.containers.RepeatedScalarFieldContainer"
  ],
  "google.protobuf.internal.message_listener.MessageListener.Modified": [
    "google.protobuf.internal.message_listener.NullMessageListener"
  ],
  "google.protobuf.internal.type_checkers.TypeChecker.__init__": [
    "google.protobuf.internal.type_checkers.TypeCheckerWithDefault"
  ],
  "google.protobuf.message.Message.ClearField": [
    "google.protobuf.any_pb2.Any",
    "google.protobuf.api_pb2.Api",
    "google.protobuf.api_pb2.Method",
    "google.protobuf.api_pb2.Mixin",
    "google.protobuf.compiler.plugin_pb2.CodeGeneratorRequest",
    "google.protobuf.compiler.plugin_pb2.CodeGeneratorResponse",
    "google.protobuf.compiler.plugin_pb2.CodeGeneratorResponse.File",
    "google.protobuf.compiler.plugin_pb2.Version",
    "google.protobuf.descriptor_pb2.DescriptorProto",
    "google.protobuf.descriptor_pb2.DescriptorProto.ExtensionRange",
    "google.protobuf.descriptor_pb2.DescriptorProto.ReservedRange",
    "google.protobuf.descriptor_pb2.EnumDescriptorProto",
    "google.protobuf.descriptor_pb2.EnumDescriptorProto.EnumReservedRange",
    "google.protobuf.descriptor_pb2.EnumOptions",
    "google.protobuf.descriptor_pb2.EnumValueDescriptorProto",
    "google.protobuf.descriptor_pb2.EnumValueOptions",
    "google.protobuf.descriptor_pb2.ExtensionRangeOptions",
    "google.protobuf.descriptor_pb2.FieldDescriptorProto",
    "google.protobuf.descriptor_pb2.FieldOptions",
    "google.protobuf.descriptor_pb2.FileDescriptorProto",
    "google.protobuf.descriptor_pb2.FileDescriptorSet",
    "google.protobuf.descriptor_pb2.FileOptions",
    "google.protobuf.descriptor_pb2.GeneratedCodeInfo",
    "google.protobuf.descriptor_pb2.GeneratedCodeInfo.Annotation",
    "google.protobuf.descriptor_pb2.MessageOptions",
    "google.protobuf.descriptor_pb2.MethodDescriptorProto",
    "google.protobuf.descriptor_pb2.MethodOptions",
    "google.protobuf.descriptor_pb2.OneofDescriptorProto",
    "google.protobuf.descriptor_pb2.OneofOptions",
    "google.protobuf.descriptor_pb2.ServiceDescriptorProto",
    "google.protobuf.descriptor_pb2.ServiceOptions",
    "google.protobuf.descriptor_pb2.SourceCodeInfo",
    "google.protobuf.descriptor_pb2.SourceCodeInfo.Location",
    "google.protobuf.descriptor_pb2.UninterpretedOption",
    "google.protobuf.descriptor_pb2.UninterpretedOption.NamePart",
    "google.protobuf.duration_pb2.Duration",
    "google.protobuf.field_mask_pb2.FieldMask",
    "google.protobuf.source_context_pb2.SourceContext",
    "google.protobuf.struct_pb2.ListValue",
    "google.protobuf.struct_pb2.Struct",
    "google.protobuf.struct_pb2.Struct.FieldsEntry",
    "google.protobuf.struct_pb2.Value",
    "google.protobuf.timestamp_pb2.Timestamp",
    "google.protobuf.type_pb2.Enum",
    "google.protobuf.type_pb2.EnumValue",
    "google.protobuf.type_pb2.Field",
    "google.protobuf.type_pb2.Option",
    "google.protobuf.type_pb2.Type",
    "google.protobuf.wrappers_pb2.BoolValue",
    "google.protobuf.wrappers_pb2.BytesValue",
    "google.protobuf.wrappers_pb2.DoubleValue",
    "google.protobuf.wrappers_pb2.FloatValue",
    "google.protobuf.wrappers_pb2.Int32Value",
    "google.protobuf.wrappers_pb2.Int64Value",
    "google.protobuf.wrappers_pb2.StringValue",
    "google.protobuf.wrappers_pb2.UInt32Value",
    "google.protobuf.wrappers_pb2.UInt64Value",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.any_pb2.Any",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.api_pb2.Api",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.api_pb2.Method",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.api_pb2.Mixin",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.compiler.plugin_pb2.CodeGeneratorRequest",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.compiler.plugin_pb2.CodeGeneratorResponse",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.compiler.plugin_pb2.CodeGeneratorResponse.File",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.compiler.plugin_pb2.Version",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor_pb2.DescriptorProto",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor_pb2.DescriptorProto.ExtensionRange",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor_pb2.DescriptorProto.ReservedRange",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor_pb2.EnumDescriptorProto",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor_pb2.EnumDescriptorProto.EnumReservedRange",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor_pb2.EnumOptions",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor_pb2.EnumValueDescriptorProto",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor_pb2.EnumValueOptions",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor_pb2.ExtensionRangeOptions",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor_pb2.FieldDescriptorProto",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor_pb2.FieldOptions",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor_pb2.FileDescriptorProto",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor_pb2.FileDescriptorSet",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor_pb2.FileOptions",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor_pb2.GeneratedCodeInfo",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor_pb2.GeneratedCodeInfo.Annotation",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor_pb2.MessageOptions",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor_pb2.MethodDescriptorProto",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor_pb2.MethodOptions",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor_pb2.OneofDescriptorProto",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor_pb2.OneofOptions",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor_pb2.ServiceDescriptorProto",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor_pb2.ServiceOptions",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor_pb2.SourceCodeInfo",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor_pb2.SourceCodeInfo.Location",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor_pb2.UninterpretedOption",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor_pb2.UninterpretedOption.NamePart",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.duration_pb2.Duration",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.field_mask_pb2.FieldMask",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.source_context_pb2.SourceContext",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.struct_pb2.ListValue",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.struct_pb2.Struct",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.struct_pb2.Struct.FieldsEntry",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.struct_pb2.Value",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.timestamp_pb2.Timestamp",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.type_pb2.Enum",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.type_pb2.EnumValue",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.type_pb2.Field",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.type_pb2.Option",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.type_pb2.Type",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.wrappers_pb2.BoolValue",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.wrappers_pb2.BytesValue",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.wrappers_pb2.DoubleValue",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.wrappers_pb2.FloatValue",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.wrappers_pb2.Int32Value",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.wrappers_pb2.Int64Value",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.wrappers_pb2.StringValue",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.wrappers_pb2.UInt32Value",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.wrappers_pb2.UInt64Value",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.common_pb2.AvailableAbility",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.common_pb2.ImageData",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.common_pb2.Point",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.common_pb2.Point2D",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.common_pb2.PointI",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.common_pb2.RectangleI",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.common_pb2.Size2DI",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.data_pb2.AbilityData",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.data_pb2.BuffData",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.data_pb2.DamageBonus",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.data_pb2.EffectData",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.data_pb2.UnitTypeData",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.data_pb2.UpgradeData",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.data_pb2.Weapon",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.debug_pb2.Color",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.debug_pb2.DebugBox",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.debug_pb2.DebugCommand",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.debug_pb2.DebugCreateUnit",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.debug_pb2.DebugDraw",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.debug_pb2.DebugEndGame",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.debug_pb2.DebugKillUnit",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.debug_pb2.DebugLine",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.debug_pb2.DebugSetScore",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.debug_pb2.DebugSetUnitValue",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.debug_pb2.DebugSphere",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.debug_pb2.DebugTestProcess",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.debug_pb2.DebugText",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.debug_pb2.Line",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.query_pb2.RequestQuery",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.query_pb2.RequestQueryAvailableAbilities",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.query_pb2.RequestQueryBuildingPlacement",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.query_pb2.RequestQueryPathing",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.query_pb2.ResponseQuery",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.query_pb2.ResponseQueryAvailableAbilities",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.query_pb2.ResponseQueryBuildingPlacement",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.query_pb2.ResponseQueryPathing",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.raw_pb2.ActionRaw",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.raw_pb2.ActionRawCameraMove",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.raw_pb2.ActionRawToggleAutocast",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.raw_pb2.ActionRawUnitCommand",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.raw_pb2.Effect",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.raw_pb2.Event",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.raw_pb2.MapState",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.raw_pb2.ObservationRaw",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.raw_pb2.PassengerUnit",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.raw_pb2.PlayerRaw",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.raw_pb2.PowerSource",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.raw_pb2.RadarRing",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.raw_pb2.RallyTarget",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.raw_pb2.StartRaw",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.raw_pb2.Unit",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.raw_pb2.UnitOrder",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.Action",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.ActionChat",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.ActionError",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.ActionObserverCameraFollowPlayer",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.ActionObserverCameraFollowUnits",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.ActionObserverCameraMove",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.ActionObserverPlayerPerspective",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.ChatReceived",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.InterfaceOptions",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.LocalMap",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.Observation",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.ObserverAction",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.PlayerCommon",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.PlayerInfo",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.PlayerInfoExtra",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.PlayerResult",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.PlayerSetup",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.PortSet",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.Request",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.RequestAction",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.RequestCreateGame",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.RequestData",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.RequestDebug",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.RequestJoinGame",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.RequestMapCommand",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.RequestObservation",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.RequestObserverAction",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.RequestReplayInfo",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.RequestSaveMap",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.RequestStartReplay",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.RequestStep",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.Response",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.ResponseAction",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.ResponseAvailableMaps",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.ResponseCreateGame",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.ResponseData",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.ResponseGameInfo",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.ResponseJoinGame",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.ResponseMapCommand",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.ResponseObservation",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.ResponsePing",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.ResponseReplayInfo",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.ResponseRestartGame",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.ResponseSaveMap",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.ResponseSaveReplay",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.ResponseStartReplay",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.ResponseStep",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.SpatialCameraSetup",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.score_pb2.CategoryScoreDetails",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.score_pb2.Score",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.score_pb2.ScoreDetails",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.score_pb2.VitalScoreDetails",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.spatial_pb2.ActionSpatial",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.spatial_pb2.ActionSpatialCameraMove",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.spatial_pb2.ActionSpatialUnitCommand",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.spatial_pb2.ActionSpatialUnitSelectionPoint",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.spatial_pb2.ActionSpatialUnitSelectionRect",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.spatial_pb2.FeatureLayers",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.spatial_pb2.FeatureLayersMinimap",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.spatial_pb2.ObservationFeatureLayer",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.spatial_pb2.ObservationRender",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.ui_pb2.ActionCargoPanelUnload",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.ui_pb2.ActionControlGroup",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.ui_pb2.ActionMultiPanel",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.ui_pb2.ActionProductionPanelRemoveFromQueue",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.ui_pb2.ActionSelectArmy",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.ui_pb2.ActionSelectIdleWorker",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.ui_pb2.ActionSelectWarpGates",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.ui_pb2.ActionToggleAutocast",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.ui_pb2.ActionUI",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.ui_pb2.BuildItem",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.ui_pb2.CargoPanel",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.ui_pb2.ControlGroup",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.ui_pb2.MultiPanel",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.ui_pb2.ObservationUI",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.ui_pb2.ProductionPanel",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.ui_pb2.SinglePanel",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.ui_pb2.UnitInfo",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.autotune_results_pb2.AutotuneResults",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.autotune_results_pb2.AutotuneResults.Entry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.service.hlo_pb2.BufferAllocationProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.service.hlo_pb2.BufferAllocationProto.Assigned",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.service.hlo_pb2.BufferAssignmentProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.service.hlo_pb2.BufferAssignmentProto.BufferAlias",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.service.hlo_pb2.CrossProgramPrefetch",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.service.hlo_pb2.DynamicParameterBindingProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.service.hlo_pb2.DynamicParameterBindingProto.Binding",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.service.hlo_pb2.EntryFunctionAttributes",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.service.hlo_pb2.EntryFunctionAttributes.BufferParameterAttributes",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.service.hlo_pb2.EntryFunctionAttributes.ShapeIndex",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.service.hlo_pb2.HeapSimulatorTrace",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.service.hlo_pb2.HeapSimulatorTrace.Event",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.service.hlo_pb2.HloComputationProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.service.hlo_pb2.HloInputOutputAliasProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.service.hlo_pb2.HloInputOutputAliasProto.AliasEntryProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.service.hlo_pb2.HloInstructionProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.service.hlo_pb2.HloInstructionProto.SliceDimensions",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.service.hlo_pb2.HloModuleGroupProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.service.hlo_pb2.HloModuleMetadataProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.service.hlo_pb2.HloModuleProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.service.hlo_pb2.HloModuleProto.ProfileInfo",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.service.hlo_pb2.HloPassMetadata",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.service.hlo_pb2.HloProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.service.hlo_pb2.HloScheduleProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.service.hlo_pb2.HloScheduleProto.InstructionSequence",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.service.hlo_pb2.HloScheduleProto.SequencesEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.service.hlo_pb2.HloSnapshot",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.service.hlo_pb2.LogicalBufferProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.service.hlo_pb2.LogicalBufferProto.Location",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.service.hlo_pb2.XlaRuntimeExecutableProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.service.metrics_pb2.CompilationLogEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.xla_data_pb2.ChannelHandle",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.xla_data_pb2.CholeskyOptions",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.xla_data_pb2.ComputationStats",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.xla_data_pb2.ConvolutionDimensionNumbers",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.xla_data_pb2.DeviceAssignmentProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.xla_data_pb2.DeviceAssignmentProto.ComputationDevice",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.xla_data_pb2.DeviceHandle",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.xla_data_pb2.DotDimensionNumbers",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.xla_data_pb2.ExecutionHandle",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.xla_data_pb2.ExecutionProfile",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.xla_data_pb2.FrontendAttributes",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.xla_data_pb2.FrontendAttributes.MapEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.xla_data_pb2.GatherDimensionNumbers",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.xla_data_pb2.GlobalDataHandle",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.xla_data_pb2.LayoutProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.xla_data_pb2.LiteralProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.xla_data_pb2.OpMetadata",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.xla_data_pb2.OpMetadata.ProfileInfo",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.xla_data_pb2.OpSharding",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.xla_data_pb2.OutputOperandAliasing",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.xla_data_pb2.PaddingConfig",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.xla_data_pb2.PaddingConfig.PaddingConfigDimension",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.xla_data_pb2.ParameterReplication",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.xla_data_pb2.PrecisionConfig",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.xla_data_pb2.ProgramShapeProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.xla_data_pb2.ReplicaGroup",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.xla_data_pb2.ScatterDimensionNumbers",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.xla_data_pb2.ShapeProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.xla_data_pb2.SourceTarget",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.xla_data_pb2.TileProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.xla_data_pb2.TriangularSolveOptions",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.xla_data_pb2.WhileLoopBackendConfig",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.xla_data_pb2.WhileLoopBackendConfig.KnownTripCount",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.xla_data_pb2.Window",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.xla_data_pb2.WindowDimension",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.example.example_parser_configuration_pb2.ExampleParserConfiguration",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.example.example_parser_configuration_pb2.ExampleParserConfiguration.FeatureMapEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.example.example_parser_configuration_pb2.FeatureConfiguration",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.example.example_parser_configuration_pb2.FixedLenFeatureProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.example.example_parser_configuration_pb2.VarLenFeatureProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.example.example_pb2.Example",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.example.example_pb2.SequenceExample",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.example.feature_pb2.BytesList",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.example.feature_pb2.Feature",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.example.feature_pb2.FeatureList",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.example.feature_pb2.FeatureLists",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.example.feature_pb2.FeatureLists.FeatureListEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.example.feature_pb2.Features",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.example.feature_pb2.Features.FeatureEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.example.feature_pb2.FloatList",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.example.feature_pb2.Int64List",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.allocation_description_pb2.AllocationDescription",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.api_def_pb2.ApiDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.api_def_pb2.ApiDef.Arg",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.api_def_pb2.ApiDef.Attr",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.api_def_pb2.ApiDef.Endpoint",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.api_def_pb2.ApiDefs",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.attr_value_pb2.AttrValue",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.attr_value_pb2.AttrValue.ListValue",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.attr_value_pb2.NameAttrList",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.attr_value_pb2.NameAttrList.AttrEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.cost_graph_pb2.CostGraphDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.cost_graph_pb2.CostGraphDef.AggregatedCost",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.cost_graph_pb2.CostGraphDef.Node",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.cost_graph_pb2.CostGraphDef.Node.InputInfo",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.cost_graph_pb2.CostGraphDef.Node.OutputInfo",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.dataset_metadata_pb2.Metadata",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.dataset_options_pb2.AutotuneOptions",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.dataset_options_pb2.CardinalityOptions",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.dataset_options_pb2.DistributeOptions",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.dataset_options_pb2.OptimizationOptions",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.dataset_options_pb2.Options",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.dataset_options_pb2.ThreadingOptions",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.dataset_pb2.CompressedComponentMetadata",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.dataset_pb2.CompressedElement",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.dataset_pb2.UncompressedElement",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.device_attributes_pb2.DeviceAttributes",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.device_attributes_pb2.DeviceLocality",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.device_attributes_pb2.InterconnectLink",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.device_attributes_pb2.LocalLinks",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.full_type_pb2.FullTypeDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.function_pb2.FunctionDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.function_pb2.FunctionDef.ArgAttrEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.function_pb2.FunctionDef.ArgAttrs",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.function_pb2.FunctionDef.ArgAttrs.AttrEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.function_pb2.FunctionDef.AttrEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.function_pb2.FunctionDef.ControlRetEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.function_pb2.FunctionDef.ResourceArgUniqueIdEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.function_pb2.FunctionDef.RetEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.function_pb2.FunctionDefLibrary",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.function_pb2.GradientDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.function_pb2.RegisteredGradient",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.graph_pb2.GraphDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.graph_transfer_info_pb2.GraphTransferConstNodeInfo",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.graph_transfer_info_pb2.GraphTransferGraphInputNodeInfo",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.graph_transfer_info_pb2.GraphTransferGraphOutputNodeInfo",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.graph_transfer_info_pb2.GraphTransferInfo",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.graph_transfer_info_pb2.GraphTransferNodeInfo",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.graph_transfer_info_pb2.GraphTransferNodeInput",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.graph_transfer_info_pb2.GraphTransferNodeInputInfo",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.graph_transfer_info_pb2.GraphTransferNodeOutputInfo",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.kernel_def_pb2.KernelDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.kernel_def_pb2.KernelDef.AttrConstraint",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.kernel_def_pb2.KernelList",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.log_memory_pb2.MemoryLogRawAllocation",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.log_memory_pb2.MemoryLogRawDeallocation",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.log_memory_pb2.MemoryLogStep",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.log_memory_pb2.MemoryLogTensorAllocation",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.log_memory_pb2.MemoryLogTensorDeallocation",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.log_memory_pb2.MemoryLogTensorOutput",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.model_pb2.ModelProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.model_pb2.ModelProto.Node",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.model_pb2.ModelProto.Node.Parameter",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.model_pb2.ModelProto.NodesEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.model_pb2.ModelProto.OptimizationParams",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.node_def_pb2.NodeDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.node_def_pb2.NodeDef.AttrEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.node_def_pb2.NodeDef.ExperimentalDebugInfo",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.op_def_pb2.OpDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.op_def_pb2.OpDef.ArgDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.op_def_pb2.OpDef.AttrDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.op_def_pb2.OpDeprecation",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.op_def_pb2.OpList",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.optimized_function_graph_pb2.OptimizedFunctionGraph",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.optimized_function_graph_pb2.OptimizedFunctionGraph.NodeNameToControlRetEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.reader_base_pb2.ReaderBaseState",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.resource_handle_pb2.ResourceHandleProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.resource_handle_pb2.ResourceHandleProto.DtypeAndShape",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.step_stats_pb2.AllocationRecord",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.step_stats_pb2.AllocatorMemoryUsed",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.step_stats_pb2.DeviceStepStats",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.step_stats_pb2.DeviceStepStats.ThreadNamesEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.step_stats_pb2.MemoryStats",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.step_stats_pb2.NodeExecStats",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.step_stats_pb2.NodeOutput",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.step_stats_pb2.StepStats",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.summary_pb2.Summary",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.summary_pb2.Summary.Audio",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.summary_pb2.Summary.Image",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.summary_pb2.Summary.Value",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.summary_pb2.SummaryDescription",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.summary_pb2.SummaryMetadata",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.summary_pb2.SummaryMetadata.PluginData",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.tensor_description_pb2.TensorDescription",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.tensor_pb2.TensorProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.tensor_pb2.VariantTensorDataProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.tensor_shape_pb2.TensorShapeProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.tensor_shape_pb2.TensorShapeProto.Dim",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.tensor_slice_pb2.TensorSliceProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.tensor_slice_pb2.TensorSliceProto.Extent",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.types_pb2.SerializedDType",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.variable_pb2.SaveSliceInfoDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.variable_pb2.VariableDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.versions_pb2.VersionDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.cluster_pb2.ClusterDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.cluster_pb2.JobDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.cluster_pb2.JobDef.TasksEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.composite_tensor_variant_pb2.CompositeTensorVariantMetadata",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.config_pb2.CallableOptions",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.config_pb2.CallableOptions.FeedDevicesEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.config_pb2.CallableOptions.FetchDevicesEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.config_pb2.ConfigProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.config_pb2.ConfigProto.DeviceCountEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.config_pb2.ConfigProto.Experimental",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.config_pb2.GPUOptions",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.config_pb2.GPUOptions.Experimental",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.config_pb2.GPUOptions.Experimental.VirtualDevices",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.config_pb2.GraphOptions",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.config_pb2.OptimizerOptions",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.config_pb2.RunMetadata",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.config_pb2.RunMetadata.FunctionGraphs",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.config_pb2.RunOptions",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.config_pb2.RunOptions.Experimental",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.config_pb2.RunOptions.Experimental.RunHandlerPoolOptions",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.config_pb2.SessionMetadata",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.config_pb2.TensorConnection",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.config_pb2.ThreadPoolOptionProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.control_flow_pb2.CondContextDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.control_flow_pb2.ControlFlowContextDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.control_flow_pb2.ValuesDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.control_flow_pb2.ValuesDef.ExternalValuesEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.control_flow_pb2.WhileContextDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.coordination_config_pb2.CoordinatedJob",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.coordination_config_pb2.CoordinationServiceConfig",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.core_platform_payloads_pb2.ErrorSourceProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.data_service_pb2.CrossTrainerCacheOptions",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.data_service_pb2.DataServiceConfig",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.data_service_pb2.DataServiceMetadata",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.data_service_pb2.ProcessingModeDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.debug_event_pb2.CodeLocation",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.debug_event_pb2.DebugEvent",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.debug_event_pb2.DebugMetadata",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.debug_event_pb2.DebuggedDevice",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.debug_event_pb2.DebuggedGraph",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.debug_event_pb2.Execution",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.debug_event_pb2.GraphExecutionTrace",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.debug_event_pb2.GraphOpCreation",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.debug_event_pb2.SourceFile",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.debug_event_pb2.StackFrameWithId",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.debug_pb2.DebugOptions",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.debug_pb2.DebugTensorWatch",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.debug_pb2.DebuggedSourceFile",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.debug_pb2.DebuggedSourceFiles",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.device_filters_pb2.ClusterDeviceFilters",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.device_filters_pb2.JobDeviceFilters",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.device_filters_pb2.JobDeviceFilters.TasksEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.device_filters_pb2.TaskDeviceFilters",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.device_properties_pb2.DeviceProperties",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.device_properties_pb2.DeviceProperties.EnvironmentEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.device_properties_pb2.NamedDevice",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.distributed_runtime_payloads_pb2.GrpcPayloadContainer",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.distributed_runtime_payloads_pb2.GrpcPayloadContainer.PayloadsEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.fingerprint_pb2.FingerprintDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.graph_debug_info_pb2.GraphDebugInfo",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.graph_debug_info_pb2.GraphDebugInfo.FileLineCol",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.graph_debug_info_pb2.GraphDebugInfo.StackTrace",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.graph_debug_info_pb2.GraphDebugInfo.TracesEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.meta_graph_pb2.AssetFileDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.meta_graph_pb2.CollectionDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.meta_graph_pb2.CollectionDef.AnyList",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.meta_graph_pb2.CollectionDef.BytesList",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.meta_graph_pb2.CollectionDef.FloatList",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.meta_graph_pb2.CollectionDef.Int64List",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.meta_graph_pb2.CollectionDef.NodeList",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.meta_graph_pb2.MetaGraphDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.meta_graph_pb2.MetaGraphDef.CollectionDefEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.meta_graph_pb2.MetaGraphDef.MetaInfoDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.meta_graph_pb2.MetaGraphDef.MetaInfoDef.FunctionAliasesEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.meta_graph_pb2.MetaGraphDef.SignatureDefEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.meta_graph_pb2.SignatureDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.meta_graph_pb2.SignatureDef.InputsEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.meta_graph_pb2.SignatureDef.OutputsEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.meta_graph_pb2.TensorInfo",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.meta_graph_pb2.TensorInfo.CompositeTensor",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.meta_graph_pb2.TensorInfo.CooSparse",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.named_tensor_pb2.NamedTensorProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.queue_runner_pb2.QueueRunnerDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.remote_tensor_handle_pb2.RemoteTensorHandle",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.remote_tensor_handle_pb2.ResourceDtypeAndShape",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.rewriter_config_pb2.AutoParallelOptions",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.rewriter_config_pb2.RewriterConfig",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.rewriter_config_pb2.RewriterConfig.CustomGraphOptimizer",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.rewriter_config_pb2.RewriterConfig.CustomGraphOptimizer.ParameterMapEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.rewriter_config_pb2.ScopedAllocatorOptions",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.saved_model_pb2.SavedModel",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.saved_object_graph_pb2.CapturedTensor",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.saved_object_graph_pb2.FunctionSpec",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.saved_object_graph_pb2.SaveableObject",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.saved_object_graph_pb2.SavedAsset",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.saved_object_graph_pb2.SavedBareConcreteFunction",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.saved_object_graph_pb2.SavedConcreteFunction",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.saved_object_graph_pb2.SavedConstant",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.saved_object_graph_pb2.SavedFunction",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.saved_object_graph_pb2.SavedObject",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.saved_object_graph_pb2.SavedObject.SaveableObjectsEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.saved_object_graph_pb2.SavedObjectGraph",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.saved_object_graph_pb2.SavedObjectGraph.ConcreteFunctionsEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.saved_object_graph_pb2.SavedResource",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.saved_object_graph_pb2.SavedUserObject",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.saved_object_graph_pb2.SavedVariable",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.saver_pb2.SaverDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.service_config_pb2.DispatcherConfig",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.service_config_pb2.WorkerConfig",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.snapshot_pb2.DistributedSnapshotMetadata",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.snapshot_pb2.SnapshotMetadataRecord",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.snapshot_pb2.SnapshotRecord",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.snapshot_pb2.SnapshotTensorMetadata",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.snapshot_pb2.TensorMetadata",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.struct_pb2.BoundedTensorSpecProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.struct_pb2.DictValue",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.struct_pb2.DictValue.FieldsEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.struct_pb2.ListValue",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.struct_pb2.NamedTupleValue",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.struct_pb2.PairValue",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.struct_pb2.StructuredValue",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.struct_pb2.TensorSpecProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.struct_pb2.TupleValue",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.struct_pb2.TypeSpecProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tensor_bundle_pb2.BundleEntryProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tensor_bundle_pb2.BundleHeaderProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tensorflow_server_pb2.ServerDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tpu.compilation_result_pb2.CompilationResultProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tpu.dynamic_padding_pb2.PaddingMap",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tpu.optimization_parameters_pb2.AdadeltaParameters",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tpu.optimization_parameters_pb2.AdagradMomentumParameters",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tpu.optimization_parameters_pb2.AdamParameters",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tpu.optimization_parameters_pb2.BoundedAdagradParameters",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tpu.optimization_parameters_pb2.CenteredRmsPropParameters",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tpu.optimization_parameters_pb2.ClippingLimits",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tpu.optimization_parameters_pb2.DynamicLearningRate",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tpu.optimization_parameters_pb2.FrequencyEstimatorParameters",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tpu.optimization_parameters_pb2.FtrlParameters",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tpu.optimization_parameters_pb2.HotIdReplicationConfiguration",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tpu.optimization_parameters_pb2.LearningRate",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tpu.optimization_parameters_pb2.MdlAdagradLightParameters",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tpu.optimization_parameters_pb2.MomentumParameters",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tpu.optimization_parameters_pb2.OnlineYogiParameters",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tpu.optimization_parameters_pb2.OptimizationParameters",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tpu.optimization_parameters_pb2.ProximalAdagradParameters",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tpu.optimization_parameters_pb2.ProximalYogiParameters",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tpu.optimization_parameters_pb2.RmsPropParameters",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tpu.optimization_parameters_pb2.SimulatedQuantization",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tpu.optimization_parameters_pb2.StateVariableSpecification",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tpu.optimization_parameters_pb2.StateVariableSpecification.FillWithConstant",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tpu.optimization_parameters_pb2.UserDefinedProgramParameters",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tpu.topology_pb2.TPUHardwareFeature",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tpu.topology_pb2.TopologyProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tpu.tpu_embedding_configuration_pb2.TPUEmbeddingConfiguration",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tpu.tpu_embedding_configuration_pb2.TPUEmbeddingConfiguration.FeatureDescriptor",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tpu.tpu_embedding_configuration_pb2.TPUEmbeddingConfiguration.SpmdSharding",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tpu.tpu_embedding_configuration_pb2.TPUEmbeddingConfiguration.TableDescriptor",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.trackable_object_graph_pb2.RegisteredSaver",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.trackable_object_graph_pb2.TrackableObjectGraph",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.trackable_object_graph_pb2.TrackableObjectGraph.TrackableObject",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.trackable_object_graph_pb2.TrackableObjectGraph.TrackableObject.ObjectReference",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.trackable_object_graph_pb2.TrackableObjectGraph.TrackableObject.SerializedTensor",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.trackable_object_graph_pb2.TrackableObjectGraph.TrackableObject.SlotVariableReference",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.transport_options_pb2.RecvBufRespExtra",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.verifier_config_pb2.VerifierConfig",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.util.event_pb2.Event",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.util.event_pb2.LogMessage",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.util.event_pb2.RequestedExitCode",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.util.event_pb2.SessionLog",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.util.event_pb2.SourceMetadata",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.util.event_pb2.TaggedRunMetadata",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.util.event_pb2.WatchdogConfig",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.util.event_pb2.WorkerHeartbeatRequest",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.util.event_pb2.WorkerHeartbeatResponse",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.util.memmapped_file_system_pb2.MemmappedFileSystemDirectory",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.util.memmapped_file_system_pb2.MemmappedFileSystemDirectoryElement",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.util.saved_tensor_slice_pb2.SavedSlice",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.util.saved_tensor_slice_pb2.SavedSliceMeta",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.util.saved_tensor_slice_pb2.SavedTensorSliceMeta",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.util.saved_tensor_slice_pb2.SavedTensorSlices",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.python.keras.protobuf.projector_config_pb2.EmbeddingInfo",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.python.keras.protobuf.projector_config_pb2.ProjectorConfig",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.python.keras.protobuf.projector_config_pb2.SpriteMetadata",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.python.keras.protobuf.saved_metadata_pb2.SavedMetadata",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.python.keras.protobuf.saved_metadata_pb2.SavedObject",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.python.keras.protobuf.versions_pb2.VersionDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.autotuning_pb2.AutotuneResult",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.autotuning_pb2.AutotuneResult.ConvKey",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.autotuning_pb2.AutotuneResult.CudaConvPlanKey",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.autotuning_pb2.AutotuneResult.FailureResult",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.autotuning_pb2.AutotuneResult.GemmKey",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.autotuning_pb2.AutotuningLog",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.autotuning_pb2.ComputeCapability",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.autotuning_pb2.CudnnVersion",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.bfc_memory_map_pb2.BinSummary",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.bfc_memory_map_pb2.MemAllocatorStats",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.bfc_memory_map_pb2.MemChunk",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.bfc_memory_map_pb2.MemoryDump",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.bfc_memory_map_pb2.SnapShot",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_config_pb2.CoordinatedJob",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_config_pb2.CoordinationServiceConfig",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_service_pb2.BarrierRequest",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_service_pb2.CancelBarrierRequest",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_service_pb2.CoordinatedTask",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_service_pb2.CoordinatedTaskStateInfo",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_service_pb2.CoordinationServiceError",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_service_pb2.DeleteKeyValueRequest",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_service_pb2.DeviceInfo",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_service_pb2.GetKeyValueDirRequest",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_service_pb2.GetKeyValueDirResponse",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_service_pb2.GetKeyValueRequest",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_service_pb2.GetKeyValueResponse",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_service_pb2.GetTaskStateRequest",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_service_pb2.GetTaskStateResponse",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_service_pb2.HeartbeatRequest",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_service_pb2.HeartbeatResponse",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_service_pb2.InsertKeyValueRequest",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_service_pb2.KeyValueEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_service_pb2.RegisterTaskRequest",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_service_pb2.RegisterTaskResponse",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_service_pb2.ReportErrorToServiceRequest",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_service_pb2.ReportErrorToTaskRequest",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_service_pb2.ResetTaskRequest",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_service_pb2.ShutdownTaskRequest",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_service_pb2.TryGetKeyValueRequest",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_service_pb2.TryGetKeyValueResponse",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_service_pb2.WaitForAllTasksRequest",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_service_pb2.WaitForAllTasksResponse",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.distributed_runtime_payloads_pb2.GrpcPayloadContainer",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.distributed_runtime_payloads_pb2.GrpcPayloadContainer.PayloadsEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.dnn_pb2.AlgorithmConfigProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.dnn_pb2.AlgorithmProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.dnn_pb2.AlgorithmProto.TuningKnobsEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.dnn_pb2.ConvolutionDescriptorProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.dnn_pb2.TensorDescriptorProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.histogram_pb2.HistogramProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.rpc_options_pb2.RPCOptions",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.test_log_pb2.AvailableDeviceInfo",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.test_log_pb2.BenchmarkEntries",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.test_log_pb2.BenchmarkEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.test_log_pb2.BenchmarkEntry.ExtrasEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.test_log_pb2.BuildConfiguration",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.test_log_pb2.CPUInfo",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.test_log_pb2.CPUInfo.CacheSizeEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.test_log_pb2.CommitId",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.test_log_pb2.EntryValue",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.test_log_pb2.GPUInfo",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.test_log_pb2.MachineConfiguration",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.test_log_pb2.MemoryInfo",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.test_log_pb2.MetricEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.test_log_pb2.PlatformInfo",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.test_log_pb2.RunConfiguration",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.test_log_pb2.RunConfiguration.EnvVarsEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.test_log_pb2.TestResults"
  ],
  "google.protobuf.message.Message.HasField": [
    "google.protobuf.api_pb2.Api",
    "google.protobuf.compiler.plugin_pb2.CodeGeneratorRequest",
    "google.protobuf.compiler.plugin_pb2.CodeGeneratorResponse",
    "google.protobuf.compiler.plugin_pb2.CodeGeneratorResponse.File",
    "google.protobuf.compiler.plugin_pb2.Version",
    "google.protobuf.descriptor_pb2.DescriptorProto",
    "google.protobuf.descriptor_pb2.DescriptorProto.ExtensionRange",
    "google.protobuf.descriptor_pb2.DescriptorProto.ReservedRange",
    "google.protobuf.descriptor_pb2.EnumDescriptorProto",
    "google.protobuf.descriptor_pb2.EnumDescriptorProto.EnumReservedRange",
    "google.protobuf.descriptor_pb2.EnumOptions",
    "google.protobuf.descriptor_pb2.EnumValueDescriptorProto",
    "google.protobuf.descriptor_pb2.EnumValueOptions",
    "google.protobuf.descriptor_pb2.FieldDescriptorProto",
    "google.protobuf.descriptor_pb2.FieldOptions",
    "google.protobuf.descriptor_pb2.FileDescriptorProto",
    "google.protobuf.descriptor_pb2.FileOptions",
    "google.protobuf.descriptor_pb2.GeneratedCodeInfo.Annotation",
    "google.protobuf.descriptor_pb2.MessageOptions",
    "google.protobuf.descriptor_pb2.MethodDescriptorProto",
    "google.protobuf.descriptor_pb2.MethodOptions",
    "google.protobuf.descriptor_pb2.OneofDescriptorProto",
    "google.protobuf.descriptor_pb2.ServiceDescriptorProto",
    "google.protobuf.descriptor_pb2.ServiceOptions",
    "google.protobuf.descriptor_pb2.SourceCodeInfo.Location",
    "google.protobuf.descriptor_pb2.UninterpretedOption",
    "google.protobuf.descriptor_pb2.UninterpretedOption.NamePart",
    "google.protobuf.struct_pb2.Struct.FieldsEntry",
    "google.protobuf.struct_pb2.Value",
    "google.protobuf.type_pb2.Enum",
    "google.protobuf.type_pb2.Option",
    "google.protobuf.type_pb2.Type",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.api_pb2.Api",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.compiler.plugin_pb2.CodeGeneratorRequest",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.compiler.plugin_pb2.CodeGeneratorResponse",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.compiler.plugin_pb2.CodeGeneratorResponse.File",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.compiler.plugin_pb2.Version",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor_pb2.DescriptorProto",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor_pb2.DescriptorProto.ExtensionRange",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor_pb2.DescriptorProto.ReservedRange",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor_pb2.EnumDescriptorProto",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor_pb2.EnumDescriptorProto.EnumReservedRange",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor_pb2.EnumOptions",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor_pb2.EnumValueDescriptorProto",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor_pb2.EnumValueOptions",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor_pb2.FieldDescriptorProto",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor_pb2.FieldOptions",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor_pb2.FileDescriptorProto",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor_pb2.FileOptions",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor_pb2.GeneratedCodeInfo.Annotation",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor_pb2.MessageOptions",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor_pb2.MethodDescriptorProto",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor_pb2.MethodOptions",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor_pb2.OneofDescriptorProto",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor_pb2.ServiceDescriptorProto",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor_pb2.ServiceOptions",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor_pb2.SourceCodeInfo.Location",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor_pb2.UninterpretedOption",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor_pb2.UninterpretedOption.NamePart",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.struct_pb2.Struct.FieldsEntry",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.struct_pb2.Value",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.type_pb2.Enum",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.type_pb2.Option",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.type_pb2.Type",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.common_pb2.AvailableAbility",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.common_pb2.ImageData",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.common_pb2.Point",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.common_pb2.Point2D",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.common_pb2.PointI",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.common_pb2.RectangleI",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.common_pb2.Size2DI",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.data_pb2.AbilityData",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.data_pb2.BuffData",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.data_pb2.DamageBonus",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.data_pb2.EffectData",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.data_pb2.UnitTypeData",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.data_pb2.UpgradeData",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.data_pb2.Weapon",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.debug_pb2.Color",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.debug_pb2.DebugBox",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.debug_pb2.DebugCommand",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.debug_pb2.DebugCreateUnit",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.debug_pb2.DebugEndGame",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.debug_pb2.DebugLine",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.debug_pb2.DebugSetScore",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.debug_pb2.DebugSetUnitValue",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.debug_pb2.DebugSphere",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.debug_pb2.DebugTestProcess",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.debug_pb2.DebugText",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.debug_pb2.Line",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.query_pb2.RequestQuery",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.query_pb2.RequestQueryAvailableAbilities",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.query_pb2.RequestQueryBuildingPlacement",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.query_pb2.RequestQueryPathing",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.query_pb2.ResponseQueryAvailableAbilities",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.query_pb2.ResponseQueryBuildingPlacement",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.query_pb2.ResponseQueryPathing",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.raw_pb2.ActionRaw",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.raw_pb2.ActionRawCameraMove",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.raw_pb2.ActionRawToggleAutocast",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.raw_pb2.ActionRawUnitCommand",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.raw_pb2.Effect",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.raw_pb2.MapState",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.raw_pb2.ObservationRaw",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.raw_pb2.PassengerUnit",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.raw_pb2.PlayerRaw",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.raw_pb2.PowerSource",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.raw_pb2.RadarRing",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.raw_pb2.RallyTarget",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.raw_pb2.StartRaw",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.raw_pb2.Unit",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.raw_pb2.UnitOrder",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.Action",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.ActionChat",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.ActionError",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.ActionObserverCameraFollowPlayer",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.ActionObserverCameraMove",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.ActionObserverPlayerPerspective",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.ChatReceived",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.InterfaceOptions",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.LocalMap",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.Observation",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.ObserverAction",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.PlayerCommon",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.PlayerInfo",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.PlayerInfoExtra",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.PlayerResult",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.PlayerSetup",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.PortSet",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.Request",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.RequestCreateGame",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.RequestData",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.RequestJoinGame",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.RequestMapCommand",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.RequestObservation",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.RequestReplayInfo",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.RequestSaveMap",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.RequestStartReplay",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.RequestStep",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.Response",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.ResponseCreateGame",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.ResponseGameInfo",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.ResponseJoinGame",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.ResponseMapCommand",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.ResponseObservation",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.ResponsePing",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.ResponseReplayInfo",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.ResponseRestartGame",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.ResponseSaveMap",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.ResponseSaveReplay",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.ResponseStartReplay",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.ResponseStep",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.SpatialCameraSetup",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.score_pb2.CategoryScoreDetails",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.score_pb2.Score",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.score_pb2.ScoreDetails",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.score_pb2.VitalScoreDetails",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.spatial_pb2.ActionSpatial",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.spatial_pb2.ActionSpatialCameraMove",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.spatial_pb2.ActionSpatialUnitCommand",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.spatial_pb2.ActionSpatialUnitSelectionPoint",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.spatial_pb2.ActionSpatialUnitSelectionRect",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.spatial_pb2.FeatureLayers",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.spatial_pb2.FeatureLayersMinimap",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.spatial_pb2.ObservationFeatureLayer",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.spatial_pb2.ObservationRender",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.ui_pb2.ActionCargoPanelUnload",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.ui_pb2.ActionControlGroup",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.ui_pb2.ActionMultiPanel",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.ui_pb2.ActionProductionPanelRemoveFromQueue",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.ui_pb2.ActionSelectArmy",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.ui_pb2.ActionSelectIdleWorker",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.ui_pb2.ActionSelectWarpGates",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.ui_pb2.ActionToggleAutocast",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.ui_pb2.ActionUI",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.ui_pb2.BuildItem",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.ui_pb2.CargoPanel",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.ui_pb2.ControlGroup",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.ui_pb2.ObservationUI",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.ui_pb2.ProductionPanel",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.ui_pb2.SinglePanel",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.ui_pb2.UnitInfo",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.autotune_results_pb2.AutotuneResults.Entry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.service.hlo_pb2.BufferAssignmentProto.BufferAlias",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.service.hlo_pb2.EntryFunctionAttributes.BufferParameterAttributes",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.service.hlo_pb2.HloComputationProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.service.hlo_pb2.HloInstructionProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.service.hlo_pb2.HloModuleProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.service.hlo_pb2.HloProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.service.hlo_pb2.HloScheduleProto.SequencesEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.service.hlo_pb2.HloSnapshot",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.service.hlo_pb2.LogicalBufferProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.service.hlo_pb2.XlaRuntimeExecutableProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.service.metrics_pb2.CompilationLogEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.xla_data_pb2.LayoutProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.xla_data_pb2.LiteralProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.xla_data_pb2.OpMetadata",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.xla_data_pb2.OpSharding",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.xla_data_pb2.ProgramShapeProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.xla_data_pb2.ShapeProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.xla_data_pb2.WhileLoopBackendConfig",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.example.example_parser_configuration_pb2.ExampleParserConfiguration.FeatureMapEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.example.example_parser_configuration_pb2.FeatureConfiguration",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.example.example_parser_configuration_pb2.FixedLenFeatureProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.example.example_pb2.Example",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.example.example_pb2.SequenceExample",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.example.feature_pb2.Feature",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.example.feature_pb2.FeatureLists.FeatureListEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.example.feature_pb2.Features.FeatureEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.api_def_pb2.ApiDef.Attr",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.attr_value_pb2.AttrValue",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.attr_value_pb2.NameAttrList.AttrEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.cost_graph_pb2.CostGraphDef.Node.OutputInfo",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.dataset_options_pb2.AutotuneOptions",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.dataset_options_pb2.DistributeOptions",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.dataset_options_pb2.OptimizationOptions",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.dataset_options_pb2.Options",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.dataset_options_pb2.ThreadingOptions",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.dataset_pb2.CompressedComponentMetadata",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.device_attributes_pb2.DeviceAttributes",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.device_attributes_pb2.DeviceLocality",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.full_type_pb2.FullTypeDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.function_pb2.FunctionDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.function_pb2.FunctionDef.ArgAttrEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.function_pb2.FunctionDef.ArgAttrs.AttrEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.function_pb2.FunctionDef.AttrEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.graph_pb2.GraphDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.kernel_def_pb2.KernelDef.AttrConstraint",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.log_memory_pb2.MemoryLogTensorAllocation",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.log_memory_pb2.MemoryLogTensorOutput",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.model_pb2.ModelProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.model_pb2.ModelProto.NodesEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.node_def_pb2.NodeDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.node_def_pb2.NodeDef.AttrEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.op_def_pb2.OpDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.op_def_pb2.OpDef.ArgDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.op_def_pb2.OpDef.AttrDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.optimized_function_graph_pb2.OptimizedFunctionGraph",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.resource_handle_pb2.ResourceHandleProto.DtypeAndShape",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.step_stats_pb2.NodeExecStats",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.step_stats_pb2.NodeOutput",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.summary_pb2.Summary.Value",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.summary_pb2.SummaryMetadata",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.tensor_description_pb2.TensorDescription",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.tensor_pb2.TensorProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.tensor_slice_pb2.TensorSliceProto.Extent",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.variable_pb2.VariableDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.composite_tensor_variant_pb2.CompositeTensorVariantMetadata",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.config_pb2.CallableOptions",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.config_pb2.ConfigProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.config_pb2.ConfigProto.Experimental",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.config_pb2.GPUOptions",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.config_pb2.GraphOptions",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.config_pb2.RunMetadata",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.config_pb2.RunMetadata.FunctionGraphs",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.config_pb2.RunOptions",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.config_pb2.RunOptions.Experimental",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.control_flow_pb2.CondContextDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.control_flow_pb2.ControlFlowContextDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.control_flow_pb2.WhileContextDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.data_service_pb2.DataServiceMetadata",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.debug_event_pb2.DebugEvent",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.debug_event_pb2.Execution",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.debug_event_pb2.GraphExecutionTrace",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.debug_event_pb2.GraphOpCreation",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.debug_event_pb2.StackFrameWithId",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.device_filters_pb2.JobDeviceFilters.TasksEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.device_properties_pb2.NamedDevice",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.fingerprint_pb2.FingerprintDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.graph_debug_info_pb2.GraphDebugInfo.TracesEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.meta_graph_pb2.AssetFileDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.meta_graph_pb2.CollectionDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.meta_graph_pb2.MetaGraphDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.meta_graph_pb2.MetaGraphDef.CollectionDefEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.meta_graph_pb2.MetaGraphDef.MetaInfoDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.meta_graph_pb2.MetaGraphDef.SignatureDefEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.meta_graph_pb2.SignatureDef.InputsEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.meta_graph_pb2.SignatureDef.OutputsEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.meta_graph_pb2.TensorInfo",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.meta_graph_pb2.TensorInfo.CompositeTensor",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.named_tensor_pb2.NamedTensorProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.remote_tensor_handle_pb2.ResourceDtypeAndShape",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.rewriter_config_pb2.RewriterConfig",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.rewriter_config_pb2.RewriterConfig.CustomGraphOptimizer.ParameterMapEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.saved_object_graph_pb2.FunctionSpec",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.saved_object_graph_pb2.SavedBareConcreteFunction",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.saved_object_graph_pb2.SavedConcreteFunction",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.saved_object_graph_pb2.SavedFunction",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.saved_object_graph_pb2.SavedObject",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.saved_object_graph_pb2.SavedObject.SaveableObjectsEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.saved_object_graph_pb2.SavedObjectGraph.ConcreteFunctionsEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.saved_object_graph_pb2.SavedUserObject",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.saved_object_graph_pb2.SavedVariable",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.snapshot_pb2.TensorMetadata",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.struct_pb2.BoundedTensorSpecProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.struct_pb2.DictValue.FieldsEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.struct_pb2.PairValue",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.struct_pb2.StructuredValue",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.struct_pb2.TensorSpecProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.struct_pb2.TypeSpecProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tensor_bundle_pb2.BundleEntryProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tensor_bundle_pb2.BundleHeaderProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tensorflow_server_pb2.ServerDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tpu.optimization_parameters_pb2.ClippingLimits",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tpu.optimization_parameters_pb2.LearningRate",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tpu.optimization_parameters_pb2.OptimizationParameters",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tpu.optimization_parameters_pb2.SimulatedQuantization",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tpu.optimization_parameters_pb2.StateVariableSpecification",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tpu.optimization_parameters_pb2.UserDefinedProgramParameters",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tpu.topology_pb2.TopologyProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tpu.tpu_embedding_configuration_pb2.TPUEmbeddingConfiguration",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tpu.tpu_embedding_configuration_pb2.TPUEmbeddingConfiguration.TableDescriptor",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.trackable_object_graph_pb2.TrackableObjectGraph.TrackableObject",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.util.event_pb2.Event",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.util.event_pb2.WorkerHeartbeatRequest",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.util.saved_tensor_slice_pb2.SavedSlice",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.util.saved_tensor_slice_pb2.SavedSliceMeta",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.util.saved_tensor_slice_pb2.SavedTensorSliceMeta",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.util.saved_tensor_slice_pb2.SavedTensorSlices",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.python.keras.protobuf.projector_config_pb2.EmbeddingInfo",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.python.keras.protobuf.saved_metadata_pb2.SavedObject",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.autotuning_pb2.AutotuneResult",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.autotuning_pb2.AutotuneResult.FailureResult",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.autotuning_pb2.AutotuningLog",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.bfc_memory_map_pb2.MemoryDump",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_service_pb2.BarrierRequest",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_service_pb2.CancelBarrierRequest",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_service_pb2.CoordinatedTaskStateInfo",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_service_pb2.CoordinationServiceError",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_service_pb2.GetKeyValueResponse",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_service_pb2.HeartbeatRequest",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_service_pb2.InsertKeyValueRequest",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_service_pb2.RegisterTaskRequest",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_service_pb2.ReportErrorToServiceRequest",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_service_pb2.ReportErrorToTaskRequest",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_service_pb2.ResetTaskRequest",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_service_pb2.ShutdownTaskRequest",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_service_pb2.TryGetKeyValueResponse",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_service_pb2.WaitForAllTasksRequest",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_service_pb2.WaitForAllTasksResponse",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.dnn_pb2.AlgorithmConfigProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.dnn_pb2.AlgorithmProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.dnn_pb2.TensorDescriptorProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.test_log_pb2.BenchmarkEntry.ExtrasEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.test_log_pb2.CommitId",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.test_log_pb2.EntryValue",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.test_log_pb2.MachineConfiguration",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.test_log_pb2.MetricEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.test_log_pb2.TestResults"
  ],
  "google.protobuf.message.Message.WhichOneof": [
    "google.protobuf.struct_pb2.Value",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.struct_pb2.Value",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.debug_pb2.DebugCommand",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.query_pb2.RequestQueryPathing",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.raw_pb2.ActionRaw",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.raw_pb2.ActionRawUnitCommand",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.raw_pb2.UnitOrder",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.ObserverAction",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.Request",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.RequestCreateGame",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.RequestJoinGame",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.RequestReplayInfo",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.RequestStartReplay",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.Response",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.spatial_pb2.ActionSpatial",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.spatial_pb2.ActionSpatialUnitCommand",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.ui_pb2.ActionUI",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.ui_pb2.ObservationUI",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.service.hlo_pb2.HloInstructionProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.example.example_parser_configuration_pb2.FeatureConfiguration",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.example.feature_pb2.Feature",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.attr_value_pb2.AttrValue",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.dataset_options_pb2.AutotuneOptions",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.dataset_options_pb2.DistributeOptions",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.dataset_options_pb2.OptimizationOptions",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.dataset_options_pb2.Options",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.dataset_options_pb2.ThreadingOptions",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.full_type_pb2.FullTypeDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.summary_pb2.Summary.Value",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.tensor_slice_pb2.TensorSliceProto.Extent",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.control_flow_pb2.ControlFlowContextDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.data_service_pb2.DataServiceMetadata",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.debug_event_pb2.DebugEvent",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.meta_graph_pb2.CollectionDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.meta_graph_pb2.TensorInfo",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.saved_object_graph_pb2.SavedObject",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.struct_pb2.StructuredValue",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tpu.optimization_parameters_pb2.LearningRate",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tpu.optimization_parameters_pb2.OptimizationParameters",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tpu.optimization_parameters_pb2.StateVariableSpecification",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.util.event_pb2.Event",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.autotuning_pb2.AutotuneResult",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.autotuning_pb2.AutotuneResult.FailureResult",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.dnn_pb2.AlgorithmConfigProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.dnn_pb2.TensorDescriptorProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.test_log_pb2.CommitId",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.test_log_pb2.EntryValue"
  ],
  "google.protobuf.message.Message.__init__": [
    "google.protobuf.any_pb2.Any",
    "google.protobuf.api_pb2.Api",
    "google.protobuf.api_pb2.Method",
    "google.protobuf.api_pb2.Mixin",
    "google.protobuf.compiler.plugin_pb2.CodeGeneratorRequest",
    "google.protobuf.compiler.plugin_pb2.CodeGeneratorResponse",
    "google.protobuf.compiler.plugin_pb2.CodeGeneratorResponse.File",
    "google.protobuf.compiler.plugin_pb2.Version",
    "google.protobuf.descriptor_pb2.DescriptorProto",
    "google.protobuf.descriptor_pb2.DescriptorProto.ExtensionRange",
    "google.protobuf.descriptor_pb2.DescriptorProto.ReservedRange",
    "google.protobuf.descriptor_pb2.EnumDescriptorProto",
    "google.protobuf.descriptor_pb2.EnumDescriptorProto.EnumReservedRange",
    "google.protobuf.descriptor_pb2.EnumOptions",
    "google.protobuf.descriptor_pb2.EnumValueDescriptorProto",
    "google.protobuf.descriptor_pb2.EnumValueOptions",
    "google.protobuf.descriptor_pb2.ExtensionRangeOptions",
    "google.protobuf.descriptor_pb2.FieldDescriptorProto",
    "google.protobuf.descriptor_pb2.FieldOptions",
    "google.protobuf.descriptor_pb2.FileDescriptorProto",
    "google.protobuf.descriptor_pb2.FileDescriptorSet",
    "google.protobuf.descriptor_pb2.FileOptions",
    "google.protobuf.descriptor_pb2.GeneratedCodeInfo",
    "google.protobuf.descriptor_pb2.GeneratedCodeInfo.Annotation",
    "google.protobuf.descriptor_pb2.MessageOptions",
    "google.protobuf.descriptor_pb2.MethodDescriptorProto",
    "google.protobuf.descriptor_pb2.MethodOptions",
    "google.protobuf.descriptor_pb2.OneofDescriptorProto",
    "google.protobuf.descriptor_pb2.OneofOptions",
    "google.protobuf.descriptor_pb2.ServiceDescriptorProto",
    "google.protobuf.descriptor_pb2.ServiceOptions",
    "google.protobuf.descriptor_pb2.SourceCodeInfo",
    "google.protobuf.descriptor_pb2.SourceCodeInfo.Location",
    "google.protobuf.descriptor_pb2.UninterpretedOption",
    "google.protobuf.descriptor_pb2.UninterpretedOption.NamePart",
    "google.protobuf.duration_pb2.Duration",
    "google.protobuf.empty_pb2.Empty",
    "google.protobuf.field_mask_pb2.FieldMask",
    "google.protobuf.source_context_pb2.SourceContext",
    "google.protobuf.struct_pb2.ListValue",
    "google.protobuf.struct_pb2.Struct",
    "google.protobuf.struct_pb2.Struct.FieldsEntry",
    "google.protobuf.struct_pb2.Value",
    "google.protobuf.timestamp_pb2.Timestamp",
    "google.protobuf.type_pb2.Enum",
    "google.protobuf.type_pb2.EnumValue",
    "google.protobuf.type_pb2.Field",
    "google.protobuf.type_pb2.Option",
    "google.protobuf.type_pb2.Type",
    "google.protobuf.wrappers_pb2.BoolValue",
    "google.protobuf.wrappers_pb2.BytesValue",
    "google.protobuf.wrappers_pb2.DoubleValue",
    "google.protobuf.wrappers_pb2.FloatValue",
    "google.protobuf.wrappers_pb2.Int32Value",
    "google.protobuf.wrappers_pb2.Int64Value",
    "google.protobuf.wrappers_pb2.StringValue",
    "google.protobuf.wrappers_pb2.UInt32Value",
    "google.protobuf.wrappers_pb2.UInt64Value",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.any_pb2.Any",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.api_pb2.Api",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.api_pb2.Method",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.api_pb2.Mixin",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.compiler.plugin_pb2.CodeGeneratorRequest",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.compiler.plugin_pb2.CodeGeneratorResponse",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.compiler.plugin_pb2.CodeGeneratorResponse.File",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.compiler.plugin_pb2.Version",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor_pb2.DescriptorProto",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor_pb2.DescriptorProto.ExtensionRange",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor_pb2.DescriptorProto.ReservedRange",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor_pb2.EnumDescriptorProto",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor_pb2.EnumDescriptorProto.EnumReservedRange",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor_pb2.EnumOptions",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor_pb2.EnumValueDescriptorProto",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor_pb2.EnumValueOptions",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor_pb2.ExtensionRangeOptions",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor_pb2.FieldDescriptorProto",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor_pb2.FieldOptions",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor_pb2.FileDescriptorProto",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor_pb2.FileDescriptorSet",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor_pb2.FileOptions",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor_pb2.GeneratedCodeInfo",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor_pb2.GeneratedCodeInfo.Annotation",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor_pb2.MessageOptions",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor_pb2.MethodDescriptorProto",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor_pb2.MethodOptions",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor_pb2.OneofDescriptorProto",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor_pb2.OneofOptions",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor_pb2.ServiceDescriptorProto",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor_pb2.ServiceOptions",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor_pb2.SourceCodeInfo",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor_pb2.SourceCodeInfo.Location",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor_pb2.UninterpretedOption",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor_pb2.UninterpretedOption.NamePart",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.duration_pb2.Duration",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.empty_pb2.Empty",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.field_mask_pb2.FieldMask",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.source_context_pb2.SourceContext",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.struct_pb2.ListValue",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.struct_pb2.Struct",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.struct_pb2.Struct.FieldsEntry",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.struct_pb2.Value",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.timestamp_pb2.Timestamp",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.type_pb2.Enum",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.type_pb2.EnumValue",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.type_pb2.Field",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.type_pb2.Option",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.type_pb2.Type",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.wrappers_pb2.BoolValue",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.wrappers_pb2.BytesValue",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.wrappers_pb2.DoubleValue",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.wrappers_pb2.FloatValue",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.wrappers_pb2.Int32Value",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.wrappers_pb2.Int64Value",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.wrappers_pb2.StringValue",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.wrappers_pb2.UInt32Value",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.wrappers_pb2.UInt64Value",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.common_pb2.AvailableAbility",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.common_pb2.ImageData",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.common_pb2.Point",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.common_pb2.Point2D",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.common_pb2.PointI",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.common_pb2.RectangleI",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.common_pb2.Size2DI",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.data_pb2.AbilityData",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.data_pb2.BuffData",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.data_pb2.DamageBonus",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.data_pb2.EffectData",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.data_pb2.UnitTypeData",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.data_pb2.UpgradeData",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.data_pb2.Weapon",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.debug_pb2.Color",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.debug_pb2.DebugBox",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.debug_pb2.DebugCommand",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.debug_pb2.DebugCreateUnit",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.debug_pb2.DebugDraw",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.debug_pb2.DebugEndGame",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.debug_pb2.DebugKillUnit",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.debug_pb2.DebugLine",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.debug_pb2.DebugSetScore",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.debug_pb2.DebugSetUnitValue",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.debug_pb2.DebugSphere",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.debug_pb2.DebugTestProcess",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.debug_pb2.DebugText",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.debug_pb2.Line",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.query_pb2.RequestQuery",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.query_pb2.RequestQueryAvailableAbilities",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.query_pb2.RequestQueryBuildingPlacement",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.query_pb2.RequestQueryPathing",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.query_pb2.ResponseQuery",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.query_pb2.ResponseQueryAvailableAbilities",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.query_pb2.ResponseQueryBuildingPlacement",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.query_pb2.ResponseQueryPathing",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.raw_pb2.ActionRaw",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.raw_pb2.ActionRawCameraMove",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.raw_pb2.ActionRawToggleAutocast",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.raw_pb2.ActionRawUnitCommand",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.raw_pb2.Effect",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.raw_pb2.Event",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.raw_pb2.MapState",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.raw_pb2.ObservationRaw",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.raw_pb2.PassengerUnit",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.raw_pb2.PlayerRaw",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.raw_pb2.PowerSource",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.raw_pb2.RadarRing",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.raw_pb2.RallyTarget",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.raw_pb2.StartRaw",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.raw_pb2.Unit",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.raw_pb2.UnitOrder",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.Action",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.ActionChat",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.ActionError",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.ActionObserverCameraFollowPlayer",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.ActionObserverCameraFollowUnits",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.ActionObserverCameraMove",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.ActionObserverPlayerPerspective",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.ChatReceived",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.InterfaceOptions",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.LocalMap",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.Observation",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.ObserverAction",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.PlayerCommon",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.PlayerInfo",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.PlayerInfoExtra",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.PlayerResult",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.PlayerSetup",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.PortSet",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.Request",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.RequestAction",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.RequestAvailableMaps",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.RequestCreateGame",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.RequestData",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.RequestDebug",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.RequestGameInfo",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.RequestJoinGame",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.RequestLeaveGame",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.RequestMapCommand",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.RequestObservation",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.RequestObserverAction",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.RequestPing",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.RequestQuickLoad",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.RequestQuickSave",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.RequestQuit",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.RequestReplayInfo",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.RequestRestartGame",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.RequestSaveMap",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.RequestSaveReplay",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.RequestStartReplay",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.RequestStep",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.Response",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.ResponseAction",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.ResponseAvailableMaps",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.ResponseCreateGame",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.ResponseData",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.ResponseDebug",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.ResponseGameInfo",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.ResponseJoinGame",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.ResponseLeaveGame",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.ResponseMapCommand",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.ResponseObservation",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.ResponseObserverAction",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.ResponsePing",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.ResponseQuickLoad",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.ResponseQuickSave",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.ResponseQuit",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.ResponseReplayInfo",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.ResponseRestartGame",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.ResponseSaveMap",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.ResponseSaveReplay",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.ResponseStartReplay",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.ResponseStep",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.sc2api_pb2.SpatialCameraSetup",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.score_pb2.CategoryScoreDetails",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.score_pb2.Score",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.score_pb2.ScoreDetails",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.score_pb2.VitalScoreDetails",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.spatial_pb2.ActionSpatial",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.spatial_pb2.ActionSpatialCameraMove",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.spatial_pb2.ActionSpatialUnitCommand",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.spatial_pb2.ActionSpatialUnitSelectionPoint",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.spatial_pb2.ActionSpatialUnitSelectionRect",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.spatial_pb2.FeatureLayers",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.spatial_pb2.FeatureLayersMinimap",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.spatial_pb2.ObservationFeatureLayer",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.spatial_pb2.ObservationRender",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.ui_pb2.ActionCargoPanelUnload",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.ui_pb2.ActionControlGroup",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.ui_pb2.ActionMultiPanel",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.ui_pb2.ActionProductionPanelRemoveFromQueue",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.ui_pb2.ActionSelectArmy",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.ui_pb2.ActionSelectIdleWorker",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.ui_pb2.ActionSelectLarva",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.ui_pb2.ActionSelectWarpGates",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.ui_pb2.ActionToggleAutocast",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.ui_pb2.ActionUI",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.ui_pb2.BuildItem",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.ui_pb2.CargoPanel",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.ui_pb2.ControlGroup",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.ui_pb2.MultiPanel",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.ui_pb2.ObservationUI",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.ui_pb2.ProductionPanel",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.ui_pb2.SinglePanel",
    "typeshed.typeshed.stubs.s2clientprotocol.s2clientprotocol.ui_pb2.UnitInfo",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.autotune_results_pb2.AutotuneResults",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.autotune_results_pb2.AutotuneResults.Entry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.service.hlo_pb2.BufferAllocationProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.service.hlo_pb2.BufferAllocationProto.Assigned",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.service.hlo_pb2.BufferAssignmentProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.service.hlo_pb2.BufferAssignmentProto.BufferAlias",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.service.hlo_pb2.CrossProgramPrefetch",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.service.hlo_pb2.DynamicParameterBindingProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.service.hlo_pb2.DynamicParameterBindingProto.Binding",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.service.hlo_pb2.EntryFunctionAttributes",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.service.hlo_pb2.EntryFunctionAttributes.BufferParameterAttributes",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.service.hlo_pb2.EntryFunctionAttributes.ShapeIndex",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.service.hlo_pb2.HeapSimulatorTrace",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.service.hlo_pb2.HeapSimulatorTrace.Event",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.service.hlo_pb2.HloComputationProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.service.hlo_pb2.HloInputOutputAliasProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.service.hlo_pb2.HloInputOutputAliasProto.AliasEntryProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.service.hlo_pb2.HloInstructionProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.service.hlo_pb2.HloInstructionProto.SliceDimensions",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.service.hlo_pb2.HloModuleGroupProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.service.hlo_pb2.HloModuleMetadataProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.service.hlo_pb2.HloModuleProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.service.hlo_pb2.HloModuleProto.ProfileInfo",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.service.hlo_pb2.HloPassMetadata",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.service.hlo_pb2.HloProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.service.hlo_pb2.HloScheduleProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.service.hlo_pb2.HloScheduleProto.InstructionSequence",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.service.hlo_pb2.HloScheduleProto.SequencesEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.service.hlo_pb2.HloSnapshot",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.service.hlo_pb2.LogicalBufferProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.service.hlo_pb2.LogicalBufferProto.Location",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.service.hlo_pb2.XlaRuntimeExecutableProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.service.metrics_pb2.CompilationLogEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.xla_data_pb2.ChannelHandle",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.xla_data_pb2.CholeskyOptions",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.xla_data_pb2.ComputationStats",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.xla_data_pb2.ConvolutionDimensionNumbers",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.xla_data_pb2.DeviceAssignmentProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.xla_data_pb2.DeviceAssignmentProto.ComputationDevice",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.xla_data_pb2.DeviceHandle",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.xla_data_pb2.DotDimensionNumbers",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.xla_data_pb2.ExecutionHandle",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.xla_data_pb2.ExecutionProfile",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.xla_data_pb2.FrontendAttributes",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.xla_data_pb2.FrontendAttributes.MapEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.xla_data_pb2.GatherDimensionNumbers",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.xla_data_pb2.GlobalDataHandle",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.xla_data_pb2.LayoutProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.xla_data_pb2.LiteralProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.xla_data_pb2.OpMetadata",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.xla_data_pb2.OpMetadata.ProfileInfo",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.xla_data_pb2.OpSharding",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.xla_data_pb2.OutputOperandAliasing",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.xla_data_pb2.PaddingConfig",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.xla_data_pb2.PaddingConfig.PaddingConfigDimension",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.xla_data_pb2.ParameterReplication",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.xla_data_pb2.PrecisionConfig",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.xla_data_pb2.ProgramShapeProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.xla_data_pb2.ReplicaGroup",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.xla_data_pb2.ScatterDimensionNumbers",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.xla_data_pb2.ShapeProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.xla_data_pb2.SourceTarget",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.xla_data_pb2.TileProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.xla_data_pb2.TriangularSolveOptions",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.xla_data_pb2.WhileLoopBackendConfig",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.xla_data_pb2.WhileLoopBackendConfig.KnownTripCount",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.xla_data_pb2.Window",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.compiler.xla.xla_data_pb2.WindowDimension",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.example.example_parser_configuration_pb2.ExampleParserConfiguration",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.example.example_parser_configuration_pb2.ExampleParserConfiguration.FeatureMapEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.example.example_parser_configuration_pb2.FeatureConfiguration",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.example.example_parser_configuration_pb2.FixedLenFeatureProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.example.example_parser_configuration_pb2.VarLenFeatureProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.example.example_pb2.Example",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.example.example_pb2.SequenceExample",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.example.feature_pb2.BytesList",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.example.feature_pb2.Feature",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.example.feature_pb2.FeatureList",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.example.feature_pb2.FeatureLists",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.example.feature_pb2.FeatureLists.FeatureListEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.example.feature_pb2.Features",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.example.feature_pb2.Features.FeatureEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.example.feature_pb2.FloatList",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.example.feature_pb2.Int64List",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.allocation_description_pb2.AllocationDescription",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.api_def_pb2.ApiDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.api_def_pb2.ApiDef.Arg",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.api_def_pb2.ApiDef.Attr",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.api_def_pb2.ApiDef.Endpoint",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.api_def_pb2.ApiDefs",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.attr_value_pb2.AttrValue",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.attr_value_pb2.AttrValue.ListValue",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.attr_value_pb2.NameAttrList",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.attr_value_pb2.NameAttrList.AttrEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.cost_graph_pb2.CostGraphDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.cost_graph_pb2.CostGraphDef.AggregatedCost",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.cost_graph_pb2.CostGraphDef.Node",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.cost_graph_pb2.CostGraphDef.Node.InputInfo",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.cost_graph_pb2.CostGraphDef.Node.OutputInfo",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.dataset_metadata_pb2.Metadata",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.dataset_options_pb2.AutotuneOptions",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.dataset_options_pb2.CardinalityOptions",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.dataset_options_pb2.DistributeOptions",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.dataset_options_pb2.OptimizationOptions",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.dataset_options_pb2.Options",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.dataset_options_pb2.ThreadingOptions",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.dataset_pb2.CompressedComponentMetadata",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.dataset_pb2.CompressedElement",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.dataset_pb2.UncompressedElement",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.device_attributes_pb2.DeviceAttributes",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.device_attributes_pb2.DeviceLocality",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.device_attributes_pb2.InterconnectLink",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.device_attributes_pb2.LocalLinks",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.full_type_pb2.FullTypeDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.function_pb2.FunctionDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.function_pb2.FunctionDef.ArgAttrEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.function_pb2.FunctionDef.ArgAttrs",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.function_pb2.FunctionDef.ArgAttrs.AttrEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.function_pb2.FunctionDef.AttrEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.function_pb2.FunctionDef.ControlRetEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.function_pb2.FunctionDef.ResourceArgUniqueIdEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.function_pb2.FunctionDef.RetEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.function_pb2.FunctionDefLibrary",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.function_pb2.GradientDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.function_pb2.RegisteredGradient",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.graph_pb2.GraphDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.graph_transfer_info_pb2.GraphTransferConstNodeInfo",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.graph_transfer_info_pb2.GraphTransferGraphInputNodeInfo",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.graph_transfer_info_pb2.GraphTransferGraphOutputNodeInfo",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.graph_transfer_info_pb2.GraphTransferInfo",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.graph_transfer_info_pb2.GraphTransferNodeInfo",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.graph_transfer_info_pb2.GraphTransferNodeInput",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.graph_transfer_info_pb2.GraphTransferNodeInputInfo",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.graph_transfer_info_pb2.GraphTransferNodeOutputInfo",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.kernel_def_pb2.KernelDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.kernel_def_pb2.KernelDef.AttrConstraint",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.kernel_def_pb2.KernelList",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.log_memory_pb2.MemoryLogRawAllocation",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.log_memory_pb2.MemoryLogRawDeallocation",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.log_memory_pb2.MemoryLogStep",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.log_memory_pb2.MemoryLogTensorAllocation",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.log_memory_pb2.MemoryLogTensorDeallocation",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.log_memory_pb2.MemoryLogTensorOutput",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.model_pb2.ModelProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.model_pb2.ModelProto.Node",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.model_pb2.ModelProto.Node.Parameter",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.model_pb2.ModelProto.NodesEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.model_pb2.ModelProto.OptimizationParams",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.node_def_pb2.NodeDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.node_def_pb2.NodeDef.AttrEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.node_def_pb2.NodeDef.ExperimentalDebugInfo",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.op_def_pb2.OpDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.op_def_pb2.OpDef.ArgDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.op_def_pb2.OpDef.AttrDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.op_def_pb2.OpDeprecation",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.op_def_pb2.OpList",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.optimized_function_graph_pb2.OptimizedFunctionGraph",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.optimized_function_graph_pb2.OptimizedFunctionGraph.NodeNameToControlRetEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.reader_base_pb2.ReaderBaseState",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.resource_handle_pb2.ResourceHandleProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.resource_handle_pb2.ResourceHandleProto.DtypeAndShape",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.step_stats_pb2.AllocationRecord",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.step_stats_pb2.AllocatorMemoryUsed",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.step_stats_pb2.DeviceStepStats",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.step_stats_pb2.DeviceStepStats.ThreadNamesEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.step_stats_pb2.MemoryStats",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.step_stats_pb2.NodeExecStats",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.step_stats_pb2.NodeOutput",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.step_stats_pb2.StepStats",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.summary_pb2.Summary",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.summary_pb2.Summary.Audio",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.summary_pb2.Summary.Image",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.summary_pb2.Summary.Value",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.summary_pb2.SummaryDescription",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.summary_pb2.SummaryMetadata",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.summary_pb2.SummaryMetadata.PluginData",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.tensor_description_pb2.TensorDescription",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.tensor_pb2.TensorProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.tensor_pb2.VariantTensorDataProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.tensor_shape_pb2.TensorShapeProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.tensor_shape_pb2.TensorShapeProto.Dim",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.tensor_slice_pb2.TensorSliceProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.tensor_slice_pb2.TensorSliceProto.Extent",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.types_pb2.SerializedDType",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.variable_pb2.SaveSliceInfoDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.variable_pb2.VariableDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.framework.versions_pb2.VersionDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.cluster_pb2.ClusterDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.cluster_pb2.JobDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.cluster_pb2.JobDef.TasksEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.composite_tensor_variant_pb2.CompositeTensorVariantMetadata",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.config_pb2.CallableOptions",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.config_pb2.CallableOptions.FeedDevicesEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.config_pb2.CallableOptions.FetchDevicesEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.config_pb2.ConfigProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.config_pb2.ConfigProto.DeviceCountEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.config_pb2.ConfigProto.Experimental",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.config_pb2.GPUOptions",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.config_pb2.GPUOptions.Experimental",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.config_pb2.GPUOptions.Experimental.VirtualDevices",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.config_pb2.GraphOptions",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.config_pb2.OptimizerOptions",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.config_pb2.RunMetadata",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.config_pb2.RunMetadata.FunctionGraphs",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.config_pb2.RunOptions",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.config_pb2.RunOptions.Experimental",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.config_pb2.RunOptions.Experimental.RunHandlerPoolOptions",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.config_pb2.SessionMetadata",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.config_pb2.TensorConnection",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.config_pb2.ThreadPoolOptionProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.control_flow_pb2.CondContextDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.control_flow_pb2.ControlFlowContextDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.control_flow_pb2.ValuesDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.control_flow_pb2.ValuesDef.ExternalValuesEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.control_flow_pb2.WhileContextDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.coordination_config_pb2.CoordinatedJob",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.coordination_config_pb2.CoordinationServiceConfig",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.core_platform_payloads_pb2.ErrorSourceProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.data_service_pb2.CrossTrainerCacheOptions",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.data_service_pb2.DataServiceConfig",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.data_service_pb2.DataServiceMetadata",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.data_service_pb2.ProcessingModeDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.debug_event_pb2.CodeLocation",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.debug_event_pb2.DebugEvent",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.debug_event_pb2.DebugMetadata",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.debug_event_pb2.DebuggedDevice",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.debug_event_pb2.DebuggedGraph",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.debug_event_pb2.Execution",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.debug_event_pb2.GraphExecutionTrace",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.debug_event_pb2.GraphOpCreation",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.debug_event_pb2.SourceFile",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.debug_event_pb2.StackFrameWithId",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.debug_pb2.DebugOptions",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.debug_pb2.DebugTensorWatch",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.debug_pb2.DebuggedSourceFile",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.debug_pb2.DebuggedSourceFiles",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.device_filters_pb2.ClusterDeviceFilters",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.device_filters_pb2.JobDeviceFilters",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.device_filters_pb2.JobDeviceFilters.TasksEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.device_filters_pb2.TaskDeviceFilters",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.device_properties_pb2.DeviceProperties",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.device_properties_pb2.DeviceProperties.EnvironmentEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.device_properties_pb2.NamedDevice",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.distributed_runtime_payloads_pb2.GrpcPayloadContainer",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.distributed_runtime_payloads_pb2.GrpcPayloadContainer.PayloadsEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.distributed_runtime_payloads_pb2.GrpcPayloadsLost",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.distributed_runtime_payloads_pb2.WorkerPossiblyRestarted",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.fingerprint_pb2.FingerprintDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.graph_debug_info_pb2.GraphDebugInfo",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.graph_debug_info_pb2.GraphDebugInfo.FileLineCol",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.graph_debug_info_pb2.GraphDebugInfo.StackTrace",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.graph_debug_info_pb2.GraphDebugInfo.TracesEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.meta_graph_pb2.AssetFileDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.meta_graph_pb2.CollectionDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.meta_graph_pb2.CollectionDef.AnyList",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.meta_graph_pb2.CollectionDef.BytesList",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.meta_graph_pb2.CollectionDef.FloatList",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.meta_graph_pb2.CollectionDef.Int64List",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.meta_graph_pb2.CollectionDef.NodeList",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.meta_graph_pb2.MetaGraphDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.meta_graph_pb2.MetaGraphDef.CollectionDefEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.meta_graph_pb2.MetaGraphDef.MetaInfoDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.meta_graph_pb2.MetaGraphDef.MetaInfoDef.FunctionAliasesEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.meta_graph_pb2.MetaGraphDef.SignatureDefEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.meta_graph_pb2.SignatureDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.meta_graph_pb2.SignatureDef.InputsEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.meta_graph_pb2.SignatureDef.OutputsEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.meta_graph_pb2.TensorInfo",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.meta_graph_pb2.TensorInfo.CompositeTensor",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.meta_graph_pb2.TensorInfo.CooSparse",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.named_tensor_pb2.NamedTensorProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.queue_runner_pb2.QueueRunnerDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.remote_tensor_handle_pb2.RemoteTensorHandle",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.remote_tensor_handle_pb2.ResourceDtypeAndShape",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.rewriter_config_pb2.AutoParallelOptions",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.rewriter_config_pb2.RewriterConfig",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.rewriter_config_pb2.RewriterConfig.CustomGraphOptimizer",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.rewriter_config_pb2.RewriterConfig.CustomGraphOptimizer.ParameterMapEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.rewriter_config_pb2.ScopedAllocatorOptions",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.saved_model_pb2.SavedModel",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.saved_object_graph_pb2.CapturedTensor",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.saved_object_graph_pb2.FunctionSpec",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.saved_object_graph_pb2.SaveableObject",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.saved_object_graph_pb2.SavedAsset",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.saved_object_graph_pb2.SavedBareConcreteFunction",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.saved_object_graph_pb2.SavedConcreteFunction",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.saved_object_graph_pb2.SavedConstant",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.saved_object_graph_pb2.SavedFunction",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.saved_object_graph_pb2.SavedObject",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.saved_object_graph_pb2.SavedObject.SaveableObjectsEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.saved_object_graph_pb2.SavedObjectGraph",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.saved_object_graph_pb2.SavedObjectGraph.ConcreteFunctionsEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.saved_object_graph_pb2.SavedResource",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.saved_object_graph_pb2.SavedUserObject",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.saved_object_graph_pb2.SavedVariable",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.saver_pb2.SaverDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.service_config_pb2.DispatcherConfig",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.service_config_pb2.WorkerConfig",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.snapshot_pb2.DistributedSnapshotMetadata",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.snapshot_pb2.SnapshotMetadataRecord",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.snapshot_pb2.SnapshotRecord",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.snapshot_pb2.SnapshotTensorMetadata",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.snapshot_pb2.TensorMetadata",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.struct_pb2.BoundedTensorSpecProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.struct_pb2.DictValue",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.struct_pb2.DictValue.FieldsEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.struct_pb2.ListValue",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.struct_pb2.NamedTupleValue",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.struct_pb2.NoneValue",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.struct_pb2.PairValue",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.struct_pb2.StructuredValue",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.struct_pb2.TensorSpecProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.struct_pb2.TupleValue",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.struct_pb2.TypeSpecProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tensor_bundle_pb2.BundleEntryProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tensor_bundle_pb2.BundleHeaderProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tensorflow_server_pb2.ServerDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tpu.compilation_result_pb2.CompilationResultProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tpu.dynamic_padding_pb2.PaddingMap",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tpu.optimization_parameters_pb2.AdadeltaParameters",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tpu.optimization_parameters_pb2.AdagradMomentumParameters",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tpu.optimization_parameters_pb2.AdagradParameters",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tpu.optimization_parameters_pb2.AdamParameters",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tpu.optimization_parameters_pb2.AssignParameters",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tpu.optimization_parameters_pb2.BoundedAdagradParameters",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tpu.optimization_parameters_pb2.CenteredRmsPropParameters",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tpu.optimization_parameters_pb2.ClippingLimits",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tpu.optimization_parameters_pb2.DynamicLearningRate",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tpu.optimization_parameters_pb2.FrequencyEstimatorParameters",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tpu.optimization_parameters_pb2.FtrlParameters",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tpu.optimization_parameters_pb2.GradientAccumulationStatus",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tpu.optimization_parameters_pb2.HotIdReplicationConfiguration",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tpu.optimization_parameters_pb2.LearningRate",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tpu.optimization_parameters_pb2.LowDimensionalPackingStatus",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tpu.optimization_parameters_pb2.MdlAdagradLightParameters",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tpu.optimization_parameters_pb2.MomentumParameters",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tpu.optimization_parameters_pb2.OnlineYogiParameters",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tpu.optimization_parameters_pb2.OptimizationParameters",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tpu.optimization_parameters_pb2.ProximalAdagradParameters",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tpu.optimization_parameters_pb2.ProximalYogiParameters",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tpu.optimization_parameters_pb2.RmsPropParameters",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tpu.optimization_parameters_pb2.SimulatedQuantization",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tpu.optimization_parameters_pb2.StateVariableSpecification",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tpu.optimization_parameters_pb2.StateVariableSpecification.FillWithConstant",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tpu.optimization_parameters_pb2.StateVariableSpecification.UserDefined",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tpu.optimization_parameters_pb2.StochasticGradientDescentParameters",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tpu.optimization_parameters_pb2.UserDefinedProgramParameters",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tpu.topology_pb2.TPUHardwareFeature",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tpu.topology_pb2.TopologyProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tpu.tpu_embedding_configuration_pb2.TPUEmbeddingConfiguration",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tpu.tpu_embedding_configuration_pb2.TPUEmbeddingConfiguration.FeatureDescriptor",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tpu.tpu_embedding_configuration_pb2.TPUEmbeddingConfiguration.SpmdSharding",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tpu.tpu_embedding_configuration_pb2.TPUEmbeddingConfiguration.TableDescriptor",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.tpu.tpu_embedding_configuration_pb2.TPUEmbeddingError",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.trackable_object_graph_pb2.RegisteredSaver",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.trackable_object_graph_pb2.TrackableObjectGraph",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.trackable_object_graph_pb2.TrackableObjectGraph.TrackableObject",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.trackable_object_graph_pb2.TrackableObjectGraph.TrackableObject.ObjectReference",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.trackable_object_graph_pb2.TrackableObjectGraph.TrackableObject.SerializedTensor",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.trackable_object_graph_pb2.TrackableObjectGraph.TrackableObject.SlotVariableReference",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.transport_options_pb2.RecvBufRespExtra",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.protobuf.verifier_config_pb2.VerifierConfig",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.util.event_pb2.Event",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.util.event_pb2.LogMessage",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.util.event_pb2.RequestedExitCode",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.util.event_pb2.SessionLog",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.util.event_pb2.SourceMetadata",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.util.event_pb2.TaggedRunMetadata",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.util.event_pb2.WatchdogConfig",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.util.event_pb2.WorkerHeartbeatRequest",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.util.event_pb2.WorkerHeartbeatResponse",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.util.memmapped_file_system_pb2.MemmappedFileSystemDirectory",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.util.memmapped_file_system_pb2.MemmappedFileSystemDirectoryElement",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.util.saved_tensor_slice_pb2.SavedSlice",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.util.saved_tensor_slice_pb2.SavedSliceMeta",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.util.saved_tensor_slice_pb2.SavedTensorSliceMeta",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.core.util.saved_tensor_slice_pb2.SavedTensorSlices",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.python.keras.protobuf.projector_config_pb2.EmbeddingInfo",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.python.keras.protobuf.projector_config_pb2.ProjectorConfig",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.python.keras.protobuf.projector_config_pb2.SpriteMetadata",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.python.keras.protobuf.saved_metadata_pb2.SavedMetadata",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.python.keras.protobuf.saved_metadata_pb2.SavedObject",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.python.keras.protobuf.versions_pb2.VersionDef",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.autotuning_pb2.AutotuneResult",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.autotuning_pb2.AutotuneResult.ConvKey",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.autotuning_pb2.AutotuneResult.CudaConvPlanKey",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.autotuning_pb2.AutotuneResult.FailureResult",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.autotuning_pb2.AutotuneResult.GemmKey",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.autotuning_pb2.AutotuningLog",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.autotuning_pb2.ComputeCapability",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.autotuning_pb2.CudnnVersion",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.bfc_memory_map_pb2.BinSummary",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.bfc_memory_map_pb2.MemAllocatorStats",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.bfc_memory_map_pb2.MemChunk",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.bfc_memory_map_pb2.MemoryDump",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.bfc_memory_map_pb2.SnapShot",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_config_pb2.CoordinatedJob",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_config_pb2.CoordinationServiceConfig",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_service_pb2.BarrierRequest",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_service_pb2.BarrierResponse",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_service_pb2.CancelBarrierRequest",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_service_pb2.CancelBarrierResponse",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_service_pb2.CoordinatedTask",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_service_pb2.CoordinatedTaskStateInfo",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_service_pb2.CoordinationServiceError",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_service_pb2.DeleteKeyValueRequest",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_service_pb2.DeleteKeyValueResponse",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_service_pb2.DeviceInfo",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_service_pb2.GetKeyValueDirRequest",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_service_pb2.GetKeyValueDirResponse",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_service_pb2.GetKeyValueRequest",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_service_pb2.GetKeyValueResponse",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_service_pb2.GetTaskStateRequest",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_service_pb2.GetTaskStateResponse",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_service_pb2.HeartbeatRequest",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_service_pb2.HeartbeatResponse",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_service_pb2.InsertKeyValueRequest",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_service_pb2.InsertKeyValueResponse",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_service_pb2.KeyValueEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_service_pb2.RegisterTaskRequest",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_service_pb2.RegisterTaskResponse",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_service_pb2.ReportErrorToServiceRequest",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_service_pb2.ReportErrorToServiceResponse",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_service_pb2.ReportErrorToTaskRequest",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_service_pb2.ReportErrorToTaskResponse",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_service_pb2.ResetTaskRequest",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_service_pb2.ResetTaskResponse",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_service_pb2.ShutdownTaskRequest",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_service_pb2.ShutdownTaskResponse",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_service_pb2.TryGetKeyValueRequest",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_service_pb2.TryGetKeyValueResponse",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_service_pb2.WaitForAllTasksRequest",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.coordination_service_pb2.WaitForAllTasksResponse",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.distributed_runtime_payloads_pb2.GrpcPayloadContainer",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.distributed_runtime_payloads_pb2.GrpcPayloadContainer.PayloadsEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.distributed_runtime_payloads_pb2.GrpcPayloadsLost",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.distributed_runtime_payloads_pb2.WorkerPossiblyRestarted",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.dnn_pb2.AlgorithmConfigProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.dnn_pb2.AlgorithmProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.dnn_pb2.AlgorithmProto.TuningKnobsEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.dnn_pb2.ConvolutionDescriptorProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.dnn_pb2.TensorDescriptorProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.histogram_pb2.HistogramProto",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.rpc_options_pb2.RPCOptions",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.test_log_pb2.AvailableDeviceInfo",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.test_log_pb2.BenchmarkEntries",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.test_log_pb2.BenchmarkEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.test_log_pb2.BenchmarkEntry.ExtrasEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.test_log_pb2.BuildConfiguration",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.test_log_pb2.CPUInfo",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.test_log_pb2.CPUInfo.CacheSizeEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.test_log_pb2.CommitId",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.test_log_pb2.EntryValue",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.test_log_pb2.GPUInfo",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.test_log_pb2.MachineConfiguration",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.test_log_pb2.MemoryInfo",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.test_log_pb2.MetricEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.test_log_pb2.PlatformInfo",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.test_log_pb2.RunConfiguration",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.test_log_pb2.RunConfiguration.EnvVarsEntry",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.tsl.protobuf.test_log_pb2.TestResults"
  ],
  "google.protobuf.message_factory.MessageFactory.GetMessages": [
    "google.protobuf.symbol_database.SymbolDatabase",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.symbol_database.SymbolDatabase"
  ],
  "graphql.backend.base.GraphQLBackend.document_from_string": [
    "graphql.backend.cache.GraphQLCachedBackend",
    "graphql.backend.core.GraphQLCoreBackend",
    "graphql.backend.quiver_cloud.GraphQLQuiverCloudBackend"
  ],
  "graphql.backend.cache.GraphQLCachedBackend.__init__": [
    "graphql.backend.decider.GraphQLDeciderBackend"
  ],
  "graphql.backend.cache.GraphQLCachedBackend.document_from_string": [
    "graphql.backend.decider.GraphQLDeciderBackend"
  ],
  "graphql.error.base.GraphQLError.__init__": [
    "graphql.error.located_error.GraphQLLocatedError",
    "graphql.error.syntax_error.GraphQLSyntaxError"
  ],
  "graphql.language.visitor.Visitor.enter": [
    "graphql.language.tests.test_visitor.test_allows_early_exit_while_visiting.TestVisitor",
    "graphql.language.tests.test_visitor.test_allows_editing_a_node_both_on_enter_and_on_leave.TestVisitor",
    "graphql.language.tests.test_visitor.test_allows_editing_the_root_node_on_enter_and_on_leave.TestVisitor",
    "graphql.language.tests.test_visitor.test_allows_for_editing_on_enter.TestVisitor",
    "graphql.language.tests.test_visitor.test_allows_skipping_a_subtree.TestVisitor",
    "graphql.language.tests.test_visitor.test_visits_edited_node.TestVisitor",
    "graphql.language.tests.test_visitor.test_visits_in_pararell_allows_early_exit_from_different_points.TestVisitor",
    "graphql.language.tests.test_visitor.test_visits_in_pararell_allows_early_exit_while_visiting.TestVisitor",
    "graphql.language.tests.test_visitor.test_visits_in_pararell_allows_for_editing_on_enter.TestVisitor1",
    "graphql.language.tests.test_visitor.test_visits_in_pararell_allows_for_editing_on_enter.TestVisitor2",
    "graphql.language.tests.test_visitor.test_visits_in_pararell_allows_for_editing_on_leave.TestVisitor2",
    "graphql.language.tests.test_visitor.test_visits_in_pararell_allows_skipping_a_subtree.TestVisitor",
    "graphql.language.tests.test_visitor.test_visits_in_pararell_allows_skipping_different_subtrees.TestVisitor",
    "graphql.language.tests.test_visitor.test_visits_kitchen_sink.TestVisitor",
    "graphql.language.tests.test_visitor.test_visits_with_typeinfo_maintains_type_info_during_edit.TestVisitor",
    "graphql.language.tests.test_visitor.test_visits_with_typeinfo_maintains_type_info_during_visit.TestVisitor",
    "graphql.language.visitor.ParallelVisitor",
    "graphql.language.visitor.TypeInfoVisitor"
  ],
  "graphql.language.visitor.Visitor.leave": [
    "graphql.language.tests.test_visitor.test_allows_early_exit_while_visiting.TestVisitor",
    "graphql.language.tests.test_visitor.test_allows_editing_a_node_both_on_enter_and_on_leave.TestVisitor",
    "graphql.language.tests.test_visitor.test_allows_editing_the_root_node_on_enter_and_on_leave.TestVisitor",
    "graphql.language.tests.test_visitor.test_allows_for_editing_on_leave.TestVisitor",
    "graphql.language.tests.test_visitor.test_allows_skipping_a_subtree.TestVisitor",
    "graphql.language.tests.test_visitor.test_visits_in_pararell_allows_early_exit_from_different_points.TestVisitor",
    "graphql.language.tests.test_visitor.test_visits_in_pararell_allows_early_exit_while_visiting.TestVisitor",
    "graphql.language.tests.test_visitor.test_visits_in_pararell_allows_for_editing_on_enter.TestVisitor2",
    "graphql.language.tests.test_visitor.test_visits_in_pararell_allows_for_editing_on_leave.TestVisitor1",
    "graphql.language.tests.test_visitor.test_visits_in_pararell_allows_for_editing_on_leave.TestVisitor2",
    "graphql.language.tests.test_visitor.test_visits_in_pararell_allows_skipping_a_subtree.TestVisitor",
    "graphql.language.tests.test_visitor.test_visits_in_pararell_allows_skipping_different_subtrees.TestVisitor",
    "graphql.language.tests.test_visitor.test_visits_kitchen_sink.TestVisitor",
    "graphql.language.tests.test_visitor.test_visits_with_typeinfo_maintains_type_info_during_edit.TestVisitor",
    "graphql.language.tests.test_visitor.test_visits_with_typeinfo_maintains_type_info_during_visit.TestVisitor",
    "graphql.language.visitor.ParallelVisitor",
    "graphql.language.visitor.TypeInfoVisitor"
  ],
  "graphql.type.definition.GraphQLNamedType.__init__": [
    "graphql.type.definition.GraphQLEnumType",
    "graphql.type.definition.GraphQLInputObjectType",
    "graphql.type.definition.GraphQLInterfaceType",
    "graphql.type.definition.GraphQLObjectType",
    "graphql.type.definition.GraphQLScalarType",
    "graphql.type.definition.GraphQLUnionType"
  ],
  "graphql.type.definition.GraphQLNamedType.__str__": [
    "graphql.type.definition.GraphQLScalarType"
  ],
  "graphql.validation.rules.base.ValidationRule.__init__": [
    "graphql.validation.rules.lone_anonymous_operation.LoneAnonymousOperation",
    "graphql.validation.rules.no_fragment_cycles.NoFragmentCycles",
    "graphql.validation.rules.no_undefined_variables.NoUndefinedVariables",
    "graphql.validation.rules.no_unused_fragments.NoUnusedFragments",
    "graphql.validation.rules.no_unused_variables.NoUnusedVariables",
    "graphql.validation.rules.overlapping_fields_can_be_merged.OverlappingFieldsCanBeMerged",
    "graphql.validation.rules.unique_argument_names.UniqueArgumentNames",
    "graphql.validation.rules.unique_fragment_names.UniqueFragmentNames",
    "graphql.validation.rules.unique_input_field_names.UniqueInputFieldNames",
    "graphql.validation.rules.unique_operation_names.UniqueOperationNames",
    "graphql.validation.rules.unique_variable_names.UniqueVariableNames",
    "graphql.validation.rules.variables_in_allowed_position.VariablesInAllowedPosition"
  ],
  "gzip.GzipFile.__init__": [
    "typeshed.typeshed.stdlib.xmlrpc.client.GzipDecodedResponse",
    "xmlrpc.client.GzipDecodedResponse"
  ],
  "hashlib._Hash.__init__": [
    "hashlib._BlakeHash"
  ],
  "html.parser.HTMLParser.__init__": [
    "bs4.builder._htmlparser.BeautifulSoupHTMLParser",
    "django.test.html.Parser",
    "django.utils.html.MLStripper",
    "fpdf.html.HTML2FPDF",
    "humanfriendly.terminal.html.HTMLConverter",
    "pip._internal.index.collector.HTMLLinkParser",
    "prettytable.prettytable.TableHandler",
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.builder._htmlparser.BeautifulSoupHTMLParser",
    "typeshed.typeshed.stubs.boltons.boltons.strutils.HTMLTextExtractor",
    "typeshed.typeshed.stubs.fpdf2.fpdf.html.HTML2FPDF",
    "typeshed.typeshed.stubs.humanfriendly.humanfriendly.terminal.html.HTMLConverter"
  ],
  "html.parser.HTMLParser.close": [
    "humanfriendly.terminal.html.HTMLConverter",
    "typeshed.typeshed.stubs.humanfriendly.humanfriendly.terminal.html.HTMLConverter"
  ],
  "html.parser.HTMLParser.handle_charref": [
    "bs4.builder._htmlparser.BeautifulSoupHTMLParser",
    "bs4.diagnose.AnnouncingParser",
    "django.utils.html.MLStripper",
    "humanfriendly.terminal.html.HTMLConverter",
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.builder._htmlparser.BeautifulSoupHTMLParser",
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.diagnose.AnnouncingParser",
    "typeshed.typeshed.stubs.boltons.boltons.strutils.HTMLTextExtractor",
    "typeshed.typeshed.stubs.humanfriendly.humanfriendly.terminal.html.HTMLConverter"
  ],
  "html.parser.HTMLParser.handle_comment": [
    "bs4.builder._htmlparser.BeautifulSoupHTMLParser",
    "bs4.diagnose.AnnouncingParser",
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.builder._htmlparser.BeautifulSoupHTMLParser",
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.diagnose.AnnouncingParser"
  ],
  "html.parser.HTMLParser.handle_data": [
    "bs4.builder._htmlparser.BeautifulSoupHTMLParser",
    "bs4.diagnose.AnnouncingParser",
    "django.utils.html.MLStripper",
    "fpdf.html.HTML2FPDF",
    "humanfriendly.terminal.html.HTMLConverter",
    "prettytable.prettytable.TableHandler",
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.builder._htmlparser.BeautifulSoupHTMLParser",
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.diagnose.AnnouncingParser",
    "typeshed.typeshed.stubs.boltons.boltons.strutils.HTMLTextExtractor",
    "typeshed.typeshed.stubs.fpdf2.fpdf.html.HTML2FPDF",
    "typeshed.typeshed.stubs.humanfriendly.humanfriendly.terminal.html.HTMLConverter"
  ],
  "html.parser.HTMLParser.handle_decl": [
    "bs4.builder._htmlparser.BeautifulSoupHTMLParser",
    "bs4.diagnose.AnnouncingParser",
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.builder._htmlparser.BeautifulSoupHTMLParser",
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.diagnose.AnnouncingParser"
  ],
  "html.parser.HTMLParser.handle_endtag": [
    "bs4.builder._htmlparser.BeautifulSoupHTMLParser",
    "bs4.diagnose.AnnouncingParser",
    "fpdf.html.HTML2FPDF",
    "humanfriendly.terminal.html.HTMLConverter",
    "prettytable.prettytable.TableHandler",
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.builder._htmlparser.BeautifulSoupHTMLParser",
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.diagnose.AnnouncingParser",
    "typeshed.typeshed.stubs.fpdf2.fpdf.html.HTML2FPDF",
    "typeshed.typeshed.stubs.humanfriendly.humanfriendly.terminal.html.HTMLConverter"
  ],
  "html.parser.HTMLParser.handle_entityref": [
    "bs4.builder._htmlparser.BeautifulSoupHTMLParser",
    "bs4.diagnose.AnnouncingParser",
    "django.utils.html.MLStripper",
    "humanfriendly.terminal.html.HTMLConverter",
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.builder._htmlparser.BeautifulSoupHTMLParser",
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.diagnose.AnnouncingParser",
    "typeshed.typeshed.stubs.boltons.boltons.strutils.HTMLTextExtractor",
    "typeshed.typeshed.stubs.humanfriendly.humanfriendly.terminal.html.HTMLConverter"
  ],
  "html.parser.HTMLParser.handle_pi": [
    "bs4.builder._htmlparser.BeautifulSoupHTMLParser",
    "bs4.diagnose.AnnouncingParser",
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.builder._htmlparser.BeautifulSoupHTMLParser",
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.diagnose.AnnouncingParser"
  ],
  "html.parser.HTMLParser.handle_startendtag": [
    "bs4.builder._htmlparser.BeautifulSoupHTMLParser",
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.builder._htmlparser.BeautifulSoupHTMLParser"
  ],
  "html.parser.HTMLParser.handle_starttag": [
    "bs4.builder._htmlparser.BeautifulSoupHTMLParser",
    "bs4.diagnose.AnnouncingParser",
    "fpdf.html.HTML2FPDF",
    "humanfriendly.terminal.html.HTMLConverter",
    "pip._internal.index.collector.HTMLLinkParser",
    "prettytable.prettytable.TableHandler",
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.builder._htmlparser.BeautifulSoupHTMLParser",
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.diagnose.AnnouncingParser",
    "typeshed.typeshed.stubs.fpdf2.fpdf.html.HTML2FPDF",
    "typeshed.typeshed.stubs.humanfriendly.humanfriendly.terminal.html.HTMLConverter"
  ],
  "html5lib._inputstream.HTMLUnicodeInputStream.__init__": [
    "html5lib._inputstream.HTMLBinaryInputStream"
  ],
  "html5lib._inputstream.HTMLUnicodeInputStream.openStream": [
    "html5lib._inputstream.HTMLBinaryInputStream"
  ],
  "html5lib._inputstream.HTMLUnicodeInputStream.reset": [
    "html5lib._inputstream.HTMLBinaryInputStream"
  ],
  "html5lib._trie._base.Trie.has_keys_with_prefix": [
    "html5lib._trie.py.Trie"
  ],
  "html5lib._trie._base.Trie.keys": [
    "html5lib._trie.py.Trie"
  ],
  "html5lib.filters.base.Filter.__init__": [
    "html5lib.filters.inject_meta_charset.Filter",
    "html5lib.filters.lint.Filter",
    "html5lib.filters.sanitizer.Filter"
  ],
  "html5lib.filters.base.Filter.__iter__": [
    "html5lib.filters.alphabeticalattributes.Filter",
    "html5lib.filters.inject_meta_charset.Filter",
    "html5lib.filters.lint.Filter",
    "html5lib.filters.optionaltags.Filter",
    "html5lib.filters.sanitizer.Filter",
    "html5lib.filters.whitespace.Filter"
  ],
  "html5lib.treebuilders.base.Node.__init__": [
    "bs4.builder._html5lib.Element",
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.builder._html5lib.Element"
  ],
  "html5lib.treebuilders.base.Node.appendChild": [
    "bs4.builder._html5lib.Element",
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.builder._html5lib.Element"
  ],
  "html5lib.treebuilders.base.Node.cloneNode": [
    "bs4.builder._html5lib.Element",
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.builder._html5lib.Element"
  ],
  "html5lib.treebuilders.base.Node.hasContent": [
    "bs4.builder._html5lib.Element",
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.builder._html5lib.Element"
  ],
  "html5lib.treebuilders.base.Node.insertBefore": [
    "bs4.builder._html5lib.Element",
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.builder._html5lib.Element"
  ],
  "html5lib.treebuilders.base.Node.insertText": [
    "bs4.builder._html5lib.Element",
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.builder._html5lib.Element"
  ],
  "html5lib.treebuilders.base.Node.removeChild": [
    "bs4.builder._html5lib.Element",
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.builder._html5lib.Element"
  ],
  "html5lib.treebuilders.base.Node.reparentChildren": [
    "bs4.builder._html5lib.Element",
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.builder._html5lib.Element"
  ],
  "html5lib.treebuilders.base.TreeBuilder.__init__": [
    "bs4.builder._html5lib.TreeBuilderForHtml5lib",
    "html5lib.treebuilders.etree_lxml.TreeBuilder",
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.builder._html5lib.TreeBuilderForHtml5lib"
  ],
  "html5lib.treebuilders.base.TreeBuilder.commentClass": [
    "bs4.builder._html5lib.TreeBuilderForHtml5lib",
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.builder._html5lib.TreeBuilderForHtml5lib"
  ],
  "html5lib.treebuilders.base.TreeBuilder.documentClass": [
    "bs4.builder._html5lib.TreeBuilderForHtml5lib",
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.builder._html5lib.TreeBuilderForHtml5lib"
  ],
  "html5lib.treebuilders.base.TreeBuilder.elementClass": [
    "bs4.builder._html5lib.TreeBuilderForHtml5lib",
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.builder._html5lib.TreeBuilderForHtml5lib"
  ],
  "html5lib.treebuilders.base.TreeBuilder.fragmentClass": [
    "bs4.builder._html5lib.TreeBuilderForHtml5lib",
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.builder._html5lib.TreeBuilderForHtml5lib"
  ],
  "html5lib.treebuilders.base.TreeBuilder.getDocument": [
    "bs4.builder._html5lib.TreeBuilderForHtml5lib",
    "html5lib.treebuilders.etree_lxml.TreeBuilder",
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.builder._html5lib.TreeBuilderForHtml5lib"
  ],
  "html5lib.treebuilders.base.TreeBuilder.getFragment": [
    "bs4.builder._html5lib.TreeBuilderForHtml5lib",
    "html5lib.treebuilders.etree_lxml.TreeBuilder",
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.builder._html5lib.TreeBuilderForHtml5lib"
  ],
  "html5lib.treebuilders.base.TreeBuilder.insertDoctype": [
    "bs4.builder._html5lib.TreeBuilderForHtml5lib",
    "html5lib.treebuilders.etree_lxml.TreeBuilder",
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.builder._html5lib.TreeBuilderForHtml5lib"
  ],
  "html5lib.treebuilders.base.TreeBuilder.insertRoot": [
    "html5lib.treebuilders.etree_lxml.TreeBuilder"
  ],
  "html5lib.treebuilders.base.TreeBuilder.reset": [
    "html5lib.treebuilders.etree_lxml.TreeBuilder"
  ],
  "html5lib.treebuilders.base.TreeBuilder.testSerializer": [
    "bs4.builder._html5lib.TreeBuilderForHtml5lib",
    "html5lib.treebuilders.etree_lxml.TreeBuilder",
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.builder._html5lib.TreeBuilderForHtml5lib"
  ],
  "html5lib.treewalkers.base.NonRecursiveTreeWalker.getFirstChild": [
    "html5lib.treewalkers.dom.TreeWalker",
    "html5lib.treewalkers.etree_lxml.TreeWalker"
  ],
  "html5lib.treewalkers.base.NonRecursiveTreeWalker.getNextSibling": [
    "html5lib.treewalkers.dom.TreeWalker",
    "html5lib.treewalkers.etree_lxml.TreeWalker"
  ],
  "html5lib.treewalkers.base.NonRecursiveTreeWalker.getNodeDetails": [
    "html5lib.treewalkers.dom.TreeWalker",
    "html5lib.treewalkers.etree_lxml.TreeWalker"
  ],
  "html5lib.treewalkers.base.NonRecursiveTreeWalker.getParentNode": [
    "html5lib.treewalkers.dom.TreeWalker",
    "html5lib.treewalkers.etree_lxml.TreeWalker"
  ],
  "html5lib.treewalkers.base.TreeWalker.__iter__": [
    "html5lib.treewalkers.base.NonRecursiveTreeWalker",
    "html5lib.treewalkers.genshi.TreeWalker"
  ],
  "html5lib.treewalkers.etree_lxml.Root.__init__": [
    "html5lib.treewalkers.etree_lxml.FragmentRoot"
  ],
  "html5lib.treewalkers.etree_lxml.Root.getnext": [
    "html5lib.treewalkers.etree_lxml.FragmentRoot"
  ],
  "http.client.HTTPConnection.__init__": [
    "http.client.HTTPSConnection",
    "httplib2.HTTPConnectionWithTimeout",
    "typeshed.typeshed.stubs.httplib2.httplib2.HTTPConnectionWithTimeout",
    "urllib3.connection.HTTPConnection"
  ],
  "http.client.HTTPConnection.connect": [
    "httplib2.HTTPConnectionWithTimeout",
    "httplib2.HTTPSConnectionWithTimeout",
    "pip._vendor.distlib.util.HTTPSConnection",
    "typeshed.typeshed.stubs.httplib2.httplib2.HTTPConnectionWithTimeout",
    "typeshed.typeshed.stubs.httplib2.httplib2.HTTPSConnectionWithTimeout",
    "urllib3.connection.HTTPConnection"
  ],
  "http.client.HTTPResponse.__init__": [
    "boto.connection.HTTPResponse",
    "typeshed.typeshed.stubs.boto.boto.connection.HTTPResponse"
  ],
  "http.client.HTTPResponse.read": [
    "boto.connection.HTTPResponse",
    "typeshed.typeshed.stubs.boto.boto.connection.HTTPResponse"
  ],
  "http.client.HTTPSConnection.__init__": [
    "httplib2.HTTPSConnectionWithTimeout",
    "typeshed.typeshed.stubs.httplib2.httplib2.HTTPSConnectionWithTimeout"
  ],
  "http.cookiejar.CookieJar.__init__": [
    "http.cookiejar.FileCookieJar"
  ],
  "http.cookiejar.CookieJar.set_cookie": [
    "pip._vendor.requests.cookies.RequestsCookieJar",
    "requests.cookies.RequestsCookieJar",
    "typeshed.typeshed.stubs.requests.requests.cookies.RequestsCookieJar"
  ],
  "http.server.BaseHTTPRequestHandler.address_string": [
    "django.core.servers.basehttp.WSGIRequestHandler",
    "werkzeug.serving.WSGIRequestHandler"
  ],
  "http.server.BaseHTTPRequestHandler.log_error": [
    "werkzeug.serving.WSGIRequestHandler"
  ],
  "http.server.BaseHTTPRequestHandler.log_message": [
    "django.core.servers.basehttp.WSGIRequestHandler",
    "werkzeug.serving.WSGIRequestHandler"
  ],
  "http.server.BaseHTTPRequestHandler.log_request": [
    "werkzeug.serving.WSGIRequestHandler"
  ],
  "http.server.BaseHTTPRequestHandler.server_version": [
    "werkzeug.serving.WSGIRequestHandler"
  ],
  "httplib2.Authentication.__init__": [
    "httplib2.BasicAuthentication",
    "httplib2.DigestAuthentication",
    "httplib2.GoogleLoginAuthentication",
    "httplib2.HmacDigestAuthentication",
    "httplib2.WsseAuthentication"
  ],
  "httplib2.Authentication.request": [
    "httplib2.BasicAuthentication",
    "httplib2.DigestAuthentication",
    "httplib2.GoogleLoginAuthentication",
    "httplib2.HmacDigestAuthentication",
    "httplib2.WsseAuthentication"
  ],
  "httplib2.Authentication.response": [
    "httplib2.DigestAuthentication",
    "httplib2.HmacDigestAuthentication"
  ],
  "httplib2.Credentials.add": [
    "httplib2.KeyCerts"
  ],
  "httplib2.Credentials.iter": [
    "httplib2.KeyCerts"
  ],
  "imaplib.IMAP4.__init__": [
    "imaplib.IMAP4_SSL",
    "imaplib.IMAP4_stream"
  ],
  "imaplib.IMAP4.open": [
    "imaplib.IMAP4_SSL",
    "imaplib.IMAP4_stream"
  ],
  "importlib.abc.ExecutionLoader.get_filename": [
    "importlib.abc.FileLoader",
    "importlib.machinery.ExtensionFileLoader",
    "typeshed.typeshed.stdlib.importlib.machinery.ExtensionFileLoader"
  ],
  "importlib.abc.InspectLoader.exec_module": [
    "importlib.machinery.BuiltinImporter",
    "importlib.machinery.ExtensionFileLoader",
    "importlib.machinery.FrozenImporter",
    "typeguard.importhook.TypeguardLoader",
    "typeshed.typeshed.stdlib.importlib.machinery.BuiltinImporter",
    "typeshed.typeshed.stdlib.importlib.machinery.ExtensionFileLoader",
    "typeshed.typeshed.stdlib.importlib.machinery.FrozenImporter"
  ],
  "importlib.abc.InspectLoader.get_code": [
    "importlib.machinery.BuiltinImporter",
    "importlib.machinery.ExtensionFileLoader",
    "importlib.machinery.FrozenImporter",
    "typeshed.typeshed.stdlib.importlib.machinery.BuiltinImporter",
    "typeshed.typeshed.stdlib.importlib.machinery.ExtensionFileLoader",
    "typeshed.typeshed.stdlib.importlib.machinery.FrozenImporter"
  ],
  "importlib.abc.InspectLoader.get_source": [
    "importlib.abc.SourceLoader",
    "importlib.machinery.BuiltinImporter",
    "importlib.machinery.ExtensionFileLoader",
    "importlib.machinery.FrozenImporter",
    "typeshed.typeshed.stdlib.importlib.machinery.BuiltinImporter",
    "typeshed.typeshed.stdlib.importlib.machinery.ExtensionFileLoader",
    "typeshed.typeshed.stdlib.importlib.machinery.FrozenImporter"
  ],
  "importlib.abc.InspectLoader.is_package": [
    "importlib.machinery.BuiltinImporter",
    "importlib.machinery.FrozenImporter",
    "typeshed.typeshed.stdlib.importlib.machinery.BuiltinImporter",
    "typeshed.typeshed.stdlib.importlib.machinery.FrozenImporter"
  ],
  "importlib.abc.InspectLoader.source_to_code": [
    "typeguard.importhook.TypeguardLoader"
  ],
  "importlib.abc.Loader.create_module": [
    "importlib.machinery.BuiltinImporter",
    "importlib.machinery.ExtensionFileLoader",
    "importlib.machinery.FrozenImporter",
    "typeshed.typeshed.stdlib.importlib.machinery.BuiltinImporter",
    "typeshed.typeshed.stdlib.importlib.machinery.ExtensionFileLoader",
    "typeshed.typeshed.stdlib.importlib.machinery.FrozenImporter"
  ],
  "importlib.abc.Loader.exec_module": [
    "importlib.abc.InspectLoader",
    "importlib.util.LazyLoader",
    "typeshed.typeshed.stdlib.importlib.util.LazyLoader"
  ],
  "importlib.abc.Loader.load_module": [
    "importlib.abc.FileLoader",
    "importlib.machinery.BuiltinImporter",
    "importlib.machinery.FrozenImporter",
    "typeshed.typeshed.stdlib.importlib.machinery.BuiltinImporter",
    "typeshed.typeshed.stdlib.importlib.machinery.FrozenImporter"
  ],
  "importlib.abc.Loader.module_repr": [
    "importlib.machinery.BuiltinImporter",
    "importlib.machinery.FrozenImporter",
    "typeshed.typeshed.stdlib.importlib.machinery.BuiltinImporter",
    "typeshed.typeshed.stdlib.importlib.machinery.FrozenImporter"
  ],
  "importlib.abc.MetaPathFinder.find_module": [
    "importlib.machinery.BuiltinImporter",
    "importlib.machinery.FrozenImporter",
    "importlib.machinery.WindowsRegistryFinder",
    "typeshed.typeshed.stdlib.importlib.machinery.BuiltinImporter",
    "typeshed.typeshed.stdlib.importlib.machinery.FrozenImporter",
    "typeshed.typeshed.stdlib.importlib.machinery.WindowsRegistryFinder"
  ],
  "importlib.abc.MetaPathFinder.find_spec": [
    "IPython.external.qt_loaders.ImportDenier",
    "IPython.utils.shimmodule.ShimImporter",
    "importlib.machinery.BuiltinImporter",
    "importlib.machinery.FrozenImporter",
    "importlib.machinery.WindowsRegistryFinder",
    "typeguard.importhook.TypeguardFinder",
    "typeshed.typeshed.stdlib.importlib.machinery.BuiltinImporter",
    "typeshed.typeshed.stdlib.importlib.machinery.FrozenImporter",
    "typeshed.typeshed.stdlib.importlib.machinery.WindowsRegistryFinder"
  ],
  "importlib.abc.MetaPathFinder.invalidate_caches": [
    "importlib_metadata.MetadataPathFinder"
  ],
  "importlib.abc.ResourceLoader.get_data": [
    "importlib.abc.FileLoader"
  ],
  "importlib.abc.ResourceReader.contents": [
    "importlib.abc.TraversableResources"
  ],
  "importlib.abc.ResourceReader.is_resource": [
    "importlib.abc.TraversableResources"
  ],
  "importlib.abc.ResourceReader.open_resource": [
    "importlib.abc.TraversableResources"
  ],
  "importlib.abc.ResourceReader.resource_path": [
    "importlib.abc.TraversableResources"
  ],
  "importlib.abc.SourceLoader.set_data": [
    "importlib.machinery.SourceFileLoader",
    "typeshed.typeshed.stdlib.importlib.machinery.SourceFileLoader"
  ],
  "importlib.metadata.Distribution.locate_file": [
    "importlib.metadata.PathDistribution"
  ],
  "importlib.metadata.Distribution.read_text": [
    "importlib.metadata.PathDistribution",
    "pip._internal.metadata.importlib._dists.WheelDistribution"
  ],
  "importlib.metadata.DistributionFinder.find_distributions": [
    "importlib.metadata.MetadataPathFinder"
  ],
  "importlib.metadata.PackagePath.locate": [
    "PyInstaller.utils.hooks.conda.PackagePath",
    "typeshed.typeshed.stubs.pyinstaller.PyInstaller.utils.hooks.conda.PackagePath"
  ],
  "importlib_metadata.Distribution._normalized_name": [
    "importlib_metadata.PathDistribution"
  ],
  "importlib_metadata.Distribution.locate_file": [
    "importlib_metadata.PathDistribution"
  ],
  "importlib_metadata.Distribution.read_text": [
    "importlib_metadata.PathDistribution"
  ],
  "importlib_metadata.DistributionFinder.find_distributions": [
    "importlib_metadata.MetadataPathFinder"
  ],
  "influxdb_client.client._base._BaseClient.__init__": [
    "influxdb_client.client.influxdb_client.InfluxDBClient",
    "influxdb_client.client.influxdb_client_async.InfluxDBClientAsync",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.client.influxdb_client.InfluxDBClient",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.client.influxdb_client_async.InfluxDBClientAsync"
  ],
  "influxdb_client.client._base._BaseDeleteApi.__init__": [
    "influxdb_client.client.delete_api.DeleteApi",
    "influxdb_client.client.delete_api_async.DeleteApiAsync",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.client.delete_api.DeleteApi",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.client.delete_api_async.DeleteApiAsync"
  ],
  "influxdb_client.client._base._BaseQueryApi.__init__": [
    "influxdb_client.client.invokable_scripts_api.InvokableScriptsApi",
    "influxdb_client.client.query_api.QueryApi",
    "influxdb_client.client.query_api_async.QueryApiAsync",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.client.invokable_scripts_api.InvokableScriptsApi",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.client.query_api.QueryApi",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.client.query_api_async.QueryApiAsync"
  ],
  "influxdb_client.client._base._BaseWriteApi.__init__": [
    "influxdb_client.client.write_api.WriteApi",
    "influxdb_client.client.write_api_async.WriteApiAsync",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.client.write_api.WriteApi",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.client.write_api_async.WriteApiAsync"
  ],
  "influxdb_client.client.exceptions.InfluxDBError.__init__": [
    "influxdb_client.rest.ApiException",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.rest.ApiException"
  ],
  "influxdb_client.client.util.date_utils.DateHelper.parse_date": [
    "influxdb_client.client.util.date_utils_pandas.PandasDateTimeHelper",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.client.util.date_utils_pandas.PandasDateTimeHelper"
  ],
  "influxdb_client.client.util.date_utils.DateHelper.to_nanoseconds": [
    "influxdb_client.client.util.date_utils_pandas.PandasDateTimeHelper",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.client.util.date_utils_pandas.PandasDateTimeHelper"
  ],
  "influxdb_client.configuration.Configuration.__init__": [
    "influxdb_client.client._base._Configuration",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.client._base._Configuration"
  ],
  "influxdb_client.configuration.Configuration.update_request_body": [
    "influxdb_client.client._base._Configuration",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.client._base._Configuration"
  ],
  "influxdb_client.configuration.Configuration.update_request_header_params": [
    "influxdb_client.client._base._Configuration",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.client._base._Configuration"
  ],
  "influxdb_client.domain.authorization_update_request.AuthorizationUpdateRequest.__eq__": [
    "influxdb_client.domain.authorization.Authorization",
    "influxdb_client.domain.authorization_post_request.AuthorizationPostRequest",
    "influxdb_client.domain.legacy_authorization_post_request.LegacyAuthorizationPostRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.authorization.Authorization",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.authorization_post_request.AuthorizationPostRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.legacy_authorization_post_request.LegacyAuthorizationPostRequest"
  ],
  "influxdb_client.domain.authorization_update_request.AuthorizationUpdateRequest.__init__": [
    "influxdb_client.domain.authorization.Authorization",
    "influxdb_client.domain.authorization_post_request.AuthorizationPostRequest",
    "influxdb_client.domain.legacy_authorization_post_request.LegacyAuthorizationPostRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.authorization.Authorization",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.authorization_post_request.AuthorizationPostRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.legacy_authorization_post_request.LegacyAuthorizationPostRequest"
  ],
  "influxdb_client.domain.authorization_update_request.AuthorizationUpdateRequest.__ne__": [
    "influxdb_client.domain.authorization.Authorization",
    "influxdb_client.domain.authorization_post_request.AuthorizationPostRequest",
    "influxdb_client.domain.legacy_authorization_post_request.LegacyAuthorizationPostRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.authorization.Authorization",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.authorization_post_request.AuthorizationPostRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.legacy_authorization_post_request.LegacyAuthorizationPostRequest"
  ],
  "influxdb_client.domain.authorization_update_request.AuthorizationUpdateRequest.to_dict": [
    "influxdb_client.domain.authorization.Authorization",
    "influxdb_client.domain.authorization_post_request.AuthorizationPostRequest",
    "influxdb_client.domain.legacy_authorization_post_request.LegacyAuthorizationPostRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.authorization.Authorization",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.authorization_post_request.AuthorizationPostRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.legacy_authorization_post_request.LegacyAuthorizationPostRequest"
  ],
  "influxdb_client.domain.authorization_update_request.AuthorizationUpdateRequest.to_str": [
    "influxdb_client.domain.authorization.Authorization",
    "influxdb_client.domain.authorization_post_request.AuthorizationPostRequest",
    "influxdb_client.domain.legacy_authorization_post_request.LegacyAuthorizationPostRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.authorization.Authorization",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.authorization_post_request.AuthorizationPostRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.legacy_authorization_post_request.LegacyAuthorizationPostRequest"
  ],
  "influxdb_client.domain.cell.Cell.__eq__": [
    "influxdb_client.domain.cell_with_view_properties.CellWithViewProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.cell_with_view_properties.CellWithViewProperties"
  ],
  "influxdb_client.domain.cell.Cell.__init__": [
    "influxdb_client.domain.cell_with_view_properties.CellWithViewProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.cell_with_view_properties.CellWithViewProperties"
  ],
  "influxdb_client.domain.cell.Cell.__ne__": [
    "influxdb_client.domain.cell_with_view_properties.CellWithViewProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.cell_with_view_properties.CellWithViewProperties"
  ],
  "influxdb_client.domain.cell.Cell.to_dict": [
    "influxdb_client.domain.cell_with_view_properties.CellWithViewProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.cell_with_view_properties.CellWithViewProperties"
  ],
  "influxdb_client.domain.cell.Cell.to_str": [
    "influxdb_client.domain.cell_with_view_properties.CellWithViewProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.cell_with_view_properties.CellWithViewProperties"
  ],
  "influxdb_client.domain.check_base.CheckBase.__eq__": [
    "influxdb_client.domain.check_discriminator.CheckDiscriminator",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.check_discriminator.CheckDiscriminator"
  ],
  "influxdb_client.domain.check_base.CheckBase.__init__": [
    "influxdb_client.domain.check_discriminator.CheckDiscriminator",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.check_discriminator.CheckDiscriminator"
  ],
  "influxdb_client.domain.check_base.CheckBase.__ne__": [
    "influxdb_client.domain.check_discriminator.CheckDiscriminator",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.check_discriminator.CheckDiscriminator"
  ],
  "influxdb_client.domain.check_base.CheckBase.to_dict": [
    "influxdb_client.domain.check_discriminator.CheckDiscriminator",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.check_discriminator.CheckDiscriminator"
  ],
  "influxdb_client.domain.check_base.CheckBase.to_str": [
    "influxdb_client.domain.check_discriminator.CheckDiscriminator",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.check_discriminator.CheckDiscriminator"
  ],
  "influxdb_client.domain.check_discriminator.CheckDiscriminator.__eq__": [
    "influxdb_client.domain.custom_check.CustomCheck",
    "influxdb_client.domain.deadman_check.DeadmanCheck",
    "influxdb_client.domain.threshold_check.ThresholdCheck",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.custom_check.CustomCheck",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.deadman_check.DeadmanCheck",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.threshold_check.ThresholdCheck"
  ],
  "influxdb_client.domain.check_discriminator.CheckDiscriminator.__init__": [
    "influxdb_client.domain.custom_check.CustomCheck",
    "influxdb_client.domain.deadman_check.DeadmanCheck",
    "influxdb_client.domain.threshold_check.ThresholdCheck",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.custom_check.CustomCheck",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.deadman_check.DeadmanCheck",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.threshold_check.ThresholdCheck"
  ],
  "influxdb_client.domain.check_discriminator.CheckDiscriminator.__ne__": [
    "influxdb_client.domain.custom_check.CustomCheck",
    "influxdb_client.domain.deadman_check.DeadmanCheck",
    "influxdb_client.domain.threshold_check.ThresholdCheck",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.custom_check.CustomCheck",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.deadman_check.DeadmanCheck",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.threshold_check.ThresholdCheck"
  ],
  "influxdb_client.domain.check_discriminator.CheckDiscriminator.to_dict": [
    "influxdb_client.domain.custom_check.CustomCheck",
    "influxdb_client.domain.deadman_check.DeadmanCheck",
    "influxdb_client.domain.threshold_check.ThresholdCheck",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.custom_check.CustomCheck",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.deadman_check.DeadmanCheck",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.threshold_check.ThresholdCheck"
  ],
  "influxdb_client.domain.check_discriminator.CheckDiscriminator.to_str": [
    "influxdb_client.domain.custom_check.CustomCheck",
    "influxdb_client.domain.deadman_check.DeadmanCheck",
    "influxdb_client.domain.threshold_check.ThresholdCheck",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.custom_check.CustomCheck",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.deadman_check.DeadmanCheck",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.threshold_check.ThresholdCheck"
  ],
  "influxdb_client.domain.create_dashboard_request.CreateDashboardRequest.__eq__": [
    "influxdb_client.domain.dashboard.Dashboard",
    "influxdb_client.domain.dashboard_with_view_properties.DashboardWithViewProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.dashboard.Dashboard",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.dashboard_with_view_properties.DashboardWithViewProperties"
  ],
  "influxdb_client.domain.create_dashboard_request.CreateDashboardRequest.__init__": [
    "influxdb_client.domain.dashboard.Dashboard",
    "influxdb_client.domain.dashboard_with_view_properties.DashboardWithViewProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.dashboard.Dashboard",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.dashboard_with_view_properties.DashboardWithViewProperties"
  ],
  "influxdb_client.domain.create_dashboard_request.CreateDashboardRequest.__ne__": [
    "influxdb_client.domain.dashboard.Dashboard",
    "influxdb_client.domain.dashboard_with_view_properties.DashboardWithViewProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.dashboard.Dashboard",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.dashboard_with_view_properties.DashboardWithViewProperties"
  ],
  "influxdb_client.domain.create_dashboard_request.CreateDashboardRequest.to_dict": [
    "influxdb_client.domain.dashboard.Dashboard",
    "influxdb_client.domain.dashboard_with_view_properties.DashboardWithViewProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.dashboard.Dashboard",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.dashboard_with_view_properties.DashboardWithViewProperties"
  ],
  "influxdb_client.domain.create_dashboard_request.CreateDashboardRequest.to_str": [
    "influxdb_client.domain.dashboard.Dashboard",
    "influxdb_client.domain.dashboard_with_view_properties.DashboardWithViewProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.dashboard.Dashboard",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.dashboard_with_view_properties.DashboardWithViewProperties"
  ],
  "influxdb_client.domain.expression.Expression.__eq__": [
    "influxdb_client.domain.array_expression.ArrayExpression",
    "influxdb_client.domain.binary_expression.BinaryExpression",
    "influxdb_client.domain.boolean_literal.BooleanLiteral",
    "influxdb_client.domain.call_expression.CallExpression",
    "influxdb_client.domain.conditional_expression.ConditionalExpression",
    "influxdb_client.domain.date_time_literal.DateTimeLiteral",
    "influxdb_client.domain.dict_expression.DictExpression",
    "influxdb_client.domain.duration_literal.DurationLiteral",
    "influxdb_client.domain.float_literal.FloatLiteral",
    "influxdb_client.domain.function_expression.FunctionExpression",
    "influxdb_client.domain.index_expression.IndexExpression",
    "influxdb_client.domain.integer_literal.IntegerLiteral",
    "influxdb_client.domain.logical_expression.LogicalExpression",
    "influxdb_client.domain.member_expression.MemberExpression",
    "influxdb_client.domain.object_expression.ObjectExpression",
    "influxdb_client.domain.paren_expression.ParenExpression",
    "influxdb_client.domain.pipe_expression.PipeExpression",
    "influxdb_client.domain.pipe_literal.PipeLiteral",
    "influxdb_client.domain.property_key.PropertyKey",
    "influxdb_client.domain.regexp_literal.RegexpLiteral",
    "influxdb_client.domain.unary_expression.UnaryExpression",
    "influxdb_client.domain.unsigned_integer_literal.UnsignedIntegerLiteral",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.array_expression.ArrayExpression",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.binary_expression.BinaryExpression",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.boolean_literal.BooleanLiteral",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.call_expression.CallExpression",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.conditional_expression.ConditionalExpression",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.date_time_literal.DateTimeLiteral",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.dict_expression.DictExpression",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.duration_literal.DurationLiteral",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.float_literal.FloatLiteral",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.function_expression.FunctionExpression",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.index_expression.IndexExpression",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.integer_literal.IntegerLiteral",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.logical_expression.LogicalExpression",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.member_expression.MemberExpression",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.object_expression.ObjectExpression",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.paren_expression.ParenExpression",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.pipe_expression.PipeExpression",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.pipe_literal.PipeLiteral",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.property_key.PropertyKey",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.regexp_literal.RegexpLiteral",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.unary_expression.UnaryExpression",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.unsigned_integer_literal.UnsignedIntegerLiteral"
  ],
  "influxdb_client.domain.expression.Expression.__init__": [
    "influxdb_client.domain.array_expression.ArrayExpression",
    "influxdb_client.domain.binary_expression.BinaryExpression",
    "influxdb_client.domain.boolean_literal.BooleanLiteral",
    "influxdb_client.domain.call_expression.CallExpression",
    "influxdb_client.domain.conditional_expression.ConditionalExpression",
    "influxdb_client.domain.date_time_literal.DateTimeLiteral",
    "influxdb_client.domain.dict_expression.DictExpression",
    "influxdb_client.domain.duration_literal.DurationLiteral",
    "influxdb_client.domain.float_literal.FloatLiteral",
    "influxdb_client.domain.function_expression.FunctionExpression",
    "influxdb_client.domain.index_expression.IndexExpression",
    "influxdb_client.domain.integer_literal.IntegerLiteral",
    "influxdb_client.domain.logical_expression.LogicalExpression",
    "influxdb_client.domain.member_expression.MemberExpression",
    "influxdb_client.domain.object_expression.ObjectExpression",
    "influxdb_client.domain.paren_expression.ParenExpression",
    "influxdb_client.domain.pipe_expression.PipeExpression",
    "influxdb_client.domain.pipe_literal.PipeLiteral",
    "influxdb_client.domain.property_key.PropertyKey",
    "influxdb_client.domain.regexp_literal.RegexpLiteral",
    "influxdb_client.domain.unary_expression.UnaryExpression",
    "influxdb_client.domain.unsigned_integer_literal.UnsignedIntegerLiteral",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.array_expression.ArrayExpression",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.binary_expression.BinaryExpression",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.boolean_literal.BooleanLiteral",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.call_expression.CallExpression",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.conditional_expression.ConditionalExpression",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.date_time_literal.DateTimeLiteral",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.dict_expression.DictExpression",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.duration_literal.DurationLiteral",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.float_literal.FloatLiteral",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.function_expression.FunctionExpression",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.index_expression.IndexExpression",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.integer_literal.IntegerLiteral",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.logical_expression.LogicalExpression",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.member_expression.MemberExpression",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.object_expression.ObjectExpression",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.paren_expression.ParenExpression",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.pipe_expression.PipeExpression",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.pipe_literal.PipeLiteral",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.property_key.PropertyKey",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.regexp_literal.RegexpLiteral",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.unary_expression.UnaryExpression",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.unsigned_integer_literal.UnsignedIntegerLiteral"
  ],
  "influxdb_client.domain.expression.Expression.__ne__": [
    "influxdb_client.domain.array_expression.ArrayExpression",
    "influxdb_client.domain.binary_expression.BinaryExpression",
    "influxdb_client.domain.boolean_literal.BooleanLiteral",
    "influxdb_client.domain.call_expression.CallExpression",
    "influxdb_client.domain.conditional_expression.ConditionalExpression",
    "influxdb_client.domain.date_time_literal.DateTimeLiteral",
    "influxdb_client.domain.dict_expression.DictExpression",
    "influxdb_client.domain.duration_literal.DurationLiteral",
    "influxdb_client.domain.float_literal.FloatLiteral",
    "influxdb_client.domain.function_expression.FunctionExpression",
    "influxdb_client.domain.index_expression.IndexExpression",
    "influxdb_client.domain.integer_literal.IntegerLiteral",
    "influxdb_client.domain.logical_expression.LogicalExpression",
    "influxdb_client.domain.member_expression.MemberExpression",
    "influxdb_client.domain.object_expression.ObjectExpression",
    "influxdb_client.domain.paren_expression.ParenExpression",
    "influxdb_client.domain.pipe_expression.PipeExpression",
    "influxdb_client.domain.pipe_literal.PipeLiteral",
    "influxdb_client.domain.property_key.PropertyKey",
    "influxdb_client.domain.regexp_literal.RegexpLiteral",
    "influxdb_client.domain.unary_expression.UnaryExpression",
    "influxdb_client.domain.unsigned_integer_literal.UnsignedIntegerLiteral",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.array_expression.ArrayExpression",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.binary_expression.BinaryExpression",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.boolean_literal.BooleanLiteral",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.call_expression.CallExpression",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.conditional_expression.ConditionalExpression",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.date_time_literal.DateTimeLiteral",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.dict_expression.DictExpression",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.duration_literal.DurationLiteral",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.float_literal.FloatLiteral",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.function_expression.FunctionExpression",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.index_expression.IndexExpression",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.integer_literal.IntegerLiteral",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.logical_expression.LogicalExpression",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.member_expression.MemberExpression",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.object_expression.ObjectExpression",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.paren_expression.ParenExpression",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.pipe_expression.PipeExpression",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.pipe_literal.PipeLiteral",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.property_key.PropertyKey",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.regexp_literal.RegexpLiteral",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.unary_expression.UnaryExpression",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.unsigned_integer_literal.UnsignedIntegerLiteral"
  ],
  "influxdb_client.domain.expression.Expression.to_dict": [
    "influxdb_client.domain.array_expression.ArrayExpression",
    "influxdb_client.domain.binary_expression.BinaryExpression",
    "influxdb_client.domain.boolean_literal.BooleanLiteral",
    "influxdb_client.domain.call_expression.CallExpression",
    "influxdb_client.domain.conditional_expression.ConditionalExpression",
    "influxdb_client.domain.date_time_literal.DateTimeLiteral",
    "influxdb_client.domain.dict_expression.DictExpression",
    "influxdb_client.domain.duration_literal.DurationLiteral",
    "influxdb_client.domain.float_literal.FloatLiteral",
    "influxdb_client.domain.function_expression.FunctionExpression",
    "influxdb_client.domain.index_expression.IndexExpression",
    "influxdb_client.domain.integer_literal.IntegerLiteral",
    "influxdb_client.domain.logical_expression.LogicalExpression",
    "influxdb_client.domain.member_expression.MemberExpression",
    "influxdb_client.domain.object_expression.ObjectExpression",
    "influxdb_client.domain.paren_expression.ParenExpression",
    "influxdb_client.domain.pipe_expression.PipeExpression",
    "influxdb_client.domain.pipe_literal.PipeLiteral",
    "influxdb_client.domain.property_key.PropertyKey",
    "influxdb_client.domain.regexp_literal.RegexpLiteral",
    "influxdb_client.domain.unary_expression.UnaryExpression",
    "influxdb_client.domain.unsigned_integer_literal.UnsignedIntegerLiteral",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.array_expression.ArrayExpression",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.binary_expression.BinaryExpression",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.boolean_literal.BooleanLiteral",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.call_expression.CallExpression",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.conditional_expression.ConditionalExpression",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.date_time_literal.DateTimeLiteral",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.dict_expression.DictExpression",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.duration_literal.DurationLiteral",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.float_literal.FloatLiteral",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.function_expression.FunctionExpression",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.index_expression.IndexExpression",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.integer_literal.IntegerLiteral",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.logical_expression.LogicalExpression",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.member_expression.MemberExpression",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.object_expression.ObjectExpression",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.paren_expression.ParenExpression",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.pipe_expression.PipeExpression",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.pipe_literal.PipeLiteral",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.property_key.PropertyKey",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.regexp_literal.RegexpLiteral",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.unary_expression.UnaryExpression",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.unsigned_integer_literal.UnsignedIntegerLiteral"
  ],
  "influxdb_client.domain.expression.Expression.to_str": [
    "influxdb_client.domain.array_expression.ArrayExpression",
    "influxdb_client.domain.binary_expression.BinaryExpression",
    "influxdb_client.domain.boolean_literal.BooleanLiteral",
    "influxdb_client.domain.call_expression.CallExpression",
    "influxdb_client.domain.conditional_expression.ConditionalExpression",
    "influxdb_client.domain.date_time_literal.DateTimeLiteral",
    "influxdb_client.domain.dict_expression.DictExpression",
    "influxdb_client.domain.duration_literal.DurationLiteral",
    "influxdb_client.domain.float_literal.FloatLiteral",
    "influxdb_client.domain.function_expression.FunctionExpression",
    "influxdb_client.domain.index_expression.IndexExpression",
    "influxdb_client.domain.integer_literal.IntegerLiteral",
    "influxdb_client.domain.logical_expression.LogicalExpression",
    "influxdb_client.domain.member_expression.MemberExpression",
    "influxdb_client.domain.object_expression.ObjectExpression",
    "influxdb_client.domain.paren_expression.ParenExpression",
    "influxdb_client.domain.pipe_expression.PipeExpression",
    "influxdb_client.domain.pipe_literal.PipeLiteral",
    "influxdb_client.domain.property_key.PropertyKey",
    "influxdb_client.domain.regexp_literal.RegexpLiteral",
    "influxdb_client.domain.unary_expression.UnaryExpression",
    "influxdb_client.domain.unsigned_integer_literal.UnsignedIntegerLiteral",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.array_expression.ArrayExpression",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.binary_expression.BinaryExpression",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.boolean_literal.BooleanLiteral",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.call_expression.CallExpression",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.conditional_expression.ConditionalExpression",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.date_time_literal.DateTimeLiteral",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.dict_expression.DictExpression",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.duration_literal.DurationLiteral",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.float_literal.FloatLiteral",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.function_expression.FunctionExpression",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.index_expression.IndexExpression",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.integer_literal.IntegerLiteral",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.logical_expression.LogicalExpression",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.member_expression.MemberExpression",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.object_expression.ObjectExpression",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.paren_expression.ParenExpression",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.pipe_expression.PipeExpression",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.pipe_literal.PipeLiteral",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.property_key.PropertyKey",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.regexp_literal.RegexpLiteral",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.unary_expression.UnaryExpression",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.unsigned_integer_literal.UnsignedIntegerLiteral"
  ],
  "influxdb_client.domain.http_notification_rule_base.HTTPNotificationRuleBase.__eq__": [
    "influxdb_client.domain.http_notification_rule.HTTPNotificationRule",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.http_notification_rule.HTTPNotificationRule"
  ],
  "influxdb_client.domain.http_notification_rule_base.HTTPNotificationRuleBase.__init__": [
    "influxdb_client.domain.http_notification_rule.HTTPNotificationRule",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.http_notification_rule.HTTPNotificationRule"
  ],
  "influxdb_client.domain.http_notification_rule_base.HTTPNotificationRuleBase.__ne__": [
    "influxdb_client.domain.http_notification_rule.HTTPNotificationRule",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.http_notification_rule.HTTPNotificationRule"
  ],
  "influxdb_client.domain.http_notification_rule_base.HTTPNotificationRuleBase.to_dict": [
    "influxdb_client.domain.http_notification_rule.HTTPNotificationRule",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.http_notification_rule.HTTPNotificationRule"
  ],
  "influxdb_client.domain.http_notification_rule_base.HTTPNotificationRuleBase.to_str": [
    "influxdb_client.domain.http_notification_rule.HTTPNotificationRule",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.http_notification_rule.HTTPNotificationRule"
  ],
  "influxdb_client.domain.node.Node.__eq__": [
    "influxdb_client.domain.block.Block",
    "influxdb_client.domain.expression.Expression",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.block.Block",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.expression.Expression"
  ],
  "influxdb_client.domain.node.Node.__init__": [
    "influxdb_client.domain.block.Block",
    "influxdb_client.domain.expression.Expression",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.block.Block",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.expression.Expression"
  ],
  "influxdb_client.domain.node.Node.__ne__": [
    "influxdb_client.domain.block.Block",
    "influxdb_client.domain.expression.Expression",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.block.Block",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.expression.Expression"
  ],
  "influxdb_client.domain.node.Node.to_dict": [
    "influxdb_client.domain.block.Block",
    "influxdb_client.domain.expression.Expression",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.block.Block",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.expression.Expression"
  ],
  "influxdb_client.domain.node.Node.to_str": [
    "influxdb_client.domain.block.Block",
    "influxdb_client.domain.expression.Expression",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.block.Block",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.expression.Expression"
  ],
  "influxdb_client.domain.notification_endpoint_base.NotificationEndpointBase.__eq__": [
    "influxdb_client.domain.notification_endpoint_discriminator.NotificationEndpointDiscriminator",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.notification_endpoint_discriminator.NotificationEndpointDiscriminator"
  ],
  "influxdb_client.domain.notification_endpoint_base.NotificationEndpointBase.__init__": [
    "influxdb_client.domain.notification_endpoint_discriminator.NotificationEndpointDiscriminator",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.notification_endpoint_discriminator.NotificationEndpointDiscriminator"
  ],
  "influxdb_client.domain.notification_endpoint_base.NotificationEndpointBase.__ne__": [
    "influxdb_client.domain.notification_endpoint_discriminator.NotificationEndpointDiscriminator",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.notification_endpoint_discriminator.NotificationEndpointDiscriminator"
  ],
  "influxdb_client.domain.notification_endpoint_base.NotificationEndpointBase.to_dict": [
    "influxdb_client.domain.notification_endpoint_discriminator.NotificationEndpointDiscriminator",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.notification_endpoint_discriminator.NotificationEndpointDiscriminator"
  ],
  "influxdb_client.domain.notification_endpoint_base.NotificationEndpointBase.to_str": [
    "influxdb_client.domain.notification_endpoint_discriminator.NotificationEndpointDiscriminator",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.notification_endpoint_discriminator.NotificationEndpointDiscriminator"
  ],
  "influxdb_client.domain.notification_endpoint_discriminator.NotificationEndpointDiscriminator.__eq__": [
    "influxdb_client.domain.http_notification_endpoint.HTTPNotificationEndpoint",
    "influxdb_client.domain.pager_duty_notification_endpoint.PagerDutyNotificationEndpoint",
    "influxdb_client.domain.slack_notification_endpoint.SlackNotificationEndpoint",
    "influxdb_client.domain.telegram_notification_endpoint.TelegramNotificationEndpoint",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.http_notification_endpoint.HTTPNotificationEndpoint",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.pager_duty_notification_endpoint.PagerDutyNotificationEndpoint",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.slack_notification_endpoint.SlackNotificationEndpoint",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.telegram_notification_endpoint.TelegramNotificationEndpoint"
  ],
  "influxdb_client.domain.notification_endpoint_discriminator.NotificationEndpointDiscriminator.__init__": [
    "influxdb_client.domain.http_notification_endpoint.HTTPNotificationEndpoint",
    "influxdb_client.domain.pager_duty_notification_endpoint.PagerDutyNotificationEndpoint",
    "influxdb_client.domain.slack_notification_endpoint.SlackNotificationEndpoint",
    "influxdb_client.domain.telegram_notification_endpoint.TelegramNotificationEndpoint",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.http_notification_endpoint.HTTPNotificationEndpoint",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.pager_duty_notification_endpoint.PagerDutyNotificationEndpoint",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.slack_notification_endpoint.SlackNotificationEndpoint",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.telegram_notification_endpoint.TelegramNotificationEndpoint"
  ],
  "influxdb_client.domain.notification_endpoint_discriminator.NotificationEndpointDiscriminator.__ne__": [
    "influxdb_client.domain.http_notification_endpoint.HTTPNotificationEndpoint",
    "influxdb_client.domain.pager_duty_notification_endpoint.PagerDutyNotificationEndpoint",
    "influxdb_client.domain.slack_notification_endpoint.SlackNotificationEndpoint",
    "influxdb_client.domain.telegram_notification_endpoint.TelegramNotificationEndpoint",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.http_notification_endpoint.HTTPNotificationEndpoint",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.pager_duty_notification_endpoint.PagerDutyNotificationEndpoint",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.slack_notification_endpoint.SlackNotificationEndpoint",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.telegram_notification_endpoint.TelegramNotificationEndpoint"
  ],
  "influxdb_client.domain.notification_endpoint_discriminator.NotificationEndpointDiscriminator.to_dict": [
    "influxdb_client.domain.http_notification_endpoint.HTTPNotificationEndpoint",
    "influxdb_client.domain.pager_duty_notification_endpoint.PagerDutyNotificationEndpoint",
    "influxdb_client.domain.slack_notification_endpoint.SlackNotificationEndpoint",
    "influxdb_client.domain.telegram_notification_endpoint.TelegramNotificationEndpoint",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.http_notification_endpoint.HTTPNotificationEndpoint",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.pager_duty_notification_endpoint.PagerDutyNotificationEndpoint",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.slack_notification_endpoint.SlackNotificationEndpoint",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.telegram_notification_endpoint.TelegramNotificationEndpoint"
  ],
  "influxdb_client.domain.notification_endpoint_discriminator.NotificationEndpointDiscriminator.to_str": [
    "influxdb_client.domain.http_notification_endpoint.HTTPNotificationEndpoint",
    "influxdb_client.domain.pager_duty_notification_endpoint.PagerDutyNotificationEndpoint",
    "influxdb_client.domain.slack_notification_endpoint.SlackNotificationEndpoint",
    "influxdb_client.domain.telegram_notification_endpoint.TelegramNotificationEndpoint",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.http_notification_endpoint.HTTPNotificationEndpoint",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.pager_duty_notification_endpoint.PagerDutyNotificationEndpoint",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.slack_notification_endpoint.SlackNotificationEndpoint",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.telegram_notification_endpoint.TelegramNotificationEndpoint"
  ],
  "influxdb_client.domain.notification_rule_base.NotificationRuleBase.__eq__": [
    "influxdb_client.domain.notification_rule_discriminator.NotificationRuleDiscriminator",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.notification_rule_discriminator.NotificationRuleDiscriminator"
  ],
  "influxdb_client.domain.notification_rule_base.NotificationRuleBase.__init__": [
    "influxdb_client.domain.notification_rule_discriminator.NotificationRuleDiscriminator",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.notification_rule_discriminator.NotificationRuleDiscriminator"
  ],
  "influxdb_client.domain.notification_rule_base.NotificationRuleBase.__ne__": [
    "influxdb_client.domain.notification_rule_discriminator.NotificationRuleDiscriminator",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.notification_rule_discriminator.NotificationRuleDiscriminator"
  ],
  "influxdb_client.domain.notification_rule_base.NotificationRuleBase.to_dict": [
    "influxdb_client.domain.notification_rule_discriminator.NotificationRuleDiscriminator",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.notification_rule_discriminator.NotificationRuleDiscriminator"
  ],
  "influxdb_client.domain.notification_rule_base.NotificationRuleBase.to_str": [
    "influxdb_client.domain.notification_rule_discriminator.NotificationRuleDiscriminator",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.notification_rule_discriminator.NotificationRuleDiscriminator"
  ],
  "influxdb_client.domain.notification_rule_discriminator.NotificationRuleDiscriminator.__eq__": [
    "influxdb_client.domain.http_notification_rule_base.HTTPNotificationRuleBase",
    "influxdb_client.domain.pager_duty_notification_rule_base.PagerDutyNotificationRuleBase",
    "influxdb_client.domain.slack_notification_rule_base.SlackNotificationRuleBase",
    "influxdb_client.domain.smtp_notification_rule_base.SMTPNotificationRuleBase",
    "influxdb_client.domain.telegram_notification_rule_base.TelegramNotificationRuleBase",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.http_notification_rule_base.HTTPNotificationRuleBase",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.pager_duty_notification_rule_base.PagerDutyNotificationRuleBase",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.slack_notification_rule_base.SlackNotificationRuleBase",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.smtp_notification_rule_base.SMTPNotificationRuleBase",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.telegram_notification_rule_base.TelegramNotificationRuleBase"
  ],
  "influxdb_client.domain.notification_rule_discriminator.NotificationRuleDiscriminator.__init__": [
    "influxdb_client.domain.http_notification_rule_base.HTTPNotificationRuleBase",
    "influxdb_client.domain.pager_duty_notification_rule_base.PagerDutyNotificationRuleBase",
    "influxdb_client.domain.slack_notification_rule_base.SlackNotificationRuleBase",
    "influxdb_client.domain.smtp_notification_rule_base.SMTPNotificationRuleBase",
    "influxdb_client.domain.telegram_notification_rule_base.TelegramNotificationRuleBase",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.http_notification_rule_base.HTTPNotificationRuleBase",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.pager_duty_notification_rule_base.PagerDutyNotificationRuleBase",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.slack_notification_rule_base.SlackNotificationRuleBase",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.smtp_notification_rule_base.SMTPNotificationRuleBase",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.telegram_notification_rule_base.TelegramNotificationRuleBase"
  ],
  "influxdb_client.domain.notification_rule_discriminator.NotificationRuleDiscriminator.__ne__": [
    "influxdb_client.domain.http_notification_rule_base.HTTPNotificationRuleBase",
    "influxdb_client.domain.pager_duty_notification_rule_base.PagerDutyNotificationRuleBase",
    "influxdb_client.domain.slack_notification_rule_base.SlackNotificationRuleBase",
    "influxdb_client.domain.smtp_notification_rule_base.SMTPNotificationRuleBase",
    "influxdb_client.domain.telegram_notification_rule_base.TelegramNotificationRuleBase",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.http_notification_rule_base.HTTPNotificationRuleBase",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.pager_duty_notification_rule_base.PagerDutyNotificationRuleBase",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.slack_notification_rule_base.SlackNotificationRuleBase",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.smtp_notification_rule_base.SMTPNotificationRuleBase",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.telegram_notification_rule_base.TelegramNotificationRuleBase"
  ],
  "influxdb_client.domain.notification_rule_discriminator.NotificationRuleDiscriminator.to_dict": [
    "influxdb_client.domain.http_notification_rule_base.HTTPNotificationRuleBase",
    "influxdb_client.domain.pager_duty_notification_rule_base.PagerDutyNotificationRuleBase",
    "influxdb_client.domain.slack_notification_rule_base.SlackNotificationRuleBase",
    "influxdb_client.domain.smtp_notification_rule_base.SMTPNotificationRuleBase",
    "influxdb_client.domain.telegram_notification_rule_base.TelegramNotificationRuleBase",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.http_notification_rule_base.HTTPNotificationRuleBase",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.pager_duty_notification_rule_base.PagerDutyNotificationRuleBase",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.slack_notification_rule_base.SlackNotificationRuleBase",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.smtp_notification_rule_base.SMTPNotificationRuleBase",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.telegram_notification_rule_base.TelegramNotificationRuleBase"
  ],
  "influxdb_client.domain.notification_rule_discriminator.NotificationRuleDiscriminator.to_str": [
    "influxdb_client.domain.http_notification_rule_base.HTTPNotificationRuleBase",
    "influxdb_client.domain.pager_duty_notification_rule_base.PagerDutyNotificationRuleBase",
    "influxdb_client.domain.slack_notification_rule_base.SlackNotificationRuleBase",
    "influxdb_client.domain.smtp_notification_rule_base.SMTPNotificationRuleBase",
    "influxdb_client.domain.telegram_notification_rule_base.TelegramNotificationRuleBase",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.http_notification_rule_base.HTTPNotificationRuleBase",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.pager_duty_notification_rule_base.PagerDutyNotificationRuleBase",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.slack_notification_rule_base.SlackNotificationRuleBase",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.smtp_notification_rule_base.SMTPNotificationRuleBase",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.telegram_notification_rule_base.TelegramNotificationRuleBase"
  ],
  "influxdb_client.domain.pager_duty_notification_rule_base.PagerDutyNotificationRuleBase.__eq__": [
    "influxdb_client.domain.pager_duty_notification_rule.PagerDutyNotificationRule",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.pager_duty_notification_rule.PagerDutyNotificationRule"
  ],
  "influxdb_client.domain.pager_duty_notification_rule_base.PagerDutyNotificationRuleBase.__init__": [
    "influxdb_client.domain.pager_duty_notification_rule.PagerDutyNotificationRule",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.pager_duty_notification_rule.PagerDutyNotificationRule"
  ],
  "influxdb_client.domain.pager_duty_notification_rule_base.PagerDutyNotificationRuleBase.__ne__": [
    "influxdb_client.domain.pager_duty_notification_rule.PagerDutyNotificationRule",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.pager_duty_notification_rule.PagerDutyNotificationRule"
  ],
  "influxdb_client.domain.pager_duty_notification_rule_base.PagerDutyNotificationRuleBase.to_dict": [
    "influxdb_client.domain.pager_duty_notification_rule.PagerDutyNotificationRule",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.pager_duty_notification_rule.PagerDutyNotificationRule"
  ],
  "influxdb_client.domain.pager_duty_notification_rule_base.PagerDutyNotificationRuleBase.to_str": [
    "influxdb_client.domain.pager_duty_notification_rule.PagerDutyNotificationRule",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.pager_duty_notification_rule.PagerDutyNotificationRule"
  ],
  "influxdb_client.domain.property_key.PropertyKey.__eq__": [
    "influxdb_client.domain.identifier.Identifier",
    "influxdb_client.domain.string_literal.StringLiteral",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.identifier.Identifier",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.string_literal.StringLiteral"
  ],
  "influxdb_client.domain.property_key.PropertyKey.__init__": [
    "influxdb_client.domain.identifier.Identifier",
    "influxdb_client.domain.string_literal.StringLiteral",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.identifier.Identifier",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.string_literal.StringLiteral"
  ],
  "influxdb_client.domain.property_key.PropertyKey.__ne__": [
    "influxdb_client.domain.identifier.Identifier",
    "influxdb_client.domain.string_literal.StringLiteral",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.identifier.Identifier",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.string_literal.StringLiteral"
  ],
  "influxdb_client.domain.property_key.PropertyKey.to_dict": [
    "influxdb_client.domain.identifier.Identifier",
    "influxdb_client.domain.string_literal.StringLiteral",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.identifier.Identifier",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.string_literal.StringLiteral"
  ],
  "influxdb_client.domain.property_key.PropertyKey.to_str": [
    "influxdb_client.domain.identifier.Identifier",
    "influxdb_client.domain.string_literal.StringLiteral",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.identifier.Identifier",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.string_literal.StringLiteral"
  ],
  "influxdb_client.domain.scraper_target_request.ScraperTargetRequest.__eq__": [
    "influxdb_client.domain.scraper_target_response.ScraperTargetResponse",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.scraper_target_response.ScraperTargetResponse"
  ],
  "influxdb_client.domain.scraper_target_request.ScraperTargetRequest.__init__": [
    "influxdb_client.domain.scraper_target_response.ScraperTargetResponse",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.scraper_target_response.ScraperTargetResponse"
  ],
  "influxdb_client.domain.scraper_target_request.ScraperTargetRequest.__ne__": [
    "influxdb_client.domain.scraper_target_response.ScraperTargetResponse",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.scraper_target_response.ScraperTargetResponse"
  ],
  "influxdb_client.domain.scraper_target_request.ScraperTargetRequest.to_dict": [
    "influxdb_client.domain.scraper_target_response.ScraperTargetResponse",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.scraper_target_response.ScraperTargetResponse"
  ],
  "influxdb_client.domain.scraper_target_request.ScraperTargetRequest.to_str": [
    "influxdb_client.domain.scraper_target_response.ScraperTargetResponse",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.scraper_target_response.ScraperTargetResponse"
  ],
  "influxdb_client.domain.secret_keys.SecretKeys.__eq__": [
    "influxdb_client.domain.secret_keys_response.SecretKeysResponse",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.secret_keys_response.SecretKeysResponse"
  ],
  "influxdb_client.domain.secret_keys.SecretKeys.__init__": [
    "influxdb_client.domain.secret_keys_response.SecretKeysResponse",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.secret_keys_response.SecretKeysResponse"
  ],
  "influxdb_client.domain.secret_keys.SecretKeys.__ne__": [
    "influxdb_client.domain.secret_keys_response.SecretKeysResponse",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.secret_keys_response.SecretKeysResponse"
  ],
  "influxdb_client.domain.secret_keys.SecretKeys.to_dict": [
    "influxdb_client.domain.secret_keys_response.SecretKeysResponse",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.secret_keys_response.SecretKeysResponse"
  ],
  "influxdb_client.domain.secret_keys.SecretKeys.to_str": [
    "influxdb_client.domain.secret_keys_response.SecretKeysResponse",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.secret_keys_response.SecretKeysResponse"
  ],
  "influxdb_client.domain.slack_notification_rule_base.SlackNotificationRuleBase.__eq__": [
    "influxdb_client.domain.slack_notification_rule.SlackNotificationRule",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.slack_notification_rule.SlackNotificationRule"
  ],
  "influxdb_client.domain.slack_notification_rule_base.SlackNotificationRuleBase.__init__": [
    "influxdb_client.domain.slack_notification_rule.SlackNotificationRule",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.slack_notification_rule.SlackNotificationRule"
  ],
  "influxdb_client.domain.slack_notification_rule_base.SlackNotificationRuleBase.__ne__": [
    "influxdb_client.domain.slack_notification_rule.SlackNotificationRule",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.slack_notification_rule.SlackNotificationRule"
  ],
  "influxdb_client.domain.slack_notification_rule_base.SlackNotificationRuleBase.to_dict": [
    "influxdb_client.domain.slack_notification_rule.SlackNotificationRule",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.slack_notification_rule.SlackNotificationRule"
  ],
  "influxdb_client.domain.slack_notification_rule_base.SlackNotificationRuleBase.to_str": [
    "influxdb_client.domain.slack_notification_rule.SlackNotificationRule",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.slack_notification_rule.SlackNotificationRule"
  ],
  "influxdb_client.domain.smtp_notification_rule_base.SMTPNotificationRuleBase.__eq__": [
    "influxdb_client.domain.smtp_notification_rule.SMTPNotificationRule",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.smtp_notification_rule.SMTPNotificationRule"
  ],
  "influxdb_client.domain.smtp_notification_rule_base.SMTPNotificationRuleBase.__init__": [
    "influxdb_client.domain.smtp_notification_rule.SMTPNotificationRule",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.smtp_notification_rule.SMTPNotificationRule"
  ],
  "influxdb_client.domain.smtp_notification_rule_base.SMTPNotificationRuleBase.__ne__": [
    "influxdb_client.domain.smtp_notification_rule.SMTPNotificationRule",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.smtp_notification_rule.SMTPNotificationRule"
  ],
  "influxdb_client.domain.smtp_notification_rule_base.SMTPNotificationRuleBase.to_dict": [
    "influxdb_client.domain.smtp_notification_rule.SMTPNotificationRule",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.smtp_notification_rule.SMTPNotificationRule"
  ],
  "influxdb_client.domain.smtp_notification_rule_base.SMTPNotificationRuleBase.to_str": [
    "influxdb_client.domain.smtp_notification_rule.SMTPNotificationRule",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.smtp_notification_rule.SMTPNotificationRule"
  ],
  "influxdb_client.domain.statement.Statement.__eq__": [
    "influxdb_client.domain.bad_statement.BadStatement",
    "influxdb_client.domain.builtin_statement.BuiltinStatement",
    "influxdb_client.domain.expression_statement.ExpressionStatement",
    "influxdb_client.domain.member_assignment.MemberAssignment",
    "influxdb_client.domain.option_statement.OptionStatement",
    "influxdb_client.domain.return_statement.ReturnStatement",
    "influxdb_client.domain.test_statement.TestStatement",
    "influxdb_client.domain.variable_assignment.VariableAssignment",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.bad_statement.BadStatement",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.builtin_statement.BuiltinStatement",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.expression_statement.ExpressionStatement",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.member_assignment.MemberAssignment",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.option_statement.OptionStatement",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.return_statement.ReturnStatement",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.test_statement.TestStatement",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.variable_assignment.VariableAssignment"
  ],
  "influxdb_client.domain.statement.Statement.__init__": [
    "influxdb_client.domain.bad_statement.BadStatement",
    "influxdb_client.domain.builtin_statement.BuiltinStatement",
    "influxdb_client.domain.expression_statement.ExpressionStatement",
    "influxdb_client.domain.member_assignment.MemberAssignment",
    "influxdb_client.domain.option_statement.OptionStatement",
    "influxdb_client.domain.return_statement.ReturnStatement",
    "influxdb_client.domain.test_statement.TestStatement",
    "influxdb_client.domain.variable_assignment.VariableAssignment",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.bad_statement.BadStatement",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.builtin_statement.BuiltinStatement",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.expression_statement.ExpressionStatement",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.member_assignment.MemberAssignment",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.option_statement.OptionStatement",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.return_statement.ReturnStatement",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.test_statement.TestStatement",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.variable_assignment.VariableAssignment"
  ],
  "influxdb_client.domain.statement.Statement.__ne__": [
    "influxdb_client.domain.bad_statement.BadStatement",
    "influxdb_client.domain.builtin_statement.BuiltinStatement",
    "influxdb_client.domain.expression_statement.ExpressionStatement",
    "influxdb_client.domain.member_assignment.MemberAssignment",
    "influxdb_client.domain.option_statement.OptionStatement",
    "influxdb_client.domain.return_statement.ReturnStatement",
    "influxdb_client.domain.test_statement.TestStatement",
    "influxdb_client.domain.variable_assignment.VariableAssignment",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.bad_statement.BadStatement",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.builtin_statement.BuiltinStatement",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.expression_statement.ExpressionStatement",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.member_assignment.MemberAssignment",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.option_statement.OptionStatement",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.return_statement.ReturnStatement",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.test_statement.TestStatement",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.variable_assignment.VariableAssignment"
  ],
  "influxdb_client.domain.statement.Statement.to_dict": [
    "influxdb_client.domain.bad_statement.BadStatement",
    "influxdb_client.domain.builtin_statement.BuiltinStatement",
    "influxdb_client.domain.expression_statement.ExpressionStatement",
    "influxdb_client.domain.member_assignment.MemberAssignment",
    "influxdb_client.domain.option_statement.OptionStatement",
    "influxdb_client.domain.return_statement.ReturnStatement",
    "influxdb_client.domain.test_statement.TestStatement",
    "influxdb_client.domain.variable_assignment.VariableAssignment",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.bad_statement.BadStatement",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.builtin_statement.BuiltinStatement",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.expression_statement.ExpressionStatement",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.member_assignment.MemberAssignment",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.option_statement.OptionStatement",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.return_statement.ReturnStatement",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.test_statement.TestStatement",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.variable_assignment.VariableAssignment"
  ],
  "influxdb_client.domain.statement.Statement.to_str": [
    "influxdb_client.domain.bad_statement.BadStatement",
    "influxdb_client.domain.builtin_statement.BuiltinStatement",
    "influxdb_client.domain.expression_statement.ExpressionStatement",
    "influxdb_client.domain.member_assignment.MemberAssignment",
    "influxdb_client.domain.option_statement.OptionStatement",
    "influxdb_client.domain.return_statement.ReturnStatement",
    "influxdb_client.domain.test_statement.TestStatement",
    "influxdb_client.domain.variable_assignment.VariableAssignment",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.bad_statement.BadStatement",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.builtin_statement.BuiltinStatement",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.expression_statement.ExpressionStatement",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.member_assignment.MemberAssignment",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.option_statement.OptionStatement",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.return_statement.ReturnStatement",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.test_statement.TestStatement",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.variable_assignment.VariableAssignment"
  ],
  "influxdb_client.domain.telegraf_request.TelegrafRequest.__eq__": [
    "influxdb_client.domain.telegraf.Telegraf",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.telegraf.Telegraf"
  ],
  "influxdb_client.domain.telegraf_request.TelegrafRequest.__init__": [
    "influxdb_client.domain.telegraf.Telegraf",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.telegraf.Telegraf"
  ],
  "influxdb_client.domain.telegraf_request.TelegrafRequest.__ne__": [
    "influxdb_client.domain.telegraf.Telegraf",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.telegraf.Telegraf"
  ],
  "influxdb_client.domain.telegraf_request.TelegrafRequest.to_dict": [
    "influxdb_client.domain.telegraf.Telegraf",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.telegraf.Telegraf"
  ],
  "influxdb_client.domain.telegraf_request.TelegrafRequest.to_str": [
    "influxdb_client.domain.telegraf.Telegraf",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.telegraf.Telegraf"
  ],
  "influxdb_client.domain.telegram_notification_rule_base.TelegramNotificationRuleBase.__eq__": [
    "influxdb_client.domain.telegram_notification_rule.TelegramNotificationRule",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.telegram_notification_rule.TelegramNotificationRule"
  ],
  "influxdb_client.domain.telegram_notification_rule_base.TelegramNotificationRuleBase.__init__": [
    "influxdb_client.domain.telegram_notification_rule.TelegramNotificationRule",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.telegram_notification_rule.TelegramNotificationRule"
  ],
  "influxdb_client.domain.telegram_notification_rule_base.TelegramNotificationRuleBase.__ne__": [
    "influxdb_client.domain.telegram_notification_rule.TelegramNotificationRule",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.telegram_notification_rule.TelegramNotificationRule"
  ],
  "influxdb_client.domain.telegram_notification_rule_base.TelegramNotificationRuleBase.to_dict": [
    "influxdb_client.domain.telegram_notification_rule.TelegramNotificationRule",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.telegram_notification_rule.TelegramNotificationRule"
  ],
  "influxdb_client.domain.telegram_notification_rule_base.TelegramNotificationRuleBase.to_str": [
    "influxdb_client.domain.telegram_notification_rule.TelegramNotificationRule",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.telegram_notification_rule.TelegramNotificationRule"
  ],
  "influxdb_client.domain.threshold_base.ThresholdBase.__eq__": [
    "influxdb_client.domain.greater_threshold.GreaterThreshold",
    "influxdb_client.domain.lesser_threshold.LesserThreshold",
    "influxdb_client.domain.range_threshold.RangeThreshold",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.greater_threshold.GreaterThreshold",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.lesser_threshold.LesserThreshold",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.range_threshold.RangeThreshold"
  ],
  "influxdb_client.domain.threshold_base.ThresholdBase.__init__": [
    "influxdb_client.domain.greater_threshold.GreaterThreshold",
    "influxdb_client.domain.lesser_threshold.LesserThreshold",
    "influxdb_client.domain.range_threshold.RangeThreshold",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.greater_threshold.GreaterThreshold",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.lesser_threshold.LesserThreshold",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.range_threshold.RangeThreshold"
  ],
  "influxdb_client.domain.threshold_base.ThresholdBase.__ne__": [
    "influxdb_client.domain.greater_threshold.GreaterThreshold",
    "influxdb_client.domain.lesser_threshold.LesserThreshold",
    "influxdb_client.domain.range_threshold.RangeThreshold",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.greater_threshold.GreaterThreshold",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.lesser_threshold.LesserThreshold",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.range_threshold.RangeThreshold"
  ],
  "influxdb_client.domain.threshold_base.ThresholdBase.to_dict": [
    "influxdb_client.domain.greater_threshold.GreaterThreshold",
    "influxdb_client.domain.lesser_threshold.LesserThreshold",
    "influxdb_client.domain.range_threshold.RangeThreshold",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.greater_threshold.GreaterThreshold",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.lesser_threshold.LesserThreshold",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.range_threshold.RangeThreshold"
  ],
  "influxdb_client.domain.threshold_base.ThresholdBase.to_str": [
    "influxdb_client.domain.greater_threshold.GreaterThreshold",
    "influxdb_client.domain.lesser_threshold.LesserThreshold",
    "influxdb_client.domain.range_threshold.RangeThreshold",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.greater_threshold.GreaterThreshold",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.lesser_threshold.LesserThreshold",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.range_threshold.RangeThreshold"
  ],
  "influxdb_client.domain.user_response.UserResponse.__eq__": [
    "influxdb_client.domain.resource_member.ResourceMember",
    "influxdb_client.domain.resource_owner.ResourceOwner",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.resource_member.ResourceMember",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.resource_owner.ResourceOwner"
  ],
  "influxdb_client.domain.user_response.UserResponse.__init__": [
    "influxdb_client.domain.resource_member.ResourceMember",
    "influxdb_client.domain.resource_owner.ResourceOwner",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.resource_member.ResourceMember",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.resource_owner.ResourceOwner"
  ],
  "influxdb_client.domain.user_response.UserResponse.__ne__": [
    "influxdb_client.domain.resource_member.ResourceMember",
    "influxdb_client.domain.resource_owner.ResourceOwner",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.resource_member.ResourceMember",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.resource_owner.ResourceOwner"
  ],
  "influxdb_client.domain.user_response.UserResponse.to_dict": [
    "influxdb_client.domain.resource_member.ResourceMember",
    "influxdb_client.domain.resource_owner.ResourceOwner",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.resource_member.ResourceMember",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.resource_owner.ResourceOwner"
  ],
  "influxdb_client.domain.user_response.UserResponse.to_str": [
    "influxdb_client.domain.resource_member.ResourceMember",
    "influxdb_client.domain.resource_owner.ResourceOwner",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.resource_member.ResourceMember",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.resource_owner.ResourceOwner"
  ],
  "influxdb_client.domain.variable_properties.VariableProperties.__eq__": [
    "influxdb_client.domain.constant_variable_properties.ConstantVariableProperties",
    "influxdb_client.domain.map_variable_properties.MapVariableProperties",
    "influxdb_client.domain.query_variable_properties.QueryVariableProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.constant_variable_properties.ConstantVariableProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.map_variable_properties.MapVariableProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.query_variable_properties.QueryVariableProperties"
  ],
  "influxdb_client.domain.variable_properties.VariableProperties.__init__": [
    "influxdb_client.domain.constant_variable_properties.ConstantVariableProperties",
    "influxdb_client.domain.map_variable_properties.MapVariableProperties",
    "influxdb_client.domain.query_variable_properties.QueryVariableProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.constant_variable_properties.ConstantVariableProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.map_variable_properties.MapVariableProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.query_variable_properties.QueryVariableProperties"
  ],
  "influxdb_client.domain.variable_properties.VariableProperties.__ne__": [
    "influxdb_client.domain.constant_variable_properties.ConstantVariableProperties",
    "influxdb_client.domain.map_variable_properties.MapVariableProperties",
    "influxdb_client.domain.query_variable_properties.QueryVariableProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.constant_variable_properties.ConstantVariableProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.map_variable_properties.MapVariableProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.query_variable_properties.QueryVariableProperties"
  ],
  "influxdb_client.domain.variable_properties.VariableProperties.to_dict": [
    "influxdb_client.domain.constant_variable_properties.ConstantVariableProperties",
    "influxdb_client.domain.map_variable_properties.MapVariableProperties",
    "influxdb_client.domain.query_variable_properties.QueryVariableProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.constant_variable_properties.ConstantVariableProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.map_variable_properties.MapVariableProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.query_variable_properties.QueryVariableProperties"
  ],
  "influxdb_client.domain.variable_properties.VariableProperties.to_str": [
    "influxdb_client.domain.constant_variable_properties.ConstantVariableProperties",
    "influxdb_client.domain.map_variable_properties.MapVariableProperties",
    "influxdb_client.domain.query_variable_properties.QueryVariableProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.constant_variable_properties.ConstantVariableProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.map_variable_properties.MapVariableProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.query_variable_properties.QueryVariableProperties"
  ],
  "influxdb_client.domain.view_properties.ViewProperties.__eq__": [
    "influxdb_client.domain.band_view_properties.BandViewProperties",
    "influxdb_client.domain.check_view_properties.CheckViewProperties",
    "influxdb_client.domain.gauge_view_properties.GaugeViewProperties",
    "influxdb_client.domain.heatmap_view_properties.HeatmapViewProperties",
    "influxdb_client.domain.histogram_view_properties.HistogramViewProperties",
    "influxdb_client.domain.line_plus_single_stat_properties.LinePlusSingleStatProperties",
    "influxdb_client.domain.markdown_view_properties.MarkdownViewProperties",
    "influxdb_client.domain.mosaic_view_properties.MosaicViewProperties",
    "influxdb_client.domain.scatter_view_properties.ScatterViewProperties",
    "influxdb_client.domain.simple_table_view_properties.SimpleTableViewProperties",
    "influxdb_client.domain.single_stat_view_properties.SingleStatViewProperties",
    "influxdb_client.domain.table_view_properties.TableViewProperties",
    "influxdb_client.domain.xy_view_properties.XYViewProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.band_view_properties.BandViewProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.check_view_properties.CheckViewProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.gauge_view_properties.GaugeViewProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.heatmap_view_properties.HeatmapViewProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.histogram_view_properties.HistogramViewProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.line_plus_single_stat_properties.LinePlusSingleStatProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.markdown_view_properties.MarkdownViewProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.mosaic_view_properties.MosaicViewProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.scatter_view_properties.ScatterViewProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.simple_table_view_properties.SimpleTableViewProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.single_stat_view_properties.SingleStatViewProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.table_view_properties.TableViewProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.xy_view_properties.XYViewProperties"
  ],
  "influxdb_client.domain.view_properties.ViewProperties.__init__": [
    "influxdb_client.domain.band_view_properties.BandViewProperties",
    "influxdb_client.domain.check_view_properties.CheckViewProperties",
    "influxdb_client.domain.gauge_view_properties.GaugeViewProperties",
    "influxdb_client.domain.heatmap_view_properties.HeatmapViewProperties",
    "influxdb_client.domain.histogram_view_properties.HistogramViewProperties",
    "influxdb_client.domain.line_plus_single_stat_properties.LinePlusSingleStatProperties",
    "influxdb_client.domain.markdown_view_properties.MarkdownViewProperties",
    "influxdb_client.domain.mosaic_view_properties.MosaicViewProperties",
    "influxdb_client.domain.scatter_view_properties.ScatterViewProperties",
    "influxdb_client.domain.simple_table_view_properties.SimpleTableViewProperties",
    "influxdb_client.domain.single_stat_view_properties.SingleStatViewProperties",
    "influxdb_client.domain.table_view_properties.TableViewProperties",
    "influxdb_client.domain.xy_view_properties.XYViewProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.band_view_properties.BandViewProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.check_view_properties.CheckViewProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.gauge_view_properties.GaugeViewProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.heatmap_view_properties.HeatmapViewProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.histogram_view_properties.HistogramViewProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.line_plus_single_stat_properties.LinePlusSingleStatProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.markdown_view_properties.MarkdownViewProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.mosaic_view_properties.MosaicViewProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.scatter_view_properties.ScatterViewProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.simple_table_view_properties.SimpleTableViewProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.single_stat_view_properties.SingleStatViewProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.table_view_properties.TableViewProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.xy_view_properties.XYViewProperties"
  ],
  "influxdb_client.domain.view_properties.ViewProperties.__ne__": [
    "influxdb_client.domain.band_view_properties.BandViewProperties",
    "influxdb_client.domain.check_view_properties.CheckViewProperties",
    "influxdb_client.domain.gauge_view_properties.GaugeViewProperties",
    "influxdb_client.domain.heatmap_view_properties.HeatmapViewProperties",
    "influxdb_client.domain.histogram_view_properties.HistogramViewProperties",
    "influxdb_client.domain.line_plus_single_stat_properties.LinePlusSingleStatProperties",
    "influxdb_client.domain.markdown_view_properties.MarkdownViewProperties",
    "influxdb_client.domain.mosaic_view_properties.MosaicViewProperties",
    "influxdb_client.domain.scatter_view_properties.ScatterViewProperties",
    "influxdb_client.domain.simple_table_view_properties.SimpleTableViewProperties",
    "influxdb_client.domain.single_stat_view_properties.SingleStatViewProperties",
    "influxdb_client.domain.table_view_properties.TableViewProperties",
    "influxdb_client.domain.xy_view_properties.XYViewProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.band_view_properties.BandViewProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.check_view_properties.CheckViewProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.gauge_view_properties.GaugeViewProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.heatmap_view_properties.HeatmapViewProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.histogram_view_properties.HistogramViewProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.line_plus_single_stat_properties.LinePlusSingleStatProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.markdown_view_properties.MarkdownViewProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.mosaic_view_properties.MosaicViewProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.scatter_view_properties.ScatterViewProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.simple_table_view_properties.SimpleTableViewProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.single_stat_view_properties.SingleStatViewProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.table_view_properties.TableViewProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.xy_view_properties.XYViewProperties"
  ],
  "influxdb_client.domain.view_properties.ViewProperties.to_dict": [
    "influxdb_client.domain.band_view_properties.BandViewProperties",
    "influxdb_client.domain.check_view_properties.CheckViewProperties",
    "influxdb_client.domain.gauge_view_properties.GaugeViewProperties",
    "influxdb_client.domain.heatmap_view_properties.HeatmapViewProperties",
    "influxdb_client.domain.histogram_view_properties.HistogramViewProperties",
    "influxdb_client.domain.line_plus_single_stat_properties.LinePlusSingleStatProperties",
    "influxdb_client.domain.markdown_view_properties.MarkdownViewProperties",
    "influxdb_client.domain.mosaic_view_properties.MosaicViewProperties",
    "influxdb_client.domain.scatter_view_properties.ScatterViewProperties",
    "influxdb_client.domain.simple_table_view_properties.SimpleTableViewProperties",
    "influxdb_client.domain.single_stat_view_properties.SingleStatViewProperties",
    "influxdb_client.domain.table_view_properties.TableViewProperties",
    "influxdb_client.domain.xy_view_properties.XYViewProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.band_view_properties.BandViewProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.check_view_properties.CheckViewProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.gauge_view_properties.GaugeViewProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.heatmap_view_properties.HeatmapViewProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.histogram_view_properties.HistogramViewProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.line_plus_single_stat_properties.LinePlusSingleStatProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.markdown_view_properties.MarkdownViewProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.mosaic_view_properties.MosaicViewProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.scatter_view_properties.ScatterViewProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.simple_table_view_properties.SimpleTableViewProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.single_stat_view_properties.SingleStatViewProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.table_view_properties.TableViewProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.xy_view_properties.XYViewProperties"
  ],
  "influxdb_client.domain.view_properties.ViewProperties.to_str": [
    "influxdb_client.domain.band_view_properties.BandViewProperties",
    "influxdb_client.domain.check_view_properties.CheckViewProperties",
    "influxdb_client.domain.gauge_view_properties.GaugeViewProperties",
    "influxdb_client.domain.heatmap_view_properties.HeatmapViewProperties",
    "influxdb_client.domain.histogram_view_properties.HistogramViewProperties",
    "influxdb_client.domain.line_plus_single_stat_properties.LinePlusSingleStatProperties",
    "influxdb_client.domain.markdown_view_properties.MarkdownViewProperties",
    "influxdb_client.domain.mosaic_view_properties.MosaicViewProperties",
    "influxdb_client.domain.scatter_view_properties.ScatterViewProperties",
    "influxdb_client.domain.simple_table_view_properties.SimpleTableViewProperties",
    "influxdb_client.domain.single_stat_view_properties.SingleStatViewProperties",
    "influxdb_client.domain.table_view_properties.TableViewProperties",
    "influxdb_client.domain.xy_view_properties.XYViewProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.band_view_properties.BandViewProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.check_view_properties.CheckViewProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.gauge_view_properties.GaugeViewProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.heatmap_view_properties.HeatmapViewProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.histogram_view_properties.HistogramViewProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.line_plus_single_stat_properties.LinePlusSingleStatProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.markdown_view_properties.MarkdownViewProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.mosaic_view_properties.MosaicViewProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.scatter_view_properties.ScatterViewProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.simple_table_view_properties.SimpleTableViewProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.single_stat_view_properties.SingleStatViewProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.table_view_properties.TableViewProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.xy_view_properties.XYViewProperties"
  ],
  "influxdb_client.service._base_service._BaseService.__init__": [
    "influxdb_client.service.authorizations_service.AuthorizationsService",
    "influxdb_client.service.backup_service.BackupService",
    "influxdb_client.service.bucket_schemas_service.BucketSchemasService",
    "influxdb_client.service.buckets_service.BucketsService",
    "influxdb_client.service.cells_service.CellsService",
    "influxdb_client.service.checks_service.ChecksService",
    "influxdb_client.service.config_service.ConfigService",
    "influxdb_client.service.dashboards_service.DashboardsService",
    "influxdb_client.service.dbr_ps_service.DBRPsService",
    "influxdb_client.service.delete_service.DeleteService",
    "influxdb_client.service.health_service.HealthService",
    "influxdb_client.service.invokable_scripts_service.InvokableScriptsService",
    "influxdb_client.service.labels_service.LabelsService",
    "influxdb_client.service.legacy_authorizations_service.LegacyAuthorizationsService",
    "influxdb_client.service.metrics_service.MetricsService",
    "influxdb_client.service.notification_endpoints_service.NotificationEndpointsService",
    "influxdb_client.service.notification_rules_service.NotificationRulesService",
    "influxdb_client.service.organizations_service.OrganizationsService",
    "influxdb_client.service.ping_service.PingService",
    "influxdb_client.service.query_service.QueryService",
    "influxdb_client.service.ready_service.ReadyService",
    "influxdb_client.service.remote_connections_service.RemoteConnectionsService",
    "influxdb_client.service.replications_service.ReplicationsService",
    "influxdb_client.service.resources_service.ResourcesService",
    "influxdb_client.service.restore_service.RestoreService",
    "influxdb_client.service.routes_service.RoutesService",
    "influxdb_client.service.rules_service.RulesService",
    "influxdb_client.service.scraper_targets_service.ScraperTargetsService",
    "influxdb_client.service.secrets_service.SecretsService",
    "influxdb_client.service.setup_service.SetupService",
    "influxdb_client.service.signin_service.SigninService",
    "influxdb_client.service.signout_service.SignoutService",
    "influxdb_client.service.sources_service.SourcesService",
    "influxdb_client.service.tasks_service.TasksService",
    "influxdb_client.service.telegraf_plugins_service.TelegrafPluginsService",
    "influxdb_client.service.telegrafs_service.TelegrafsService",
    "influxdb_client.service.templates_service.TemplatesService",
    "influxdb_client.service.users_service.UsersService",
    "influxdb_client.service.variables_service.VariablesService",
    "influxdb_client.service.views_service.ViewsService",
    "influxdb_client.service.write_service.WriteService",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.service.authorizations_service.AuthorizationsService",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.service.backup_service.BackupService",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.service.bucket_schemas_service.BucketSchemasService",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.service.buckets_service.BucketsService",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.service.cells_service.CellsService",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.service.checks_service.ChecksService",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.service.config_service.ConfigService",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.service.dashboards_service.DashboardsService",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.service.dbr_ps_service.DBRPsService",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.service.delete_service.DeleteService",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.service.health_service.HealthService",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.service.invokable_scripts_service.InvokableScriptsService",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.service.labels_service.LabelsService",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.service.legacy_authorizations_service.LegacyAuthorizationsService",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.service.metrics_service.MetricsService",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.service.notification_endpoints_service.NotificationEndpointsService",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.service.notification_rules_service.NotificationRulesService",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.service.organizations_service.OrganizationsService",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.service.ping_service.PingService",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.service.query_service.QueryService",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.service.ready_service.ReadyService",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.service.remote_connections_service.RemoteConnectionsService",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.service.replications_service.ReplicationsService",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.service.resources_service.ResourcesService",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.service.restore_service.RestoreService",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.service.routes_service.RoutesService",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.service.rules_service.RulesService",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.service.scraper_targets_service.ScraperTargetsService",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.service.secrets_service.SecretsService",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.service.setup_service.SetupService",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.service.signin_service.SigninService",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.service.signout_service.SignoutService",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.service.sources_service.SourcesService",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.service.tasks_service.TasksService",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.service.telegraf_plugins_service.TelegrafPluginsService",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.service.telegrafs_service.TelegrafsService",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.service.templates_service.TemplatesService",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.service.users_service.UsersService",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.service.variables_service.VariablesService",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.service.views_service.ViewsService",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.service.write_service.WriteService"
  ],
  "int.__and__": [
    "bool",
    "enum.IntFlag",
    "typeshed.typeshed.stdlib.enum.IntFlag"
  ],
  "int.__getnewargs__": [
    "bool"
  ],
  "int.__new__": [
    "bool",
    "django.db.models.enums.IntegerChoices",
    "enum.IntEnum",
    "enum.IntFlag",
    "sqlalchemy.util.langhelpers._symbol",
    "sre_constants._NamedIntConstant",
    "typeshed.typeshed.stdlib.enum.IntEnum",
    "typeshed.typeshed.stdlib.enum.IntFlag",
    "typeshed.typeshed.stdlib.sre_constants._NamedIntConstant"
  ],
  "int.__or__": [
    "bool",
    "enum.IntFlag",
    "typeshed.typeshed.stdlib.enum.IntFlag"
  ],
  "int.__rand__": [
    "bool"
  ],
  "int.__ror__": [
    "bool"
  ],
  "int.__rxor__": [
    "bool"
  ],
  "int.__xor__": [
    "bool",
    "enum.IntFlag",
    "typeshed.typeshed.stdlib.enum.IntFlag"
  ],
  "invoke.context.Context.__init__": [
    "invoke.context.MockContext"
  ],
  "invoke.context.Context.run": [
    "invoke.context.MockContext"
  ],
  "invoke.context.Context.sudo": [
    "invoke.context.MockContext"
  ],
  "invoke.exceptions.Failure.__init__": [
    "invoke.exceptions.AuthFailure",
    "invoke.exceptions.CommandTimedOut"
  ],
  "invoke.loader.Loader.__init__": [
    "invoke.loader.FilesystemLoader"
  ],
  "invoke.runners.Result.__init__": [
    "invoke.runners.Promise"
  ],
  "invoke.runners.Runner.__init__": [
    "invoke.runners.Local"
  ],
  "invoke.runners.Runner.should_use_pty": [
    "invoke.runners.Local"
  ],
  "invoke.watchers.Responder.__init__": [
    "invoke.watchers.FailingResponder"
  ],
  "invoke.watchers.Responder.submit": [
    "invoke.watchers.FailingResponder"
  ],
  "invoke.watchers.StreamWatcher.submit": [
    "invoke.watchers.Responder"
  ],
  "io.BufferedIOBase.read": [
    "bz2.BZ2File",
    "django.utils.text.StreamingBuffer",
    "gzip.GzipFile",
    "http.client.HTTPResponse",
    "lzma.LZMAFile",
    "typeshed.typeshed.stdlib.bz2.BZ2File",
    "typeshed.typeshed.stdlib.gzip.GzipFile",
    "typeshed.typeshed.stdlib.http.client.HTTPResponse",
    "typeshed.typeshed.stdlib.lzma.LZMAFile",
    "typeshed.typeshed.stdlib.zipfile.ZipExtFile",
    "zipfile.ZipExtFile"
  ],
  "io.BufferedIOBase.read1": [
    "bz2.BZ2File",
    "gzip.GzipFile",
    "http.client.HTTPResponse",
    "io.BytesIO",
    "lzma.LZMAFile",
    "typeshed.typeshed.stdlib.bz2.BZ2File",
    "typeshed.typeshed.stdlib.gzip.GzipFile",
    "typeshed.typeshed.stdlib.http.client.HTTPResponse",
    "typeshed.typeshed.stdlib.lzma.LZMAFile",
    "typeshed.typeshed.stdlib.zipfile.ZipExtFile",
    "zipfile.ZipExtFile"
  ],
  "io.BufferedIOBase.readinto": [
    "bz2.BZ2File",
    "http.client.HTTPResponse",
    "typeshed.typeshed.stdlib.bz2.BZ2File",
    "typeshed.typeshed.stdlib.http.client.HTTPResponse"
  ],
  "io.BufferedIOBase.write": [
    "bz2.BZ2File",
    "gzip.GzipFile",
    "io.BufferedWriter",
    "lzma.LZMAFile",
    "typeshed.typeshed.stdlib.bz2.BZ2File",
    "typeshed.typeshed.stdlib.gzip.GzipFile",
    "typeshed.typeshed.stdlib.lzma.LZMAFile"
  ],
  "io.BufferedReader.__enter__": [
    "io.BufferedRandom"
  ],
  "io.BufferedReader.__init__": [
    "tarfile.ExFileObject",
    "typeshed.typeshed.stdlib.tarfile.ExFileObject"
  ],
  "io.IOBase.__del__": [
    "click._compat._NonClosingTextIOWrapper"
  ],
  "io.IOBase.__enter__": [
    "bz2.BZ2File",
    "http.client.HTTPResponse",
    "io.BufferedReader",
    "io.BufferedWriter",
    "io.BytesIO",
    "io.FileIO",
    "io.TextIOWrapper",
    "lzma.LZMAFile",
    "pip._vendor.distlib.compat.ZipExtFile",
    "pip._vendor.rich.progress._Reader",
    "typeshed.typeshed.stdlib.bz2.BZ2File",
    "typeshed.typeshed.stdlib.http.client.HTTPResponse",
    "typeshed.typeshed.stdlib.lzma.LZMAFile"
  ],
  "io.IOBase.__exit__": [
    "http.client.HTTPResponse",
    "pip._vendor.distlib.compat.ZipExtFile",
    "pip._vendor.rich.progress._Reader",
    "typeshed.typeshed.stdlib.http.client.HTTPResponse"
  ],
  "io.IOBase.__iter__": [
    "http.client.HTTPResponse",
    "io.TextIOBase",
    "pip._vendor.rich.progress._Reader",
    "pip._vendor.urllib3.response.HTTPResponse",
    "typeshed.typeshed.stdlib.http.client.HTTPResponse"
  ],
  "io.IOBase.__next__": [
    "io.TextIOBase",
    "pip._vendor.rich.progress._Reader"
  ],
  "io.IOBase.close": [
    "gzip.GzipFile",
    "os._wrap_close",
    "pip._vendor.pygments.util.UnclosingTextIOWrapper",
    "pip._vendor.rich.progress._Reader",
    "pip._vendor.urllib3.response.HTTPResponse",
    "pygments.util.UnclosingTextIOWrapper",
    "typeshed.typeshed.stdlib.gzip.GzipFile",
    "typeshed.typeshed.stdlib.os._wrap_close",
    "typeshed.typeshed.stubs.Pygments.pygments.util.UnclosingTextIOWrapper",
    "urllib3.response.HTTPResponse"
  ],
  "io.IOBase.closed": [
    "io.TextIOWrapper",
    "pip._vendor.rich.progress._Reader",
    "pip._vendor.urllib3.response.HTTPResponse",
    "urllib3.response.HTTPResponse"
  ],
  "io.IOBase.fileno": [
    "gzip.GzipFile",
    "pip._vendor.rich.file_proxy.FileProxy",
    "pip._vendor.rich.progress._Reader",
    "pip._vendor.urllib3.response.HTTPResponse",
    "typeshed.typeshed.stdlib.gzip.GzipFile",
    "urllib3.response.HTTPResponse"
  ],
  "io.IOBase.flush": [
    "django.core.management.base.OutputWrapper",
    "gzip.GzipFile",
    "pip._vendor.rich.file_proxy.FileProxy",
    "pip._vendor.urllib3.response.HTTPResponse",
    "typeshed.typeshed.stdlib.gzip.GzipFile",
    "urllib3.response.HTTPResponse"
  ],
  "io.IOBase.isatty": [
    "click._compat._NonClosingTextIOWrapper",
    "click._winconsole._WindowsConsoleRawIOBase",
    "django.core.management.base.OutputWrapper",
    "pip._vendor.colorama.tests.utils.StreamNonTTY",
    "pip._vendor.colorama.tests.utils.StreamTTY",
    "pip._vendor.rich.progress._Reader"
  ],
  "io.IOBase.read": [
    "django.test.client.FakePayload",
    "io.BufferedIOBase",
    "io.RawIOBase",
    "io.TextIOBase",
    "pip._vendor.urllib3.response.HTTPResponse",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.codec.streaming.CachingStreamWrapper",
    "urllib3.response.HTTPResponse"
  ],
  "io.IOBase.readable": [
    "click._winconsole._WindowsConsoleReader",
    "pip._vendor.rich.progress._Reader",
    "pip._vendor.urllib3.response.HTTPResponse",
    "typeshed.typeshed.stubs.WebOb.webob.request.LimitedLengthFile",
    "urllib3.response.HTTPResponse",
    "werkzeug.serving.DechunkedInput",
    "werkzeug.wsgi.LimitedStream"
  ],
  "io.IOBase.readline": [
    "bz2.BZ2File",
    "django.test.client.FakePayload",
    "gzip.GzipFile",
    "http.client.HTTPResponse",
    "io.TextIOBase",
    "lzma.LZMAFile",
    "pip._vendor.rich.progress._Reader",
    "typeshed.typeshed.stdlib.bz2.BZ2File",
    "typeshed.typeshed.stdlib.gzip.GzipFile",
    "typeshed.typeshed.stdlib.http.client.HTTPResponse",
    "typeshed.typeshed.stdlib.lzma.LZMAFile",
    "typeshed.typeshed.stdlib.zipfile.ZipExtFile",
    "zipfile.ZipExtFile"
  ],
  "io.IOBase.readlines": [
    "bz2.BZ2File",
    "io.TextIOBase",
    "pip._vendor.rich.progress._Reader",
    "typeshed.typeshed.stdlib.bz2.BZ2File"
  ],
  "io.IOBase.seek": [
    "_compression.DecompressReader",
    "bz2.BZ2File",
    "gzip.GzipFile",
    "io.BufferedRandom",
    "io.TextIOWrapper",
    "lzma.LZMAFile",
    "pip._vendor.rich.progress._Reader",
    "typeshed.typeshed.stdlib._compression.DecompressReader",
    "typeshed.typeshed.stdlib.bz2.BZ2File",
    "typeshed.typeshed.stdlib.gzip.GzipFile",
    "typeshed.typeshed.stdlib.lzma.LZMAFile",
    "typeshed.typeshed.stdlib.zipfile.ZipExtFile",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.codec.streaming.CachingStreamWrapper",
    "zipfile.ZipExtFile"
  ],
  "io.IOBase.seekable": [
    "pip._vendor.rich.progress._Reader",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.codec.streaming.CachingStreamWrapper"
  ],
  "io.IOBase.tell": [
    "pip._vendor.rich.progress._Reader",
    "pip._vendor.urllib3.response.HTTPResponse",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.codec.streaming.CachingStreamWrapper",
    "urllib3.response.HTTPResponse",
    "werkzeug.wsgi.LimitedStream"
  ],
  "io.IOBase.writable": [
    "click._winconsole._WindowsConsoleWriter",
    "pip._vendor.rich.progress._Reader"
  ],
  "io.IOBase.write": [
    "django.test.client.FakePayload",
    "io.BufferedIOBase",
    "io.RawIOBase",
    "io.TextIOBase"
  ],
  "io.IOBase.writelines": [
    "bz2.BZ2File",
    "io.TextIOBase",
    "typeshed.typeshed.stdlib.bz2.BZ2File"
  ],
  "io.RawIOBase.read": [
    "_compression.DecompressReader",
    "io.FileIO",
    "pip._vendor.rich.progress._Reader",
    "serial.serialutil.SerialBase",
    "typeshed.typeshed.stdlib._compression.DecompressReader",
    "typeshed.typeshed.stubs.pyserial.serial.serialutil.SerialBase"
  ],
  "io.RawIOBase.readall": [
    "werkzeug.wsgi.LimitedStream"
  ],
  "io.RawIOBase.readinto": [
    "_compression.DecompressReader",
    "click._winconsole._WindowsConsoleReader",
    "pip._vendor.rich.progress._Reader",
    "socket.SocketIO",
    "typeshed.typeshed.stdlib._compression.DecompressReader",
    "typeshed.typeshed.stdlib.socket.SocketIO",
    "typeshed.typeshed.stubs.WebOb.webob.request.LimitedLengthFile",
    "typeshed.typeshed.stubs.pyserial.serial.serialutil.SerialBase",
    "werkzeug.serving.DechunkedInput",
    "werkzeug.wsgi.LimitedStream"
  ],
  "io.RawIOBase.write": [
    "click._winconsole._WindowsConsoleWriter",
    "io.FileIO",
    "pip._vendor.rich.progress._Reader",
    "socket.SocketIO",
    "typeshed.typeshed.stdlib.socket.SocketIO",
    "typeshed.typeshed.stubs.pyserial.serial.rfc2217.Serial",
    "typeshed.typeshed.stubs.pyserial.serial.serialcli.Serial",
    "typeshed.typeshed.stubs.pyserial.serial.serialjava.Serial",
    "typeshed.typeshed.stubs.pyserial.serial.serialposix.Serial",
    "typeshed.typeshed.stubs.pyserial.serial.serialutil.SerialBase",
    "typeshed.typeshed.stubs.pyserial.serial.serialwin32.Serial",
    "typeshed.typeshed.stubs.pyserial.serial.urlhandler.protocol_cp2110.Serial",
    "typeshed.typeshed.stubs.pyserial.serial.urlhandler.protocol_loop.Serial",
    "typeshed.typeshed.stubs.pyserial.serial.urlhandler.protocol_socket.Serial"
  ],
  "io.StringIO.__init__": [
    "IPython.lib.pretty.CUnicodeIO"
  ],
  "io.TextIOBase.__iter__": [
    "io.TextIOWrapper"
  ],
  "io.TextIOBase.__next__": [
    "io.TextIOWrapper"
  ],
  "io.TextIOBase.encoding": [
    "pip._internal.utils.misc.StreamWrapper"
  ],
  "io.TextIOBase.readline": [
    "io.TextIOWrapper"
  ],
  "io.TextIOBase.readlines": [
    "io.TextIOWrapper"
  ],
  "io.TextIOBase.write": [
    "django.core.management.base.OutputWrapper",
    "pip._vendor.rich.file_proxy.FileProxy"
  ],
  "io.TextIOBase.writelines": [
    "io.TextIOWrapper"
  ],
  "io.TextIOWrapper.__init__": [
    "click._compat._NonClosingTextIOWrapper",
    "click.testing._NamedTextIOWrapper",
    "io.StringIO",
    "os._wrap_close",
    "typeshed.typeshed.stdlib.os._wrap_close"
  ],
  "isapi.simple.SimpleExtension.GetExtensionVersion": [
    "isapi.threaded_extension.ThreadPoolExtension",
    "typeshed.typeshed.stubs.pywin32.isapi.threaded_extension.ThreadPoolExtension"
  ],
  "isapi.simple.SimpleExtension.HttpExtensionProc": [
    "isapi.threaded_extension.ThreadPoolExtension",
    "typeshed.typeshed.stubs.pywin32.isapi.threaded_extension.ThreadPoolExtension"
  ],
  "isapi.simple.SimpleExtension.TerminateExtension": [
    "isapi.threaded_extension.ThreadPoolExtension",
    "typeshed.typeshed.stubs.pywin32.isapi.threaded_extension.ThreadPoolExtension"
  ],
  "itsdangerous.exc.BadData.__init__": [
    "itsdangerous.exc.BadPayload",
    "itsdangerous.exc.BadSignature"
  ],
  "itsdangerous.exc.BadSignature.__init__": [
    "itsdangerous.exc.BadHeader",
    "itsdangerous.exc.BadTimeSignature"
  ],
  "itsdangerous.serializer.Serializer.dump_payload": [
    "itsdangerous.url_safe.URLSafeSerializerMixin"
  ],
  "itsdangerous.serializer.Serializer.iter_unsigners": [
    "itsdangerous.timed.TimedSerializer"
  ],
  "itsdangerous.serializer.Serializer.load_payload": [
    "itsdangerous.url_safe.URLSafeSerializerMixin"
  ],
  "itsdangerous.serializer.Serializer.loads": [
    "itsdangerous.timed.TimedSerializer"
  ],
  "itsdangerous.serializer.Serializer.loads_unsafe": [
    "itsdangerous.timed.TimedSerializer"
  ],
  "itsdangerous.signer.Signer.sign": [
    "itsdangerous.timed.TimestampSigner"
  ],
  "itsdangerous.signer.Signer.unsign": [
    "itsdangerous.timed.TimestampSigner"
  ],
  "itsdangerous.signer.Signer.validate": [
    "itsdangerous.timed.TimestampSigner"
  ],
  "itsdangerous.signer.SigningAlgorithm.get_signature": [
    "itsdangerous.signer.HMACAlgorithm",
    "itsdangerous.signer.NoneAlgorithm"
  ],
  "jack.OwnPort.get_array": [
    "jack.OwnMidiPort"
  ],
  "jack.OwnPort.get_buffer": [
    "jack.OwnMidiPort"
  ],
  "jack.Port.is_audio": [
    "jack.MidiPort"
  ],
  "jack.Port.is_midi": [
    "jack.MidiPort"
  ],
  "jinja2.bccache.BytecodeCache.clear": [
    "jinja2.bccache.FileSystemBytecodeCache"
  ],
  "jinja2.bccache.BytecodeCache.dump_bytecode": [
    "jinja2.bccache.FileSystemBytecodeCache",
    "jinja2.bccache.MemcachedBytecodeCache"
  ],
  "jinja2.bccache.BytecodeCache.load_bytecode": [
    "jinja2.bccache.FileSystemBytecodeCache",
    "jinja2.bccache.MemcachedBytecodeCache"
  ],
  "jinja2.compiler.CodeGenerator.__init__": [
    "jinja2.meta.TrackingCodeGenerator"
  ],
  "jinja2.compiler.CodeGenerator._default_finalize": [
    "jinja2.nativetypes.NativeCodeGenerator"
  ],
  "jinja2.compiler.CodeGenerator._output_child_post": [
    "jinja2.nativetypes.NativeCodeGenerator"
  ],
  "jinja2.compiler.CodeGenerator._output_child_pre": [
    "jinja2.nativetypes.NativeCodeGenerator"
  ],
  "jinja2.compiler.CodeGenerator._output_child_to_const": [
    "jinja2.nativetypes.NativeCodeGenerator"
  ],
  "jinja2.compiler.CodeGenerator._output_const_repr": [
    "jinja2.nativetypes.NativeCodeGenerator"
  ],
  "jinja2.compiler.CodeGenerator.enter_frame": [
    "jinja2.meta.TrackingCodeGenerator"
  ],
  "jinja2.compiler.CodeGenerator.write": [
    "jinja2.meta.TrackingCodeGenerator"
  ],
  "jinja2.environment.Environment.__init__": [
    "flask.templating.Environment",
    "jinja2.sandbox.SandboxedEnvironment"
  ],
  "jinja2.environment.Environment.getattr": [
    "jinja2.sandbox.SandboxedEnvironment"
  ],
  "jinja2.environment.Environment.getitem": [
    "jinja2.sandbox.SandboxedEnvironment"
  ],
  "jinja2.environment.Template.render": [
    "jinja2.nativetypes.NativeTemplate"
  ],
  "jinja2.environment.Template.render_async": [
    "jinja2.nativetypes.NativeTemplate"
  ],
  "jinja2.exceptions.TemplateError.__init__": [
    "jinja2.exceptions.TemplateSyntaxError"
  ],
  "jinja2.exceptions.TemplateNotFound.__init__": [
    "jinja2.exceptions.TemplatesNotFound"
  ],
  "jinja2.ext.Extension.__init__": [
    "jinja2.ext.InternationalizationExtension"
  ],
  "jinja2.ext.Extension.parse": [
    "jinja2.ext.DebugExtension",
    "jinja2.ext.ExprStmtExtension",
    "jinja2.ext.InternationalizationExtension",
    "jinja2.ext.LoopControlExtension"
  ],
  "jinja2.loaders.BaseLoader.get_source": [
    "flask.templating.DispatchingJinjaLoader",
    "jinja2.loaders.ChoiceLoader",
    "jinja2.loaders.DictLoader",
    "jinja2.loaders.FileSystemLoader",
    "jinja2.loaders.FunctionLoader",
    "jinja2.loaders.PackageLoader",
    "jinja2.loaders.PrefixLoader"
  ],
  "jinja2.loaders.BaseLoader.list_templates": [
    "flask.templating.DispatchingJinjaLoader",
    "jinja2.loaders.ChoiceLoader",
    "jinja2.loaders.DictLoader",
    "jinja2.loaders.FileSystemLoader",
    "jinja2.loaders.PackageLoader",
    "jinja2.loaders.PrefixLoader"
  ],
  "jinja2.loaders.BaseLoader.load": [
    "jinja2.loaders.ChoiceLoader",
    "jinja2.loaders.ModuleLoader",
    "jinja2.loaders.PrefixLoader"
  ],
  "jinja2.nodes.BinExpr.as_const": [
    "jinja2.nodes.And",
    "jinja2.nodes.Or"
  ],
  "jinja2.nodes.Expr.as_const": [
    "jinja2.nodes.BinExpr",
    "jinja2.nodes.Compare",
    "jinja2.nodes.Concat",
    "jinja2.nodes.CondExpr",
    "jinja2.nodes.Const",
    "jinja2.nodes.Dict",
    "jinja2.nodes.Getattr",
    "jinja2.nodes.Getitem",
    "jinja2.nodes.List",
    "jinja2.nodes.MarkSafe",
    "jinja2.nodes.MarkSafeIfAutoescape",
    "jinja2.nodes.Slice",
    "jinja2.nodes.TemplateData",
    "jinja2.nodes.Tuple",
    "jinja2.nodes.UnaryExpr",
    "jinja2.nodes._FilterTestCommon"
  ],
  "jinja2.nodes.Expr.can_assign": [
    "jinja2.nodes.NSRef",
    "jinja2.nodes.Name",
    "jinja2.nodes.Tuple"
  ],
  "jinja2.nodes._FilterTestCommon.as_const": [
    "jinja2.nodes.Filter"
  ],
  "jinja2.runtime.LoopContext._peek_next": [
    "jinja2.runtime.AsyncLoopContext"
  ],
  "jinja2.runtime.LoopContext._to_iterator": [
    "jinja2.runtime.AsyncLoopContext"
  ],
  "jinja2.runtime.LoopContext.last": [
    "jinja2.runtime.AsyncLoopContext"
  ],
  "jinja2.runtime.LoopContext.length": [
    "jinja2.runtime.AsyncLoopContext"
  ],
  "jinja2.runtime.LoopContext.nextitem": [
    "jinja2.runtime.AsyncLoopContext"
  ],
  "jinja2.runtime.LoopContext.revindex": [
    "jinja2.runtime.AsyncLoopContext"
  ],
  "jinja2.runtime.LoopContext.revindex0": [
    "jinja2.runtime.AsyncLoopContext"
  ],
  "jinja2.runtime.Undefined.__getattr__": [
    "jinja2.runtime.ChainableUndefined"
  ],
  "jinja2.runtime.Undefined.__str__": [
    "jinja2.runtime.DebugUndefined"
  ],
  "jinja2.sandbox.SandboxedEnvironment.is_safe_attribute": [
    "jinja2.sandbox.ImmutableSandboxedEnvironment"
  ],
  "jinja2.visitor.NodeTransformer.generic_visit": [
    "jinja2.optimizer.Optimizer"
  ],
  "jinja2.visitor.NodeVisitor.generic_visit": [
    "jinja2.idtracking.RootVisitor",
    "jinja2.visitor.NodeTransformer"
  ],
  "jmespath.exceptions.ParseError.__init__": [
    "jmespath.exceptions.ArityError",
    "jmespath.exceptions.LexerError"
  ],
  "jmespath.visitor.Visitor.__init__": [
    "jmespath.visitor.GraphvizVisitor",
    "jmespath.visitor.TreeInterpreter"
  ],
  "jmespath.visitor.Visitor.default_visit": [
    "jmespath.visitor.TreeInterpreter"
  ],
  "jmespath.visitor.Visitor.visit": [
    "jmespath.visitor.GraphvizVisitor"
  ],
  "jose.backends.base.Key.__init__": [
    "jose.backends.base.DIRKey",
    "jose.backends.cryptography_backend.CryptographyAESKey",
    "jose.backends.cryptography_backend.CryptographyECKey",
    "jose.backends.cryptography_backend.CryptographyHMACKey",
    "jose.backends.cryptography_backend.CryptographyRSAKey",
    "jose.backends.ecdsa_backend.ECDSAECKey",
    "jose.backends.native.HMACKey",
    "jose.backends.rsa_backend.RSAKey"
  ],
  "jose.backends.base.Key.decrypt": [
    "jose.backends.cryptography_backend.CryptographyAESKey"
  ],
  "jose.backends.base.Key.encrypt": [
    "jose.backends.cryptography_backend.CryptographyAESKey"
  ],
  "jose.backends.base.Key.public_key": [
    "jose.backends.cryptography_backend.CryptographyECKey",
    "jose.backends.cryptography_backend.CryptographyRSAKey",
    "jose.backends.ecdsa_backend.ECDSAECKey",
    "jose.backends.rsa_backend.RSAKey"
  ],
  "jose.backends.base.Key.sign": [
    "jose.backends.cryptography_backend.CryptographyECKey",
    "jose.backends.cryptography_backend.CryptographyHMACKey",
    "jose.backends.cryptography_backend.CryptographyRSAKey",
    "jose.backends.ecdsa_backend.ECDSAECKey",
    "jose.backends.native.HMACKey",
    "jose.backends.rsa_backend.RSAKey"
  ],
  "jose.backends.base.Key.to_dict": [
    "jose.backends.base.DIRKey",
    "jose.backends.cryptography_backend.CryptographyAESKey",
    "jose.backends.cryptography_backend.CryptographyECKey",
    "jose.backends.cryptography_backend.CryptographyHMACKey",
    "jose.backends.cryptography_backend.CryptographyRSAKey",
    "jose.backends.ecdsa_backend.ECDSAECKey",
    "jose.backends.native.HMACKey",
    "jose.backends.rsa_backend.RSAKey"
  ],
  "jose.backends.base.Key.to_pem": [
    "jose.backends.cryptography_backend.CryptographyECKey",
    "jose.backends.cryptography_backend.CryptographyRSAKey",
    "jose.backends.ecdsa_backend.ECDSAECKey",
    "jose.backends.rsa_backend.RSAKey"
  ],
  "jose.backends.base.Key.unwrap_key": [
    "jose.backends.cryptography_backend.CryptographyAESKey",
    "jose.backends.cryptography_backend.CryptographyRSAKey",
    "jose.backends.rsa_backend.RSAKey"
  ],
  "jose.backends.base.Key.verify": [
    "jose.backends.cryptography_backend.CryptographyECKey",
    "jose.backends.cryptography_backend.CryptographyHMACKey",
    "jose.backends.cryptography_backend.CryptographyRSAKey",
    "jose.backends.ecdsa_backend.ECDSAECKey",
    "jose.backends.native.HMACKey",
    "jose.backends.rsa_backend.RSAKey"
  ],
  "jose.backends.base.Key.wrap_key": [
    "jose.backends.cryptography_backend.CryptographyAESKey",
    "jose.backends.cryptography_backend.CryptographyRSAKey",
    "jose.backends.rsa_backend.RSAKey"
  ],
  "json.encoder.JSONEncoder.default": [
    "dataclasses_json.core._ExtendedEncoder",
    "influxdb_client.client.flux_table.FluxStructureEncoder",
    "stripe.stripe_object.StripeObject.ReprJSONEncoder",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.client.flux_table.FluxStructureEncoder",
    "typeshed.typeshed.stubs.stripe.stripe.stripe_object.StripeObject.ReprJSONEncoder"
  ],
  "keyboard._generic.GenericListener.pre_process_event": [
    "keyboard.mouse._MouseListener"
  ],
  "ldap3.abstract.cursor.Cursor.__init__": [
    "ldap3.abstract.cursor.Reader",
    "ldap3.abstract.cursor.Writer"
  ],
  "ldap3.abstract.entry.EntryBase.__getattr__": [
    "ldap3.abstract.entry.WritableEntry"
  ],
  "ldap3.abstract.entry.EntryBase.__setattr__": [
    "ldap3.abstract.entry.WritableEntry"
  ],
  "ldap3.extend.ExtendedOperationContainer.__init__": [
    "ldap3.extend.ExtendedOperationsRoot"
  ],
  "ldap3.extend.operation.ExtendedOperation.__init__": [
    "ldap3.extend.novell.endTransaction.EndTransaction",
    "ldap3.extend.novell.listReplicas.ListReplicas",
    "ldap3.extend.novell.nmasGetUniversalPassword.NmasGetUniversalPassword",
    "ldap3.extend.novell.nmasSetUniversalPassword.NmasSetUniversalPassword",
    "ldap3.extend.novell.partition_entry_count.PartitionEntryCount",
    "ldap3.extend.novell.replicaInfo.ReplicaInfo",
    "ldap3.extend.novell.startTransaction.StartTransaction",
    "ldap3.extend.standard.modifyPassword.ModifyPassword"
  ],
  "ldap3.extend.operation.ExtendedOperation.config": [
    "ldap3.extend.novell.endTransaction.EndTransaction",
    "ldap3.extend.novell.getBindDn.GetBindDn",
    "ldap3.extend.novell.listReplicas.ListReplicas",
    "ldap3.extend.novell.nmasGetUniversalPassword.NmasGetUniversalPassword",
    "ldap3.extend.novell.nmasSetUniversalPassword.NmasSetUniversalPassword",
    "ldap3.extend.novell.partition_entry_count.PartitionEntryCount",
    "ldap3.extend.novell.replicaInfo.ReplicaInfo",
    "ldap3.extend.novell.startTransaction.StartTransaction",
    "ldap3.extend.standard.modifyPassword.ModifyPassword",
    "ldap3.extend.standard.whoAmI.WhoAmI"
  ],
  "ldap3.extend.operation.ExtendedOperation.populate_result": [
    "ldap3.extend.novell.endTransaction.EndTransaction",
    "ldap3.extend.novell.getBindDn.GetBindDn",
    "ldap3.extend.novell.listReplicas.ListReplicas",
    "ldap3.extend.novell.nmasGetUniversalPassword.NmasGetUniversalPassword",
    "ldap3.extend.novell.nmasSetUniversalPassword.NmasSetUniversalPassword",
    "ldap3.extend.novell.partition_entry_count.PartitionEntryCount",
    "ldap3.extend.novell.replicaInfo.ReplicaInfo",
    "ldap3.extend.novell.startTransaction.StartTransaction",
    "ldap3.extend.standard.modifyPassword.ModifyPassword",
    "ldap3.extend.standard.whoAmI.WhoAmI"
  ],
  "ldap3.extend.operation.ExtendedOperation.set_response": [
    "ldap3.extend.novell.endTransaction.EndTransaction",
    "ldap3.extend.novell.startTransaction.StartTransaction"
  ],
  "ldap3.protocol.rfc4512.BaseObjectInfo.__init__": [
    "ldap3.protocol.rfc4512.AttributeTypeInfo",
    "ldap3.protocol.rfc4512.DitContentRuleInfo",
    "ldap3.protocol.rfc4512.DitStructureRuleInfo",
    "ldap3.protocol.rfc4512.LdapSyntaxInfo",
    "ldap3.protocol.rfc4512.MatchingRuleInfo",
    "ldap3.protocol.rfc4512.MatchingRuleUseInfo",
    "ldap3.protocol.rfc4512.NameFormInfo",
    "ldap3.protocol.rfc4512.ObjectClassInfo"
  ],
  "ldap3.protocol.rfc4512.BaseServerInfo.__init__": [
    "ldap3.protocol.rfc4512.DsaInfo",
    "ldap3.protocol.rfc4512.SchemaInfo"
  ],
  "ldap3.strategy.asynchronous.AsyncStrategy.__init__": [
    "ldap3.strategy.asyncStream.AsyncStreamStrategy"
  ],
  "ldap3.strategy.asynchronous.AsyncStrategy.get_stream": [
    "ldap3.strategy.asyncStream.AsyncStreamStrategy"
  ],
  "ldap3.strategy.asynchronous.AsyncStrategy.post_send_search": [
    "ldap3.strategy.mockAsync.MockAsyncStrategy"
  ],
  "ldap3.strategy.asynchronous.AsyncStrategy.post_send_single_response": [
    "ldap3.strategy.mockAsync.MockAsyncStrategy"
  ],
  "ldap3.strategy.asynchronous.AsyncStrategy.set_stream": [
    "ldap3.strategy.asyncStream.AsyncStreamStrategy"
  ],
  "ldap3.strategy.base.BaseStrategy.__init__": [
    "ldap3.strategy.asynchronous.AsyncStrategy",
    "ldap3.strategy.ldifProducer.LdifProducerStrategy",
    "ldap3.strategy.reusable.ReusableStrategy",
    "ldap3.strategy.sync.SyncStrategy"
  ],
  "ldap3.strategy.base.BaseStrategy.close": [
    "ldap3.strategy.asynchronous.AsyncStrategy"
  ],
  "ldap3.strategy.base.BaseStrategy.get_response": [
    "ldap3.strategy.mockAsync.MockAsyncStrategy",
    "ldap3.strategy.reusable.ReusableStrategy"
  ],
  "ldap3.strategy.base.BaseStrategy.get_stream": [
    "ldap3.strategy.asynchronous.AsyncStrategy",
    "ldap3.strategy.ldifProducer.LdifProducerStrategy",
    "ldap3.strategy.reusable.ReusableStrategy",
    "ldap3.strategy.sync.SyncStrategy"
  ],
  "ldap3.strategy.base.BaseStrategy.open": [
    "ldap3.strategy.asynchronous.AsyncStrategy",
    "ldap3.strategy.reusable.ReusableStrategy",
    "ldap3.strategy.sync.SyncStrategy"
  ],
  "ldap3.strategy.base.BaseStrategy.post_send_search": [
    "ldap3.strategy.asynchronous.AsyncStrategy",
    "ldap3.strategy.ldifProducer.LdifProducerStrategy",
    "ldap3.strategy.reusable.ReusableStrategy",
    "ldap3.strategy.sync.SyncStrategy"
  ],
  "ldap3.strategy.base.BaseStrategy.post_send_single_response": [
    "ldap3.strategy.asynchronous.AsyncStrategy",
    "ldap3.strategy.ldifProducer.LdifProducerStrategy",
    "ldap3.strategy.reusable.ReusableStrategy",
    "ldap3.strategy.sync.SyncStrategy"
  ],
  "ldap3.strategy.base.BaseStrategy.receiving": [
    "ldap3.strategy.asynchronous.AsyncStrategy",
    "ldap3.strategy.ldifProducer.LdifProducerStrategy",
    "ldap3.strategy.reusable.ReusableStrategy",
    "ldap3.strategy.sync.SyncStrategy"
  ],
  "ldap3.strategy.base.BaseStrategy.send": [
    "ldap3.strategy.ldifProducer.LdifProducerStrategy",
    "ldap3.strategy.restartable.RestartableStrategy",
    "ldap3.strategy.reusable.ReusableStrategy"
  ],
  "ldap3.strategy.base.BaseStrategy.set_stream": [
    "ldap3.strategy.asynchronous.AsyncStrategy",
    "ldap3.strategy.ldifProducer.LdifProducerStrategy",
    "ldap3.strategy.reusable.ReusableStrategy",
    "ldap3.strategy.sync.SyncStrategy"
  ],
  "ldap3.strategy.mockBase.MockBaseStrategy.__init__": [
    "ldap3.strategy.mockAsync.MockAsyncStrategy",
    "ldap3.strategy.mockSync.MockSyncStrategy"
  ],
  "ldap3.strategy.restartable.RestartableStrategy.__init__": [
    "ldap3.strategy.safeRestartable.SafeRestartableStrategy"
  ],
  "ldap3.strategy.sync.SyncStrategy.__init__": [
    "ldap3.strategy.restartable.RestartableStrategy",
    "ldap3.strategy.safeSync.SafeSyncStrategy"
  ],
  "ldap3.strategy.sync.SyncStrategy.get_stream": [
    "ldap3.strategy.restartable.RestartableStrategy"
  ],
  "ldap3.strategy.sync.SyncStrategy.open": [
    "ldap3.strategy.restartable.RestartableStrategy"
  ],
  "ldap3.strategy.sync.SyncStrategy.post_send_search": [
    "ldap3.strategy.mockSync.MockSyncStrategy",
    "ldap3.strategy.restartable.RestartableStrategy"
  ],
  "ldap3.strategy.sync.SyncStrategy.post_send_single_response": [
    "ldap3.strategy.mockSync.MockSyncStrategy",
    "ldap3.strategy.restartable.RestartableStrategy"
  ],
  "ldap3.strategy.sync.SyncStrategy.set_stream": [
    "ldap3.strategy.restartable.RestartableStrategy"
  ],
  "ldap3.utils.ciDict.CaseInsensitiveDict.__delitem__": [
    "ldap3.utils.ciDict.CaseInsensitiveWithAliasDict"
  ],
  "ldap3.utils.ciDict.CaseInsensitiveDict.__getitem__": [
    "ldap3.utils.ciDict.CaseInsensitiveWithAliasDict"
  ],
  "ldap3.utils.ciDict.CaseInsensitiveDict.__init__": [
    "ldap3.utils.ciDict.CaseInsensitiveWithAliasDict"
  ],
  "ldap3.utils.ciDict.CaseInsensitiveDict.__setitem__": [
    "ldap3.utils.ciDict.CaseInsensitiveWithAliasDict"
  ],
  "ldap3.utils.ciDict.CaseInsensitiveDict.copy": [
    "ldap3.utils.ciDict.CaseInsensitiveWithAliasDict"
  ],
  "lib2to3.refactor.RefactoringTool.refactor": [
    "lib2to3.refactor.MultiprocessRefactoringTool"
  ],
  "libcst._metadata_dependent.MetadataDependent.__init__": [
    "libcst.codemod._codemod.Codemod",
    "libcst.metadata.base_provider.BaseMetadataProvider"
  ],
  "libcst._metadata_dependent.MetadataDependent.get_metadata": [
    "libcst.metadata.base_provider.BaseMetadataProvider"
  ],
  "libcst._nodes.base.CSTNode._codegen_impl": [
    "libcst._nodes.base.BaseValueToken",
    "libcst._nodes.expression.Annotation",
    "libcst._nodes.expression.Arg",
    "libcst._nodes.expression.Asynchronous",
    "libcst._nodes.expression.Attribute",
    "libcst._nodes.expression.Await",
    "libcst._nodes.expression.BinaryOperation",
    "libcst._nodes.expression.BooleanOperation",
    "libcst._nodes.expression.Call",
    "libcst._nodes.expression.CompFor",
    "libcst._nodes.expression.CompIf",
    "libcst._nodes.expression.Comparison",
    "libcst._nodes.expression.ComparisonTarget",
    "libcst._nodes.expression.ConcatenatedString",
    "libcst._nodes.expression.Dict",
    "libcst._nodes.expression.DictComp",
    "libcst._nodes.expression.Ellipsis",
    "libcst._nodes.expression.Float",
    "libcst._nodes.expression.FormattedString",
    "libcst._nodes.expression.FormattedStringExpression",
    "libcst._nodes.expression.FormattedStringText",
    "libcst._nodes.expression.From",
    "libcst._nodes.expression.GeneratorExp",
    "libcst._nodes.expression.IfExp",
    "libcst._nodes.expression.Imaginary",
    "libcst._nodes.expression.Index",
    "libcst._nodes.expression.Integer",
    "libcst._nodes.expression.Lambda",
    "libcst._nodes.expression.LeftCurlyBrace",
    "libcst._nodes.expression.LeftParen",
    "libcst._nodes.expression.LeftSquareBracket",
    "libcst._nodes.expression.List",
    "libcst._nodes.expression.ListComp",
    "libcst._nodes.expression.Name",
    "libcst._nodes.expression.NamedExpr",
    "libcst._nodes.expression.Param",
    "libcst._nodes.expression.ParamSlash",
    "libcst._nodes.expression.ParamStar",
    "libcst._nodes.expression.Parameters",
    "libcst._nodes.expression.RightCurlyBrace",
    "libcst._nodes.expression.RightParen",
    "libcst._nodes.expression.RightSquareBracket",
    "libcst._nodes.expression.Set",
    "libcst._nodes.expression.SetComp",
    "libcst._nodes.expression.SimpleString",
    "libcst._nodes.expression.Slice",
    "libcst._nodes.expression.Subscript",
    "libcst._nodes.expression.SubscriptElement",
    "libcst._nodes.expression.Tuple",
    "libcst._nodes.expression.UnaryOperation",
    "libcst._nodes.expression.Yield",
    "libcst._nodes.expression._BaseElementImpl",
    "libcst._nodes.module.Module",
    "libcst._nodes.op.BaseUnaryOp",
    "libcst._nodes.op.ImportStar",
    "libcst._nodes.op._BaseOneTokenOp",
    "libcst._nodes.op._BaseTwoTokenOp",
    "libcst._nodes.statement.AsName",
    "libcst._nodes.statement.AssignTarget",
    "libcst._nodes.statement.BaseSmallStatement",
    "libcst._nodes.statement.ClassDef",
    "libcst._nodes.statement.Decorator",
    "libcst._nodes.statement.Else",
    "libcst._nodes.statement.ExceptHandler",
    "libcst._nodes.statement.ExceptStarHandler",
    "libcst._nodes.statement.Finally",
    "libcst._nodes.statement.For",
    "libcst._nodes.statement.FunctionDef",
    "libcst._nodes.statement.If",
    "libcst._nodes.statement.ImportAlias",
    "libcst._nodes.statement.IndentedBlock",
    "libcst._nodes.statement.Match",
    "libcst._nodes.statement.MatchAs",
    "libcst._nodes.statement.MatchCase",
    "libcst._nodes.statement.MatchClass",
    "libcst._nodes.statement.MatchKeywordElement",
    "libcst._nodes.statement.MatchList",
    "libcst._nodes.statement.MatchMapping",
    "libcst._nodes.statement.MatchMappingElement",
    "libcst._nodes.statement.MatchOr",
    "libcst._nodes.statement.MatchOrElement",
    "libcst._nodes.statement.MatchSequenceElement",
    "libcst._nodes.statement.MatchSingleton",
    "libcst._nodes.statement.MatchStar",
    "libcst._nodes.statement.MatchTuple",
    "libcst._nodes.statement.MatchValue",
    "libcst._nodes.statement.NameItem",
    "libcst._nodes.statement.ParamSpec",
    "libcst._nodes.statement.Try",
    "libcst._nodes.statement.TryStar",
    "libcst._nodes.statement.TypeParam",
    "libcst._nodes.statement.TypeParameters",
    "libcst._nodes.statement.TypeVar",
    "libcst._nodes.statement.TypeVarTuple",
    "libcst._nodes.statement.While",
    "libcst._nodes.statement.With",
    "libcst._nodes.statement.WithItem",
    "libcst._nodes.statement._BaseSimpleStatement",
    "libcst._nodes.whitespace.EmptyLine",
    "libcst._nodes.whitespace.Newline",
    "libcst._nodes.whitespace.ParenthesizedWhitespace",
    "libcst._nodes.whitespace.TrailingWhitespace"
  ],
  "libcst._nodes.base.CSTNode._is_removable": [
    "libcst._nodes.statement.SimpleStatementLine"
  ],
  "libcst._nodes.base.CSTNode._validate": [
    "libcst._nodes.expression.Arg",
    "libcst._nodes.expression.Asynchronous",
    "libcst._nodes.expression.CompFor",
    "libcst._nodes.expression.CompIf",
    "libcst._nodes.expression.ComparisonTarget",
    "libcst._nodes.expression.FormattedStringExpression",
    "libcst._nodes.expression.From",
    "libcst._nodes.expression.Param",
    "libcst._nodes.expression.Parameters",
    "libcst._nodes.expression._BaseParenthesizedNode",
    "libcst._nodes.op.NotEqual",
    "libcst._nodes.op._BaseTwoTokenOp",
    "libcst._nodes.statement.AnnAssign",
    "libcst._nodes.statement.AsName",
    "libcst._nodes.statement.Assert",
    "libcst._nodes.statement.Assign",
    "libcst._nodes.statement.ClassDef",
    "libcst._nodes.statement.Del",
    "libcst._nodes.statement.ExceptHandler",
    "libcst._nodes.statement.ExceptStarHandler",
    "libcst._nodes.statement.For",
    "libcst._nodes.statement.FunctionDef",
    "libcst._nodes.statement.Global",
    "libcst._nodes.statement.Import",
    "libcst._nodes.statement.ImportAlias",
    "libcst._nodes.statement.ImportFrom",
    "libcst._nodes.statement.IndentedBlock",
    "libcst._nodes.statement.Match",
    "libcst._nodes.statement.NameItem",
    "libcst._nodes.statement.Nonlocal",
    "libcst._nodes.statement.Raise",
    "libcst._nodes.statement.Return",
    "libcst._nodes.statement.Try",
    "libcst._nodes.statement.TryStar",
    "libcst._nodes.statement.TypeAlias",
    "libcst._nodes.statement.While",
    "libcst._nodes.statement.With",
    "libcst._nodes.statement.WithItem",
    "libcst._nodes.statement._BaseSimpleStatement",
    "libcst._nodes.whitespace.Comment",
    "libcst._nodes.whitespace.Newline",
    "libcst._nodes.whitespace.SimpleWhitespace"
  ],
  "libcst._nodes.base.CSTNode._visit_and_replace_children": [
    "libcst._nodes.base.BaseLeaf",
    "libcst._nodes.expression.Annotation",
    "libcst._nodes.expression.Arg",
    "libcst._nodes.expression.Asynchronous",
    "libcst._nodes.expression.Attribute",
    "libcst._nodes.expression.Await",
    "libcst._nodes.expression.BinaryOperation",
    "libcst._nodes.expression.BooleanOperation",
    "libcst._nodes.expression.Call",
    "libcst._nodes.expression.CompFor",
    "libcst._nodes.expression.CompIf",
    "libcst._nodes.expression.Comparison",
    "libcst._nodes.expression.ComparisonTarget",
    "libcst._nodes.expression.ConcatenatedString",
    "libcst._nodes.expression.Dict",
    "libcst._nodes.expression.DictComp",
    "libcst._nodes.expression.DictElement",
    "libcst._nodes.expression.Element",
    "libcst._nodes.expression.Ellipsis",
    "libcst._nodes.expression.Float",
    "libcst._nodes.expression.FormattedString",
    "libcst._nodes.expression.FormattedStringExpression",
    "libcst._nodes.expression.FormattedStringText",
    "libcst._nodes.expression.From",
    "libcst._nodes.expression.GeneratorExp",
    "libcst._nodes.expression.IfExp",
    "libcst._nodes.expression.Imaginary",
    "libcst._nodes.expression.Index",
    "libcst._nodes.expression.Integer",
    "libcst._nodes.expression.Lambda",
    "libcst._nodes.expression.LeftCurlyBrace",
    "libcst._nodes.expression.LeftParen",
    "libcst._nodes.expression.LeftSquareBracket",
    "libcst._nodes.expression.List",
    "libcst._nodes.expression.ListComp",
    "libcst._nodes.expression.Name",
    "libcst._nodes.expression.NamedExpr",
    "libcst._nodes.expression.Param",
    "libcst._nodes.expression.ParamSlash",
    "libcst._nodes.expression.ParamStar",
    "libcst._nodes.expression.Parameters",
    "libcst._nodes.expression.RightCurlyBrace",
    "libcst._nodes.expression.RightParen",
    "libcst._nodes.expression.RightSquareBracket",
    "libcst._nodes.expression.Set",
    "libcst._nodes.expression.SetComp",
    "libcst._nodes.expression.SimpleString",
    "libcst._nodes.expression.Slice",
    "libcst._nodes.expression.StarredDictElement",
    "libcst._nodes.expression.StarredElement",
    "libcst._nodes.expression.Subscript",
    "libcst._nodes.expression.SubscriptElement",
    "libcst._nodes.expression.Tuple",
    "libcst._nodes.expression.UnaryOperation",
    "libcst._nodes.expression.Yield",
    "libcst._nodes.module.Module",
    "libcst._nodes.op.BaseUnaryOp",
    "libcst._nodes.op._BaseOneTokenOp",
    "libcst._nodes.op._BaseTwoTokenOp",
    "libcst._nodes.statement.AnnAssign",
    "libcst._nodes.statement.AsName",
    "libcst._nodes.statement.Assert",
    "libcst._nodes.statement.Assign",
    "libcst._nodes.statement.AssignTarget",
    "libcst._nodes.statement.AugAssign",
    "libcst._nodes.statement.Break",
    "libcst._nodes.statement.ClassDef",
    "libcst._nodes.statement.Continue",
    "libcst._nodes.statement.Decorator",
    "libcst._nodes.statement.Del",
    "libcst._nodes.statement.Else",
    "libcst._nodes.statement.ExceptHandler",
    "libcst._nodes.statement.ExceptStarHandler",
    "libcst._nodes.statement.Expr",
    "libcst._nodes.statement.Finally",
    "libcst._nodes.statement.For",
    "libcst._nodes.statement.FunctionDef",
    "libcst._nodes.statement.Global",
    "libcst._nodes.statement.If",
    "libcst._nodes.statement.Import",
    "libcst._nodes.statement.ImportAlias",
    "libcst._nodes.statement.ImportFrom",
    "libcst._nodes.statement.IndentedBlock",
    "libcst._nodes.statement.Match",
    "libcst._nodes.statement.MatchAs",
    "libcst._nodes.statement.MatchCase",
    "libcst._nodes.statement.MatchClass",
    "libcst._nodes.statement.MatchKeywordElement",
    "libcst._nodes.statement.MatchList",
    "libcst._nodes.statement.MatchMapping",
    "libcst._nodes.statement.MatchMappingElement",
    "libcst._nodes.statement.MatchOr",
    "libcst._nodes.statement.MatchOrElement",
    "libcst._nodes.statement.MatchSequenceElement",
    "libcst._nodes.statement.MatchSingleton",
    "libcst._nodes.statement.MatchStar",
    "libcst._nodes.statement.MatchTuple",
    "libcst._nodes.statement.MatchValue",
    "libcst._nodes.statement.NameItem",
    "libcst._nodes.statement.Nonlocal",
    "libcst._nodes.statement.ParamSpec",
    "libcst._nodes.statement.Pass",
    "libcst._nodes.statement.Raise",
    "libcst._nodes.statement.Return",
    "libcst._nodes.statement.SimpleStatementLine",
    "libcst._nodes.statement.SimpleStatementSuite",
    "libcst._nodes.statement.Try",
    "libcst._nodes.statement.TryStar",
    "libcst._nodes.statement.TypeAlias",
    "libcst._nodes.statement.TypeParam",
    "libcst._nodes.statement.TypeParameters",
    "libcst._nodes.statement.TypeVar",
    "libcst._nodes.statement.TypeVarTuple",
    "libcst._nodes.statement.While",
    "libcst._nodes.statement.With",
    "libcst._nodes.statement.WithItem",
    "libcst._nodes.whitespace.EmptyLine",
    "libcst._nodes.whitespace.ParenthesizedWhitespace",
    "libcst._nodes.whitespace.TrailingWhitespace"
  ],
  "libcst._nodes.base.CSTNode.children": [
    "libcst._nodes.base.BaseLeaf"
  ],
  "libcst._nodes.base.CSTNode.visit": [
    "libcst._nodes.module.Module"
  ],
  "libcst._nodes.expression.BaseExpression._safe_to_use_with_word_operator": [
    "libcst._nodes.expression.Attribute",
    "libcst._nodes.expression.BaseList",
    "libcst._nodes.expression.BaseNumber",
    "libcst._nodes.expression.BinaryOperation",
    "libcst._nodes.expression.BooleanOperation",
    "libcst._nodes.expression.Call",
    "libcst._nodes.expression.Comparison",
    "libcst._nodes.expression.ConcatenatedString",
    "libcst._nodes.expression.Ellipsis",
    "libcst._nodes.expression.GeneratorExp",
    "libcst._nodes.expression.IfExp",
    "libcst._nodes.expression.Lambda",
    "libcst._nodes.expression.NamedExpr",
    "libcst._nodes.expression.Subscript",
    "libcst._nodes.expression.Tuple",
    "libcst._nodes.expression.UnaryOperation",
    "libcst._nodes.expression._BasePrefixedString",
    "libcst._nodes.expression._BaseSetOrDict"
  ],
  "libcst._nodes.expression._BaseElementImpl._codegen_impl": [
    "libcst._nodes.expression.DictElement",
    "libcst._nodes.expression.Element",
    "libcst._nodes.expression.StarredDictElement",
    "libcst._nodes.expression.StarredElement"
  ],
  "libcst._nodes.expression._BaseParenthesizedNode._validate": [
    "libcst._nodes.expression.Await",
    "libcst._nodes.expression.BaseSimpleComp",
    "libcst._nodes.expression.BooleanOperation",
    "libcst._nodes.expression.Comparison",
    "libcst._nodes.expression.ConcatenatedString",
    "libcst._nodes.expression.DictComp",
    "libcst._nodes.expression.Float",
    "libcst._nodes.expression.FormattedString",
    "libcst._nodes.expression.IfExp",
    "libcst._nodes.expression.Imaginary",
    "libcst._nodes.expression.Integer",
    "libcst._nodes.expression.Lambda",
    "libcst._nodes.expression.Name",
    "libcst._nodes.expression.Set",
    "libcst._nodes.expression.SimpleString",
    "libcst._nodes.expression.Subscript",
    "libcst._nodes.expression.Tuple",
    "libcst._nodes.expression.UnaryOperation",
    "libcst._nodes.expression.Yield",
    "libcst._nodes.expression._BaseExpressionWithArgs",
    "libcst._nodes.statement.MatchAs",
    "libcst._nodes.statement.MatchList",
    "libcst._nodes.statement.MatchMapping",
    "libcst._nodes.statement.MatchSingleton",
    "libcst._nodes.statement.MatchTuple"
  ],
  "libcst._nodes.expression._BaseParenthesizedNode.lpar": [
    "libcst._nodes.statement.MatchSingleton",
    "libcst._nodes.statement.MatchValue"
  ],
  "libcst._nodes.expression._BaseParenthesizedNode.lpar@setter": [
    "libcst._nodes.statement.MatchSingleton",
    "libcst._nodes.statement.MatchValue"
  ],
  "libcst._nodes.expression._BaseParenthesizedNode.rpar": [
    "libcst._nodes.statement.MatchSingleton",
    "libcst._nodes.statement.MatchValue"
  ],
  "libcst._nodes.expression._BaseParenthesizedNode.rpar@setter": [
    "libcst._nodes.statement.MatchSingleton",
    "libcst._nodes.statement.MatchValue"
  ],
  "libcst._nodes.expression._BasePrefixedString.prefix": [
    "libcst._nodes.expression.FormattedString",
    "libcst._nodes.expression.SimpleString"
  ],
  "libcst._nodes.expression._BasePrefixedString.quote": [
    "libcst._nodes.expression.FormattedString",
    "libcst._nodes.expression.SimpleString"
  ],
  "libcst._nodes.internal.CodegenState.add_indent_tokens": [
    "libcst.metadata.position_provider.WhitespaceInclusivePositionProvidingCodegenState",
    "libcst.metadata.reentrant_codegen._ReentrantCodegenState",
    "libcst.metadata.span_provider.SpanProvidingCodegenState"
  ],
  "libcst._nodes.internal.CodegenState.add_token": [
    "libcst.metadata.position_provider.WhitespaceInclusivePositionProvidingCodegenState",
    "libcst.metadata.reentrant_codegen._ReentrantCodegenState",
    "libcst.metadata.span_provider.SpanProvidingCodegenState"
  ],
  "libcst._nodes.internal.CodegenState.after_codegen": [
    "libcst.metadata.position_provider.WhitespaceInclusivePositionProvidingCodegenState",
    "libcst.metadata.reentrant_codegen._ReentrantCodegenState",
    "libcst.metadata.span_provider.SpanProvidingCodegenState"
  ],
  "libcst._nodes.internal.CodegenState.before_codegen": [
    "libcst.metadata.position_provider.WhitespaceInclusivePositionProvidingCodegenState",
    "libcst.metadata.reentrant_codegen._ReentrantCodegenState",
    "libcst.metadata.span_provider.SpanProvidingCodegenState"
  ],
  "libcst._nodes.internal.CodegenState.decrease_indent": [
    "libcst.metadata.reentrant_codegen._ReentrantCodegenState"
  ],
  "libcst._nodes.internal.CodegenState.increase_indent": [
    "libcst.metadata.reentrant_codegen._ReentrantCodegenState"
  ],
  "libcst._nodes.internal.CodegenState.pop_trailing_newline": [
    "libcst.metadata.reentrant_codegen._ReentrantCodegenState"
  ],
  "libcst._nodes.internal.CodegenState.record_syntactic_position": [
    "libcst.metadata.position_provider.PositionProvidingCodegenState",
    "libcst.metadata.span_provider.SpanProvidingCodegenState"
  ],
  "libcst._nodes.op.BaseUnaryOp._get_token": [
    "libcst._nodes.op.BitInvert",
    "libcst._nodes.op.Minus",
    "libcst._nodes.op.Not",
    "libcst._nodes.op.Plus"
  ],
  "libcst._nodes.op._BaseOneTokenOp._get_token": [
    "libcst._nodes.op.Add",
    "libcst._nodes.op.AddAssign",
    "libcst._nodes.op.And",
    "libcst._nodes.op.AssignEqual",
    "libcst._nodes.op.BitAnd",
    "libcst._nodes.op.BitAndAssign",
    "libcst._nodes.op.BitOr",
    "libcst._nodes.op.BitOrAssign",
    "libcst._nodes.op.BitXor",
    "libcst._nodes.op.BitXorAssign",
    "libcst._nodes.op.Colon",
    "libcst._nodes.op.Comma",
    "libcst._nodes.op.Divide",
    "libcst._nodes.op.DivideAssign",
    "libcst._nodes.op.Dot",
    "libcst._nodes.op.Equal",
    "libcst._nodes.op.FloorDivide",
    "libcst._nodes.op.FloorDivideAssign",
    "libcst._nodes.op.GreaterThan",
    "libcst._nodes.op.GreaterThanEqual",
    "libcst._nodes.op.In",
    "libcst._nodes.op.Is",
    "libcst._nodes.op.LeftShift",
    "libcst._nodes.op.LeftShiftAssign",
    "libcst._nodes.op.LessThan",
    "libcst._nodes.op.LessThanEqual",
    "libcst._nodes.op.MatrixMultiply",
    "libcst._nodes.op.MatrixMultiplyAssign",
    "libcst._nodes.op.Modulo",
    "libcst._nodes.op.ModuloAssign",
    "libcst._nodes.op.Multiply",
    "libcst._nodes.op.MultiplyAssign",
    "libcst._nodes.op.NotEqual",
    "libcst._nodes.op.Or",
    "libcst._nodes.op.Power",
    "libcst._nodes.op.PowerAssign",
    "libcst._nodes.op.RightShift",
    "libcst._nodes.op.RightShiftAssign",
    "libcst._nodes.op.Semicolon",
    "libcst._nodes.op.Subtract",
    "libcst._nodes.op.SubtractAssign"
  ],
  "libcst._nodes.op._BaseOneTokenOp._visit_and_replace_children": [
    "libcst._nodes.op.NotEqual"
  ],
  "libcst._nodes.op._BaseTwoTokenOp._get_tokens": [
    "libcst._nodes.op.IsNot",
    "libcst._nodes.op.NotIn"
  ],
  "libcst._nodes.statement.BaseSmallStatement._codegen_impl": [
    "libcst._nodes.statement.AnnAssign",
    "libcst._nodes.statement.Assert",
    "libcst._nodes.statement.Assign",
    "libcst._nodes.statement.AugAssign",
    "libcst._nodes.statement.Break",
    "libcst._nodes.statement.Continue",
    "libcst._nodes.statement.Del",
    "libcst._nodes.statement.Expr",
    "libcst._nodes.statement.Global",
    "libcst._nodes.statement.Import",
    "libcst._nodes.statement.ImportFrom",
    "libcst._nodes.statement.Nonlocal",
    "libcst._nodes.statement.Pass",
    "libcst._nodes.statement.Raise",
    "libcst._nodes.statement.Return",
    "libcst._nodes.statement.TypeAlias"
  ],
  "libcst._nodes.statement._BaseSimpleStatement._codegen_impl": [
    "libcst._nodes.statement.SimpleStatementLine",
    "libcst._nodes.statement.SimpleStatementSuite"
  ],
  "libcst._nodes.whitespace.BaseParenthesizableWhitespace.empty": [
    "libcst._nodes.whitespace.ParenthesizedWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace"
  ],
  "libcst._parser.base_parser.BaseParser.__init__": [
    "libcst._parser.python_parser.PythonCSTParser"
  ],
  "libcst._parser.base_parser.BaseParser.convert_nonterminal": [
    "libcst._parser.python_parser.PythonCSTParser"
  ],
  "libcst._parser.base_parser.BaseParser.convert_terminal": [
    "libcst._parser.python_parser.PythonCSTParser"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ClassDef_bases": [
    "libcst.metadata.scope_provider.ScopeVisitor"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Module_header": [
    "libcst.codemod.commands.fix_pyre_directives.FixPyreDirectivesCommand"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_AnnAssign": [
    "libcst.codemod.visitors._apply_type_annotations.TypeCollector",
    "libcst.codemod.visitors._gather_exports.GatherExportsVisitor",
    "libcst.codemod.visitors._gather_global_names.GatherGlobalNamesVisitor",
    "libcst.metadata.expression_context_provider.ExpressionContextVisitor"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Annotation": [
    "libcst.codemod.visitors._apply_type_annotations.ImportedSymbolCollector",
    "libcst.codemod.visitors._gather_string_annotation_names.GatherNamesFromStringAnnotationsVisitor",
    "libcst.metadata.scope_provider.ScopeVisitor"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Arg": [
    "libcst.metadata.scope_provider.ScopeVisitor"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_AsName": [
    "libcst.metadata.expression_context_provider.ExpressionContextVisitor"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Assign": [
    "libcst.codemod.visitors._apply_type_annotations.ApplyTypeAnnotationsVisitor",
    "libcst.codemod.visitors._apply_type_annotations.TypeCollector",
    "libcst.codemod.visitors._gather_exports.GatherExportsVisitor",
    "libcst.codemod.visitors._gather_global_names.GatherGlobalNamesVisitor",
    "libcst.metadata.expression_context_provider.ExpressionContextVisitor"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Attribute": [
    "libcst.codemod.visitors._apply_type_annotations.ImportedSymbolCollector",
    "libcst.codemod.visitors._apply_type_annotations._TypeCollectorDequalifier",
    "libcst.codemod.visitors._remove_imports.RemovedNodeVisitor",
    "libcst.metadata.expression_context_provider.ExpressionContextVisitor",
    "libcst.metadata.scope_provider.ScopeVisitor",
    "libcst.metadata.type_inference_provider.TypeInferenceProvider"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_AugAssign": [
    "libcst.codemod.visitors._gather_exports.GatherExportsVisitor",
    "libcst.metadata.expression_context_provider.ExpressionContextVisitor"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Call": [
    "libcst.codemod.visitors._gather_string_annotation_names.GatherNamesFromStringAnnotationsVisitor",
    "libcst.metadata.scope_provider.ScopeVisitor",
    "libcst.metadata.type_inference_provider.TypeInferenceProvider"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ClassDef": [
    "libcst.codemod.visitors._apply_type_annotations.ApplyTypeAnnotationsVisitor",
    "libcst.codemod.visitors._apply_type_annotations.ImportedSymbolCollector",
    "libcst.codemod.visitors._apply_type_annotations.TypeCollector",
    "libcst.codemod.visitors._gather_global_names.GatherGlobalNamesVisitor",
    "libcst.metadata.expression_context_provider.ExpressionContextVisitor",
    "libcst.metadata.scope_provider.ScopeVisitor"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ClassDef_bases": [
    "libcst.metadata.scope_provider.ScopeVisitor"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Comment": [
    "libcst.codemod.commands.add_pyre_directive.AddPyreDirectiveCommand"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_CompFor": [
    "libcst.metadata.expression_context_provider.ExpressionContextVisitor"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ConcatenatedString": [
    "libcst.codemod.visitors._gather_exports.GatherExportsVisitor",
    "libcst.codemod.visitors._gather_string_annotation_names.GatherNamesFromStringAnnotationsVisitor",
    "libcst.metadata.scope_provider.ScopeVisitor"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Del": [
    "libcst.metadata.expression_context_provider.ExpressionContextVisitor"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_DictComp": [
    "libcst.metadata.scope_provider.ScopeVisitor"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_EmptyLine": [
    "libcst.codemod.visitors._gather_comments.GatherCommentsVisitor"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_For": [
    "libcst.metadata.expression_context_provider.ExpressionContextVisitor",
    "libcst.metadata.scope_provider.ScopeVisitor"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_FunctionDef": [
    "libcst.codemod.visitors._apply_type_annotations.ApplyTypeAnnotationsVisitor",
    "libcst.codemod.visitors._apply_type_annotations.TypeCollector",
    "libcst.codemod.visitors._gather_global_names.GatherGlobalNamesVisitor",
    "libcst.metadata.expression_context_provider.ExpressionContextVisitor",
    "libcst.metadata.scope_provider.ScopeVisitor"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_FunctionDef_body": [
    "libcst.codemod.commands.convert_type_comments.ConvertTypeComments"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_GeneratorExp": [
    "libcst.metadata.scope_provider.ScopeVisitor"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Global": [
    "libcst.metadata.scope_provider.ScopeVisitor"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Import": [
    "libcst.codemod.commands.remove_unused_imports.RemoveUnusedImportsCommand",
    "libcst.codemod.commands.rename.RenameCommand",
    "libcst.codemod.visitors._gather_imports.GatherImportsVisitor",
    "libcst.codemod.visitors._gather_unused_imports.GatherUnusedImportsVisitor",
    "libcst.metadata.scope_provider.ScopeVisitor"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ImportFrom": [
    "libcst.codemod.commands.remove_unused_imports.RemoveUnusedImportsCommand",
    "libcst.codemod.commands.rename.RenameCommand",
    "libcst.codemod.visitors._gather_imports.GatherImportsVisitor",
    "libcst.codemod.visitors._gather_unused_imports.GatherUnusedImportsVisitor",
    "libcst.metadata.scope_provider.ScopeVisitor"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Lambda": [
    "libcst.codemod.commands.convert_type_comments.ConvertTypeComments",
    "libcst.metadata.scope_provider.ScopeVisitor"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_List": [
    "libcst.codemod.visitors._gather_exports.GatherExportsVisitor",
    "libcst.metadata.expression_context_provider.ExpressionContextVisitor"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ListComp": [
    "libcst.metadata.scope_provider.ScopeVisitor"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Module": [
    "libcst.codemod.commands.remove_unused_imports.RemoveUnusedImportsCommand",
    "libcst.codemod.visitors._add_imports.AddImportsVisitor",
    "libcst.codemod.visitors._gather_unused_imports.GatherUnusedImportsVisitor",
    "libcst.codemod.visitors._remove_imports.RemoveImportsVisitor",
    "libcst.metadata.expression_context_provider.ExpressionContextProvider",
    "libcst.metadata.file_path_provider.FilePathProvider",
    "libcst.metadata.name_provider.FullyQualifiedNameProvider",
    "libcst.metadata.name_provider.QualifiedNameProvider",
    "libcst.metadata.parent_node_provider.ParentNodeProvider",
    "libcst.metadata.scope_provider.ScopeProvider"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Module_header": [
    "libcst.codemod.commands.fix_pyre_directives.FixPyreDirectivesCommand"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Name": [
    "libcst.codemod.visitors._apply_type_annotations.ImportedSymbolCollector",
    "libcst.codemod.visitors._remove_imports.RemovedNodeVisitor",
    "libcst.helpers._template.TemplateChecker",
    "libcst.metadata.expression_context_provider.ExpressionContextVisitor",
    "libcst.metadata.scope_provider.ScopeVisitor",
    "libcst.metadata.type_inference_provider.TypeInferenceProvider"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_NamedExpr": [
    "libcst.metadata.expression_context_provider.ExpressionContextVisitor"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Nonlocal": [
    "libcst.metadata.scope_provider.ScopeVisitor"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Param": [
    "libcst.metadata.expression_context_provider.ExpressionContextVisitor",
    "libcst.metadata.scope_provider.ScopeVisitor"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ParamSpec": [
    "libcst.metadata.scope_provider.ScopeVisitor"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Set": [
    "libcst.codemod.visitors._gather_exports.GatherExportsVisitor"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_SetComp": [
    "libcst.metadata.scope_provider.ScopeVisitor"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_SimpleString": [
    "libcst.codemod.commands.convert_format_to_fstring.StringQuoteGatherer",
    "libcst.codemod.visitors._gather_exports.GatherExportsVisitor",
    "libcst.codemod.visitors._gather_string_annotation_names.GatherNamesFromStringAnnotationsVisitor",
    "libcst.metadata.scope_provider.ScopeVisitor"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_StarredElement": [
    "libcst.metadata.expression_context_provider.ExpressionContextVisitor"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Subscript": [
    "libcst.codegen.gen_matcher_classes.AddWildcardsToSequenceUnions",
    "libcst.codemod.visitors._apply_type_annotations.ImportedSymbolCollector",
    "libcst.codemod.visitors._apply_type_annotations._TypeCollectorDequalifier",
    "libcst.metadata.expression_context_provider.ExpressionContextVisitor",
    "libcst.metadata.scope_provider.ScopeVisitor"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_TrailingWhitespace": [
    "libcst.codemod.visitors._gather_comments.GatherCommentsVisitor"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Tuple": [
    "libcst.codemod.visitors._gather_exports.GatherExportsVisitor",
    "libcst.metadata.expression_context_provider.ExpressionContextVisitor"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_TypeAlias": [
    "libcst.metadata.scope_provider.ScopeVisitor"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_TypeVar": [
    "libcst.metadata.scope_provider.ScopeVisitor"
  ],
  "libcst._typed_visitor.CSTTypedBaseFunctions.visit_TypeVarTuple": [
    "libcst.metadata.scope_provider.ScopeVisitor"
  ],
  "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Annotation": [
    "libcst.helpers._template.TemplateTransformer"
  ],
  "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Arg": [
    "libcst.helpers._template.TemplateTransformer"
  ],
  "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Assign": [
    "libcst.codemod.visitors._apply_type_annotations.ApplyTypeAnnotationsVisitor"
  ],
  "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_AssignTarget": [
    "libcst.helpers._template.TemplateTransformer"
  ],
  "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Attribute": [
    "libcst.codegen.gen_matcher_classes.CleanseFullTypeNames",
    "libcst.codemod.commands.rename.RenameCommand",
    "libcst.codemod.visitors._apply_type_annotations._TypeCollectorDequalifier"
  ],
  "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_BinaryOperation": [
    "libcst.codemod.commands.convert_percent_format_to_fstring.ConvertPercentFormatStringCommand"
  ],
  "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Call": [
    "libcst.codegen.gen_matcher_classes.CleanseFullTypeNames",
    "libcst.codemod.commands.add_trailing_commas.AddTrailingCommas",
    "libcst.codemod.commands.convert_format_to_fstring.ConvertFormatStringCommand"
  ],
  "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_ClassDef": [
    "libcst.codemod.commands.convert_namedtuple_to_dataclass.ConvertNamedTupleToDataclassCommand",
    "libcst.codemod.visitors._apply_type_annotations.ApplyTypeAnnotationsVisitor"
  ],
  "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Decorator": [
    "libcst.helpers._template.TemplateTransformer"
  ],
  "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_EmptyLine": [
    "libcst.codemod.commands.convert_type_comments.ConvertTypeComments",
    "libcst.codemod.commands.fix_pyre_directives.FixPyreDirectivesCommand",
    "libcst.codemod.commands.remove_pyre_directive.RemovePyreDirectiveCommand"
  ],
  "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Expr": [
    "libcst.helpers._template.TemplateTransformer"
  ],
  "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_For": [
    "libcst.codemod.commands.convert_type_comments.ConvertTypeComments"
  ],
  "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_FunctionDef": [
    "libcst.codemod.commands.convert_type_comments.ConvertTypeComments",
    "libcst.codemod.visitors._apply_type_annotations.ApplyTypeAnnotationsVisitor"
  ],
  "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Import": [
    "libcst.codemod.commands.rename.RenameCommand",
    "libcst.codemod.visitors._remove_imports.RemoveImportsVisitor"
  ],
  "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_ImportFrom": [
    "libcst.codemod.commands.rename.RenameCommand",
    "libcst.codemod.visitors._add_imports.AddImportsVisitor",
    "libcst.codemod.visitors._apply_type_annotations.ApplyTypeAnnotationsVisitor",
    "libcst.codemod.visitors._remove_imports.RemoveImportsVisitor"
  ],
  "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_IndentedBlock": [
    "libcst.codemod.commands.convert_type_comments.ConvertTypeComments",
    "libcst.helpers._template.TemplateTransformer"
  ],
  "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Index": [
    "libcst.codemod.visitors._apply_type_annotations._TypeCollectorDequalifier",
    "libcst.helpers._template.TemplateTransformer"
  ],
  "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Module": [
    "libcst.codemod.commands.add_pyre_directive.AddPyreDirectiveCommand",
    "libcst.codemod.commands.fix_pyre_directives.FixPyreDirectivesCommand",
    "libcst.codemod.commands.rename.RenameCommand",
    "libcst.codemod.visitors._add_imports.AddImportsVisitor",
    "libcst.codemod.visitors._apply_type_annotations.ApplyTypeAnnotationsVisitor"
  ],
  "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Name": [
    "libcst.codegen.gen_matcher_classes.CleanseFullTypeNames",
    "libcst.codemod.commands.rename.RenameCommand",
    "libcst.codemod.visitors._apply_type_annotations._TypeCollectorDequalifier",
    "libcst.helpers._template.TemplateTransformer"
  ],
  "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Param": [
    "libcst.codemod.commands.convert_type_comments.ConvertTypeComments",
    "libcst.helpers._template.TemplateTransformer"
  ],
  "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Parameters": [
    "libcst.codemod.commands.add_trailing_commas.AddTrailingCommas",
    "libcst.helpers._template.TemplateTransformer"
  ],
  "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_ParenthesizedWhitespace": [
    "libcst.codemod.commands.convert_format_to_fstring.StripNewlinesTransformer"
  ],
  "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_SimpleStatementLine": [
    "libcst.codemod.commands.convert_type_comments.ConvertTypeComments",
    "libcst.helpers._template.TemplateTransformer"
  ],
  "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_SimpleStatementSuite": [
    "libcst.helpers._template.TemplateTransformer"
  ],
  "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_SimpleString": [
    "libcst.codegen.gen_matcher_classes.MatcherClassToLibCSTClass",
    "libcst.codegen.transforms.DoubleQuoteForwardRefsTransformer",
    "libcst.codemod.commands.convert_format_to_fstring.SwitchStringQuotesTransformer",
    "libcst.codemod.commands.convert_percent_format_to_fstring.EscapeStringQuote",
    "libcst.codemod.commands.strip_strings_from_types.StripStringsCommand"
  ],
  "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Subscript": [
    "libcst.codegen.gen_matcher_classes.AddLogicMatchersToUnions",
    "libcst.codegen.gen_matcher_classes.AddWildcardsToSequenceUnions",
    "libcst.codemod.visitors._apply_type_annotations._TypeCollectorDequalifier"
  ],
  "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_SubscriptElement": [
    "libcst.codegen.gen_matcher_classes.CleanseFullTypeNames",
    "libcst.codegen.gen_matcher_classes.RemoveTypesFromGeneric",
    "libcst.helpers._template.TemplateTransformer"
  ],
  "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_TrailingWhitespace": [
    "libcst.codemod.commands.convert_type_comments.ConvertTypeComments"
  ],
  "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_With": [
    "libcst.codemod.commands.convert_type_comments.ConvertTypeComments"
  ],
  "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_AnnAssign": [
    "libcst.codemod.visitors._apply_type_annotations.TypeCollector"
  ],
  "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Annotation": [
    "libcst.codemod.visitors._apply_type_annotations.ImportedSymbolCollector",
    "libcst.codemod.visitors._gather_string_annotation_names.GatherNamesFromStringAnnotationsVisitor",
    "libcst.metadata.scope_provider.ScopeVisitor"
  ],
  "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Assign": [
    "libcst.codemod.visitors._apply_type_annotations.TypeCollector"
  ],
  "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Call": [
    "libcst.codemod.visitors._gather_string_annotation_names.GatherNamesFromStringAnnotationsVisitor",
    "libcst.metadata.scope_provider.ScopeVisitor"
  ],
  "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_ClassDef": [
    "libcst.codemod.visitors._apply_type_annotations.TypeCollector",
    "libcst.codemod.visitors._gather_global_names.GatherGlobalNamesVisitor"
  ],
  "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_FunctionDef": [
    "libcst.codemod.visitors._apply_type_annotations.TypeCollector",
    "libcst.codemod.visitors._gather_global_names.GatherGlobalNamesVisitor"
  ],
  "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_List": [
    "libcst.codemod.visitors._gather_exports.GatherExportsVisitor"
  ],
  "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Module": [
    "libcst.codemod.visitors._add_imports._GatherTopImportsBeforeStatements",
    "libcst.codemod.visitors._apply_type_annotations.TypeCollector",
    "libcst.codemod.visitors._gather_unused_imports.GatherUnusedImportsVisitor"
  ],
  "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Set": [
    "libcst.codemod.visitors._gather_exports.GatherExportsVisitor"
  ],
  "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Subscript": [
    "libcst.metadata.scope_provider.ScopeVisitor"
  ],
  "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Tuple": [
    "libcst.codemod.visitors._gather_exports.GatherExportsVisitor"
  ],
  "libcst._visitors.CSTTransformer.on_leave": [
    "libcst._nodes.base._ChildReplacementTransformer",
    "libcst._nodes.base._ChildWithChangesTransformer",
    "libcst.matchers._matcher_base._ReplaceTransformer",
    "libcst.matchers._visitors.MatcherDecoratableTransformer"
  ],
  "libcst._visitors.CSTTransformer.on_leave_attribute": [
    "libcst.matchers._visitors.MatcherDecoratableTransformer"
  ],
  "libcst._visitors.CSTTransformer.on_visit": [
    "libcst._nodes.base._ChildReplacementTransformer",
    "libcst._nodes.base._ChildWithChangesTransformer",
    "libcst.matchers._visitors.MatcherDecoratableTransformer"
  ],
  "libcst._visitors.CSTTransformer.on_visit_attribute": [
    "libcst.matchers._visitors.MatcherDecoratableTransformer"
  ],
  "libcst._visitors.CSTVisitor.on_leave": [
    "libcst._batched_visitor._BatchedCSTVisitor",
    "libcst.matchers._visitors.MatcherDecoratableVisitor",
    "libcst.metadata.parent_node_provider.ParentNodeVisitor",
    "libcst.metadata.scope_provider.ScopeVisitor"
  ],
  "libcst._visitors.CSTVisitor.on_leave_attribute": [
    "libcst._batched_visitor._BatchedCSTVisitor",
    "libcst.matchers._visitors.MatcherDecoratableVisitor"
  ],
  "libcst._visitors.CSTVisitor.on_visit": [
    "libcst._batched_visitor._BatchedCSTVisitor",
    "libcst._nodes.base._ChildrenCollectionVisitor",
    "libcst.matchers._matcher_base._FindAllVisitor",
    "libcst.matchers._visitors.MatcherDecoratableVisitor",
    "libcst.metadata.accessor_provider.AccessorProvider",
    "libcst.metadata.name_provider.FullyQualifiedNameVisitor",
    "libcst.metadata.name_provider.QualifiedNameVisitor"
  ],
  "libcst._visitors.CSTVisitor.on_visit_attribute": [
    "libcst._batched_visitor._BatchedCSTVisitor",
    "libcst.matchers._visitors.MatcherDecoratableVisitor"
  ],
  "libcst.codemod._codemod.Codemod.__init__": [
    "libcst.codemod._visitor.ContextAwareTransformer"
  ],
  "libcst.codemod._codemod.Codemod.transform_module": [
    "libcst.codemod._command.CodemodCommand"
  ],
  "libcst.codemod._codemod.Codemod.transform_module_impl": [
    "libcst.codemod._command.CodemodCommand",
    "libcst.codemod._visitor.ContextAwareTransformer"
  ],
  "libcst.codemod._command.CodemodCommand.add_args": [
    "libcst.codemod.commands.add_trailing_commas.AddTrailingCommas",
    "libcst.codemod.commands.convert_format_to_fstring.ConvertFormatStringCommand",
    "libcst.codemod.commands.convert_type_comments.ConvertTypeComments",
    "libcst.codemod.commands.ensure_import_present.EnsureImportPresentCommand",
    "libcst.codemod.commands.rename.RenameCommand"
  ],
  "libcst.codemod._command.CodemodCommand.transform_module_impl": [
    "libcst.codemod._command.MagicArgsCodemodCommand",
    "libcst.codemod.commands.noop.NOOPCommand"
  ],
  "libcst.codemod._command.MagicArgsCodemodCommand.get_transforms": [
    "libcst.codemod.commands.ensure_import_present.EnsureImportPresentCommand"
  ],
  "libcst.codemod._visitor.ContextAwareTransformer.__init__": [
    "libcst.codemod.commands.convert_format_to_fstring.SwitchStringQuotesTransformer",
    "libcst.codemod.visitors._add_imports.AddImportsVisitor",
    "libcst.codemod.visitors._apply_type_annotations.ApplyTypeAnnotationsVisitor",
    "libcst.codemod.visitors._remove_imports.RemoveImportsVisitor"
  ],
  "libcst.codemod._visitor.ContextAwareTransformer.transform_module_impl": [
    "libcst.codemod.visitors._apply_type_annotations.ApplyTypeAnnotationsVisitor"
  ],
  "libcst.codemod._visitor.ContextAwareVisitor.__init__": [
    "libcst.codemod.commands.convert_format_to_fstring.StringQuoteGatherer",
    "libcst.codemod.visitors._gather_comments.GatherCommentsVisitor",
    "libcst.codemod.visitors._gather_exports.GatherExportsVisitor",
    "libcst.codemod.visitors._gather_global_names.GatherGlobalNamesVisitor",
    "libcst.codemod.visitors._gather_imports._GatherImportsMixin",
    "libcst.codemod.visitors._gather_string_annotation_names.GatherNamesFromStringAnnotationsVisitor",
    "libcst.codemod.visitors._gather_unused_imports.GatherUnusedImportsVisitor"
  ],
  "libcst.codemod.visitors._gather_imports._GatherImportsMixin.__init__": [
    "libcst.codemod.visitors._add_imports._GatherTopImportsBeforeStatements",
    "libcst.codemod.visitors._gather_imports.GatherImportsVisitor"
  ],
  "libcst.matchers._matcher_base.BaseMatcherNode.__and__": [
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.OneOf",
    "libcst.matchers._matcher_base.TypeOf"
  ],
  "libcst.matchers._matcher_base.BaseMatcherNode.__invert__": [
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.OneOf",
    "libcst.matchers._matcher_base.TypeOf"
  ],
  "libcst.matchers._matcher_base.BaseMatcherNode.__or__": [
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.OneOf",
    "libcst.matchers._matcher_base.TypeOf"
  ],
  "libcst.matchers._visitors.MatcherDecoratableVisitor.__init__": [
    "libcst.codemod._visitor.ContextAwareVisitor",
    "libcst.codemod.visitors._apply_type_annotations.ImportedSymbolCollector",
    "libcst.codemod.visitors._apply_type_annotations.TypeCollector"
  ],
  "libcst.metadata.base_provider.BaseMetadataProvider._gen_impl": [
    "libcst.metadata.base_provider.BatchableMetadataProvider",
    "libcst.metadata.base_provider.VisitorMetadataProvider",
    "libcst.metadata.position_provider.PositionProvider",
    "libcst.metadata.position_provider.WhitespaceInclusivePositionProvider",
    "libcst.metadata.reentrant_codegen.ExperimentalReentrantCodegenProvider",
    "libcst.metadata.span_provider.ByteSpanPositionProvider"
  ],
  "libcst.metadata.base_provider.BaseMetadataProvider.gen_cache": [
    "libcst.metadata.file_path_provider.FilePathProvider",
    "libcst.metadata.name_provider.FullyQualifiedNameProvider",
    "libcst.metadata.type_inference_provider.TypeInferenceProvider"
  ],
  "libcst.metadata.scope_provider.Assignment.__init__": [
    "libcst.metadata.scope_provider.ImportAssignment"
  ],
  "libcst.metadata.scope_provider.Assignment.get_qualified_names_for": [
    "libcst.metadata.scope_provider.ImportAssignment"
  ],
  "libcst.metadata.scope_provider.BaseAssignment.__init__": [
    "libcst.metadata.scope_provider.Assignment"
  ],
  "libcst.metadata.scope_provider.BaseAssignment._index": [
    "libcst.metadata.scope_provider.Assignment"
  ],
  "libcst.metadata.scope_provider.BaseAssignment.get_qualified_names_for": [
    "libcst.metadata.scope_provider.Assignment",
    "libcst.metadata.scope_provider.BuiltinAssignment"
  ],
  "libcst.metadata.scope_provider.LocalScope._make_name_prefix": [
    "libcst.metadata.scope_provider.AnnotationScope",
    "libcst.metadata.scope_provider.ClassScope",
    "libcst.metadata.scope_provider.ComprehensionScope"
  ],
  "libcst.metadata.scope_provider.Scope.__contains__": [
    "libcst.metadata.scope_provider.BuiltinScope",
    "libcst.metadata.scope_provider.GlobalScope",
    "libcst.metadata.scope_provider.LocalScope"
  ],
  "libcst.metadata.scope_provider.Scope.__init__": [
    "libcst.metadata.scope_provider.BuiltinScope",
    "libcst.metadata.scope_provider.GlobalScope",
    "libcst.metadata.scope_provider.LocalScope"
  ],
  "libcst.metadata.scope_provider.Scope._find_assignment_target": [
    "libcst.metadata.scope_provider.BuiltinScope",
    "libcst.metadata.scope_provider.LocalScope"
  ],
  "libcst.metadata.scope_provider.Scope._is_visible_from_children": [
    "libcst.metadata.scope_provider.ClassScope"
  ],
  "libcst.metadata.scope_provider.Scope._resolve_scope_for_access": [
    "libcst.metadata.scope_provider.BuiltinScope",
    "libcst.metadata.scope_provider.GlobalScope",
    "libcst.metadata.scope_provider.LocalScope"
  ],
  "libcst.metadata.scope_provider.Scope.record_global_overwrite": [
    "libcst.metadata.scope_provider.BuiltinScope",
    "libcst.metadata.scope_provider.GlobalScope",
    "libcst.metadata.scope_provider.LocalScope"
  ],
  "libcst.metadata.scope_provider.Scope.record_nonlocal_overwrite": [
    "libcst.metadata.scope_provider.BuiltinScope",
    "libcst.metadata.scope_provider.GlobalScope",
    "libcst.metadata.scope_provider.LocalScope"
  ],
  "libcst.tool._SerializerBase.__init__": [
    "libcst.tool._ListSerializer"
  ],
  "libcst.tool._SerializerBase._serialize_impl": [
    "libcst.tool._ListSerializer",
    "libcst.tool._StrSerializer"
  ],
  "list.__add__": [
    "typeshed.typeshed.stubs.openpyxl.openpyxl.cell.rich_text.CellRichText",
    "typeshed.typeshed.stubs.pyinstaller.PyInstaller.building.datastruct.TOC"
  ],
  "list.__contains__": [
    "django.test.utils.ContextList",
    "mock.mock._CallList",
    "openpyxl.utils.indexed_list.IndexedList",
    "polib._BaseFile",
    "psycopg2.extras.DictRow",
    "typeshed.typeshed.stdlib.unittest.mock._CallList",
    "typeshed.typeshed.stubs.mock.mock.mock._CallList",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.utils.indexed_list.IndexedList",
    "typeshed.typeshed.stubs.polib.polib._BaseFile",
    "typeshed.typeshed.stubs.psycopg2.psycopg2.extras.DictRow",
    "unittest.mock._CallList",
    "werkzeug.datastructures.accept.Accept"
  ],
  "list.__delitem__": [
    "sqlalchemy.ext.mutable.MutableList",
    "sqlalchemy.ext.orderinglist.OrderingList",
    "werkzeug.datastructures.mixins.ImmutableListMixin"
  ],
  "list.__getitem__": [
    "django.test.utils.ContextList",
    "openpyxl.styles.named_styles.NamedStyleList",
    "pip._vendor.distlib.compat.ConvertingList",
    "psycopg2.extras.DictRow",
    "typeshed.typeshed.stdlib.logging.config.ConvertingList",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.styles.named_styles.NamedStyleList",
    "typeshed.typeshed.stubs.psycopg2.psycopg2.extras.DictRow",
    "werkzeug.datastructures.accept.Accept"
  ],
  "list.__hash__": [
    "pip._vendor.typing_extensions.ParamSpec",
    "pip._vendor.typing_extensions._ConcatenateGenericAlias",
    "werkzeug.datastructures.mixins.ImmutableListMixin"
  ],
  "list.__iadd__": [
    "sqlalchemy.ext.mutable.MutableList",
    "typeshed.typeshed.stubs.pyinstaller.PyInstaller.building.datastruct.TOC",
    "werkzeug.datastructures.mixins.ImmutableListMixin"
  ],
  "list.__imul__": [
    "werkzeug.datastructures.mixins.ImmutableListMixin"
  ],
  "list.__init__": [
    "PyInstaller.building.datastruct.TOC",
    "boto.s3.lifecycle.Transitions",
    "bs4.element.ResultSet",
    "crontab.CronSlices",
    "crontabs.AnaCronTab",
    "crontabs.CronTabs",
    "crontabs.SystemTab",
    "crontabs.UserSpool",
    "django.contrib.admin.templatetags.admin_list.ResultList",
    "django.contrib.gis.gdal.raster.band.BandList",
    "django.contrib.gis.gdal.raster.source.TransformPoint",
    "email._header_value_parser.TokenList",
    "invoke.parser.parser.ParseResult",
    "openpyxl.utils.indexed_list.IndexedList",
    "pip._vendor.typing_extensions.ParamSpec",
    "pip._vendor.typing_extensions._ConcatenateGenericAlias",
    "polib._BaseFile",
    "psycopg2.extras.DictRow",
    "sqlalchemy.ext.orderinglist.OrderingList",
    "typeshed.typeshed.stdlib.email._header_value_parser.TokenList",
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.element.ResultSet",
    "typeshed.typeshed.stubs.boltons.boltons.listutils.BarrelList",
    "typeshed.typeshed.stubs.boto.boto.s3.lifecycle.Transitions",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.cell.rich_text.CellRichText",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.utils.indexed_list.IndexedList",
    "typeshed.typeshed.stubs.paramiko.paramiko.auth_strategy.AuthResult",
    "typeshed.typeshed.stubs.polib.polib._BaseFile",
    "typeshed.typeshed.stubs.psycopg2.psycopg2.extras.DictRow",
    "typeshed.typeshed.stubs.pyinstaller.PyInstaller.building.datastruct.TOC",
    "typeshed.typeshed.stubs.python-crontab.crontab.CronSlices",
    "typeshed.typeshed.stubs.python-crontab.crontabs.AnaCronTab",
    "typeshed.typeshed.stubs.python-crontab.crontabs.CronTabs",
    "typeshed.typeshed.stubs.python-crontab.crontabs.SystemTab",
    "typeshed.typeshed.stubs.python-crontab.crontabs.UserSpool"
  ],
  "list.__setitem__": [
    "prompt_toolkit.layout.utils._ExplodedList",
    "psycopg2.extras.DictRow",
    "sqlalchemy.ext.mutable.MutableList",
    "sqlalchemy.ext.orderinglist.OrderingList",
    "typeshed.typeshed.stubs.psycopg2.psycopg2.extras.DictRow",
    "typeshed.typeshed.stubs.pyinstaller.PyInstaller.building.datastruct.TOC",
    "werkzeug.datastructures.mixins.ImmutableListMixin"
  ],
  "list.append": [
    "PyInstaller.building.datastruct.TOC",
    "html5lib.treebuilders.base.ActiveFormattingElements",
    "openpyxl.styles.named_styles.NamedStyleList",
    "openpyxl.utils.indexed_list.IndexedList",
    "polib._BaseFile",
    "prompt_toolkit.layout.utils._ExplodedList",
    "sqlalchemy.ext.mutable.MutableList",
    "sqlalchemy.ext.orderinglist.OrderingList",
    "typeshed.typeshed.stubs.boltons.boltons.listutils.BarrelList",
    "typeshed.typeshed.stubs.html5lib.html5lib.treebuilders.base.ActiveFormattingElements",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.cell.rich_text.CellRichText",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.styles.named_styles.NamedStyleList",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.utils.indexed_list.IndexedList",
    "typeshed.typeshed.stubs.polib.polib._BaseFile",
    "typeshed.typeshed.stubs.pyinstaller.PyInstaller.building.datastruct.TOC",
    "werkzeug.datastructures.mixins.ImmutableListMixin"
  ],
  "list.copy": [
    "psycopg2.extras.DictRow",
    "typeshed.typeshed.stubs.psycopg2.psycopg2.extras.DictRow"
  ],
  "list.count": [
    "typeshed.typeshed.stubs.boltons.boltons.listutils.BarrelList"
  ],
  "list.extend": [
    "PyInstaller.building.datastruct.TOC",
    "prompt_toolkit.layout.utils._ExplodedList",
    "sqlalchemy.ext.mutable.MutableList",
    "typeshed.typeshed.stubs.boltons.boltons.listutils.BarrelList",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.cell.rich_text.CellRichText",
    "typeshed.typeshed.stubs.pyinstaller.PyInstaller.building.datastruct.TOC",
    "werkzeug.datastructures.mixins.ImmutableListMixin"
  ],
  "list.index": [
    "openpyxl.utils.indexed_list.IndexedList",
    "typeshed.typeshed.stubs.boltons.boltons.listutils.BarrelList",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.utils.indexed_list.IndexedList",
    "werkzeug.datastructures.accept.Accept"
  ],
  "list.insert": [
    "PyInstaller.building.datastruct.TOC",
    "polib._BaseFile",
    "prompt_toolkit.layout.utils._ExplodedList",
    "sqlalchemy.ext.mutable.MutableList",
    "sqlalchemy.ext.orderinglist.OrderingList",
    "typeshed.typeshed.stubs.boltons.boltons.listutils.BarrelList",
    "typeshed.typeshed.stubs.polib.polib._BaseFile",
    "typeshed.typeshed.stubs.pyinstaller.PyInstaller.building.datastruct.TOC",
    "werkzeug.datastructures.mixins.ImmutableListMixin"
  ],
  "list.pop": [
    "pip._vendor.distlib.compat.ConvertingList",
    "sqlalchemy.ext.mutable.MutableList",
    "sqlalchemy.ext.orderinglist.OrderingList",
    "typeshed.typeshed.stdlib.logging.config.ConvertingList",
    "typeshed.typeshed.stubs.boltons.boltons.listutils.BarrelList",
    "werkzeug.datastructures.mixins.ImmutableListMixin"
  ],
  "list.remove": [
    "sqlalchemy.ext.mutable.MutableList",
    "sqlalchemy.ext.orderinglist.OrderingList",
    "werkzeug.datastructures.mixins.ImmutableListMixin"
  ],
  "list.sort": [
    "IPython.utils.text.SList",
    "sqlalchemy.ext.mutable.MutableList",
    "typeshed.typeshed.stubs.boltons.boltons.listutils.BarrelList",
    "werkzeug.datastructures.mixins.ImmutableListMixin"
  ],
  "logging.FileHandler.__init__": [
    "logging.handlers.BaseRotatingHandler",
    "logging.handlers.WatchedFileHandler",
    "typeshed.typeshed.stdlib.logging.handlers.BaseRotatingHandler",
    "typeshed.typeshed.stdlib.logging.handlers.WatchedFileHandler"
  ],
  "logging.FileHandler._open": [
    "pip._internal.utils.logging.BetterRotatingFileHandler"
  ],
  "logging.Filter.__init__": [
    "django.utils.log.CallbackFilter",
    "pip._internal.utils.logging.MaxLevelFilter"
  ],
  "logging.Filter.filter": [
    "django.utils.log.CallbackFilter",
    "django.utils.log.RequireDebugFalse",
    "django.utils.log.RequireDebugTrue",
    "pip._internal.utils.logging.ExcludeLoggerFilter",
    "pip._internal.utils.logging.MaxLevelFilter"
  ],
  "logging.Formatter.__init__": [
    "django.utils.log.ServerFormatter",
    "exifread.exif_log.Formatter",
    "pip._internal.utils.logging.IndentingFormatter",
    "typeshed.typeshed.stubs.ExifRead.exifread.exif_log.Formatter"
  ],
  "logging.Formatter.format": [
    "pip._internal.utils.logging.IndentingFormatter",
    "traitlets.config.application.LevelFormatter"
  ],
  "logging.Handler.__init__": [
    "django.utils.log.AdminEmailHandler",
    "influxdb_client.client.logging_handler.InfluxLoggingHandler",
    "logging.StreamHandler",
    "logging.handlers.BufferingHandler",
    "logging.handlers.HTTPHandler",
    "logging.handlers.NTEventLogHandler",
    "logging.handlers.QueueHandler",
    "logging.handlers.SMTPHandler",
    "logging.handlers.SocketHandler",
    "logging.handlers.SysLogHandler",
    "pip._vendor.rich.logging.RichHandler",
    "typeshed.typeshed.stdlib.logging.handlers.BufferingHandler",
    "typeshed.typeshed.stdlib.logging.handlers.HTTPHandler",
    "typeshed.typeshed.stdlib.logging.handlers.NTEventLogHandler",
    "typeshed.typeshed.stdlib.logging.handlers.QueueHandler",
    "typeshed.typeshed.stdlib.logging.handlers.SMTPHandler",
    "typeshed.typeshed.stdlib.logging.handlers.SocketHandler",
    "typeshed.typeshed.stdlib.logging.handlers.SysLogHandler",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.client.logging_handler.InfluxLoggingHandler"
  ],
  "logging.Handler.close": [
    "influxdb_client.client.logging_handler.InfluxLoggingHandler",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.client.logging_handler.InfluxLoggingHandler"
  ],
  "logging.Handler.createLock": [
    "pip._vendor.distlib.NullHandler"
  ],
  "logging.Handler.emit": [
    "boto.NullHandler",
    "influxdb_client.client.logging_handler.InfluxLoggingHandler",
    "peewee.NullHandler",
    "pip._vendor.distlib.NullHandler",
    "pip._vendor.rich.logging.RichHandler",
    "typeshed.typeshed.stubs.boto.boto.NullHandler",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.client.logging_handler.InfluxLoggingHandler",
    "typeshed.typeshed.stubs.peewee.peewee.NullHandler",
    "urllib3.NullHandler"
  ],
  "logging.Handler.handle": [
    "pip._vendor.distlib.NullHandler"
  ],
  "logging.Handler.handleError": [
    "pip._internal.utils.logging.RichPipStreamHandler"
  ],
  "logging.Logger.__init__": [
    "logging.RootLogger"
  ],
  "logging.StreamHandler.__init__": [
    "exifread.exif_log.Handler",
    "logging.FileHandler",
    "typeshed.typeshed.stubs.ExifRead.exifread.exif_log.Handler",
    "werkzeug._internal._ColorStreamHandler"
  ],
  "logging.handlers.BaseRotatingHandler.__init__": [
    "logging.handlers.RotatingFileHandler",
    "logging.handlers.TimedRotatingFileHandler"
  ],
  "logging.handlers.BufferingHandler.__init__": [
    "logging.handlers.MemoryHandler"
  ],
  "logging.handlers.SMTPHandler.__init__": [
    "boto.utils.AuthSMTPHandler",
    "typeshed.typeshed.stubs.boto.boto.utils.AuthSMTPHandler"
  ],
  "logging.handlers.SocketHandler.makeSocket": [
    "logging.handlers.DatagramHandler"
  ],
  "mailbox.Mailbox.__contains__": [
    "mailbox.MH",
    "mailbox.Maildir",
    "mailbox._singlefileMailbox"
  ],
  "mailbox.Mailbox.__init__": [
    "mailbox.MH",
    "mailbox.Maildir"
  ],
  "mailbox.Mailbox.__len__": [
    "mailbox.MH",
    "mailbox.Maildir",
    "mailbox._singlefileMailbox"
  ],
  "mailbox.Mailbox.__setitem__": [
    "mailbox.MH",
    "mailbox.Maildir",
    "mailbox._singlefileMailbox"
  ],
  "mailbox.Mailbox.add": [
    "mailbox.MH",
    "mailbox.Maildir",
    "mailbox._singlefileMailbox"
  ],
  "mailbox.Mailbox.close": [
    "mailbox.MH",
    "mailbox.Maildir",
    "mailbox._singlefileMailbox"
  ],
  "mailbox.Mailbox.flush": [
    "mailbox.MH",
    "mailbox.Maildir",
    "mailbox._singlefileMailbox"
  ],
  "mailbox.Mailbox.get_bytes": [
    "mailbox.Babyl",
    "mailbox.MH",
    "mailbox.Maildir",
    "mailbox._mboxMMDF"
  ],
  "mailbox.Mailbox.get_file": [
    "mailbox.Babyl",
    "mailbox.MH",
    "mailbox.Maildir",
    "mailbox._mboxMMDF"
  ],
  "mailbox.Mailbox.get_message": [
    "mailbox.Babyl",
    "mailbox.MH",
    "mailbox.Maildir",
    "mailbox._mboxMMDF"
  ],
  "mailbox.Mailbox.get_string": [
    "mailbox._mboxMMDF"
  ],
  "mailbox.Mailbox.iterkeys": [
    "mailbox.MH",
    "mailbox.Maildir",
    "mailbox._singlefileMailbox"
  ],
  "mailbox.Mailbox.lock": [
    "mailbox.MH",
    "mailbox.Maildir",
    "mailbox._singlefileMailbox"
  ],
  "mailbox.Mailbox.remove": [
    "mailbox.MH",
    "mailbox.Maildir",
    "mailbox._singlefileMailbox"
  ],
  "mailbox.Mailbox.unlock": [
    "mailbox.MH",
    "mailbox.Maildir",
    "mailbox._singlefileMailbox"
  ],
  "mailbox._ProxyFile.__init__": [
    "mailbox._PartialFile"
  ],
  "mailbox._singlefileMailbox.flush": [
    "typeshed.typeshed.stubs.boltons.boltons.mboxutils.mbox_readonlydir"
  ],
  "mailbox.mbox.__init__": [
    "typeshed.typeshed.stubs.boltons.boltons.mboxutils.mbox_readonlydir"
  ],
  "markdown.blockprocessors.BlockProcessor.__init__": [
    "markdown.blockprocessors.ListIndentProcessor",
    "markdown.blockprocessors.OListProcessor",
    "markdown.extensions.tables.TableProcessor",
    "typeshed.typeshed.stubs.Markdown.markdown.extensions.admonition.AdmonitionProcessor",
    "typeshed.typeshed.stubs.Markdown.markdown.extensions.footnotes.FootnoteBlockProcessor",
    "typeshed.typeshed.stubs.Markdown.markdown.extensions.tables.TableProcessor"
  ],
  "markdown.blockprocessors.BlockProcessor.detab": [
    "typeshed.typeshed.stubs.Markdown.markdown.extensions.footnotes.FootnoteBlockProcessor"
  ],
  "markdown.blockprocessors.OListProcessor.__init__": [
    "markdown.blockprocessors.UListProcessor",
    "markdown.extensions.sane_lists.SaneOListProcessor",
    "typeshed.typeshed.stubs.Markdown.markdown.extensions.sane_lists.SaneOListProcessor"
  ],
  "markdown.blockprocessors.UListProcessor.__init__": [
    "markdown.extensions.sane_lists.SaneUListProcessor",
    "typeshed.typeshed.stubs.Markdown.markdown.extensions.sane_lists.SaneUListProcessor"
  ],
  "markdown.extensions.Extension.__init__": [
    "markdown.extensions.codehilite.CodeHiliteExtension",
    "markdown.extensions.extra.ExtraExtension",
    "markdown.extensions.footnotes.FootnoteExtension",
    "markdown.extensions.smarty.SmartyExtension",
    "markdown.extensions.toc.TocExtension",
    "markdown.extensions.wikilinks.WikiLinkExtension",
    "typeshed.typeshed.stubs.Markdown.markdown.extensions.codehilite.CodeHiliteExtension",
    "typeshed.typeshed.stubs.Markdown.markdown.extensions.extra.ExtraExtension",
    "typeshed.typeshed.stubs.Markdown.markdown.extensions.fenced_code.FencedCodeExtension",
    "typeshed.typeshed.stubs.Markdown.markdown.extensions.footnotes.FootnoteExtension",
    "typeshed.typeshed.stubs.Markdown.markdown.extensions.smarty.SmartyExtension",
    "typeshed.typeshed.stubs.Markdown.markdown.extensions.tables.TableExtension",
    "typeshed.typeshed.stubs.Markdown.markdown.extensions.toc.TocExtension",
    "typeshed.typeshed.stubs.Markdown.markdown.extensions.wikilinks.WikiLinkExtension"
  ],
  "markdown.inlinepatterns.InlineProcessor.__init__": [
    "markdown.extensions.abbr.AbbrInlineProcessor",
    "markdown.extensions.footnotes.FootnoteInlineProcessor",
    "markdown.extensions.wikilinks.WikiLinksInlineProcessor",
    "markdown.inlinepatterns.BacktickInlineProcessor",
    "markdown.inlinepatterns.SimpleTagInlineProcessor",
    "typeshed.typeshed.stubs.Markdown.markdown.extensions.abbr.AbbrInlineProcessor",
    "typeshed.typeshed.stubs.Markdown.markdown.extensions.footnotes.FootnoteInlineProcessor",
    "typeshed.typeshed.stubs.Markdown.markdown.extensions.wikilinks.WikiLinksInlineProcessor"
  ],
  "markdown.inlinepatterns.Pattern.__init__": [
    "markdown.inlinepatterns.InlineProcessor",
    "markdown.inlinepatterns.SimpleTagPattern"
  ],
  "markdown.inlinepatterns.Pattern.handleMatch": [
    "markdown.inlinepatterns.InlineProcessor"
  ],
  "markdown.treeprocessors.Treeprocessor.run": [
    "markdown.treeprocessors.InlineProcessor",
    "typeshed.typeshed.stubs.Markdown.markdown.extensions.attr_list.AttrListTreeprocessor",
    "typeshed.typeshed.stubs.Markdown.markdown.extensions.legacy_attrs.LegacyAttrs",
    "typeshed.typeshed.stubs.Markdown.markdown.extensions.toc.TocTreeprocessor"
  ],
  "marshmallow.base.FieldABC._deserialize": [
    "marshmallow.fields.Field"
  ],
  "marshmallow.base.FieldABC._serialize": [
    "marshmallow.fields.Field"
  ],
  "marshmallow.base.FieldABC.deserialize": [
    "marshmallow.fields.Field"
  ],
  "marshmallow.base.FieldABC.serialize": [
    "marshmallow.fields.Field"
  ],
  "marshmallow.base.SchemaABC.dump": [
    "marshmallow.schema.Schema"
  ],
  "marshmallow.base.SchemaABC.dumps": [
    "marshmallow.schema.Schema"
  ],
  "marshmallow.base.SchemaABC.load": [
    "marshmallow.schema.Schema"
  ],
  "marshmallow.base.SchemaABC.loads": [
    "marshmallow.schema.Schema"
  ],
  "marshmallow.fields.DateTime.__init__": [
    "marshmallow.fields.AwareDateTime",
    "marshmallow.fields.NaiveDateTime"
  ],
  "marshmallow.fields.DateTime._deserialize": [
    "marshmallow.fields.AwareDateTime",
    "marshmallow.fields.NaiveDateTime"
  ],
  "marshmallow.fields.DateTime._make_object_from_format": [
    "marshmallow.fields.Date",
    "marshmallow.fields.Time"
  ],
  "marshmallow.fields.Field.__init__": [
    "dataclasses_json.mm._UnionField",
    "marshmallow.fields.Boolean",
    "marshmallow.fields.Constant",
    "marshmallow.fields.DateTime",
    "marshmallow.fields.Enum",
    "marshmallow.fields.Function",
    "marshmallow.fields.IP",
    "marshmallow.fields.IPInterface",
    "marshmallow.fields.Inferred",
    "marshmallow.fields.List",
    "marshmallow.fields.Mapping",
    "marshmallow.fields.Method",
    "marshmallow.fields.Nested",
    "marshmallow.fields.Number",
    "marshmallow.fields.TimeDelta",
    "marshmallow.fields.Tuple"
  ],
  "marshmallow.fields.Field._bind_to_schema": [
    "marshmallow.fields.DateTime",
    "marshmallow.fields.List",
    "marshmallow.fields.Mapping",
    "marshmallow.fields.Method",
    "marshmallow.fields.Tuple"
  ],
  "marshmallow.fields.Field._deserialize": [
    "dataclasses_json.mm._IsoField",
    "dataclasses_json.mm._TimestampField",
    "dataclasses_json.mm._UnionField",
    "marshmallow.fields.Boolean",
    "marshmallow.fields.Constant",
    "marshmallow.fields.DateTime",
    "marshmallow.fields.Enum",
    "marshmallow.fields.Function",
    "marshmallow.fields.IP",
    "marshmallow.fields.IPInterface",
    "marshmallow.fields.List",
    "marshmallow.fields.Mapping",
    "marshmallow.fields.Method",
    "marshmallow.fields.Nested",
    "marshmallow.fields.Number",
    "marshmallow.fields.String",
    "marshmallow.fields.TimeDelta",
    "marshmallow.fields.Tuple"
  ],
  "marshmallow.fields.Field._serialize": [
    "dataclasses_json.mm._IsoField",
    "dataclasses_json.mm._TimestampField",
    "dataclasses_json.mm._UnionField",
    "marshmallow.fields.Boolean",
    "marshmallow.fields.Constant",
    "marshmallow.fields.DateTime",
    "marshmallow.fields.Enum",
    "marshmallow.fields.Function",
    "marshmallow.fields.IP",
    "marshmallow.fields.IPInterface",
    "marshmallow.fields.Inferred",
    "marshmallow.fields.List",
    "marshmallow.fields.Mapping",
    "marshmallow.fields.Method",
    "marshmallow.fields.Nested",
    "marshmallow.fields.Number",
    "marshmallow.fields.String",
    "marshmallow.fields.TimeDelta",
    "marshmallow.fields.Tuple"
  ],
  "marshmallow.fields.List._deserialize": [
    "dataclasses_json.mm._TupleVarLen"
  ],
  "marshmallow.fields.Nested.__init__": [
    "marshmallow.fields.Pluck"
  ],
  "marshmallow.fields.Nested._deserialize": [
    "marshmallow.fields.Pluck"
  ],
  "marshmallow.fields.Nested._serialize": [
    "marshmallow.fields.Pluck"
  ],
  "marshmallow.fields.Number.__init__": [
    "marshmallow.fields.Decimal",
    "marshmallow.fields.Float",
    "marshmallow.fields.Integer"
  ],
  "marshmallow.fields.Number._format_num": [
    "marshmallow.fields.Decimal"
  ],
  "marshmallow.fields.Number._to_string": [
    "marshmallow.fields.Decimal"
  ],
  "marshmallow.fields.Number._validated": [
    "marshmallow.fields.Decimal",
    "marshmallow.fields.Float",
    "marshmallow.fields.Integer"
  ],
  "marshmallow.fields.String._deserialize": [
    "marshmallow.fields.UUID"
  ],
  "marshmallow.schema.Schema.__init__": [
    "dataclasses_json.mm.SchemaF"
  ],
  "marshmallow.schema.Schema.dump": [
    "dataclasses_json.mm.SchemaF"
  ],
  "marshmallow.schema.Schema.dumps": [
    "dataclasses_json.mm.SchemaF"
  ],
  "marshmallow.schema.Schema.load": [
    "dataclasses_json.mm.SchemaF"
  ],
  "marshmallow.schema.Schema.loads": [
    "dataclasses_json.mm.SchemaF"
  ],
  "marshmallow.validate.NoneOf.__call__": [
    "marshmallow.validate.ContainsNoneOf"
  ],
  "marshmallow.validate.NoneOf._format_error": [
    "marshmallow.validate.ContainsNoneOf"
  ],
  "marshmallow.validate.OneOf.__call__": [
    "marshmallow.validate.ContainsOnly"
  ],
  "marshmallow.validate.OneOf._format_error": [
    "marshmallow.validate.ContainsOnly"
  ],
  "marshmallow.validate.Validator.__call__": [
    "marshmallow.validate.And",
    "marshmallow.validate.Email",
    "marshmallow.validate.Equal",
    "marshmallow.validate.Length",
    "marshmallow.validate.NoneOf",
    "marshmallow.validate.OneOf",
    "marshmallow.validate.Predicate",
    "marshmallow.validate.Range",
    "marshmallow.validate.Regexp",
    "marshmallow.validate.URL"
  ],
  "marshmallow.validate.Validator._repr_args": [
    "marshmallow.validate.And",
    "marshmallow.validate.Equal",
    "marshmallow.validate.Length",
    "marshmallow.validate.NoneOf",
    "marshmallow.validate.OneOf",
    "marshmallow.validate.Predicate",
    "marshmallow.validate.Range",
    "marshmallow.validate.Regexp",
    "marshmallow.validate.URL"
  ],
  "mock.mock.Base.__init__": [
    "mock.mock.AsyncMockMixin",
    "mock.mock.CallableMixin",
    "mock.mock.MagicProxy",
    "mock.mock.NonCallableMock"
  ],
  "mock.mock.NonCallableMock.mock_add_spec": [
    "mock.mock.MagicMock",
    "mock.mock.NonCallableMagicMock"
  ],
  "multiprocessing.context.BaseContext.get_start_method": [
    "multiprocessing.context.DefaultContext",
    "typeshed.typeshed.stdlib.multiprocessing.context.DefaultContext"
  ],
  "multiprocessing.managers.BaseManager.get_server": [
    "multiprocessing.managers.SharedMemoryManager"
  ],
  "multiprocessing.pool.ApplyResult.__init__": [
    "multiprocessing.pool.MapResult"
  ],
  "multiprocessing.pool.Pool.__init__": [
    "multiprocessing.pool.ThreadPool"
  ],
  "multiprocessing.process.BaseProcess.run": [
    "influxdb_client.client.util.multiprocessing_helper.MultiprocessingWriter",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.client.util.multiprocessing_helper.MultiprocessingWriter"
  ],
  "multiprocessing.process.BaseProcess.start": [
    "influxdb_client.client.util.multiprocessing_helper.MultiprocessingWriter",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.client.util.multiprocessing_helper.MultiprocessingWriter"
  ],
  "multiprocessing.process.BaseProcess.terminate": [
    "influxdb_client.client.util.multiprocessing_helper.MultiprocessingWriter",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.client.util.multiprocessing_helper.MultiprocessingWriter"
  ],
  "multiprocessing.queues.Queue.__init__": [
    "concurrent.futures.process._SafeQueue",
    "typeshed.typeshed.stdlib.concurrent.futures.process._SafeQueue"
  ],
  "multiprocessing.synchronize.Semaphore.__init__": [
    "multiprocessing.synchronize.BoundedSemaphore"
  ],
  "mypy_django_plugin.transformers.models.AddDefaultPrimaryKey.run_with_model_cls": [
    "mypy_django_plugin.transformers.models.AddPrimaryKeyAlias"
  ],
  "mypy_django_plugin.transformers.models.ModelClassInitializer.run": [
    "mypy_django_plugin.transformers.models.InjectAnyAsBaseForNestedMeta",
    "mypy_django_plugin.transformers.models.MetaclassAdjustments",
    "mypy_django_plugin.transformers.models.ProcessManyToManyFields"
  ],
  "mypy_django_plugin.transformers.models.ModelClassInitializer.run_with_model_cls": [
    "mypy_django_plugin.transformers.models.AddDefaultManagerAttribute",
    "mypy_django_plugin.transformers.models.AddDefaultPrimaryKey",
    "mypy_django_plugin.transformers.models.AddExtraFieldMethods",
    "mypy_django_plugin.transformers.models.AddManagers",
    "mypy_django_plugin.transformers.models.AddRelatedModelsId",
    "mypy_django_plugin.transformers.models.AddReverseLookups"
  ],
  "netaddr.core.Publisher.__init__": [
    "netaddr.eui.ieee.IABIndexParser",
    "netaddr.eui.ieee.OUIIndexParser",
    "netaddr.ip.iana.XMLRecordParser",
    "typeshed.typeshed.stubs.netaddr.netaddr.eui.ieee.IABIndexParser",
    "typeshed.typeshed.stubs.netaddr.netaddr.eui.ieee.OUIIndexParser",
    "typeshed.typeshed.stubs.netaddr.netaddr.ip.iana.XMLRecordParser"
  ],
  "netaddr.core.Subscriber.update": [
    "netaddr.core.PrettyPrinter",
    "netaddr.eui.ieee.FileIndexer",
    "netaddr.ip.iana.DictUpdater",
    "typeshed.typeshed.stubs.netaddr.netaddr.eui.ieee.FileIndexer",
    "typeshed.typeshed.stubs.netaddr.netaddr.ip.iana.DictUpdater"
  ],
  "netaddr.eui.BaseIdentifier.__init__": [
    "netaddr.eui.EUI",
    "netaddr.eui.IAB",
    "netaddr.eui.OUI"
  ],
  "netaddr.ip.BaseIP.__init__": [
    "netaddr.ip.IPAddress",
    "netaddr.ip.IPNetwork",
    "netaddr.ip.IPRange"
  ],
  "netaddr.ip.BaseIP.key": [
    "netaddr.ip.IPAddress",
    "netaddr.ip.IPNetwork",
    "netaddr.ip.IPRange"
  ],
  "netaddr.ip.BaseIP.sort_key": [
    "netaddr.ip.IPAddress",
    "netaddr.ip.IPNetwork",
    "netaddr.ip.IPRange"
  ],
  "netaddr.ip.IPListMixin.__contains__": [
    "netaddr.ip.IPNetwork",
    "netaddr.ip.IPRange"
  ],
  "netaddr.ip.IPRange.__init__": [
    "netaddr.ip.glob.IPGlob",
    "typeshed.typeshed.stubs.netaddr.netaddr.ip.glob.IPGlob"
  ],
  "netaddr.ip.iana.XMLRecordParser.process_record": [
    "netaddr.ip.iana.IPv4Parser",
    "netaddr.ip.iana.IPv6Parser",
    "netaddr.ip.iana.IPv6UnicastParser"
  ],
  "nmap.nmap.PortScannerAsync.__init__": [
    "nmap.nmap.PortScannerYield"
  ],
  "nmap.nmap.PortScannerAsync.scan": [
    "nmap.nmap.PortScannerYield"
  ],
  "nmap.nmap.PortScannerAsync.still_scanning": [
    "nmap.nmap.PortScannerYield"
  ],
  "nmap.nmap.PortScannerAsync.stop": [
    "nmap.nmap.PortScannerYield"
  ],
  "nmap.nmap.PortScannerAsync.wait": [
    "nmap.nmap.PortScannerYield"
  ],
  "nntplib.NNTP.__init__": [
    "nntplib.NNTP_SSL"
  ],
  "numbers.Complex.__abs__": [
    "complex",
    "fractions.Fraction",
    "typeshed.typeshed.stdlib.fractions.Fraction",
    "typeshed.typeshed.stubs.Pillow.PIL.TiffImagePlugin.IFDRational"
  ],
  "numbers.Complex.__add__": [
    "complex",
    "fractions.Fraction",
    "typeshed.typeshed.stdlib.fractions.Fraction",
    "typeshed.typeshed.stubs.Pillow.PIL.TiffImagePlugin.IFDRational"
  ],
  "numbers.Complex.__bool__": [
    "complex",
    "fractions.Fraction",
    "typeshed.typeshed.stdlib.fractions.Fraction",
    "typeshed.typeshed.stubs.Pillow.PIL.TiffImagePlugin.IFDRational"
  ],
  "numbers.Complex.__complex__": [
    "numbers.Real"
  ],
  "numbers.Complex.__eq__": [
    "complex"
  ],
  "numbers.Complex.__mul__": [
    "complex",
    "fractions.Fraction",
    "typeshed.typeshed.stdlib.fractions.Fraction",
    "typeshed.typeshed.stubs.Pillow.PIL.TiffImagePlugin.IFDRational"
  ],
  "numbers.Complex.__neg__": [
    "complex",
    "fractions.Fraction",
    "typeshed.typeshed.stdlib.fractions.Fraction",
    "typeshed.typeshed.stubs.Pillow.PIL.TiffImagePlugin.IFDRational"
  ],
  "numbers.Complex.__pos__": [
    "complex",
    "fractions.Fraction",
    "typeshed.typeshed.stdlib.fractions.Fraction",
    "typeshed.typeshed.stubs.Pillow.PIL.TiffImagePlugin.IFDRational"
  ],
  "numbers.Complex.__pow__": [
    "complex",
    "fractions.Fraction",
    "numbers.Integral",
    "typeshed.typeshed.stdlib.fractions.Fraction",
    "typeshed.typeshed.stubs.Pillow.PIL.TiffImagePlugin.IFDRational"
  ],
  "numbers.Complex.__radd__": [
    "complex",
    "fractions.Fraction",
    "typeshed.typeshed.stdlib.fractions.Fraction",
    "typeshed.typeshed.stubs.Pillow.PIL.TiffImagePlugin.IFDRational"
  ],
  "numbers.Complex.__rmul__": [
    "complex",
    "fractions.Fraction",
    "typeshed.typeshed.stdlib.fractions.Fraction",
    "typeshed.typeshed.stubs.Pillow.PIL.TiffImagePlugin.IFDRational"
  ],
  "numbers.Complex.__rpow__": [
    "complex",
    "fractions.Fraction",
    "typeshed.typeshed.stdlib.fractions.Fraction",
    "typeshed.typeshed.stubs.Pillow.PIL.TiffImagePlugin.IFDRational"
  ],
  "numbers.Complex.__rsub__": [
    "complex",
    "fractions.Fraction",
    "typeshed.typeshed.stdlib.fractions.Fraction",
    "typeshed.typeshed.stubs.Pillow.PIL.TiffImagePlugin.IFDRational"
  ],
  "numbers.Complex.__rtruediv__": [
    "complex",
    "fractions.Fraction",
    "typeshed.typeshed.stdlib.fractions.Fraction",
    "typeshed.typeshed.stubs.Pillow.PIL.TiffImagePlugin.IFDRational"
  ],
  "numbers.Complex.__sub__": [
    "complex",
    "fractions.Fraction",
    "typeshed.typeshed.stdlib.fractions.Fraction",
    "typeshed.typeshed.stubs.Pillow.PIL.TiffImagePlugin.IFDRational"
  ],
  "numbers.Complex.__truediv__": [
    "complex",
    "fractions.Fraction",
    "typeshed.typeshed.stdlib.fractions.Fraction",
    "typeshed.typeshed.stubs.Pillow.PIL.TiffImagePlugin.IFDRational"
  ],
  "numbers.Complex.conjugate": [
    "complex",
    "numbers.Real"
  ],
  "numbers.Complex.imag": [
    "complex",
    "numbers.Real"
  ],
  "numbers.Complex.real": [
    "complex",
    "numbers.Real"
  ],
  "numbers.Integral.__and__": [
    "int"
  ],
  "numbers.Integral.__index__": [
    "int"
  ],
  "numbers.Integral.__invert__": [
    "int"
  ],
  "numbers.Integral.__lshift__": [
    "int"
  ],
  "numbers.Integral.__or__": [
    "int"
  ],
  "numbers.Integral.__rand__": [
    "int"
  ],
  "numbers.Integral.__rlshift__": [
    "int"
  ],
  "numbers.Integral.__ror__": [
    "int"
  ],
  "numbers.Integral.__rrshift__": [
    "int"
  ],
  "numbers.Integral.__rshift__": [
    "int"
  ],
  "numbers.Integral.__rxor__": [
    "int"
  ],
  "numbers.Integral.__xor__": [
    "int"
  ],
  "numbers.Integral.denominator": [
    "int"
  ],
  "numbers.Integral.numerator": [
    "int"
  ],
  "numbers.Rational.__float__": [
    "float",
    "numbers.Integral"
  ],
  "numbers.Rational.denominator": [
    "PIL.TiffImagePlugin.IFDRational",
    "fractions.Fraction",
    "numbers.Integral",
    "typeshed.typeshed.stdlib.fractions.Fraction",
    "typeshed.typeshed.stubs.Pillow.PIL.TiffImagePlugin.IFDRational"
  ],
  "numbers.Rational.numerator": [
    "PIL.TiffImagePlugin.IFDRational",
    "fractions.Fraction",
    "numbers.Integral",
    "typeshed.typeshed.stdlib.fractions.Fraction",
    "typeshed.typeshed.stubs.Pillow.PIL.TiffImagePlugin.IFDRational"
  ],
  "numbers.Real.__ceil__": [
    "float",
    "fractions.Fraction",
    "typeshed.typeshed.stdlib.fractions.Fraction",
    "typeshed.typeshed.stubs.Pillow.PIL.TiffImagePlugin.IFDRational"
  ],
  "numbers.Real.__divmod__": [
    "float",
    "fractions.Fraction",
    "typeshed.typeshed.stdlib.fractions.Fraction"
  ],
  "numbers.Real.__float__": [
    "numbers.Rational"
  ],
  "numbers.Real.__floor__": [
    "float",
    "fractions.Fraction",
    "typeshed.typeshed.stdlib.fractions.Fraction",
    "typeshed.typeshed.stubs.Pillow.PIL.TiffImagePlugin.IFDRational"
  ],
  "numbers.Real.__floordiv__": [
    "float",
    "fractions.Fraction",
    "typeshed.typeshed.stdlib.fractions.Fraction",
    "typeshed.typeshed.stubs.Pillow.PIL.TiffImagePlugin.IFDRational"
  ],
  "numbers.Real.__le__": [
    "float",
    "fractions.Fraction",
    "typeshed.typeshed.stdlib.fractions.Fraction",
    "typeshed.typeshed.stubs.Pillow.PIL.TiffImagePlugin.IFDRational"
  ],
  "numbers.Real.__lt__": [
    "float",
    "fractions.Fraction",
    "typeshed.typeshed.stdlib.fractions.Fraction",
    "typeshed.typeshed.stubs.Pillow.PIL.TiffImagePlugin.IFDRational"
  ],
  "numbers.Real.__mod__": [
    "float",
    "fractions.Fraction",
    "typeshed.typeshed.stdlib.fractions.Fraction",
    "typeshed.typeshed.stubs.Pillow.PIL.TiffImagePlugin.IFDRational"
  ],
  "numbers.Real.__rdivmod__": [
    "float",
    "fractions.Fraction",
    "typeshed.typeshed.stdlib.fractions.Fraction"
  ],
  "numbers.Real.__rfloordiv__": [
    "float",
    "fractions.Fraction",
    "typeshed.typeshed.stdlib.fractions.Fraction",
    "typeshed.typeshed.stubs.Pillow.PIL.TiffImagePlugin.IFDRational"
  ],
  "numbers.Real.__rmod__": [
    "float",
    "fractions.Fraction",
    "typeshed.typeshed.stdlib.fractions.Fraction",
    "typeshed.typeshed.stubs.Pillow.PIL.TiffImagePlugin.IFDRational"
  ],
  "numbers.Real.__round__": [
    "float",
    "fractions.Fraction",
    "typeshed.typeshed.stdlib.fractions.Fraction",
    "typeshed.typeshed.stubs.Pillow.PIL.TiffImagePlugin.IFDRational"
  ],
  "numbers.Real.__trunc__": [
    "float",
    "fractions.Fraction",
    "typeshed.typeshed.stdlib.fractions.Fraction",
    "typeshed.typeshed.stubs.Pillow.PIL.TiffImagePlugin.IFDRational"
  ],
  "numbers.Real.conjugate": [
    "fractions.Fraction",
    "typeshed.typeshed.stdlib.fractions.Fraction"
  ],
  "numbers.Real.imag": [
    "fractions.Fraction",
    "typeshed.typeshed.stdlib.fractions.Fraction"
  ],
  "numbers.Real.real": [
    "fractions.Fraction",
    "typeshed.typeshed.stdlib.fractions.Fraction"
  ],
  "oauthlib.oauth2.rfc6749.clients.base.Client.__init__": [
    "oauthlib.oauth2.rfc6749.clients.legacy_application.LegacyApplicationClient",
    "oauthlib.oauth2.rfc6749.clients.service_application.ServiceApplicationClient",
    "oauthlib.oauth2.rfc6749.clients.web_application.WebApplicationClient"
  ],
  "oauthlib.oauth2.rfc6749.clients.base.Client.parse_request_uri_response": [
    "oauthlib.oauth2.rfc6749.clients.mobile_application.MobileApplicationClient",
    "oauthlib.oauth2.rfc6749.clients.web_application.WebApplicationClient"
  ],
  "oauthlib.oauth2.rfc6749.clients.base.Client.prepare_request_body": [
    "oauthlib.oauth2.rfc6749.clients.backend_application.BackendApplicationClient",
    "oauthlib.oauth2.rfc6749.clients.legacy_application.LegacyApplicationClient",
    "oauthlib.oauth2.rfc6749.clients.service_application.ServiceApplicationClient",
    "oauthlib.oauth2.rfc6749.clients.web_application.WebApplicationClient"
  ],
  "oauthlib.oauth2.rfc6749.clients.base.Client.prepare_request_uri": [
    "oauthlib.oauth2.rfc6749.clients.mobile_application.MobileApplicationClient",
    "oauthlib.oauth2.rfc6749.clients.web_application.WebApplicationClient"
  ],
  "oauthlib.oauth2.rfc6749.endpoints.authorization.AuthorizationEndpoint.__init__": [
    "oauthlib.oauth2.rfc6749.endpoints.pre_configured.MobileApplicationServer",
    "oauthlib.oauth2.rfc6749.endpoints.pre_configured.Server",
    "oauthlib.oauth2.rfc6749.endpoints.pre_configured.WebApplicationServer",
    "oauthlib.openid.connect.core.endpoints.pre_configured.Server",
    "typeshed.typeshed.stubs.oauthlib.oauthlib.openid.connect.core.endpoints.pre_configured.Server"
  ],
  "oauthlib.oauth2.rfc6749.endpoints.base.BaseEndpoint.__init__": [
    "oauthlib.oauth2.rfc6749.endpoints.authorization.AuthorizationEndpoint",
    "oauthlib.oauth2.rfc6749.endpoints.introspect.IntrospectEndpoint",
    "oauthlib.oauth2.rfc6749.endpoints.metadata.MetadataEndpoint",
    "oauthlib.oauth2.rfc6749.endpoints.resource.ResourceEndpoint",
    "oauthlib.oauth2.rfc6749.endpoints.revocation.RevocationEndpoint",
    "oauthlib.oauth2.rfc6749.endpoints.token.TokenEndpoint",
    "oauthlib.openid.connect.core.endpoints.userinfo.UserInfoEndpoint",
    "typeshed.typeshed.stubs.oauthlib.oauthlib.openid.connect.core.endpoints.userinfo.UserInfoEndpoint"
  ],
  "oauthlib.oauth2.rfc6749.endpoints.token.TokenEndpoint.__init__": [
    "oauthlib.oauth2.rfc6749.endpoints.pre_configured.BackendApplicationServer",
    "oauthlib.oauth2.rfc6749.endpoints.pre_configured.LegacyApplicationServer"
  ],
  "oauthlib.oauth2.rfc6749.errors.OAuth2Error.__init__": [
    "oauthlib.oauth2.rfc6749.errors.CustomOAuth2Error"
  ],
  "oauthlib.oauth2.rfc6749.grant_types.base.GrantTypeBase.__init__": [
    "oauthlib.oauth2.rfc6749.grant_types.refresh_token.RefreshTokenGrant"
  ],
  "oauthlib.oauth2.rfc6749.grant_types.base.GrantTypeBase.create_authorization_response": [
    "oauthlib.oauth2.rfc6749.grant_types.authorization_code.AuthorizationCodeGrant",
    "oauthlib.oauth2.rfc6749.grant_types.implicit.ImplicitGrant"
  ],
  "oauthlib.oauth2.rfc6749.grant_types.base.GrantTypeBase.create_token_response": [
    "oauthlib.oauth2.rfc6749.grant_types.authorization_code.AuthorizationCodeGrant",
    "oauthlib.oauth2.rfc6749.grant_types.client_credentials.ClientCredentialsGrant",
    "oauthlib.oauth2.rfc6749.grant_types.implicit.ImplicitGrant",
    "oauthlib.oauth2.rfc6749.grant_types.refresh_token.RefreshTokenGrant",
    "oauthlib.oauth2.rfc6749.grant_types.resource_owner_password_credentials.ResourceOwnerPasswordCredentialsGrant"
  ],
  "oauthlib.oauth2.rfc6749.tokens.TokenBase.estimate_type": [
    "oauthlib.oauth2.rfc6749.tokens.BearerToken",
    "oauthlib.openid.connect.core.tokens.JWTToken",
    "typeshed.typeshed.stubs.oauthlib.oauthlib.openid.connect.core.tokens.JWTToken"
  ],
  "oauthlib.oauth2.rfc6749.tokens.TokenBase.validate_request": [
    "oauthlib.oauth2.rfc6749.tokens.BearerToken",
    "oauthlib.openid.connect.core.tokens.JWTToken",
    "typeshed.typeshed.stubs.oauthlib.oauthlib.openid.connect.core.tokens.JWTToken"
  ],
  "oauthlib.openid.connect.core.grant_types.base.GrantTypeBase.add_id_token": [
    "oauthlib.openid.connect.core.grant_types.authorization_code.AuthorizationCodeGrant",
    "oauthlib.openid.connect.core.grant_types.hybrid.HybridGrant",
    "oauthlib.openid.connect.core.grant_types.implicit.ImplicitGrant"
  ],
  "oauthlib.openid.connect.core.grant_types.base.GrantTypeBase.openid_authorization_validator": [
    "oauthlib.openid.connect.core.grant_types.hybrid.HybridGrant",
    "oauthlib.openid.connect.core.grant_types.implicit.ImplicitGrant"
  ],
  "object.__class__": [
    "pip._vendor.truststore._api.SSLContext",
    "testslide.strict_mock.StrictMock",
    "typeshed.typeshed.stdlib.builtins.object"
  ],
  "object.__class__@setter": [
    "typeshed.typeshed.stdlib.builtins.object"
  ],
  "object.__delattr__": [
    "MySQLdb._mysql.connection",
    "MySQLdb._mysql.result",
    "_dummy_threading.local",
    "_threading_local.local",
    "asgiref.local.Local",
    "babel.support.LazyProxy",
    "django.conf.UserSettingsHolder",
    "django.utils.connection.ConnectionProxy",
    "django.utils.functional.LazyObject",
    "flask.ctx._AppCtxGlobals",
    "gflags.FlagValues",
    "google.cloud.ndb.model.Expando",
    "graphql.pyutils.enum.EnumMeta",
    "invoke.config.DataProxy",
    "pip._vendor.typing_extensions.TypeAliasType",
    "sqlalchemy.orm.decl_api.DeclarativeMeta",
    "stripe.stripe_object.StripeObject",
    "testslide.strict_mock.StrictMock",
    "testslide.strict_mock._MethodProxy",
    "threading.local",
    "traitlets.config.loader.Config",
    "types.SimpleNamespace",
    "typeshed.typeshed.stdlib._dummy_threading.local",
    "typeshed.typeshed.stdlib._threading_local.local",
    "typeshed.typeshed.stdlib.builtins.object",
    "typeshed.typeshed.stdlib.threading.local",
    "typeshed.typeshed.stdlib.types.SimpleNamespace",
    "typeshed.typeshed.stdlib.unittest.mock.NonCallableMock",
    "typeshed.typeshed.stubs.WTForms.wtforms.fields.core.Flags",
    "typeshed.typeshed.stubs.WTForms.wtforms.form.Form",
    "typeshed.typeshed.stubs.WTForms.wtforms.form.FormMeta",
    "typeshed.typeshed.stubs.WebOb.webob.request.AdhocAttrMixin",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.model.Expando",
    "typeshed.typeshed.stubs.mysqlclient.MySQLdb._mysql.connection",
    "typeshed.typeshed.stubs.mysqlclient.MySQLdb._mysql.result",
    "typeshed.typeshed.stubs.python-gflags.gflags.FlagValues",
    "typeshed.typeshed.stubs.stripe.stripe.stripe_object.StripeObject",
    "typeshed.typeshed.stubs.vobject.vobject.base.Component",
    "typeshed.typeshed.stubs.vobject.vobject.base.ContentLine",
    "unittest.mock.NonCallableMock",
    "vobject.base.Component",
    "vobject.base.ContentLine",
    "werkzeug.datastructures.auth.WWWAuthenticate",
    "werkzeug.local.Local"
  ],
  "object.__dict__": [
    "types.ModuleType",
    "typeshed.typeshed.stdlib.builtins.type",
    "typeshed.typeshed.stdlib.types.ModuleType"
  ],
  "object.__dir__": [
    "IPython.core.async_helpers._AsyncIOProxy",
    "IPython.utils.shimmodule.ShimModule",
    "_cffi_backend.CType",
    "_cffi_backend.Lib",
    "_cffi_backend._CDataBase",
    "babel.support.LazyProxy",
    "enum.Enum",
    "enum.EnumMeta",
    "graphql.pyutils.enum.EnumMeta",
    "passlib.registry._PasslibRegistryProxy",
    "passlib.utils.handlers.PrefixWrapper",
    "pip._vendor.pkg_resources.Distribution",
    "pip._vendor.pyparsing.results.ParseResults",
    "pip._vendor.six.Module_six_moves_urllib",
    "pip._vendor.six._LazyModule",
    "pip._vendor.urllib3.packages.six.Module_six_moves_urllib",
    "pip._vendor.urllib3.packages.six._LazyModule",
    "sqlalchemy.util._collections.Properties",
    "traitlets.utils.bunch.Bunch",
    "typeshed.typeshed.stdlib.builtins.object",
    "typeshed.typeshed.stdlib.enum.Enum",
    "typeshed.typeshed.stdlib.enum.EnumMeta",
    "typeshed.typeshed.stdlib.unittest.mock.NonCallableMock",
    "typeshed.typeshed.stubs.cffi._cffi_backend.CType",
    "typeshed.typeshed.stubs.cffi._cffi_backend.Lib",
    "typeshed.typeshed.stubs.cffi._cffi_backend._CDataBase",
    "typeshed.typeshed.stubs.passlib.passlib.registry._PasslibRegistryProxy",
    "typeshed.typeshed.stubs.passlib.passlib.utils.handlers.PrefixWrapper",
    "typeshed.typeshed.stubs.pluggy.pluggy._manager.DistFacade",
    "typeshed.typeshed.stubs.pywin32.win32com.client.DispatchBaseClass",
    "typeshed.typeshed.stubs.pywin32.win32com.client.dynamic.CDispatch",
    "typeshed.typeshed.stubs.untangle.untangle.Element",
    "unittest.mock.NonCallableMock",
    "untangle.Element",
    "werkzeug.debug.console.ThreadedStream",
    "win32com.client.DispatchBaseClass",
    "win32com.client.dynamic.CDispatch"
  ],
  "object.__eq__": [
    "IPython.core.completer.Completion",
    "MySQLdb.DBAPISet",
    "PIL.Image.Image",
    "PIL.ImageMath._Operand",
    "PIL.PdfParser.IndirectReference",
    "PIL.PdfParser.PdfName",
    "PIL.TiffImagePlugin.IFDRational",
    "PyInstaller.lib.modulegraph.modulegraph.Node",
    "_cffi_backend._CDataBase",
    "_cffi_backend.buffer",
    "_decimal.Decimal",
    "_tkinter.Tcl_Obj",
    "_weakrefset.WeakSet",
    "argparse.Namespace",
    "asyncio.events.TimerHandle",
    "babel.core.Locale",
    "babel.messages.catalog.Message",
    "babel.messages.pofile._NormalizedString",
    "babel.support.LazyProxy",
    "blinker._saferef.BoundMethodWeakref",
    "boto.s3.tagging.Tag",
    "boto.utils.Password",
    "braintree.credit_card_verification.CreditCardVerification",
    "braintree.search.Search.IsNodeBuilder",
    "braintree.search.Search.KeyValueNodeBuilder",
    "braintree.search.Search.MultipleValueNodeBuilder",
    "braintree.search.Search.RangeNodeBuilder",
    "braintree.us_bank_account_verification.UsBankAccountVerification",
    "bs4.element.Tag",
    "bytearray",
    "bytes",
    "caldav.lib.url.URL",
    "caldav.requests.HTTPBearerAuth",
    "cffi.backend_ctypes.CTypesData",
    "cffi.model.BaseType",
    "collections.UserList",
    "collections.UserString",
    "consolemenu.console_menu.MenuItem",
    "crontab.CronItem",
    "crontab.CronSlice",
    "crontab.CronSlices",
    "datetimerange.DateTimeRange",
    "dateutil._common.weekday",
    "dateutil.relativedelta.relativedelta",
    "dateutil.rrule.rruleset._genitem",
    "dateutil.tz.tz._ttinfo",
    "dateutil.tz.tz.tzfile",
    "dateutil.tz.tz.tzlocal",
    "dateutil.tz.tz.tzoffset",
    "dateutil.tz.tz.tzrange",
    "dateutil.tz.tz.tzutc",
    "distutils.version.Version",
    "django.contrib.gis.db.backends.base.adapter.WKTAdapter",
    "django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter",
    "django.contrib.gis.gdal.envelope.Envelope",
    "django.contrib.gis.gdal.feature.Feature",
    "django.contrib.gis.gdal.geometries.OGRGeometry",
    "django.contrib.gis.gdal.geomtype.OGRGeomType",
    "django.contrib.gis.geos.geometry.GEOSGeometryBase",
    "django.contrib.gis.geos.mutable_list.ListMixin",
    "django.contrib.gis.measure.MeasureBase",
    "django.core.validators.BaseValidator",
    "django.core.validators.DecimalValidator",
    "django.core.validators.EmailValidator",
    "django.db.migrations.graph.Node",
    "django.db.migrations.state.ModelState",
    "django.utils.connection.ConnectionProxy",
    "dockerfile_parse.parser.KeyValues",
    "email.charset.Charset",
    "email.header.Header",
    "email.headerregistry.Address",
    "email.headerregistry.Group",
    "fpdf.line_break.Fragment",
    "fractions.Fraction",
    "gdb.Value",
    "google.cloud.ndb._datastore_query.Cursor",
    "google.cloud.ndb._options.Options",
    "google.cloud.ndb.global_cache.MemcacheCache.KeyNotSet",
    "google.cloud.ndb.key.Key",
    "google.cloud.ndb.model.Index",
    "google.cloud.ndb.model.IndexProperty",
    "google.cloud.ndb.model.IndexState",
    "google.cloud.ndb.model.Model",
    "google.cloud.ndb.model.Property",
    "google.cloud.ndb.model.User",
    "google.cloud.ndb.model._BaseValue",
    "google.cloud.ndb.query.Node",
    "google.cloud.ndb.query.ParameterizedThing",
    "google.protobuf.internal.containers.MessageMap",
    "google.protobuf.internal.containers.RepeatedCompositeFieldContainer",
    "google.protobuf.internal.containers.RepeatedScalarFieldContainer",
    "google.protobuf.internal.containers.ScalarMap",
    "google.protobuf.message.Message",
    "graphql.execution.base.ExecutionResult",
    "graphql.language.ast.Argument",
    "graphql.language.ast.BooleanValue",
    "graphql.language.ast.Directive",
    "graphql.language.ast.DirectiveDefinition",
    "graphql.language.ast.Document",
    "graphql.language.ast.EnumTypeDefinition",
    "graphql.language.ast.EnumValue",
    "graphql.language.ast.EnumValueDefinition",
    "graphql.language.ast.Field",
    "graphql.language.ast.FieldDefinition",
    "graphql.language.ast.FloatValue",
    "graphql.language.ast.FragmentDefinition",
    "graphql.language.ast.FragmentSpread",
    "graphql.language.ast.InlineFragment",
    "graphql.language.ast.InputObjectTypeDefinition",
    "graphql.language.ast.InputValueDefinition",
    "graphql.language.ast.IntValue",
    "graphql.language.ast.InterfaceTypeDefinition",
    "graphql.language.ast.ListType",
    "graphql.language.ast.ListValue",
    "graphql.language.ast.Name",
    "graphql.language.ast.NamedType",
    "graphql.language.ast.NonNullType",
    "graphql.language.ast.ObjectField",
    "graphql.language.ast.ObjectTypeDefinition",
    "graphql.language.ast.ObjectValue",
    "graphql.language.ast.OperationDefinition",
    "graphql.language.ast.OperationTypeDefinition",
    "graphql.language.ast.ScalarTypeDefinition",
    "graphql.language.ast.SchemaDefinition",
    "graphql.language.ast.SelectionSet",
    "graphql.language.ast.StringValue",
    "graphql.language.ast.TypeExtensionDefinition",
    "graphql.language.ast.UnionTypeDefinition",
    "graphql.language.ast.Variable",
    "graphql.language.ast.VariableDefinition",
    "graphql.language.lexer.Token",
    "graphql.language.location.SourceLocation",
    "graphql.language.parser.Loc",
    "graphql.language.source.Source",
    "graphql.type.definition.GraphQLArgument",
    "graphql.type.definition.GraphQLEnumValue",
    "graphql.type.definition.GraphQLField",
    "graphql.type.definition.GraphQLInputObjectField",
    "http.cookies.Morsel",
    "httplib2.Authentication",
    "importlib.machinery.ExtensionFileLoader",
    "importlib.machinery.ModuleSpec",
    "importlib_metadata.EntryPoint",
    "influxdb_client.client.write_api._BatchItemKey",
    "influxdb_client.domain.add_resource_member_request_body.AddResourceMemberRequestBody",
    "influxdb_client.domain.analyze_query_response.AnalyzeQueryResponse",
    "influxdb_client.domain.analyze_query_response_errors.AnalyzeQueryResponseErrors",
    "influxdb_client.domain.ast_response.ASTResponse",
    "influxdb_client.domain.authorization_update_request.AuthorizationUpdateRequest",
    "influxdb_client.domain.authorizations.Authorizations",
    "influxdb_client.domain.axes.Axes",
    "influxdb_client.domain.axis.Axis",
    "influxdb_client.domain.axis_scale.AxisScale",
    "influxdb_client.domain.bucket.Bucket",
    "influxdb_client.domain.bucket_links.BucketLinks",
    "influxdb_client.domain.bucket_metadata_manifest.BucketMetadataManifest",
    "influxdb_client.domain.bucket_retention_rules.BucketRetentionRules",
    "influxdb_client.domain.bucket_shard_mapping.BucketShardMapping",
    "influxdb_client.domain.buckets.Buckets",
    "influxdb_client.domain.builder_aggregate_function_type.BuilderAggregateFunctionType",
    "influxdb_client.domain.builder_config.BuilderConfig",
    "influxdb_client.domain.builder_config_aggregate_window.BuilderConfigAggregateWindow",
    "influxdb_client.domain.builder_functions_type.BuilderFunctionsType",
    "influxdb_client.domain.builder_tags_type.BuilderTagsType",
    "influxdb_client.domain.cell.Cell",
    "influxdb_client.domain.cell_links.CellLinks",
    "influxdb_client.domain.cell_update.CellUpdate",
    "influxdb_client.domain.check.Check",
    "influxdb_client.domain.check_base.CheckBase",
    "influxdb_client.domain.check_base_links.CheckBaseLinks",
    "influxdb_client.domain.check_patch.CheckPatch",
    "influxdb_client.domain.check_status_level.CheckStatusLevel",
    "influxdb_client.domain.checks.Checks",
    "influxdb_client.domain.column_data_type.ColumnDataType",
    "influxdb_client.domain.column_semantic_type.ColumnSemanticType",
    "influxdb_client.domain.config.Config",
    "influxdb_client.domain.create_cell.CreateCell",
    "influxdb_client.domain.create_dashboard_request.CreateDashboardRequest",
    "influxdb_client.domain.dashboard_color.DashboardColor",
    "influxdb_client.domain.dashboard_query.DashboardQuery",
    "influxdb_client.domain.dashboards.Dashboards",
    "influxdb_client.domain.dbr_ps.DBRPs",
    "influxdb_client.domain.dbrp.DBRP",
    "influxdb_client.domain.dbrp_create.DBRPCreate",
    "influxdb_client.domain.dbrp_get.DBRPGet",
    "influxdb_client.domain.dbrp_update.DBRPUpdate",
    "influxdb_client.domain.decimal_places.DecimalPlaces",
    "influxdb_client.domain.delete_predicate_request.DeletePredicateRequest",
    "influxdb_client.domain.dialect.Dialect",
    "influxdb_client.domain.dict_item.DictItem",
    "influxdb_client.domain.duration.Duration",
    "influxdb_client.domain.error.Error",
    "influxdb_client.domain.field.Field",
    "influxdb_client.domain.file.File",
    "influxdb_client.domain.flux_response.FluxResponse",
    "influxdb_client.domain.flux_suggestion.FluxSuggestion",
    "influxdb_client.domain.flux_suggestions.FluxSuggestions",
    "influxdb_client.domain.health_check.HealthCheck",
    "influxdb_client.domain.import_declaration.ImportDeclaration",
    "influxdb_client.domain.is_onboarding.IsOnboarding",
    "influxdb_client.domain.label.Label",
    "influxdb_client.domain.label_create_request.LabelCreateRequest",
    "influxdb_client.domain.label_mapping.LabelMapping",
    "influxdb_client.domain.label_response.LabelResponse",
    "influxdb_client.domain.label_update.LabelUpdate",
    "influxdb_client.domain.labels_response.LabelsResponse",
    "influxdb_client.domain.language_request.LanguageRequest",
    "influxdb_client.domain.line_protocol_error.LineProtocolError",
    "influxdb_client.domain.line_protocol_length_error.LineProtocolLengthError",
    "influxdb_client.domain.links.Links",
    "influxdb_client.domain.list_stacks_response.ListStacksResponse",
    "influxdb_client.domain.log_event.LogEvent",
    "influxdb_client.domain.logs.Logs",
    "influxdb_client.domain.measurement_schema.MeasurementSchema",
    "influxdb_client.domain.measurement_schema_column.MeasurementSchemaColumn",
    "influxdb_client.domain.measurement_schema_create_request.MeasurementSchemaCreateRequest",
    "influxdb_client.domain.measurement_schema_list.MeasurementSchemaList",
    "influxdb_client.domain.measurement_schema_update_request.MeasurementSchemaUpdateRequest",
    "influxdb_client.domain.metadata_backup.MetadataBackup",
    "influxdb_client.domain.model_property.ModelProperty",
    "influxdb_client.domain.node.Node",
    "influxdb_client.domain.notification_endpoint.NotificationEndpoint",
    "influxdb_client.domain.notification_endpoint_base.NotificationEndpointBase",
    "influxdb_client.domain.notification_endpoint_base_links.NotificationEndpointBaseLinks",
    "influxdb_client.domain.notification_endpoint_type.NotificationEndpointType",
    "influxdb_client.domain.notification_endpoint_update.NotificationEndpointUpdate",
    "influxdb_client.domain.notification_endpoints.NotificationEndpoints",
    "influxdb_client.domain.notification_rule.NotificationRule",
    "influxdb_client.domain.notification_rule_base.NotificationRuleBase",
    "influxdb_client.domain.notification_rule_base_links.NotificationRuleBaseLinks",
    "influxdb_client.domain.notification_rule_update.NotificationRuleUpdate",
    "influxdb_client.domain.notification_rules.NotificationRules",
    "influxdb_client.domain.onboarding_request.OnboardingRequest",
    "influxdb_client.domain.onboarding_response.OnboardingResponse",
    "influxdb_client.domain.organization.Organization",
    "influxdb_client.domain.organization_links.OrganizationLinks",
    "influxdb_client.domain.organizations.Organizations",
    "influxdb_client.domain.package.Package",
    "influxdb_client.domain.package_clause.PackageClause",
    "influxdb_client.domain.password_reset_body.PasswordResetBody",
    "influxdb_client.domain.patch_bucket_request.PatchBucketRequest",
    "influxdb_client.domain.patch_dashboard_request.PatchDashboardRequest",
    "influxdb_client.domain.patch_organization_request.PatchOrganizationRequest",
    "influxdb_client.domain.patch_retention_rule.PatchRetentionRule",
    "influxdb_client.domain.patch_stack_request.PatchStackRequest",
    "influxdb_client.domain.patch_stack_request_additional_resources.PatchStackRequestAdditionalResources",
    "influxdb_client.domain.permission.Permission",
    "influxdb_client.domain.permission_resource.PermissionResource",
    "influxdb_client.domain.post_bucket_request.PostBucketRequest",
    "influxdb_client.domain.post_check.PostCheck",
    "influxdb_client.domain.post_notification_endpoint.PostNotificationEndpoint",
    "influxdb_client.domain.post_notification_rule.PostNotificationRule",
    "influxdb_client.domain.post_organization_request.PostOrganizationRequest",
    "influxdb_client.domain.post_restore_kv_response.PostRestoreKVResponse",
    "influxdb_client.domain.post_stack_request.PostStackRequest",
    "influxdb_client.domain.query.Query",
    "influxdb_client.domain.query_edit_mode.QueryEditMode",
    "influxdb_client.domain.query_variable_properties_values.QueryVariablePropertiesValues",
    "influxdb_client.domain.ready.Ready",
    "influxdb_client.domain.remote_connection.RemoteConnection",
    "influxdb_client.domain.remote_connection_creation_request.RemoteConnectionCreationRequest",
    "influxdb_client.domain.remote_connection_update_request.RemoteConnectionUpdateRequest",
    "influxdb_client.domain.remote_connections.RemoteConnections",
    "influxdb_client.domain.renamable_field.RenamableField",
    "influxdb_client.domain.replication.Replication",
    "influxdb_client.domain.replication_creation_request.ReplicationCreationRequest",
    "influxdb_client.domain.replication_update_request.ReplicationUpdateRequest",
    "influxdb_client.domain.replications.Replications",
    "influxdb_client.domain.resource_members.ResourceMembers",
    "influxdb_client.domain.resource_members_links.ResourceMembersLinks",
    "influxdb_client.domain.resource_owners.ResourceOwners",
    "influxdb_client.domain.restored_bucket_mappings.RestoredBucketMappings",
    "influxdb_client.domain.retention_policy_manifest.RetentionPolicyManifest",
    "influxdb_client.domain.routes.Routes",
    "influxdb_client.domain.routes_external.RoutesExternal",
    "influxdb_client.domain.routes_query.RoutesQuery",
    "influxdb_client.domain.routes_system.RoutesSystem",
    "influxdb_client.domain.rule_status_level.RuleStatusLevel",
    "influxdb_client.domain.run.Run",
    "influxdb_client.domain.run_links.RunLinks",
    "influxdb_client.domain.run_manually.RunManually",
    "influxdb_client.domain.runs.Runs",
    "influxdb_client.domain.schema_type.SchemaType",
    "influxdb_client.domain.scraper_target_request.ScraperTargetRequest",
    "influxdb_client.domain.scraper_target_responses.ScraperTargetResponses",
    "influxdb_client.domain.script.Script",
    "influxdb_client.domain.script_create_request.ScriptCreateRequest",
    "influxdb_client.domain.script_invocation_params.ScriptInvocationParams",
    "influxdb_client.domain.script_language.ScriptLanguage",
    "influxdb_client.domain.script_update_request.ScriptUpdateRequest",
    "influxdb_client.domain.scripts.Scripts",
    "influxdb_client.domain.secret_keys.SecretKeys",
    "influxdb_client.domain.shard_group_manifest.ShardGroupManifest",
    "influxdb_client.domain.shard_manifest.ShardManifest",
    "influxdb_client.domain.shard_owner.ShardOwner",
    "influxdb_client.domain.source.Source",
    "influxdb_client.domain.source_links.SourceLinks",
    "influxdb_client.domain.sources.Sources",
    "influxdb_client.domain.stack.Stack",
    "influxdb_client.domain.stack_associations.StackAssociations",
    "influxdb_client.domain.stack_events.StackEvents",
    "influxdb_client.domain.stack_links.StackLinks",
    "influxdb_client.domain.stack_resources.StackResources",
    "influxdb_client.domain.statement.Statement",
    "influxdb_client.domain.static_legend.StaticLegend",
    "influxdb_client.domain.status_rule.StatusRule",
    "influxdb_client.domain.subscription_manifest.SubscriptionManifest",
    "influxdb_client.domain.table_view_properties_table_options.TableViewPropertiesTableOptions",
    "influxdb_client.domain.tag_rule.TagRule",
    "influxdb_client.domain.task.Task",
    "influxdb_client.domain.task_create_request.TaskCreateRequest",
    "influxdb_client.domain.task_links.TaskLinks",
    "influxdb_client.domain.task_status_type.TaskStatusType",
    "influxdb_client.domain.task_update_request.TaskUpdateRequest",
    "influxdb_client.domain.tasks.Tasks",
    "influxdb_client.domain.telegraf_plugin.TelegrafPlugin",
    "influxdb_client.domain.telegraf_plugin_request.TelegrafPluginRequest",
    "influxdb_client.domain.telegraf_plugin_request_plugins.TelegrafPluginRequestPlugins",
    "influxdb_client.domain.telegraf_plugins.TelegrafPlugins",
    "influxdb_client.domain.telegraf_request.TelegrafRequest",
    "influxdb_client.domain.telegraf_request_metadata.TelegrafRequestMetadata",
    "influxdb_client.domain.telegrafs.Telegrafs",
    "influxdb_client.domain.template_apply.TemplateApply",
    "influxdb_client.domain.template_apply_remotes.TemplateApplyRemotes",
    "influxdb_client.domain.template_apply_template.TemplateApplyTemplate",
    "influxdb_client.domain.template_chart.TemplateChart",
    "influxdb_client.domain.template_export_by_id.TemplateExportByID",
    "influxdb_client.domain.template_export_by_id_org_ids.TemplateExportByIDOrgIDs",
    "influxdb_client.domain.template_export_by_id_resource_filters.TemplateExportByIDResourceFilters",
    "influxdb_client.domain.template_export_by_id_resources.TemplateExportByIDResources",
    "influxdb_client.domain.template_export_by_name.TemplateExportByName",
    "influxdb_client.domain.template_export_by_name_resources.TemplateExportByNameResources",
    "influxdb_client.domain.template_kind.TemplateKind",
    "influxdb_client.domain.template_summary.TemplateSummary",
    "influxdb_client.domain.template_summary_diff.TemplateSummaryDiff",
    "influxdb_client.domain.template_summary_diff_buckets.TemplateSummaryDiffBuckets",
    "influxdb_client.domain.template_summary_diff_buckets_new_old.TemplateSummaryDiffBucketsNewOld",
    "influxdb_client.domain.template_summary_diff_checks.TemplateSummaryDiffChecks",
    "influxdb_client.domain.template_summary_diff_dashboards.TemplateSummaryDiffDashboards",
    "influxdb_client.domain.template_summary_diff_dashboards_new_old.TemplateSummaryDiffDashboardsNewOld",
    "influxdb_client.domain.template_summary_diff_label_mappings.TemplateSummaryDiffLabelMappings",
    "influxdb_client.domain.template_summary_diff_labels.TemplateSummaryDiffLabels",
    "influxdb_client.domain.template_summary_diff_labels_new_old.TemplateSummaryDiffLabelsNewOld",
    "influxdb_client.domain.template_summary_diff_notification_endpoints.TemplateSummaryDiffNotificationEndpoints",
    "influxdb_client.domain.template_summary_diff_notification_rules.TemplateSummaryDiffNotificationRules",
    "influxdb_client.domain.template_summary_diff_notification_rules_new_old.TemplateSummaryDiffNotificationRulesNewOld",
    "influxdb_client.domain.template_summary_diff_tasks.TemplateSummaryDiffTasks",
    "influxdb_client.domain.template_summary_diff_tasks_new_old.TemplateSummaryDiffTasksNewOld",
    "influxdb_client.domain.template_summary_diff_telegraf_configs.TemplateSummaryDiffTelegrafConfigs",
    "influxdb_client.domain.template_summary_diff_variables.TemplateSummaryDiffVariables",
    "influxdb_client.domain.template_summary_diff_variables_new_old.TemplateSummaryDiffVariablesNewOld",
    "influxdb_client.domain.template_summary_errors.TemplateSummaryErrors",
    "influxdb_client.domain.template_summary_label.TemplateSummaryLabel",
    "influxdb_client.domain.template_summary_label_properties.TemplateSummaryLabelProperties",
    "influxdb_client.domain.template_summary_summary.TemplateSummarySummary",
    "influxdb_client.domain.template_summary_summary_buckets.TemplateSummarySummaryBuckets",
    "influxdb_client.domain.template_summary_summary_dashboards.TemplateSummarySummaryDashboards",
    "influxdb_client.domain.template_summary_summary_label_mappings.TemplateSummarySummaryLabelMappings",
    "influxdb_client.domain.template_summary_summary_notification_rules.TemplateSummarySummaryNotificationRules",
    "influxdb_client.domain.template_summary_summary_status_rules.TemplateSummarySummaryStatusRules",
    "influxdb_client.domain.template_summary_summary_tag_rules.TemplateSummarySummaryTagRules",
    "influxdb_client.domain.template_summary_summary_tasks.TemplateSummarySummaryTasks",
    "influxdb_client.domain.template_summary_summary_variables.TemplateSummarySummaryVariables",
    "influxdb_client.domain.threshold.Threshold",
    "influxdb_client.domain.threshold_base.ThresholdBase",
    "influxdb_client.domain.user.User",
    "influxdb_client.domain.user_response.UserResponse",
    "influxdb_client.domain.user_response_links.UserResponseLinks",
    "influxdb_client.domain.users.Users",
    "influxdb_client.domain.variable.Variable",
    "influxdb_client.domain.variable_links.VariableLinks",
    "influxdb_client.domain.variable_properties.VariableProperties",
    "influxdb_client.domain.variables.Variables",
    "influxdb_client.domain.view.View",
    "influxdb_client.domain.view_links.ViewLinks",
    "influxdb_client.domain.view_properties.ViewProperties",
    "influxdb_client.domain.views.Views",
    "influxdb_client.domain.write_precision.WritePrecision",
    "influxdb_client.domain.xy_geom.XYGeom",
    "inspect.BoundArguments",
    "inspect.Parameter",
    "inspect.Signature",
    "invoke.config.DataProxy",
    "invoke.tasks.Call",
    "invoke.tasks.Task",
    "ipaddress._BaseAddress",
    "ipaddress._BaseNetwork",
    "jack.Port",
    "jack.TransportState",
    "jinja2.nodes.Node",
    "jinja2.runtime.Undefined",
    "keyboard._keyboard_event.KeyboardEvent",
    "ldap3.abstract.attrDef.AttrDef",
    "ldap3.abstract.attribute.Attribute",
    "ldap3.abstract.entry.EntryBase",
    "ldap3.utils.ciDict.CaseInsensitiveDict",
    "lib2to3.pgen2.pgen.DFAState",
    "lib2to3.pytree.Base",
    "libcst._nodes.base.CSTNode",
    "libcst._parser.parso.pgen2.generator.DFAState",
    "libcst._parser.parso.utils.PythonVersionInfo",
    "marshmallow.orderedset.OrderedSet",
    "mock.mock._ANY",
    "mock.mock._Call",
    "netaddr.eui.EUI",
    "netaddr.eui.IAB",
    "netaddr.eui.OUI",
    "netaddr.ip.BaseIP",
    "netaddr.ip.sets.IPSet",
    "numbers.Complex",
    "openpyxl.cell.read_only.ReadOnlyCell",
    "openpyxl.chart.reference.Reference",
    "openpyxl.comments.comments.Comment",
    "openpyxl.descriptors.serialisable.Serialisable",
    "openpyxl.styles.proxy.StyleProxy",
    "openpyxl.worksheet.cell_range.MultiCellRange",
    "optparse.Values",
    "packaging._structures.InfinityType",
    "packaging._structures.NegativeInfinityType",
    "packaging.markers.Marker",
    "packaging.requirements.Requirement",
    "packaging.specifiers.BaseSpecifier",
    "packaging.tags.Tag",
    "packaging.version._BaseVersion",
    "paho.mqtt.client.MQTTMessage",
    "paho.mqtt.reasoncodes.ReasonCodes",
    "paramiko.pkey.PKey",
    "paramiko.pkey.PublicBlob",
    "parso.normalizer.Issue",
    "parso.pgen2.generator.DFAState",
    "parso.python.tree.UsedNamesMapping",
    "parso.python.tree._StringComparisonMixin",
    "parso.utils.PythonVersionInfo",
    "passlib.utils.SequenceMixin",
    "passlib.utils.compat._ordered_dict.OrderedDict",
    "pathlib.PurePath",
    "peewee.ColumnBase",
    "peewee.CompositeKey",
    "peewee.Model",
    "peewee._HashableSource",
    "pika.adapters.select_connection._Timeout",
    "pika.amqp_object.AMQPObject",
    "pika.connection.Parameters",
    "pika.credentials.ExternalCredentials",
    "pika.credentials.PlainCredentials",
    "pip._internal.index.collector.CacheablePageContent",
    "pip._internal.models.format_control.FormatControl",
    "pip._internal.resolution.resolvelib.candidates.AlreadyInstalledCandidate",
    "pip._internal.resolution.resolvelib.candidates.ExtrasCandidate",
    "pip._internal.resolution.resolvelib.candidates._InstallRequirementBackedCandidate",
    "pip._internal.utils.hashes.Hashes",
    "pip._internal.utils.misc.HiddenText",
    "pip._internal.utils.models.KeyBasedCompareMixin",
    "pip._vendor.distlib.compat.OrderedDict",
    "pip._vendor.distlib.database.Distribution",
    "pip._vendor.distlib.database.EggInfoDistribution",
    "pip._vendor.distlib.database.InstalledDistribution",
    "pip._vendor.distlib.util.ExportEntry",
    "pip._vendor.distlib.version.Matcher",
    "pip._vendor.distlib.version.Version",
    "pip._vendor.msgpack.ext.Timestamp",
    "pip._vendor.packaging._structures.InfinityType",
    "pip._vendor.packaging._structures.NegativeInfinityType",
    "pip._vendor.packaging.specifiers.BaseSpecifier",
    "pip._vendor.packaging.tags.Tag",
    "pip._vendor.packaging.version._BaseVersion",
    "pip._vendor.pkg_resources.Distribution",
    "pip._vendor.pkg_resources.Requirement",
    "pip._vendor.pyparsing.core.ParserElement",
    "pip._vendor.requests.auth.HTTPBasicAuth",
    "pip._vendor.requests.auth.HTTPDigestAuth",
    "pip._vendor.requests.structures.CaseInsensitiveDict",
    "pip._vendor.rich.style.Style",
    "pip._vendor.rich.text.Text",
    "pip._vendor.typing_extensions.ParamSpec",
    "pip._vendor.typing_extensions.ParamSpecArgs",
    "pip._vendor.typing_extensions.ParamSpecKwargs",
    "pip._vendor.typing_extensions.TypeVarTuple",
    "pip._vendor.typing_extensions._AnnotatedAlias",
    "pip._vendor.typing_extensions._LiteralGenericAlias",
    "pip._vendor.typing_extensions._ProtocolMeta",
    "pip._vendor.urllib3._collections.HTTPHeaderDict",
    "pkg_resources.Requirement",
    "plistlib.UID",
    "polib._BaseEntry",
    "polib._BaseFile",
    "prompt_toolkit.completion.base.Completion",
    "prompt_toolkit.document.Document",
    "prompt_toolkit.key_binding.key_processor.KeyPress",
    "psutil.Process",
    "psutil._pswindows.WindowsService",
    "psycopg2._psycopg.Column",
    "psycopg2._psycopg.Notify",
    "psycopg2._range.Range",
    "psycopg2.sql.Composable",
    "psycopg2.tz.FixedOffsetTimezone",
    "pyasn1.type.base.ConstructedAsn1Type",
    "pyasn1.type.base.SimpleAsn1Type",
    "pyasn1.type.constraint.AbstractConstraint",
    "pyasn1.type.namedtype.NamedType",
    "pyasn1.type.namedtype.NamedTypes",
    "pyasn1.type.namedval.NamedValues",
    "pyasn1.type.tag.Tag",
    "pyasn1.type.tag.TagSet",
    "pyasn1.type.univ.Choice",
    "pyflakes.checker.VariableKey",
    "pymysql.DBAPISet",
    "pynput._util.Events.Event",
    "pynput.keyboard._base.KeyCode",
    "pytest_lazyfixture.LazyFixture",
    "redis.asyncio.cluster.ClusterNode",
    "redis.cluster.ClusterNode",
    "redis.commands.graph.edge.Edge",
    "redis.commands.graph.node.Node",
    "redis.commands.graph.path.Path",
    "sqlalchemy.engine.result.RMKeyView",
    "sqlalchemy.engine.row.ROMappingView",
    "sqlalchemy.engine.row.Row",
    "sqlalchemy.engine.url.URL",
    "sqlalchemy.ext.associationproxy.AmbiguousAssociationProxyInstance",
    "sqlalchemy.ext.associationproxy.ObjectAssociationProxyInstance",
    "sqlalchemy.ext.associationproxy._AssociationDict",
    "sqlalchemy.ext.associationproxy._AssociationList",
    "sqlalchemy.ext.associationproxy._AssociationSet",
    "sqlalchemy.ext.asyncio.base.ProxyComparable",
    "sqlalchemy.orm.attributes.AttributeEvent",
    "sqlalchemy.orm.descriptor_props.CompositeProperty.Comparator",
    "sqlalchemy.orm.instrumentation.ClassManager",
    "sqlalchemy.orm.path_registry.PathRegistry",
    "sqlalchemy.orm.relationships.RelationshipProperty.Comparator",
    "sqlalchemy.sql.annotation.Annotated",
    "sqlalchemy.sql.base.ColumnCollection",
    "sqlalchemy.sql.base.ColumnSet",
    "sqlalchemy.sql.base.Options",
    "sqlalchemy.sql.crud._multiparam_column",
    "sqlalchemy.sql.operators.ColumnOperators",
    "sqlalchemy.sql.operators.custom_op",
    "sqlalchemy.sql.selectable.ForUpdateArg",
    "sqlalchemy.sql.traversals.CacheKey",
    "sqlalchemy.testing.entities.ComparableMixin",
    "sqlalchemy.testing.pickleable.Bar",
    "sqlalchemy.testing.pickleable.BrokenComparable",
    "sqlalchemy.testing.pickleable.Foo",
    "sqlalchemy.testing.pickleable.NotComparable",
    "sqlalchemy.testing.pickleable.OldSchool",
    "sqlalchemy.testing.schema.eq_clause_element",
    "sqlalchemy.testing.schema.eq_type_affinity",
    "sqlalchemy.util._collections.IdentitySet",
    "sqlite3.dbapi2.Row",
    "statistics.NormalDist",
    "str",
    "tensorflow.Tensor",
    "testslide.import_profiler.ImportedModule",
    "testslide.matchers.Any",
    "testslide.matchers.AnyFalsey",
    "testslide.matchers.AnyTruthy",
    "testslide.matchers.AnyWithCall",
    "testslide.matchers.EmptyDict",
    "testslide.matchers.EmptyList",
    "testslide.matchers.NotEmptyDict",
    "testslide.matchers.NotEmptyList",
    "testslide.matchers.RegexMatches",
    "testslide.matchers.StrContaining",
    "testslide.matchers.StrEndingWith",
    "testslide.matchers.StrStartingWith",
    "testslide.matchers._AndMatcher",
    "testslide.matchers._InvMatcher",
    "testslide.matchers._OrMatcher",
    "testslide.matchers._RichComparison",
    "testslide.matchers._XorMatcher",
    "tkinter.Variable",
    "tkinter.font.Font",
    "tqdm.utils.Comparable",
    "tqdm.utils.DisableOnWriteError",
    "tqdm.utils.SimpleTextIOWrapper",
    "traceback.FrameSummary",
    "traceback.TracebackException",
    "tracemalloc.Frame",
    "tracemalloc.Statistic",
    "tracemalloc.StatisticDiff",
    "tracemalloc.Trace",
    "tracemalloc.Traceback",
    "traitlets.traitlets._CallbackWrapper",
    "tree_sitter.binding.Node",
    "types.MappingProxyType",
    "types.MethodWrapperType",
    "typeshed.typeshed.stdlib._collections_abc.dict_items",
    "typeshed.typeshed.stdlib._collections_abc.dict_keys",
    "typeshed.typeshed.stdlib._decimal.Decimal",
    "typeshed.typeshed.stdlib._tkinter.Tcl_Obj",
    "typeshed.typeshed.stdlib._weakref.CallableProxyType",
    "typeshed.typeshed.stdlib._weakref.ProxyType",
    "typeshed.typeshed.stdlib._weakref.ReferenceType",
    "typeshed.typeshed.stdlib._weakrefset.WeakSet",
    "typeshed.typeshed.stdlib.argparse.Namespace",
    "typeshed.typeshed.stdlib.array.array",
    "typeshed.typeshed.stdlib.asyncio.events.TimerHandle",
    "typeshed.typeshed.stdlib.builtins.bytearray",
    "typeshed.typeshed.stdlib.builtins.bytes",
    "typeshed.typeshed.stdlib.builtins.complex",
    "typeshed.typeshed.stdlib.builtins.dict",
    "typeshed.typeshed.stdlib.builtins.float",
    "typeshed.typeshed.stdlib.builtins.frozenset",
    "typeshed.typeshed.stdlib.builtins.int",
    "typeshed.typeshed.stdlib.builtins.list",
    "typeshed.typeshed.stdlib.builtins.memoryview",
    "typeshed.typeshed.stdlib.builtins.object",
    "typeshed.typeshed.stdlib.builtins.range",
    "typeshed.typeshed.stdlib.builtins.set",
    "typeshed.typeshed.stdlib.builtins.slice",
    "typeshed.typeshed.stdlib.builtins.str",
    "typeshed.typeshed.stdlib.builtins.tuple",
    "typeshed.typeshed.stdlib.collections.OrderedDict",
    "typeshed.typeshed.stdlib.collections.UserList",
    "typeshed.typeshed.stdlib.collections.UserString",
    "typeshed.typeshed.stdlib.collections.deque",
    "typeshed.typeshed.stdlib.contextvars.Context",
    "typeshed.typeshed.stdlib.datetime.date",
    "typeshed.typeshed.stdlib.datetime.time",
    "typeshed.typeshed.stdlib.datetime.timedelta",
    "typeshed.typeshed.stdlib.datetime.timezone",
    "typeshed.typeshed.stdlib.distutils.version.Version",
    "typeshed.typeshed.stdlib.email.charset.Charset",
    "typeshed.typeshed.stdlib.email.header.Header",
    "typeshed.typeshed.stdlib.email.headerregistry.Address",
    "typeshed.typeshed.stdlib.email.headerregistry.Group",
    "typeshed.typeshed.stdlib.fractions.Fraction",
    "typeshed.typeshed.stdlib.http.cookies.Morsel",
    "typeshed.typeshed.stdlib.importlib.machinery.ExtensionFileLoader",
    "typeshed.typeshed.stdlib.importlib.machinery.ModuleSpec",
    "typeshed.typeshed.stdlib.importlib.metadata.EntryPoint",
    "typeshed.typeshed.stdlib.inspect.BoundArguments",
    "typeshed.typeshed.stdlib.inspect.Parameter",
    "typeshed.typeshed.stdlib.inspect.Signature",
    "typeshed.typeshed.stdlib.ipaddress.IPv4Interface",
    "typeshed.typeshed.stdlib.ipaddress.IPv6Address",
    "typeshed.typeshed.stdlib.ipaddress._BaseAddress",
    "typeshed.typeshed.stdlib.ipaddress._BaseNetwork",
    "typeshed.typeshed.stdlib.lib2to3.pgen2.pgen.DFAState",
    "typeshed.typeshed.stdlib.lib2to3.pytree.Base",
    "typeshed.typeshed.stdlib.numbers.Complex",
    "typeshed.typeshed.stdlib.optparse.Values",
    "typeshed.typeshed.stdlib.plistlib.UID",
    "typeshed.typeshed.stdlib.re.Pattern",
    "typeshed.typeshed.stdlib.sqlite3.dbapi2.Row",
    "typeshed.typeshed.stdlib.ssl.SSLSession",
    "typeshed.typeshed.stdlib.statistics.NormalDist",
    "typeshed.typeshed.stdlib.tkinter.Variable",
    "typeshed.typeshed.stdlib.tkinter.font.Font",
    "typeshed.typeshed.stdlib.traceback.FrameSummary",
    "typeshed.typeshed.stdlib.traceback.TracebackException",
    "typeshed.typeshed.stdlib.tracemalloc.Frame",
    "typeshed.typeshed.stdlib.tracemalloc.Statistic",
    "typeshed.typeshed.stdlib.tracemalloc.StatisticDiff",
    "typeshed.typeshed.stdlib.tracemalloc.Trace",
    "typeshed.typeshed.stdlib.tracemalloc.Traceback",
    "typeshed.typeshed.stdlib.types.BuiltinFunctionType",
    "typeshed.typeshed.stdlib.types.CodeType",
    "typeshed.typeshed.stdlib.types.GenericAlias",
    "typeshed.typeshed.stdlib.types.MappingProxyType",
    "typeshed.typeshed.stdlib.types.MethodType",
    "typeshed.typeshed.stdlib.types.MethodWrapperType",
    "typeshed.typeshed.stdlib.types.SimpleNamespace",
    "typeshed.typeshed.stdlib.types._Cell",
    "typeshed.typeshed.stdlib.typing.AbstractSet",
    "typeshed.typeshed.stdlib.typing.ForwardRef",
    "typeshed.typeshed.stdlib.typing.Mapping",
    "typeshed.typeshed.stdlib.typing_extensions.Doc",
    "typeshed.typeshed.stdlib.unittest.case.TestCase",
    "typeshed.typeshed.stdlib.unittest.mock._ANY",
    "typeshed.typeshed.stdlib.unittest.mock._Call",
    "typeshed.typeshed.stdlib.unittest.suite.BaseTestSuite",
    "typeshed.typeshed.stdlib.uuid.UUID",
    "typeshed.typeshed.stdlib.weakref.WeakMethod",
    "typeshed.typeshed.stdlib.xml.dom.minidom.NamedNodeMap",
    "typeshed.typeshed.stdlib.xml.etree.ElementTree.QName",
    "typeshed.typeshed.stdlib.xmlrpc.client.Binary",
    "typeshed.typeshed.stdlib.xmlrpc.client.DateTime",
    "typeshed.typeshed.stubs.JACK-Client.jack.Port",
    "typeshed.typeshed.stubs.JACK-Client.jack.TransportState",
    "typeshed.typeshed.stubs.Pillow.PIL.Image.Image",
    "typeshed.typeshed.stubs.Pillow.PIL.ImageMath._Operand",
    "typeshed.typeshed.stubs.Pillow.PIL.PdfParser.IndirectReference",
    "typeshed.typeshed.stubs.Pillow.PIL.PdfParser.PdfName",
    "typeshed.typeshed.stubs.Pillow.PIL.TiffImagePlugin.IFDRational",
    "typeshed.typeshed.stubs.PyMySQL.pymysql.DBAPISet",
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.element.Tag",
    "typeshed.typeshed.stubs.boltons.boltons.dictutils.ManyToMany",
    "typeshed.typeshed.stubs.boltons.boltons.ioutils.SpooledIOBase",
    "typeshed.typeshed.stubs.boltons.boltons.mathutils.Bits",
    "typeshed.typeshed.stubs.boltons.boltons.urlutils.URL",
    "typeshed.typeshed.stubs.boto.boto.s3.tagging.Tag",
    "typeshed.typeshed.stubs.boto.boto.utils.Password",
    "typeshed.typeshed.stubs.braintree.braintree.credit_card_verification.CreditCardVerification",
    "typeshed.typeshed.stubs.braintree.braintree.search.Search.IsNodeBuilder",
    "typeshed.typeshed.stubs.braintree.braintree.search.Search.KeyValueNodeBuilder",
    "typeshed.typeshed.stubs.braintree.braintree.search.Search.MultipleValueNodeBuilder",
    "typeshed.typeshed.stubs.braintree.braintree.search.Search.RangeNodeBuilder",
    "typeshed.typeshed.stubs.braintree.braintree.us_bank_account_verification.UsBankAccountVerification",
    "typeshed.typeshed.stubs.caldav.caldav.lib.url.URL",
    "typeshed.typeshed.stubs.caldav.caldav.requests.HTTPBearerAuth",
    "typeshed.typeshed.stubs.cffi._cffi_backend._CDataBase",
    "typeshed.typeshed.stubs.cffi._cffi_backend.buffer",
    "typeshed.typeshed.stubs.cffi.cffi.backend_ctypes.CTypesData",
    "typeshed.typeshed.stubs.cffi.cffi.model.BaseType",
    "typeshed.typeshed.stubs.console-menu.consolemenu.console_menu.MenuItem",
    "typeshed.typeshed.stubs.dockerfile-parse.dockerfile_parse.parser.KeyValues",
    "typeshed.typeshed.stubs.fpdf2.fpdf.line_break.Fragment",
    "typeshed.typeshed.stubs.gdb.gdb.Value",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb._datastore_query.Cursor",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb._options.Options",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.global_cache.MemcacheCache.KeyNotSet",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.key.Key",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.model.Index",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.model.IndexProperty",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.model.IndexState",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.model.Model",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.model.Property",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.model.User",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.model._BaseValue",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.query.Node",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.query.ParameterizedThing",
    "typeshed.typeshed.stubs.httplib2.httplib2.Authentication",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.client.write_api._BatchItemKey",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.add_resource_member_request_body.AddResourceMemberRequestBody",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.analyze_query_response.AnalyzeQueryResponse",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.analyze_query_response_errors.AnalyzeQueryResponseErrors",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.ast_response.ASTResponse",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.authorization_update_request.AuthorizationUpdateRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.authorizations.Authorizations",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.axes.Axes",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.axis.Axis",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.axis_scale.AxisScale",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.bucket.Bucket",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.bucket_links.BucketLinks",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.bucket_metadata_manifest.BucketMetadataManifest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.bucket_retention_rules.BucketRetentionRules",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.bucket_shard_mapping.BucketShardMapping",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.buckets.Buckets",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.builder_aggregate_function_type.BuilderAggregateFunctionType",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.builder_config.BuilderConfig",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.builder_config_aggregate_window.BuilderConfigAggregateWindow",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.builder_functions_type.BuilderFunctionsType",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.builder_tags_type.BuilderTagsType",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.cell.Cell",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.cell_links.CellLinks",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.cell_update.CellUpdate",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.check.Check",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.check_base.CheckBase",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.check_base_links.CheckBaseLinks",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.check_patch.CheckPatch",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.check_status_level.CheckStatusLevel",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.checks.Checks",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.column_data_type.ColumnDataType",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.column_semantic_type.ColumnSemanticType",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.config.Config",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.create_cell.CreateCell",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.create_dashboard_request.CreateDashboardRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.dashboard_color.DashboardColor",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.dashboard_query.DashboardQuery",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.dashboards.Dashboards",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.dbr_ps.DBRPs",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.dbrp.DBRP",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.dbrp_create.DBRPCreate",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.dbrp_get.DBRPGet",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.dbrp_update.DBRPUpdate",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.decimal_places.DecimalPlaces",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.delete_predicate_request.DeletePredicateRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.dialect.Dialect",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.dict_item.DictItem",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.duration.Duration",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.error.Error",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.field.Field",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.file.File",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.flux_response.FluxResponse",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.flux_suggestion.FluxSuggestion",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.flux_suggestions.FluxSuggestions",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.health_check.HealthCheck",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.import_declaration.ImportDeclaration",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.is_onboarding.IsOnboarding",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.label.Label",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.label_create_request.LabelCreateRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.label_mapping.LabelMapping",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.label_response.LabelResponse",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.label_update.LabelUpdate",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.labels_response.LabelsResponse",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.language_request.LanguageRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.line_protocol_error.LineProtocolError",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.line_protocol_length_error.LineProtocolLengthError",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.links.Links",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.list_stacks_response.ListStacksResponse",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.log_event.LogEvent",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.logs.Logs",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.measurement_schema.MeasurementSchema",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.measurement_schema_column.MeasurementSchemaColumn",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.measurement_schema_create_request.MeasurementSchemaCreateRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.measurement_schema_list.MeasurementSchemaList",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.measurement_schema_update_request.MeasurementSchemaUpdateRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.metadata_backup.MetadataBackup",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.model_property.ModelProperty",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.node.Node",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.notification_endpoint.NotificationEndpoint",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.notification_endpoint_base.NotificationEndpointBase",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.notification_endpoint_base_links.NotificationEndpointBaseLinks",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.notification_endpoint_type.NotificationEndpointType",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.notification_endpoint_update.NotificationEndpointUpdate",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.notification_endpoints.NotificationEndpoints",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.notification_rule.NotificationRule",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.notification_rule_base.NotificationRuleBase",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.notification_rule_base_links.NotificationRuleBaseLinks",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.notification_rule_update.NotificationRuleUpdate",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.notification_rules.NotificationRules",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.onboarding_request.OnboardingRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.onboarding_response.OnboardingResponse",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.organization.Organization",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.organization_links.OrganizationLinks",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.organizations.Organizations",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.package.Package",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.package_clause.PackageClause",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.password_reset_body.PasswordResetBody",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.patch_bucket_request.PatchBucketRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.patch_dashboard_request.PatchDashboardRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.patch_organization_request.PatchOrganizationRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.patch_retention_rule.PatchRetentionRule",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.patch_stack_request.PatchStackRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.patch_stack_request_additional_resources.PatchStackRequestAdditionalResources",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.permission.Permission",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.permission_resource.PermissionResource",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.post_bucket_request.PostBucketRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.post_check.PostCheck",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.post_notification_endpoint.PostNotificationEndpoint",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.post_notification_rule.PostNotificationRule",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.post_organization_request.PostOrganizationRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.post_restore_kv_response.PostRestoreKVResponse",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.post_stack_request.PostStackRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.query.Query",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.query_edit_mode.QueryEditMode",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.query_variable_properties_values.QueryVariablePropertiesValues",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.ready.Ready",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.remote_connection.RemoteConnection",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.remote_connection_creation_request.RemoteConnectionCreationRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.remote_connection_update_request.RemoteConnectionUpdateRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.remote_connections.RemoteConnections",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.renamable_field.RenamableField",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.replication.Replication",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.replication_creation_request.ReplicationCreationRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.replication_update_request.ReplicationUpdateRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.replications.Replications",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.resource_members.ResourceMembers",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.resource_members_links.ResourceMembersLinks",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.resource_owners.ResourceOwners",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.restored_bucket_mappings.RestoredBucketMappings",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.retention_policy_manifest.RetentionPolicyManifest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.routes.Routes",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.routes_external.RoutesExternal",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.routes_query.RoutesQuery",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.routes_system.RoutesSystem",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.rule_status_level.RuleStatusLevel",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.run.Run",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.run_links.RunLinks",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.run_manually.RunManually",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.runs.Runs",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.schema_type.SchemaType",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.scraper_target_request.ScraperTargetRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.scraper_target_responses.ScraperTargetResponses",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.script.Script",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.script_create_request.ScriptCreateRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.script_invocation_params.ScriptInvocationParams",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.script_language.ScriptLanguage",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.script_update_request.ScriptUpdateRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.scripts.Scripts",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.secret_keys.SecretKeys",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.shard_group_manifest.ShardGroupManifest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.shard_manifest.ShardManifest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.shard_owner.ShardOwner",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.source.Source",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.source_links.SourceLinks",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.sources.Sources",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.stack.Stack",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.stack_associations.StackAssociations",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.stack_events.StackEvents",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.stack_links.StackLinks",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.stack_resources.StackResources",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.statement.Statement",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.static_legend.StaticLegend",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.status_rule.StatusRule",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.subscription_manifest.SubscriptionManifest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.table_view_properties_table_options.TableViewPropertiesTableOptions",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.tag_rule.TagRule",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.task.Task",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.task_create_request.TaskCreateRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.task_links.TaskLinks",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.task_status_type.TaskStatusType",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.task_update_request.TaskUpdateRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.tasks.Tasks",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.telegraf_plugin.TelegrafPlugin",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.telegraf_plugin_request.TelegrafPluginRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.telegraf_plugin_request_plugins.TelegrafPluginRequestPlugins",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.telegraf_plugins.TelegrafPlugins",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.telegraf_request.TelegrafRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.telegraf_request_metadata.TelegrafRequestMetadata",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.telegrafs.Telegrafs",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_apply.TemplateApply",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_apply_remotes.TemplateApplyRemotes",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_apply_template.TemplateApplyTemplate",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_chart.TemplateChart",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_export_by_id.TemplateExportByID",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_export_by_id_org_ids.TemplateExportByIDOrgIDs",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_export_by_id_resource_filters.TemplateExportByIDResourceFilters",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_export_by_id_resources.TemplateExportByIDResources",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_export_by_name.TemplateExportByName",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_export_by_name_resources.TemplateExportByNameResources",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_kind.TemplateKind",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary.TemplateSummary",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_diff.TemplateSummaryDiff",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_diff_buckets.TemplateSummaryDiffBuckets",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_diff_buckets_new_old.TemplateSummaryDiffBucketsNewOld",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_diff_checks.TemplateSummaryDiffChecks",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_diff_dashboards.TemplateSummaryDiffDashboards",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_diff_dashboards_new_old.TemplateSummaryDiffDashboardsNewOld",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_diff_label_mappings.TemplateSummaryDiffLabelMappings",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_diff_labels.TemplateSummaryDiffLabels",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_diff_labels_new_old.TemplateSummaryDiffLabelsNewOld",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_diff_notification_endpoints.TemplateSummaryDiffNotificationEndpoints",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_diff_notification_rules.TemplateSummaryDiffNotificationRules",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_diff_notification_rules_new_old.TemplateSummaryDiffNotificationRulesNewOld",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_diff_tasks.TemplateSummaryDiffTasks",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_diff_tasks_new_old.TemplateSummaryDiffTasksNewOld",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_diff_telegraf_configs.TemplateSummaryDiffTelegrafConfigs",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_diff_variables.TemplateSummaryDiffVariables",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_diff_variables_new_old.TemplateSummaryDiffVariablesNewOld",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_errors.TemplateSummaryErrors",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_label.TemplateSummaryLabel",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_label_properties.TemplateSummaryLabelProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_summary.TemplateSummarySummary",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_summary_buckets.TemplateSummarySummaryBuckets",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_summary_dashboards.TemplateSummarySummaryDashboards",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_summary_label_mappings.TemplateSummarySummaryLabelMappings",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_summary_notification_rules.TemplateSummarySummaryNotificationRules",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_summary_status_rules.TemplateSummarySummaryStatusRules",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_summary_tag_rules.TemplateSummarySummaryTagRules",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_summary_tasks.TemplateSummarySummaryTasks",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_summary_variables.TemplateSummarySummaryVariables",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.threshold.Threshold",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.threshold_base.ThresholdBase",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.user.User",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.user_response.UserResponse",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.user_response_links.UserResponseLinks",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.users.Users",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.variable.Variable",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.variable_links.VariableLinks",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.variable_properties.VariableProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.variables.Variables",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.view.View",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.view_links.ViewLinks",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.view_properties.ViewProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.views.Views",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.write_precision.WritePrecision",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.xy_geom.XYGeom",
    "typeshed.typeshed.stubs.keyboard.keyboard._keyboard_event.KeyboardEvent",
    "typeshed.typeshed.stubs.ldap3.ldap3.abstract.attrDef.AttrDef",
    "typeshed.typeshed.stubs.ldap3.ldap3.abstract.attribute.Attribute",
    "typeshed.typeshed.stubs.ldap3.ldap3.abstract.entry.EntryBase",
    "typeshed.typeshed.stubs.ldap3.ldap3.utils.ciDict.CaseInsensitiveDict",
    "typeshed.typeshed.stubs.mock.mock.mock._ANY",
    "typeshed.typeshed.stubs.mock.mock.mock._Call",
    "typeshed.typeshed.stubs.mysqlclient.MySQLdb.DBAPISet",
    "typeshed.typeshed.stubs.netaddr.netaddr.eui.EUI",
    "typeshed.typeshed.stubs.netaddr.netaddr.eui.IAB",
    "typeshed.typeshed.stubs.netaddr.netaddr.eui.OUI",
    "typeshed.typeshed.stubs.netaddr.netaddr.ip.BaseIP",
    "typeshed.typeshed.stubs.netaddr.netaddr.ip.sets.IPSet",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.cell.read_only.ReadOnlyCell",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.cell.rich_text.TextBlock",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.reference.Reference",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.comments.comments.Comment",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.serialisable.Serialisable",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.packaging.custom._TypedProperty",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.styles.proxy.StyleProxy",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.cell_range.MultiCellRange",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.print_settings.ColRange",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.print_settings.PrintTitles",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.print_settings.RowRange",
    "typeshed.typeshed.stubs.paho-mqtt.paho.mqtt.client.MQTTMessage",
    "typeshed.typeshed.stubs.paho-mqtt.paho.mqtt.reasoncodes.ReasonCodes",
    "typeshed.typeshed.stubs.paramiko.paramiko.pkey.PKey",
    "typeshed.typeshed.stubs.paramiko.paramiko.pkey.PublicBlob",
    "typeshed.typeshed.stubs.passlib.passlib.utils.SequenceMixin",
    "typeshed.typeshed.stubs.passlib.passlib.utils.compat._ordered_dict.OrderedDict",
    "typeshed.typeshed.stubs.peewee.peewee.ColumnBase",
    "typeshed.typeshed.stubs.peewee.peewee.CompositeKey",
    "typeshed.typeshed.stubs.peewee.peewee.Model",
    "typeshed.typeshed.stubs.peewee.peewee._HashableSource",
    "typeshed.typeshed.stubs.pika.pika.adapters.select_connection._Timeout",
    "typeshed.typeshed.stubs.pika.pika.amqp_object.AMQPObject",
    "typeshed.typeshed.stubs.pika.pika.connection.Parameters",
    "typeshed.typeshed.stubs.pika.pika.credentials.ExternalCredentials",
    "typeshed.typeshed.stubs.pika.pika.credentials.PlainCredentials",
    "typeshed.typeshed.stubs.polib.polib._BaseEntry",
    "typeshed.typeshed.stubs.polib.polib._BaseFile",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.internal.containers.MessageMap",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.internal.containers.RepeatedCompositeFieldContainer",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.internal.containers.RepeatedScalarFieldContainer",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.internal.containers.ScalarMap",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.message.Message",
    "typeshed.typeshed.stubs.psutil.psutil.Process",
    "typeshed.typeshed.stubs.psutil.psutil._pswindows.WindowsService",
    "typeshed.typeshed.stubs.psycopg2.psycopg2._psycopg.Column",
    "typeshed.typeshed.stubs.psycopg2.psycopg2._psycopg.Notify",
    "typeshed.typeshed.stubs.psycopg2.psycopg2._range.Range",
    "typeshed.typeshed.stubs.psycopg2.psycopg2.sql.Composable",
    "typeshed.typeshed.stubs.psycopg2.psycopg2.tz.FixedOffsetTimezone",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.base.ConstructedAsn1Type",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.base.SimpleAsn1Type",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.constraint.AbstractConstraint",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.namedtype.NamedType",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.namedtype.NamedTypes",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.namedval.NamedValues",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.tag.Tag",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.tag.TagSet",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.univ.Choice",
    "typeshed.typeshed.stubs.pyflakes.pyflakes.checker.VariableKey",
    "typeshed.typeshed.stubs.pyinstaller.PyInstaller.lib.modulegraph.modulegraph.Node",
    "typeshed.typeshed.stubs.pyinstaller.PyInstaller.utils.win32.versioninfo.FixedFileInfo",
    "typeshed.typeshed.stubs.pyinstaller.PyInstaller.utils.win32.versioninfo.VSVersionInfo",
    "typeshed.typeshed.stubs.pynput.pynput._util.Events.Event",
    "typeshed.typeshed.stubs.pynput.pynput.keyboard._base.KeyCode",
    "typeshed.typeshed.stubs.pytest-lazy-fixture.pytest_lazyfixture.LazyFixture",
    "typeshed.typeshed.stubs.python-crontab.crontab.CronItem",
    "typeshed.typeshed.stubs.python-crontab.crontab.CronSlice",
    "typeshed.typeshed.stubs.python-crontab.crontab.CronSlices",
    "typeshed.typeshed.stubs.python-crontab.crontab.Process",
    "typeshed.typeshed.stubs.python-dateutil.dateutil._common.weekday",
    "typeshed.typeshed.stubs.python-dateutil.dateutil.relativedelta.relativedelta",
    "typeshed.typeshed.stubs.python-dateutil.dateutil.rrule.rruleset._genitem",
    "typeshed.typeshed.stubs.python-dateutil.dateutil.tz.tz._ttinfo",
    "typeshed.typeshed.stubs.python-dateutil.dateutil.tz.tz.tzfile",
    "typeshed.typeshed.stubs.python-dateutil.dateutil.tz.tz.tzlocal",
    "typeshed.typeshed.stubs.python-dateutil.dateutil.tz.tz.tzoffset",
    "typeshed.typeshed.stubs.python-dateutil.dateutil.tz.tz.tzrange",
    "typeshed.typeshed.stubs.python-dateutil.dateutil.tz.tz.tzutc",
    "typeshed.typeshed.stubs.pywin32.win32.lib.win32timezone.TimeZoneInfo",
    "typeshed.typeshed.stubs.pywin32.win32.lib.win32timezone._SimpleStruct",
    "typeshed.typeshed.stubs.pywin32.win32com.client.DispatchBaseClass",
    "typeshed.typeshed.stubs.pywin32.win32com.client.dynamic.CDispatch",
    "typeshed.typeshed.stubs.pyxdg.xdg.Menu.Menu",
    "typeshed.typeshed.stubs.pyxdg.xdg.Menu.MenuEntry",
    "typeshed.typeshed.stubs.pyxdg.xdg.RecentFiles.RecentFile",
    "typeshed.typeshed.stubs.redis.redis.asyncio.cluster.ClusterNode",
    "typeshed.typeshed.stubs.redis.redis.cluster.ClusterNode",
    "typeshed.typeshed.stubs.redis.redis.commands.graph.edge.Edge",
    "typeshed.typeshed.stubs.redis.redis.commands.graph.node.Node",
    "typeshed.typeshed.stubs.redis.redis.commands.graph.path.Path",
    "typeshed.typeshed.stubs.seaborn.seaborn.external.version._BaseVersion",
    "typeshed.typeshed.stubs.setuptools.pkg_resources.Distribution",
    "typeshed.typeshed.stubs.setuptools.pkg_resources._vendor.packaging.markers.Marker",
    "typeshed.typeshed.stubs.setuptools.pkg_resources._vendor.packaging.requirements.Requirement",
    "typeshed.typeshed.stubs.setuptools.pkg_resources._vendor.packaging.specifiers.BaseSpecifier",
    "typeshed.typeshed.stubs.setuptools.pkg_resources._vendor.packaging.version._BaseVersion",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.Tensor",
    "typeshed.typeshed.stubs.tqdm.tqdm.utils.Comparable",
    "typeshed.typeshed.stubs.tqdm.tqdm.utils.DisableOnWriteError",
    "typeshed.typeshed.stubs.tqdm.tqdm.utils.SimpleTextIOWrapper",
    "typeshed.typeshed.stubs.tree-sitter.tree_sitter.binding.Node",
    "typeshed.typeshed.stubs.untangle.untangle.Element",
    "typeshed.typeshed.stubs.vobject.vobject.base.ContentLine",
    "typeshed.typeshed.stubs.vobject.vobject.vcard.Address",
    "typeshed.typeshed.stubs.vobject.vobject.vcard.Name",
    "typing.ForwardRef",
    "unittest.mock._ANY",
    "unittest.mock._Call",
    "unittest.suite.BaseTestSuite",
    "untangle.Element",
    "urllib3._collections.HTTPHeaderDict",
    "uuid.UUID",
    "vobject.base.ContentLine",
    "vobject.vcard.Address",
    "vobject.vcard.Name",
    "weakref.WeakMethod",
    "werkzeug.datastructures.auth.Authorization",
    "werkzeug.datastructures.auth.WWWAuthenticate",
    "werkzeug.datastructures.headers.EnvironHeaders",
    "werkzeug.datastructures.headers.Headers",
    "werkzeug.datastructures.structures.OrderedMultiDict",
    "werkzeug.routing.rules.Rule",
    "win32.lib.win32timezone.TimeZoneInfo",
    "win32.lib.win32timezone._SimpleStruct",
    "win32com.client.DispatchBaseClass",
    "win32com.client.dynamic.CDispatch",
    "xml.dom.minidom.NamedNodeMap",
    "xml.etree.ElementTree.QName",
    "xmlrpc.client.Binary",
    "xmlrpc.client.DateTime"
  ],
  "object.__format__": [
    "IPython.core.prompts.LazyEvaluate",
    "_decimal.Decimal",
    "datetime.date",
    "datetime.time",
    "enum.Enum",
    "ipaddress._BaseAddress",
    "tqdm.utils.FormatReplace",
    "typeshed.typeshed.stdlib._decimal.Decimal",
    "typeshed.typeshed.stdlib.builtins.object",
    "typeshed.typeshed.stdlib.datetime.date",
    "typeshed.typeshed.stdlib.datetime.time",
    "typeshed.typeshed.stdlib.enum.Enum",
    "typeshed.typeshed.stdlib.ipaddress._BaseAddress",
    "typeshed.typeshed.stubs.boltons.boltons.formatutils.DeferredValue",
    "typeshed.typeshed.stubs.tqdm.tqdm.utils.FormatReplace"
  ],
  "object.__getattribute__": [
    "_dummy_threading.local",
    "_threading_local.local",
    "aws_xray_sdk.core.async_context.TaskLocalStorage",
    "django.utils.functional._StrPromise",
    "jinja2.utils.Namespace",
    "passlib.context.LazyCryptContext",
    "passlib.utils.binary.LazyBase64Engine",
    "pip._vendor.distlib.metadata.Metadata",
    "psutil.Popen",
    "sqlalchemy.orm.util._WrapUserEntity",
    "sqlalchemy.sql.lambdas.PyWrapper",
    "sqlalchemy.testing.util.adict",
    "threading.local",
    "types.SimpleNamespace",
    "typeshed.typeshed.stdlib._dummy_threading.local",
    "typeshed.typeshed.stdlib._threading_local.local",
    "typeshed.typeshed.stdlib.builtins.object",
    "typeshed.typeshed.stdlib.threading.local",
    "typeshed.typeshed.stdlib.types.SimpleNamespace",
    "typeshed.typeshed.stdlib.unittest.mock._Call",
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.async_context.TaskLocalStorage",
    "typeshed.typeshed.stubs.boltons.boltons.deprutils.DeprecatableModule",
    "typeshed.typeshed.stubs.passlib.passlib.context.LazyCryptContext",
    "typeshed.typeshed.stubs.passlib.passlib.utils.binary.LazyBase64Engine",
    "typeshed.typeshed.stubs.psutil.psutil.Popen",
    "typeshed.typeshed.stubs.pywin32.win32.lib.win32timezone.TimeZoneDefinition",
    "unittest.mock._Call",
    "werkzeug.debug.console.ThreadedStream",
    "win32.lib.win32timezone.TimeZoneDefinition"
  ],
  "object.__hash__": [
    "IPython.core.completer.Completion",
    "PIL.PdfParser.IndirectReference",
    "PIL.PdfParser.PdfName",
    "PIL.TiffImagePlugin.IFDRational",
    "_cffi_backend._CDataBase",
    "babel.core.Locale",
    "blinker._saferef.BoundMethodWeakref",
    "bs4.element.Tag",
    "caldav.lib.url.URL",
    "cffi.backend_ctypes.CTypesData",
    "cffi.model.BaseType",
    "crontab.CronItem",
    "crontab.CronSlice",
    "dateutil._common.weekday",
    "dateutil.relativedelta.relativedelta",
    "django.contrib.gis.db.backends.base.adapter.WKTAdapter",
    "django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter",
    "django.contrib.gis.geos.geometry.GEOSGeometryBase",
    "django.db.migrations.graph.Node",
    "django.utils.tree.Node",
    "fractions.Fraction",
    "google.cloud.ndb._datastore_query.Cursor",
    "google.cloud.ndb.key.Key",
    "google.cloud.ndb.model.Index",
    "google.cloud.ndb.model.IndexProperty",
    "google.cloud.ndb.model.IndexState",
    "google.cloud.ndb.model.Model",
    "google.cloud.ndb.model.User",
    "google.cloud.ndb.model._BaseValue",
    "google.cloud.ndb.model._CompressedValue",
    "google.protobuf.internal.containers.BaseContainer",
    "graphql.language.ast.Argument",
    "graphql.language.ast.BooleanValue",
    "graphql.language.ast.Directive",
    "graphql.language.ast.DirectiveDefinition",
    "graphql.language.ast.Document",
    "graphql.language.ast.EnumTypeDefinition",
    "graphql.language.ast.EnumValue",
    "graphql.language.ast.EnumValueDefinition",
    "graphql.language.ast.Field",
    "graphql.language.ast.FieldDefinition",
    "graphql.language.ast.FloatValue",
    "graphql.language.ast.FragmentDefinition",
    "graphql.language.ast.FragmentSpread",
    "graphql.language.ast.InlineFragment",
    "graphql.language.ast.InputObjectTypeDefinition",
    "graphql.language.ast.InputValueDefinition",
    "graphql.language.ast.IntValue",
    "graphql.language.ast.InterfaceTypeDefinition",
    "graphql.language.ast.ListType",
    "graphql.language.ast.ListValue",
    "graphql.language.ast.Name",
    "graphql.language.ast.NamedType",
    "graphql.language.ast.NonNullType",
    "graphql.language.ast.ObjectField",
    "graphql.language.ast.ObjectTypeDefinition",
    "graphql.language.ast.ObjectValue",
    "graphql.language.ast.OperationDefinition",
    "graphql.language.ast.OperationTypeDefinition",
    "graphql.language.ast.ScalarTypeDefinition",
    "graphql.language.ast.SchemaDefinition",
    "graphql.language.ast.SelectionSet",
    "graphql.language.ast.StringValue",
    "graphql.language.ast.TypeExtensionDefinition",
    "graphql.language.ast.UnionTypeDefinition",
    "graphql.language.ast.Variable",
    "graphql.language.ast.VariableDefinition",
    "graphql.type.definition.GraphQLArgument",
    "graphql.type.definition.GraphQLField",
    "humanfriendly.case.CaseInsensitiveKey",
    "importlib_metadata.EntryPoint",
    "importlib_metadata._text.FoldedCase",
    "influxdb_client.client.write_api._BatchItemKey",
    "invoke.tasks.Task",
    "jack.TransportState",
    "jinja2.runtime.Undefined",
    "ldap3.abstract.attrDef.AttrDef",
    "libcst._nodes.base.CSTNode",
    "libcst._parser.parso.utils.PythonVersionInfo",
    "libcst.metadata.scope_provider.Access",
    "libcst.metadata.scope_provider.BaseAssignment",
    "libcst.metadata.scope_provider.Scope",
    "netaddr.eui.EUI",
    "netaddr.ip.BaseIP",
    "netaddr.ip.sets.IPSet",
    "numbers.Number",
    "openpyxl.descriptors.serialisable.Serialisable",
    "openpyxl.styles.cell_style.StyleArray",
    "packaging._structures.InfinityType",
    "packaging._structures.NegativeInfinityType",
    "packaging.markers.Marker",
    "packaging.requirements.Requirement",
    "packaging.specifiers.BaseSpecifier",
    "packaging.tags.Tag",
    "packaging.version._BaseVersion",
    "paramiko.dsskey.DSSKey",
    "paramiko.ecdsakey.ECDSAKey",
    "paramiko.ed25519key.Ed25519Key",
    "paramiko.rsakey.RSAKey",
    "parso.normalizer.Issue",
    "parso.python.tree.UsedNamesMapping",
    "parso.python.tree._StringComparisonMixin",
    "peewee.Alias",
    "peewee.Column",
    "peewee.CompositeKey",
    "peewee.Entity",
    "peewee.Field",
    "peewee.Model",
    "peewee._HashableSource",
    "pip._internal.index.collector.CacheablePageContent",
    "pip._internal.resolution.resolvelib.candidates.AlreadyInstalledCandidate",
    "pip._internal.resolution.resolvelib.candidates.ExtrasCandidate",
    "pip._internal.resolution.resolvelib.candidates._InstallRequirementBackedCandidate",
    "pip._internal.utils.hashes.Hashes",
    "pip._internal.utils.models.KeyBasedCompareMixin",
    "pip._vendor.distlib.database.Distribution",
    "pip._vendor.distlib.version.Matcher",
    "pip._vendor.distlib.version.Version",
    "pip._vendor.msgpack.ext.Timestamp",
    "pip._vendor.packaging._structures.InfinityType",
    "pip._vendor.packaging._structures.NegativeInfinityType",
    "pip._vendor.packaging.specifiers.BaseSpecifier",
    "pip._vendor.packaging.tags.Tag",
    "pip._vendor.packaging.version._BaseVersion",
    "pip._vendor.pkg_resources.Distribution",
    "pip._vendor.pkg_resources.Requirement",
    "pip._vendor.pyparsing.core.ParserElement",
    "pip._vendor.rich.style.Style",
    "pip._vendor.typing_extensions.TypeVarTuple",
    "pip._vendor.typing_extensions._AnnotatedAlias",
    "pip._vendor.typing_extensions._LiteralGenericAlias",
    "pip._vendor.typing_extensions._ProtocolMeta",
    "polib.MOEntry",
    "polib.POEntry",
    "prompt_toolkit.completion.base.Completion",
    "psutil.Process",
    "psycopg2._psycopg.Notify",
    "psycopg2._range.Range",
    "pyasn1.type.base.SimpleAsn1Type",
    "pyasn1.type.constraint.AbstractConstraint",
    "pyasn1.type.namedtype.NamedType",
    "pyasn1.type.namedtype.NamedTypes",
    "pyasn1.type.namedval.NamedValues",
    "pyasn1.type.tag.Tag",
    "pyasn1.type.tag.TagSet",
    "pyflakes.checker.VariableKey",
    "pymysql.DBAPISet",
    "pynput.keyboard._base.KeyCode",
    "sqlalchemy.cresultproxy.BaseRow",
    "sqlalchemy.engine.url.URL",
    "sqlalchemy.ext.associationproxy._AssociationDict",
    "sqlalchemy.ext.associationproxy._AssociationList",
    "sqlalchemy.ext.associationproxy._AssociationSet",
    "sqlalchemy.ext.asyncio.base.ProxyComparable",
    "sqlalchemy.orm.instrumentation.ClassManager",
    "sqlalchemy.orm.path_registry.PathRegistry",
    "sqlalchemy.sql.annotation.Annotated",
    "sqlalchemy.sql.base.ColumnSet",
    "sqlalchemy.sql.operators.ColumnOperators",
    "sqlalchemy.sql.operators.custom_op",
    "sqlalchemy.sql.selectable.ForUpdateArg",
    "sqlalchemy.sql.traversals.CacheKey",
    "sqlalchemy.testing.entities.ComparableEntity",
    "sqlalchemy.testing.pickleable.BrokenComparable",
    "sqlalchemy.testing.pickleable.NotComparable",
    "sqlalchemy.util._collections.IdentitySet",
    "sqlalchemy.util.langhelpers._hash_limit_string",
    "tqdm.std.tqdm",
    "typeshed.typeshed.stdlib._decimal.Decimal",
    "typeshed.typeshed.stdlib._weakref.ReferenceType",
    "typeshed.typeshed.stdlib.asyncio.events.TimerHandle",
    "typeshed.typeshed.stdlib.builtins.bytes",
    "typeshed.typeshed.stdlib.builtins.complex",
    "typeshed.typeshed.stdlib.builtins.float",
    "typeshed.typeshed.stdlib.builtins.frozenset",
    "typeshed.typeshed.stdlib.builtins.int",
    "typeshed.typeshed.stdlib.builtins.memoryview",
    "typeshed.typeshed.stdlib.builtins.object",
    "typeshed.typeshed.stdlib.builtins.range",
    "typeshed.typeshed.stdlib.builtins.str",
    "typeshed.typeshed.stdlib.builtins.tuple",
    "typeshed.typeshed.stdlib.collections.UserString",
    "typeshed.typeshed.stdlib.contextvars.ContextVar",
    "typeshed.typeshed.stdlib.datetime.date",
    "typeshed.typeshed.stdlib.datetime.time",
    "typeshed.typeshed.stdlib.datetime.timedelta",
    "typeshed.typeshed.stdlib.datetime.timezone",
    "typeshed.typeshed.stdlib.enum.Enum",
    "typeshed.typeshed.stdlib.fractions.Fraction",
    "typeshed.typeshed.stdlib.importlib.machinery.ExtensionFileLoader",
    "typeshed.typeshed.stdlib.importlib.metadata.EntryPoint",
    "typeshed.typeshed.stdlib.inspect.Parameter",
    "typeshed.typeshed.stdlib.inspect.Signature",
    "typeshed.typeshed.stdlib.ipaddress.IPv4Interface",
    "typeshed.typeshed.stdlib.ipaddress.IPv6Address",
    "typeshed.typeshed.stdlib.ipaddress._BaseAddress",
    "typeshed.typeshed.stdlib.ipaddress._BaseNetwork",
    "typeshed.typeshed.stdlib.numbers.Number",
    "typeshed.typeshed.stdlib.pathlib.PurePath",
    "typeshed.typeshed.stdlib.plistlib.UID",
    "typeshed.typeshed.stdlib.re.Pattern",
    "typeshed.typeshed.stdlib.sqlite3.dbapi2.Row",
    "typeshed.typeshed.stdlib.statistics.NormalDist",
    "typeshed.typeshed.stdlib.tracemalloc.Frame",
    "typeshed.typeshed.stdlib.tracemalloc.Statistic",
    "typeshed.typeshed.stdlib.tracemalloc.StatisticDiff",
    "typeshed.typeshed.stdlib.tracemalloc.Trace",
    "typeshed.typeshed.stdlib.tracemalloc.Traceback",
    "typeshed.typeshed.stdlib.types.BuiltinFunctionType",
    "typeshed.typeshed.stdlib.types.CodeType",
    "typeshed.typeshed.stdlib.types.GenericAlias",
    "typeshed.typeshed.stdlib.types.MethodType",
    "typeshed.typeshed.stdlib.types.MethodWrapperType",
    "typeshed.typeshed.stdlib.typing.ForwardRef",
    "typeshed.typeshed.stdlib.typing.Hashable",
    "typeshed.typeshed.stdlib.typing_extensions.Doc",
    "typeshed.typeshed.stdlib.unittest.case.TestCase",
    "typeshed.typeshed.stdlib.uuid.UUID",
    "typeshed.typeshed.stdlib.weakref.WeakMethod",
    "typeshed.typeshed.stdlib.xml.etree.ElementTree.QName",
    "typeshed.typeshed.stubs.JACK-Client.jack.TransportState",
    "typeshed.typeshed.stubs.Pillow.PIL.PdfParser.IndirectReference",
    "typeshed.typeshed.stubs.Pillow.PIL.PdfParser.PdfName",
    "typeshed.typeshed.stubs.Pillow.PIL.TiffImagePlugin.IFDRational",
    "typeshed.typeshed.stubs.PyMySQL.pymysql.DBAPISet",
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.element.Tag",
    "typeshed.typeshed.stubs.boltons.boltons.mathutils.Bits",
    "typeshed.typeshed.stubs.caldav.caldav.lib.url.URL",
    "typeshed.typeshed.stubs.cffi._cffi_backend._CDataBase",
    "typeshed.typeshed.stubs.cffi.cffi.backend_ctypes.CTypesData",
    "typeshed.typeshed.stubs.cffi.cffi.model.BaseType",
    "typeshed.typeshed.stubs.fpdf2.fpdf.fonts.Glyph",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb._datastore_query.Cursor",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.key.Key",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.model.Index",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.model.IndexProperty",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.model.IndexState",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.model.Model",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.model.User",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.model._BaseValue",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.model._CompressedValue",
    "typeshed.typeshed.stubs.humanfriendly.humanfriendly.case.CaseInsensitiveKey",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.client.write_api._BatchItemKey",
    "typeshed.typeshed.stubs.ldap3.ldap3.abstract.attrDef.AttrDef",
    "typeshed.typeshed.stubs.libsass.sass.SassMap",
    "typeshed.typeshed.stubs.netaddr.netaddr.eui.EUI",
    "typeshed.typeshed.stubs.netaddr.netaddr.ip.BaseIP",
    "typeshed.typeshed.stubs.netaddr.netaddr.ip.sets.IPSet",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.serialisable.Serialisable",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.styles.cell_style.StyleArray",
    "typeshed.typeshed.stubs.paramiko.paramiko.dsskey.DSSKey",
    "typeshed.typeshed.stubs.paramiko.paramiko.ecdsakey.ECDSAKey",
    "typeshed.typeshed.stubs.paramiko.paramiko.ed25519key.Ed25519Key",
    "typeshed.typeshed.stubs.paramiko.paramiko.rsakey.RSAKey",
    "typeshed.typeshed.stubs.peewee.peewee.Alias",
    "typeshed.typeshed.stubs.peewee.peewee.Column",
    "typeshed.typeshed.stubs.peewee.peewee.CompositeKey",
    "typeshed.typeshed.stubs.peewee.peewee.Entity",
    "typeshed.typeshed.stubs.peewee.peewee.Field",
    "typeshed.typeshed.stubs.peewee.peewee.Model",
    "typeshed.typeshed.stubs.peewee.peewee._HashableSource",
    "typeshed.typeshed.stubs.polib.polib.MOEntry",
    "typeshed.typeshed.stubs.polib.polib.POEntry",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.internal.containers.BaseContainer",
    "typeshed.typeshed.stubs.psutil.psutil.Process",
    "typeshed.typeshed.stubs.psycopg2.psycopg2._psycopg.Notify",
    "typeshed.typeshed.stubs.psycopg2.psycopg2._range.Range",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.base.SimpleAsn1Type",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.constraint.AbstractConstraint",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.namedtype.NamedType",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.namedtype.NamedTypes",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.namedval.NamedValues",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.tag.Tag",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.tag.TagSet",
    "typeshed.typeshed.stubs.pyflakes.pyflakes.checker.VariableKey",
    "typeshed.typeshed.stubs.pynput.pynput.keyboard._base.KeyCode",
    "typeshed.typeshed.stubs.python-crontab.crontab.CronItem",
    "typeshed.typeshed.stubs.python-crontab.crontab.CronSlice",
    "typeshed.typeshed.stubs.python-dateutil.dateutil._common.weekday",
    "typeshed.typeshed.stubs.python-dateutil.dateutil.relativedelta.relativedelta",
    "typeshed.typeshed.stubs.pyxdg.xdg.Mime.MIMEtype",
    "typeshed.typeshed.stubs.seaborn.seaborn.external.version._BaseVersion",
    "typeshed.typeshed.stubs.setuptools.pkg_resources.Distribution",
    "typeshed.typeshed.stubs.setuptools.pkg_resources._vendor.packaging.markers.Marker",
    "typeshed.typeshed.stubs.setuptools.pkg_resources._vendor.packaging.requirements.Requirement",
    "typeshed.typeshed.stubs.setuptools.pkg_resources._vendor.packaging.specifiers.BaseSpecifier",
    "typeshed.typeshed.stubs.setuptools.pkg_resources._vendor.packaging.version._BaseVersion",
    "typeshed.typeshed.stubs.tqdm.tqdm.std.tqdm",
    "typing.Hashable"
  ],
  "object.__init__": [
    "BaseException",
    "IPython.core.alias.Alias",
    "IPython.core.async_helpers._AsyncIOProxy",
    "IPython.core.autocall.IPyAutocall",
    "IPython.core.completer.Completion",
    "IPython.core.completer.CompletionSplitter",
    "IPython.core.completer.SimpleCompletion",
    "IPython.core.completer._FakeJediCompletion",
    "IPython.core.crashhandler.CrashHandler",
    "IPython.core.display.DisplayObject",
    "IPython.core.display_functions.DisplayHandle",
    "IPython.core.displayhook.CapturingDisplayHook",
    "IPython.core.events.EventManager",
    "IPython.core.hooks.CommandChainDispatcher",
    "IPython.core.inputsplitter.InMultilineStatement",
    "IPython.core.inputsplitter.IncompleteString",
    "IPython.core.inputsplitter.InputSplitter",
    "IPython.core.inputtransformer2.PromptStripper",
    "IPython.core.inputtransformer2.TokenTransformBase",
    "IPython.core.inputtransformer2.TransformerManager",
    "IPython.core.interactiveshell.ExecutionInfo",
    "IPython.core.interactiveshell.ExecutionResult",
    "IPython.core.interactiveshell.PickleShareDB",
    "IPython.core.logger.Logger",
    "IPython.core.macro.Macro",
    "IPython.core.magic.MagicAlias",
    "IPython.core.magics.basic.MagicsDisplay",
    "IPython.core.magics.execution.TimeitResult",
    "IPython.core.prompts.LazyEvaluate",
    "IPython.core.splitinput.LineInfo",
    "IPython.core.tests.tclass.C",
    "IPython.core.ultratb.FrameInfo",
    "IPython.extensions.autoreload.ModuleReloader",
    "IPython.extensions.autoreload.StrongRef",
    "IPython.lib.backgroundjobs.BackgroundJobManager",
    "IPython.lib.demo.Demo",
    "IPython.lib.display.FileLink",
    "IPython.lib.display.IFrame",
    "IPython.lib.pretty.CallExpression",
    "IPython.lib.pretty.Foo",
    "IPython.lib.pretty.GroupQueue",
    "IPython.lib.pretty.RawStringLiteral",
    "IPython.lib.pretty.RawText",
    "IPython.lib.pretty._ReFlags",
    "IPython.sphinxext.ipython_directive.EmbeddedSphinxShell",
    "IPython.terminal.embed._Sentinel",
    "IPython.terminal.prompts.Prompts",
    "IPython.terminal.pt_inputhooks.gtk4._InputHook",
    "IPython.terminal.pt_inputhooks.wx.EventLoopTimer",
    "IPython.testing.plugin.pytest_ipdoctest.IPDoctestItem",
    "IPython.testing.plugin.pytest_ipdoctest.ReprFailDoctest",
    "IPython.testing.tests.test_decorators.FooClass",
    "IPython.utils._process_posix.ProcessHandler",
    "IPython.utils._process_win32_controller.Win32ShellCommandController",
    "IPython.utils.capture.CapturedIO",
    "IPython.utils.capture.RichOutput",
    "IPython.utils.capture.capture_output",
    "IPython.utils.coloransi.ColorScheme",
    "IPython.utils.contexts.preserve_keys",
    "IPython.utils.io.Tee",
    "IPython.utils.sentinel.Sentinel",
    "IPython.utils.strdispatch.StrDispatch",
    "IPython.utils.syspathcontext.appended_to_syspath",
    "IPython.utils.syspathcontext.prepended_to_syspath",
    "IPython.utils.tempdir.NamedFileInTemporaryDirectory",
    "MySQLdb._mysql.connection",
    "MySQLdb._mysql.result",
    "MySQLdb.cursors.BaseCursor",
    "OpenSSL.SSL.Connection",
    "OpenSSL.SSL.Context",
    "OpenSSL.crypto.CRL",
    "OpenSSL.crypto.NetscapeSPKI",
    "OpenSSL.crypto.PKCS12",
    "OpenSSL.crypto.PKey",
    "OpenSSL.crypto.Revoked",
    "OpenSSL.crypto.X509",
    "OpenSSL.crypto.X509Extension",
    "OpenSSL.crypto.X509Name",
    "OpenSSL.crypto.X509Req",
    "OpenSSL.crypto.X509Store",
    "OpenSSL.crypto.X509StoreContext",
    "OpenSSL.crypto._EllipticCurve",
    "PIL.ContainerIO.ContainerIO",
    "PIL.EpsImagePlugin.PSFile",
    "PIL.FontFile.FontFile",
    "PIL.GimpPaletteFile.GimpPaletteFile",
    "PIL.IcnsImagePlugin.IcnsFile",
    "PIL.IcoImagePlugin.IcoFile",
    "PIL.Image._E",
    "PIL.ImageCms.ImageCmsProfile",
    "PIL.ImageDraw.ImageDraw",
    "PIL.ImageDraw2.Brush",
    "PIL.ImageDraw2.Draw",
    "PIL.ImageDraw2.Font",
    "PIL.ImageDraw2.Pen",
    "PIL.ImageFile.PyDecoder",
    "PIL.ImageFont.FreeTypeFont",
    "PIL.ImageFont.TransposedFont",
    "PIL.ImageMath._Operand",
    "PIL.ImageMode.ModeDescriptor",
    "PIL.ImageMorph.LutBuilder",
    "PIL.ImageMorph.MorphOp",
    "PIL.ImagePalette.ImagePalette",
    "PIL.ImageQt.ImageQt",
    "PIL.ImageSequence.Iterator",
    "PIL.ImageStat.Stat",
    "PIL.ImageWin.Dib",
    "PIL.ImageWin.HDC",
    "PIL.ImageWin.HWND",
    "PIL.ImageWin.Window",
    "PIL.MpegImagePlugin.BitStream",
    "PIL.PSDraw.PSDraw",
    "PIL.PaletteFile.PaletteFile",
    "PIL.PdfParser.PdfBinary",
    "PIL.PdfParser.PdfName",
    "PIL.PdfParser.PdfParser",
    "PIL.PdfParser.PdfStream",
    "PIL.PdfParser.XrefTable",
    "PIL.PngImagePlugin.ChunkStream",
    "PIL.PngImagePlugin.PngInfo",
    "PIL.PngImagePlugin._fdat",
    "PIL.PngImagePlugin._idat",
    "PIL.PyAccess.PyAccess",
    "PIL.TiffImagePlugin.AppendingTiffWriter",
    "PyInstaller.depend.analysis.PyiModuleGraph",
    "PyInstaller.depend.imphookapi.PostGraphAPI",
    "PyInstaller.depend.imphookapi.PreFindModulePathAPI",
    "PyInstaller.depend.imphookapi.PreSafeImportModuleAPI",
    "PyInstaller.isolated._parent.Python",
    "PyInstaller.lib.modulegraph.modulegraph.Node",
    "PyInstaller.utils.hooks.conda.Distribution",
    "Xlib.display.Display",
    "Xlib.error.CatchError",
    "Xlib.ext.xinput.ButtonMask",
    "Xlib.protocol.display.Display",
    "Xlib.protocol.display.bytesview",
    "Xlib.protocol.rq.Request",
    "Xlib.protocol.rq.ResourceObj",
    "Xlib.protocol.rq.ScalarObj",
    "Xlib.protocol.rq.Struct",
    "Xlib.rdb.ResourceDB",
    "Xlib.xauth.Xauthority",
    "Xlib.xobject.resource.Resource",
    "__future__._Feature",
    "_ast.AST",
    "_cffi_backend.FFI",
    "_cffi_backend.buffer",
    "_csv.Dialect",
    "_decimal.Context",
    "_decimal._ContextManager",
    "_dummy_threading.Barrier",
    "_dummy_threading.Condition",
    "_dummy_threading.Semaphore",
    "_dummy_threading.Thread",
    "_json.make_encoder",
    "_json.make_scanner",
    "_operator.methodcaller",
    "_random.Random",
    "_sitebuiltins.Quitter",
    "_sitebuiltins._Printer",
    "_socket.socket",
    "aifc.Aifc_read",
    "aifc.Aifc_write",
    "aiofiles.tempfile.temptypes.AsyncTemporaryDirectory",
    "annoy.annoylib.Annoy",
    "appdirs.AppDirs",
    "argparse.FileType",
    "argparse.HelpFormatter",
    "argparse._ActionsContainer",
    "asgiref.current_thread_executor._WorkItem",
    "asgiref.local.Local",
    "asgiref.server.StatelessServer",
    "asgiref.sync.ThreadSensitiveContext",
    "asgiref.testing.ApplicationCommunicator",
    "asgiref.timeout.timeout",
    "asgiref.wsgi.WsgiToAsgi",
    "asgiref.wsgi.WsgiToAsgiInstance",
    "asttokens.asttokens.ASTTextBase",
    "asttokens.line_numbers.LineNumbers",
    "asttokens.mark_tokens.MarkTokens",
    "asttokens.util.NodeMethods",
    "asynchat.simple_producer",
    "asyncio.events.Handle",
    "asyncio.locks.Event",
    "asyncio.mixins._LoopBoundMixin",
    "asyncio.sslproto._SSLPipe",
    "asyncio.streams.StreamWriter",
    "asyncio.subprocess.Process",
    "asyncio.timeouts.Timeout",
    "asyncio.transports.BaseTransport",
    "asyncio.trsock.TransportSocket",
    "asyncore.dispatcher",
    "asyncore.file_wrapper",
    "aws_xray_sdk.core.async_context.TaskLocalStorage",
    "aws_xray_sdk.core.context.Context",
    "aws_xray_sdk.core.daemon_config.DaemonConfig",
    "aws_xray_sdk.core.emitters.udp_emitter.UDPEmitter",
    "aws_xray_sdk.core.models.default_dynamic_naming.DefaultDynamicNaming",
    "aws_xray_sdk.core.models.entity.Entity",
    "aws_xray_sdk.core.models.noop_traceid.NoOpTraceId",
    "aws_xray_sdk.core.models.segment.SegmentContextManager",
    "aws_xray_sdk.core.models.subsegment.SubsegmentContextManager",
    "aws_xray_sdk.core.models.throwable.Throwable",
    "aws_xray_sdk.core.models.trace_header.TraceHeader",
    "aws_xray_sdk.core.models.traceid.TraceId",
    "aws_xray_sdk.core.recorder.AWSXRayRecorder",
    "aws_xray_sdk.core.sampling.connector.ServiceConnector",
    "aws_xray_sdk.core.sampling.local.reservoir.Reservoir",
    "aws_xray_sdk.core.sampling.local.sampler.LocalSampler",
    "aws_xray_sdk.core.sampling.local.sampling_rule.SamplingRule",
    "aws_xray_sdk.core.sampling.reservoir.Reservoir",
    "aws_xray_sdk.core.sampling.rule_cache.RuleCache",
    "aws_xray_sdk.core.sampling.rule_poller.RulePoller",
    "aws_xray_sdk.core.sampling.sampler.DefaultSampler",
    "aws_xray_sdk.core.sampling.sampling_rule.SamplingRule",
    "aws_xray_sdk.core.sampling.target_poller.TargetPoller",
    "aws_xray_sdk.core.streaming.default_streaming.DefaultStreaming",
    "aws_xray_sdk.core.utils.atomic_counter.AtomicCounter",
    "babel.core.Locale",
    "babel.dates.DateTimeFormat",
    "babel.dates.DateTimePattern",
    "babel.dates.TimezoneTransition",
    "babel.localedata.Alias",
    "babel.messages.catalog.Catalog",
    "babel.messages.catalog.Message",
    "babel.messages.pofile.PoFileParser",
    "babel.messages.pofile._NormalizedString",
    "babel.numbers.NumberPattern",
    "babel.plural.PluralRule",
    "babel.plural._Parser",
    "babel.support.Format",
    "babel.support.LazyProxy",
    "bdb.Bdb",
    "bdb.Breakpoint",
    "binhex.BinHex",
    "binhex.HexBin",
    "binhex.openrsrc",
    "bleach.css_sanitizer.CSSSanitizer",
    "bleach.linkifier.Linker",
    "bleach.sanitizer.Cleaner",
    "blinker._saferef.BoundMethodWeakref",
    "blinker._utilities._symbol",
    "blinker._utilities.lazy_property",
    "blinker.base.Signal",
    "boto.auth.HmacKeys",
    "boto.connection.AWSAuthConnection",
    "boto.connection.ConnectionPool",
    "boto.connection.HTTPRequest",
    "boto.connection.HostConnectionPool",
    "boto.exception.ConsoleOutput",
    "boto.exception._EC2Error",
    "boto.regioninfo.RegionInfo",
    "boto.s3.acl.ACL",
    "boto.s3.acl.Grant",
    "boto.s3.acl.Policy",
    "boto.s3.bucket.Bucket",
    "boto.s3.bucketlistresultset.MultiPartUploadListResultSet",
    "boto.s3.bucketlistresultset.VersionedBucketListResultSet",
    "boto.s3.bucketlogging.BucketLogging",
    "boto.s3.cors.CORSRule",
    "boto.s3.deletemarker.DeleteMarker",
    "boto.s3.key.Key",
    "boto.s3.keyfile.KeyFile",
    "boto.s3.lifecycle.Expiration",
    "boto.s3.lifecycle.Rule",
    "boto.s3.lifecycle.Transition",
    "boto.s3.multidelete.Deleted",
    "boto.s3.multidelete.Error",
    "boto.s3.multidelete.MultiDeleteResult",
    "boto.s3.multipart.CompleteMultiPartUpload",
    "boto.s3.multipart.MultiPartUpload",
    "boto.s3.multipart.Part",
    "boto.s3.prefix.Prefix",
    "boto.s3.tagging.Tag",
    "boto.s3.user.User",
    "boto.s3.website.RoutingRule",
    "boto.s3.website.WebsiteConfiguration",
    "boto.s3.website._XMLKeyValue",
    "boto.utils.LRUCache._Item",
    "boto.utils.Password",
    "boto.utils.ShellCommand",
    "braintree.add_on_gateway.AddOnGateway",
    "braintree.address_gateway.AddressGateway",
    "braintree.apple_pay_gateway.ApplePayGateway",
    "braintree.attribute_getter.AttributeGetter",
    "braintree.braintree_gateway.BraintreeGateway",
    "braintree.client_token_gateway.ClientTokenGateway",
    "braintree.configuration.Configuration",
    "braintree.credentials_parser.CredentialsParser",
    "braintree.credit_card_gateway.CreditCardGateway",
    "braintree.credit_card_verification_gateway.CreditCardVerificationGateway",
    "braintree.customer_gateway.CustomerGateway",
    "braintree.discount_gateway.DiscountGateway",
    "braintree.dispute_gateway.DisputeGateway",
    "braintree.document_upload_gateway.DocumentUploadGateway",
    "braintree.environment.Environment",
    "braintree.error_result.ErrorResult",
    "braintree.errors.Errors",
    "braintree.merchant_account_gateway.MerchantAccountGateway",
    "braintree.merchant_gateway.MerchantGateway",
    "braintree.oauth_gateway.OAuthGateway",
    "braintree.paginated_collection.PaginatedCollection",
    "braintree.paginated_result.PaginatedResult",
    "braintree.payment_method_gateway.PaymentMethodGateway",
    "braintree.payment_method_nonce_gateway.PaymentMethodNonceGateway",
    "braintree.paypal_account_gateway.PayPalAccountGateway",
    "braintree.plan_gateway.PlanGateway",
    "braintree.resource_collection.ResourceCollection",
    "braintree.search.Search.EndsWithNodeBuilder",
    "braintree.search.Search.IsNodeBuilder",
    "braintree.search.Search.KeyValueNodeBuilder",
    "braintree.search.Search.MultipleValueNodeBuilder",
    "braintree.search.Search.Node",
    "braintree.search.Search.RangeNodeBuilder",
    "braintree.settlement_batch_summary_gateway.SettlementBatchSummaryGateway",
    "braintree.signature_service.SignatureService",
    "braintree.subscription_gateway.SubscriptionGateway",
    "braintree.testing_gateway.TestingGateway",
    "braintree.transaction_gateway.TransactionGateway",
    "braintree.transaction_line_item_gateway.TransactionLineItemGateway",
    "braintree.us_bank_account_gateway.UsBankAccountGateway",
    "braintree.us_bank_account_verification_gateway.UsBankAccountVerificationGateway",
    "braintree.util.generator.Generator",
    "braintree.util.http.Http",
    "braintree.util.parser.Parser",
    "braintree.validation_error_collection.ValidationErrorCollection",
    "braintree.webhook_notification_gateway.WebhookNotificationGateway",
    "braintree.webhook_testing_gateway.WebhookTestingGateway",
    "bs4.builder.TreeBuilder",
    "bs4.builder.TreeBuilderRegistry",
    "bs4.builder._html5lib.AttrList",
    "bs4.dammit.EncodingDetector",
    "bs4.dammit.UnicodeDammit",
    "bs4.element.SoupStrainer",
    "bugbear.BugBearChecker",
    "bz2.BZ2Compressor",
    "cProfile.Profile",
    "cachetools._TimedCache._Timer",
    "caldav.davclient.DAVClient",
    "caldav.davclient.DAVResponse",
    "caldav.elements.base.BaseElement",
    "caldav.lib.url.URL",
    "caldav.objects.DAVObject",
    "caldav.objects.SynchronizableCalendarObjectCollection",
    "calendar.Calendar",
    "calendar.different_locale",
    "cffi.api.FFI",
    "cffi.backend_ctypes.CTypesBackend",
    "cffi.backend_ctypes.CTypesData",
    "cffi.backend_ctypes.CTypesLibrary",
    "cffi.cffi_opcode.CffiOp",
    "cffi.cparser.Parser",
    "cffi.recompiler.EnumExpr",
    "cffi.recompiler.FieldExpr",
    "cffi.recompiler.GlobalExpr",
    "cffi.recompiler.Recompiler",
    "cffi.recompiler.StructUnionExpr",
    "cffi.recompiler.TypenameExpr",
    "cffi.vengine_cpy.VCPythonEngine",
    "cffi.vengine_gen.VGenericEngine",
    "cffi.verifier.Verifier",
    "cgi.FieldStorage",
    "cgi.MiniFieldStorage",
    "cgitb.Hook",
    "chardet.universaldetector.UniversalDetector",
    "chunk.Chunk",
    "click._compat._AtomicFile",
    "click._compat._FixupStream",
    "click._termui_impl.Editor",
    "click._winconsole.ConsoleStream",
    "click.core.BaseCommand",
    "click.core.Context",
    "click.core.Parameter",
    "click.formatting.HelpFormatter",
    "click.parser.Argument",
    "click.parser.Option",
    "click.parser.OptionParser",
    "click.parser.ParsingState",
    "click.shell_completion.CompletionItem",
    "click.shell_completion.ShellComplete",
    "click.testing.CliRunner",
    "click.testing.EchoingStdin",
    "click.testing.Result",
    "click.utils.KeepOpenFile",
    "click.utils.LazyFile",
    "click.utils.PacifyFlushWrapper",
    "click_spinner.Spinner",
    "cmd.Cmd",
    "code.InteractiveInterpreter",
    "codecs.IncrementalDecoder",
    "codecs.IncrementalEncoder",
    "colorama.ansi.AnsiCodes",
    "colorama.ansitowin32.AnsiToWin32",
    "colorama.ansitowin32.StreamWrapper",
    "commonmark.blocks.Parser",
    "commonmark.inlines.InlineParser",
    "commonmark.node.Node",
    "commonmark.node.NodeWalker",
    "concurrent.futures._base._AcquireFutures",
    "concurrent.futures.process._CallItem",
    "concurrent.futures.process._ExceptionWithTraceback",
    "concurrent.futures.process._ResultItem",
    "consolemenu.console_menu.ConsoleMenu",
    "consolemenu.console_menu.MenuItem",
    "consolemenu.format.menu_borders.MenuBorderStyleFactory",
    "consolemenu.format.menu_margins.MenuMargins",
    "consolemenu.format.menu_padding.MenuPadding",
    "consolemenu.format.menu_style.MenuStyle",
    "consolemenu.menu_component.Dimension",
    "consolemenu.menu_component.MenuComponent",
    "consolemenu.menu_formatter.MenuFormatBuilder",
    "consolemenu.prompt_utils.PromptUtils",
    "consolemenu.screen.Screen",
    "consolemenu.validators.base.BaseValidator",
    "croniter.croniter.HashExpander",
    "cronlog.LogReader",
    "cronlog.ProgramLog",
    "crontab.Also",
    "crontab.CronItem",
    "crontab.CronRange",
    "crontab.CronSlice",
    "crontab.CronTab",
    "crontab.CronValue",
    "crontab.Every",
    "ctypes.CDLL",
    "curses.textpad.Textbox",
    "d3dshot.capture_output.CaptureOutput",
    "d3dshot.d3dshot.D3DShot",
    "d3dshot.display.Display",
    "dataclasses_json.cfg._GlobalConfig",
    "dateparser.calendars.CalendarBase",
    "dateparser.calendars.hijri_parser.HijriDate",
    "dateparser.calendars.jalali_parser.PersianDate",
    "dateparser.conf.Settings",
    "dateparser.date.DateData",
    "dateparser.date.DateDataParser",
    "dateparser.date._DateLocaleParser",
    "dateparser.languages.dictionary.Dictionary",
    "dateparser.languages.locale.Locale",
    "dateparser.parser._no_spaces_parser",
    "dateparser.parser._parser",
    "dateparser.parser.tokenizer",
    "dateparser.search.detection.BaseLanguageDetector",
    "dateparser.search.search.DateSearchWithDetection",
    "dateparser.search.search._ExactLanguageSearch",
    "datetimerange.DateTimeRange",
    "dateutil._common.weekday",
    "dateutil.parser.isoparser.isoparser",
    "dateutil.parser.parser",
    "dateutil.parser.parserinfo",
    "dateutil.relativedelta.relativedelta",
    "dateutil.rrule._iterinfo",
    "dateutil.rrule.rrulebase",
    "dateutil.rrule.rruleset._genitem",
    "dateutil.tz.tz._ttinfo",
    "dateutil.tz.tz.tzical",
    "dateutil.zoneinfo.ZoneInfoFile",
    "decorator.FunctionMaker",
    "deprecated.classic.ClassicAdapter",
    "difflib.Differ",
    "difflib.HtmlDiff",
    "dis.Bytecode",
    "distutils.ccompiler.CCompiler",
    "distutils.cmd.Command",
    "distutils.command.check.SilentReporter",
    "distutils.dist.Distribution",
    "distutils.dist.DistributionMetadata",
    "distutils.extension.Extension",
    "distutils.fancy_getopt.FancyGetopt",
    "distutils.fancy_getopt.OptionDummy",
    "distutils.filelist.FileList",
    "distutils.log.Log",
    "distutils.text_file.TextFile",
    "distutils.version.Version",
    "django.apps.config.AppConfig",
    "django.apps.registry.Apps",
    "django.conf.Settings",
    "django.conf.UserSettingsHolder",
    "django.contrib.admin.filters.ListFilter",
    "django.contrib.admin.helpers.AdminField",
    "django.contrib.admin.helpers.AdminForm",
    "django.contrib.admin.helpers.AdminReadonlyField",
    "django.contrib.admin.helpers.Fieldline",
    "django.contrib.admin.helpers.Fieldset",
    "django.contrib.admin.helpers.InlineAdminFormSet",
    "django.contrib.admin.sites.AdminSite",
    "django.contrib.admin.views.main.ChangeList",
    "django.contrib.admin.widgets.AutocompleteMixin",
    "django.contrib.auth.context_processors.PermLookupDict",
    "django.contrib.auth.context_processors.PermWrapper",
    "django.contrib.auth.password_validation.CommonPasswordValidator",
    "django.contrib.auth.password_validation.MinimumLengthValidator",
    "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    "django.contrib.gis.db.backends.base.adapter.WKTAdapter",
    "django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter",
    "django.contrib.gis.db.backends.utils.SpatialOperator",
    "django.contrib.gis.gdal.envelope.Envelope",
    "django.contrib.gis.gdal.geomtype.OGRGeomType",
    "django.contrib.gis.geoip2.base.GeoIP2",
    "django.contrib.gis.geos.libgeos.GEOSFuncFactory",
    "django.contrib.gis.geos.mutable_list.ListMixin",
    "django.contrib.gis.geos.prototypes.threadsafe.GEOSFunc",
    "django.contrib.gis.measure.MeasureBase",
    "django.contrib.gis.serializers.geojson.Deserializer",
    "django.contrib.gis.utils.layermapping.LayerMapping",
    "django.contrib.messages.storage.base.BaseStorage",
    "django.contrib.messages.storage.base.Message",
    "django.contrib.postgres.fields.hstore.KeyTransformFactory",
    "django.contrib.postgres.fields.utils.AttributeSetter",
    "django.contrib.sites.requests.RequestSite",
    "django.contrib.staticfiles.storage.HashedFilesMixin",
    "django.core.cache.backends.base.BaseCache",
    "django.core.cache.backends.db.Options",
    "django.core.checks.messages.CheckMessage",
    "django.core.checks.registry.CheckRegistry",
    "django.core.files.storage.handler.StorageHandler",
    "django.core.files.uploadhandler.FileUploadHandler",
    "django.core.handlers.wsgi.LimitedStream",
    "django.core.mail.backends.base.BaseEmailBackend",
    "django.core.mail.message.EmailMessage",
    "django.core.management.ManagementUtility",
    "django.core.management.base.BaseCommand",
    "django.core.management.commands.makemessages.BuildFile",
    "django.core.management.commands.makemessages.TranslatableFile",
    "django.core.serializers.BadSerializer",
    "django.core.serializers.base.DeserializedObject",
    "django.core.serializers.base.Deserializer",
    "django.core.serializers.base.PickleSerializer",
    "django.core.serializers.base.ProgressBar",
    "django.core.serializers.xml_serializer.DefusedExpatParser",
    "django.core.signing.Signer",
    "django.db.backends.base.base.BaseDatabaseWrapper",
    "django.db.backends.base.client.BaseDatabaseClient",
    "django.db.backends.base.creation.BaseDatabaseCreation",
    "django.db.backends.base.features.BaseDatabaseFeatures",
    "django.db.backends.base.introspection.BaseDatabaseIntrospection",
    "django.db.backends.base.operations.BaseDatabaseOperations",
    "django.db.backends.base.validation.BaseDatabaseValidation",
    "django.db.backends.mysql.base.CursorWrapper",
    "django.db.backends.oracle.base.FormatStylePlaceholderCursor",
    "django.db.backends.oracle.base.OracleParam",
    "django.db.backends.oracle.base.VariableWrapper",
    "django.db.backends.oracle.utils.InsertVar",
    "django.db.backends.utils.CursorWrapper",
    "django.db.migrations.autodetector.MigrationAutodetector",
    "django.db.migrations.executor.MigrationExecutor",
    "django.db.migrations.graph.MigrationGraph",
    "django.db.migrations.graph.Node",
    "django.db.migrations.loader.MigrationLoader",
    "django.db.migrations.migration.Migration",
    "django.db.migrations.questioner.MigrationQuestioner",
    "django.db.migrations.recorder.MigrationRecorder",
    "django.db.migrations.serializer.BaseSerializer",
    "django.db.migrations.state.ModelState",
    "django.db.migrations.state.ProjectState",
    "django.db.migrations.utils.RegexObject",
    "django.db.migrations.writer.MigrationWriter",
    "django.db.migrations.writer.OperationWriter",
    "django.db.models.base.Model",
    "django.db.models.constraints.BaseConstraint",
    "django.db.models.deletion.Collector",
    "django.db.models.expressions.BaseExpression",
    "django.db.models.fields.json.KeyTransformFactory",
    "django.db.models.fields.json.KeyTransformTextLookupMixin",
    "django.db.models.fields.related_descriptors.ReverseManyToOneDescriptor",
    "django.db.models.fields.related_lookups.MultiColSource",
    "django.db.models.indexes.Index",
    "django.db.models.manager.ManagerDescriptor",
    "django.db.models.query.Prefetch",
    "django.db.models.query_utils.DeferredAttribute",
    "django.db.models.query_utils.FilteredRelation",
    "django.db.models.sql.compiler.SQLCompiler",
    "django.db.models.sql.datastructures.BaseTable",
    "django.db.models.sql.datastructures.Join",
    "django.db.models.sql.query.JoinPromoter",
    "django.db.models.sql.query.RawQuery",
    "django.db.models.sql.where.ExtraWhere",
    "django.db.models.sql.where.SubqueryConstraint",
    "django.db.transaction.Atomic",
    "django.db.utils.ConnectionRouter",
    "django.db.utils.DatabaseErrorWrapper",
    "django.dispatch.dispatcher.Signal",
    "django.forms.boundfield.BoundField",
    "django.forms.boundfield.BoundWidget",
    "django.forms.fields.CallableChoiceIterator",
    "django.forms.fields.Field",
    "django.forms.models.ModelChoiceIterator",
    "django.forms.models.ModelChoiceIteratorValue",
    "django.forms.widgets.Media",
    "django.forms.widgets.Widget",
    "django.http.multipartparser.BoundaryIter",
    "django.http.multipartparser.ChunkIter",
    "django.http.multipartparser.InterBoundaryIter",
    "django.http.multipartparser.LazyStream",
    "django.http.multipartparser.MultiPartParser",
    "django.http.multipartparser.Parser",
    "django.http.request.MediaType",
    "django.http.response.HttpResponseBase",
    "django.template.backends.base.BaseEngine",
    "django.template.backends.jinja2.Origin",
    "django.template.backends.jinja2.Template",
    "django.template.base.FilterExpression",
    "django.template.base.Lexer",
    "django.template.base.Origin",
    "django.template.base.Parser",
    "django.template.base.Template",
    "django.template.base.Token",
    "django.template.base.Variable",
    "django.template.engine.Engine",
    "django.template.library.Library",
    "django.template.loader_tags.BlockContext",
    "django.template.loaders.base.Loader",
    "django.template.smartif.IfParser",
    "django.template.utils.EngineHandler",
    "django.test.html.Element",
    "django.test.runner.DiscoverRunner",
    "django.test.runner.RemoteTestResult",
    "django.test.runner.RemoteTestRunner",
    "django.test.utils.Approximate",
    "django.test.utils.CaptureQueriesContext",
    "django.test.utils.TestContextDecorator",
    "django.urls.resolvers.LocalePrefixPattern",
    "django.urls.resolvers.LocaleRegexDescriptor",
    "django.urls.resolvers.ResolverMatch",
    "django.urls.resolvers.URLPattern",
    "django.urls.resolvers.URLResolver",
    "django.utils.archive.Archive",
    "django.utils.autoreload.BaseReloader",
    "django.utils.baseconv.BaseConverter",
    "django.utils.connection.ConnectionProxy",
    "django.utils.deprecation.MiddlewareMixin",
    "django.utils.deprecation.warn_about_renamed_method",
    "django.utils.feedgenerator.Enclosure",
    "django.utils.feedgenerator.SyndicationFeed",
    "django.utils.functional.LazyObject",
    "django.utils.functional.Promise",
    "django.utils.jslex.Lexer",
    "django.utils.jslex.Tok",
    "django.utils.translation.trans_real.TranslationCatalog",
    "django.utils.tree.Node",
    "django.views.debug.CallableSettingWrapper",
    "django.views.debug.ExceptionReporter",
    "django.views.generic.base.View",
    "dockerfile_parse.parser.DockerfileParser",
    "dockerfile_parse.util.Context",
    "dockerfile_parse.util.WordSplitter",
    "docutils.io.ErrorOutput",
    "docutils.nodes.NodeVisitor",
    "docutils.parsers.rst.Directive",
    "docutils.parsers.rst.states.Inliner",
    "docutils.transforms.Transform",
    "docutils.transforms.Transformer",
    "docutils.utils.DependencyList",
    "email.charset.Charset",
    "email.generator.BytesGenerator",
    "email.generator.Generator",
    "email.header.Header",
    "email.headerregistry.Address",
    "email.headerregistry.Group",
    "email.headerregistry.HeaderRegistry",
    "email.message.Message",
    "email.parser.BytesParser",
    "email.parser.Parser",
    "email.policy.Policy",
    "entrypoints.Distribution",
    "entrypoints.EntryPoint",
    "exceptiongroup._catch._Catcher",
    "exceptiongroup._formatting._ExceptionPrintContext",
    "executing._position_node_finder.PositionNodeFinder",
    "executing.executing.Executing",
    "executing.executing.SentinelNodeFinder",
    "executing.executing.Source",
    "exifread.classes.ExifHeader",
    "exifread.classes.IfdTag",
    "exifread.heic.Box",
    "exifread.heic.HEICExifFinder",
    "flake8_2020.Plugin",
    "flake8_builtins.BuiltinsChecker",
    "flake8_docstrings.pep257Checker",
    "flake8_plugin_utils.plugin.Error",
    "flake8_rst_docstrings.reStructuredTextChecker",
    "flake8_simplify.Plugin",
    "flake8_typing_imports.Plugin",
    "flask.cli.ScriptInfo",
    "flask.config.ConfigAttribute",
    "flask.ctx.AppContext",
    "flask.ctx.RequestContext",
    "flask.json.provider.JSONProvider",
    "flask.json.tag.JSONTag",
    "flask.json.tag.TaggedJSONSerializer",
    "flask.sansio.blueprints.BlueprintSetupState",
    "flask.sansio.scaffold.Scaffold",
    "flask_cors.extension.CORS",
    "flask_migrate.Config",
    "flask_migrate.Migrate",
    "flask_sqlalchemy.SQLAlchemy",
    "formatter.AbstractFormatter",
    "formatter.NullFormatter",
    "fpdf.annotations.AnnotationMixin",
    "fpdf.drawing.DrawingContext",
    "fpdf.drawing.GraphicsContext",
    "fpdf.drawing.GraphicsStyle",
    "fpdf.drawing.PaintedPath",
    "fpdf.encryption.CryptFilter",
    "fpdf.encryption.StandardSecurityHandler",
    "fpdf.fpdf.FPDF",
    "fpdf.fpdf.SubsetMap",
    "fpdf.graphics_state.GraphicsStateMixin",
    "fpdf.html.HTMLMixin",
    "fpdf.line_break.CurrentLine",
    "fpdf.line_break.Fragment",
    "fpdf.line_break.MultiLineBreak",
    "fpdf.output.AcroForm",
    "fpdf.output.OutputProducer",
    "fpdf.prefs.ViewerPreferences",
    "fpdf.recorder.CallRecorder",
    "fpdf.recorder.FPDFRecorder",
    "fpdf.sign.Signature",
    "fpdf.structure_tree.StructureTreeBuilder",
    "fpdf.svg.SVGObject",
    "fpdf.syntax.PDFObject",
    "fpdf.template.FlexTemplate",
    "ftplib.FTP",
    "gdb.Breakpoint",
    "gdb.Command",
    "gdb.Function",
    "gdb.MICommand",
    "gdb.Parameter",
    "gdb.Value",
    "gdb.printing.PrettyPrinter",
    "gdb.printing.SubPrettyPrinter",
    "gdb.types.TypePrinter",
    "gdb.xmethod.XMethod",
    "gettext.NullTranslations",
    "gflags.Flag",
    "google.cloud.ndb._datastore_query.Cursor",
    "google.cloud.ndb._eventloop.EventLoop",
    "google.cloud.ndb._options.Options",
    "google.cloud.ndb.blobstore.BlobFetchSizeTooLargeError",
    "google.cloud.ndb.blobstore.BlobInfo",
    "google.cloud.ndb.blobstore.BlobInfoParseError",
    "google.cloud.ndb.blobstore.BlobNotFoundError",
    "google.cloud.ndb.blobstore.BlobReader",
    "google.cloud.ndb.blobstore.DataIndexOutOfRangeError",
    "google.cloud.ndb.blobstore.Error",
    "google.cloud.ndb.blobstore.InternalError",
    "google.cloud.ndb.blobstore.PermissionDeniedError",
    "google.cloud.ndb.client.Client",
    "google.cloud.ndb.context.AutoBatcher",
    "google.cloud.ndb.context.ContextOptions",
    "google.cloud.ndb.context._LocalState",
    "google.cloud.ndb.django_middleware.NdbDjangoMiddleware",
    "google.cloud.ndb.model.User",
    "google.cloud.ndb.msgprop.EnumProperty",
    "google.cloud.ndb.msgprop.MessageProperty",
    "google.cloud.ndb.query.PropertyOrder",
    "google.cloud.ndb.query.Query",
    "google.cloud.ndb.query.RepeatedStructuredPropertyPredicate",
    "google.cloud.ndb.query._BooleanClauses",
    "google.cloud.ndb.tasklets.Future",
    "google.cloud.ndb.tasklets.QueueFuture",
    "google.cloud.ndb.tasklets.ReducingFuture",
    "google.cloud.ndb.tasklets.SerialQueueFuture",
    "google.cloud.ndb.utils.keyword_only",
    "google.protobuf.descriptor.DescriptorBase",
    "google.protobuf.descriptor.OneofDescriptor",
    "google.protobuf.descriptor_pool.DescriptorPool",
    "google.protobuf.internal.well_known_types._FieldMaskTree",
    "google.protobuf.message.Message",
    "google.protobuf.message_factory.MessageFactory",
    "google.protobuf.text_format.TextWriter",
    "google.protobuf.text_format.Tokenizer",
    "google.protobuf.text_format._Parser",
    "google.protobuf.text_format._Printer",
    "graphql.backend.base.GraphQLDocument",
    "graphql.backend.decider.AsyncWorker",
    "graphql.execution.base.ExecutionResult",
    "graphql.execution.base.ResolveInfo",
    "graphql.execution.executors.asyncio.AsyncioExecutor",
    "graphql.execution.executors.gevent.GeventExecutor",
    "graphql.execution.executors.process.ProcessExecutor",
    "graphql.execution.executors.thread.ThreadExecutor",
    "graphql.execution.middleware.MiddlewareManager",
    "graphql.execution.tests.test_abstract.Cat",
    "graphql.execution.tests.test_abstract.Dog",
    "graphql.execution.tests.test_abstract.Human",
    "graphql.execution.tests.test_execute_schema.test_executes_using_a_schema.Article",
    "graphql.execution.tests.test_execute_schema.test_executes_using_a_schema.Pic",
    "graphql.execution.tests.test_mutations.NumberHolder",
    "graphql.execution.tests.test_mutations.Root",
    "graphql.execution.tests.test_union_interface.Cat",
    "graphql.execution.tests.test_union_interface.Dog",
    "graphql.execution.tests.test_union_interface.Person",
    "graphql.execution.utils.ExecutionContext",
    "graphql.execution.utils.SubscriberExecutionContext",
    "graphql.language.lexer.Lexer",
    "graphql.language.lexer.Token",
    "graphql.language.location.SourceLocation",
    "graphql.language.parser.Loc",
    "graphql.language.parser.Parser",
    "graphql.language.source.Source",
    "graphql.language.visitor.Stack",
    "graphql.pyutils.cached_property.cached_property",
    "graphql.pyutils.enum._RouteClassAttributeToGetattr",
    "graphql.pyutils.pair_set.PairSet",
    "graphql.type.definition.GraphQLArgument",
    "graphql.type.definition.GraphQLEnumValue",
    "graphql.type.definition.GraphQLField",
    "graphql.type.definition.GraphQLInputObjectField",
    "graphql.type.directives.GraphQLDirective",
    "graphql.type.schema.GraphQLSchema",
    "graphql.utils.type_info.TypeInfo",
    "graphql.validation.validation.ValidationContext",
    "graphql.validation.validation.VariableUsage",
    "gzip._PaddedFile",
    "hashlib._Hash",
    "hashlib._VarLenHash",
    "hdbcli.dbapi.Connection",
    "hdbcli.dbapi.Cursor",
    "hdbcli.dbapi.LOB",
    "hdbcli.resultrow.ResultRow",
    "hmac.HMAC",
    "html5lib._ihatexml.InfosetFilter",
    "html5lib._inputstream.BufferedStream",
    "html5lib._inputstream.ContentAttrParser",
    "html5lib._inputstream.EncodingParser",
    "html5lib._inputstream.HTMLUnicodeInputStream",
    "html5lib._tokenizer.HTMLTokenizer",
    "html5lib.filters.base.Filter",
    "html5lib.html5parser.HTMLParser",
    "html5lib.serializer.HTMLSerializer",
    "html5lib.treebuilders.base.Node",
    "html5lib.treebuilders.base.TreeBuilder",
    "html5lib.treebuilders.etree_lxml.Document",
    "html5lib.treebuilders.etree_lxml.DocumentType",
    "html5lib.treewalkers.base.TreeWalker",
    "html5lib.treewalkers.etree_lxml.Doctype",
    "html5lib.treewalkers.etree_lxml.FragmentWrapper",
    "html5lib.treewalkers.etree_lxml.Root",
    "http.client.HTTPConnection",
    "http.cookiejar.Cookie",
    "httplib2.Authentication",
    "httplib2.Credentials",
    "httplib2.FileCache",
    "httplib2.Http",
    "httplib2.ProxyInfo",
    "humanfriendly.Timer",
    "humanfriendly.terminal.spinners.AutomaticSpinner",
    "humanfriendly.terminal.spinners.Spinner",
    "imaplib.IMAP4",
    "imaplib._Authenticator",
    "imp.NullImporter",
    "importlib.machinery.ModuleSpec",
    "importlib.metadata.DistributionFinder.Context",
    "importlib.metadata.FileHash",
    "importlib_metadata.DistributionFinder.Context",
    "importlib_metadata.EntryPoint",
    "importlib_metadata.FastPath",
    "importlib_metadata.FileHash",
    "importlib_metadata.Lookup",
    "importlib_metadata.Prepared",
    "influxdb_client._async.api_client.ApiClientAsync",
    "influxdb_client._async.rest.RESTClientObjectAsync",
    "influxdb_client._sync.api_client.ApiClient",
    "influxdb_client._sync.rest.RESTClientObject",
    "influxdb_client.client._base._BaseClient",
    "influxdb_client.client._base._BaseDeleteApi",
    "influxdb_client.client._base._BaseQueryApi",
    "influxdb_client.client._base._BaseWriteApi",
    "influxdb_client.client.authorizations_api.AuthorizationsApi",
    "influxdb_client.client.bucket_api.BucketsApi",
    "influxdb_client.client.flux_csv_parser.FluxCsvParser",
    "influxdb_client.client.flux_csv_parser._FluxCsvParserMetadata",
    "influxdb_client.client.flux_csv_parser._StreamReaderToWithAsyncRead",
    "influxdb_client.client.labels_api.LabelsApi",
    "influxdb_client.client.organizations_api.OrganizationsApi",
    "influxdb_client.client.query_api.QueryOptions",
    "influxdb_client.client.tasks_api.TasksApi",
    "influxdb_client.client.users_api.UsersApi",
    "influxdb_client.client.util.date_utils.DateHelper",
    "influxdb_client.client.write.dataframe_serializer.DataframeSerializer",
    "influxdb_client.client.write.point.Point",
    "influxdb_client.client.write_api.PointSettings",
    "influxdb_client.client.write_api.WriteOptions",
    "influxdb_client.client.write_api._BatchItem",
    "influxdb_client.client.write_api._BatchItemKey",
    "influxdb_client.client.write_api._BatchResponse",
    "influxdb_client.configuration.Configuration",
    "influxdb_client.domain.add_resource_member_request_body.AddResourceMemberRequestBody",
    "influxdb_client.domain.analyze_query_response.AnalyzeQueryResponse",
    "influxdb_client.domain.analyze_query_response_errors.AnalyzeQueryResponseErrors",
    "influxdb_client.domain.ast_response.ASTResponse",
    "influxdb_client.domain.authorization_update_request.AuthorizationUpdateRequest",
    "influxdb_client.domain.authorizations.Authorizations",
    "influxdb_client.domain.axes.Axes",
    "influxdb_client.domain.axis.Axis",
    "influxdb_client.domain.axis_scale.AxisScale",
    "influxdb_client.domain.bucket.Bucket",
    "influxdb_client.domain.bucket_links.BucketLinks",
    "influxdb_client.domain.bucket_metadata_manifest.BucketMetadataManifest",
    "influxdb_client.domain.bucket_retention_rules.BucketRetentionRules",
    "influxdb_client.domain.bucket_shard_mapping.BucketShardMapping",
    "influxdb_client.domain.buckets.Buckets",
    "influxdb_client.domain.builder_aggregate_function_type.BuilderAggregateFunctionType",
    "influxdb_client.domain.builder_config.BuilderConfig",
    "influxdb_client.domain.builder_config_aggregate_window.BuilderConfigAggregateWindow",
    "influxdb_client.domain.builder_functions_type.BuilderFunctionsType",
    "influxdb_client.domain.builder_tags_type.BuilderTagsType",
    "influxdb_client.domain.cell.Cell",
    "influxdb_client.domain.cell_links.CellLinks",
    "influxdb_client.domain.cell_update.CellUpdate",
    "influxdb_client.domain.check.Check",
    "influxdb_client.domain.check_base.CheckBase",
    "influxdb_client.domain.check_base_links.CheckBaseLinks",
    "influxdb_client.domain.check_patch.CheckPatch",
    "influxdb_client.domain.check_status_level.CheckStatusLevel",
    "influxdb_client.domain.checks.Checks",
    "influxdb_client.domain.column_data_type.ColumnDataType",
    "influxdb_client.domain.column_semantic_type.ColumnSemanticType",
    "influxdb_client.domain.config.Config",
    "influxdb_client.domain.create_cell.CreateCell",
    "influxdb_client.domain.create_dashboard_request.CreateDashboardRequest",
    "influxdb_client.domain.dashboard_color.DashboardColor",
    "influxdb_client.domain.dashboard_query.DashboardQuery",
    "influxdb_client.domain.dashboards.Dashboards",
    "influxdb_client.domain.dbr_ps.DBRPs",
    "influxdb_client.domain.dbrp.DBRP",
    "influxdb_client.domain.dbrp_create.DBRPCreate",
    "influxdb_client.domain.dbrp_get.DBRPGet",
    "influxdb_client.domain.dbrp_update.DBRPUpdate",
    "influxdb_client.domain.decimal_places.DecimalPlaces",
    "influxdb_client.domain.delete_predicate_request.DeletePredicateRequest",
    "influxdb_client.domain.dialect.Dialect",
    "influxdb_client.domain.dict_item.DictItem",
    "influxdb_client.domain.duration.Duration",
    "influxdb_client.domain.error.Error",
    "influxdb_client.domain.field.Field",
    "influxdb_client.domain.file.File",
    "influxdb_client.domain.flux_response.FluxResponse",
    "influxdb_client.domain.flux_suggestion.FluxSuggestion",
    "influxdb_client.domain.flux_suggestions.FluxSuggestions",
    "influxdb_client.domain.health_check.HealthCheck",
    "influxdb_client.domain.import_declaration.ImportDeclaration",
    "influxdb_client.domain.is_onboarding.IsOnboarding",
    "influxdb_client.domain.label.Label",
    "influxdb_client.domain.label_create_request.LabelCreateRequest",
    "influxdb_client.domain.label_mapping.LabelMapping",
    "influxdb_client.domain.label_response.LabelResponse",
    "influxdb_client.domain.label_update.LabelUpdate",
    "influxdb_client.domain.labels_response.LabelsResponse",
    "influxdb_client.domain.language_request.LanguageRequest",
    "influxdb_client.domain.line_protocol_error.LineProtocolError",
    "influxdb_client.domain.line_protocol_length_error.LineProtocolLengthError",
    "influxdb_client.domain.links.Links",
    "influxdb_client.domain.list_stacks_response.ListStacksResponse",
    "influxdb_client.domain.log_event.LogEvent",
    "influxdb_client.domain.logs.Logs",
    "influxdb_client.domain.measurement_schema.MeasurementSchema",
    "influxdb_client.domain.measurement_schema_column.MeasurementSchemaColumn",
    "influxdb_client.domain.measurement_schema_create_request.MeasurementSchemaCreateRequest",
    "influxdb_client.domain.measurement_schema_list.MeasurementSchemaList",
    "influxdb_client.domain.measurement_schema_update_request.MeasurementSchemaUpdateRequest",
    "influxdb_client.domain.metadata_backup.MetadataBackup",
    "influxdb_client.domain.model_property.ModelProperty",
    "influxdb_client.domain.node.Node",
    "influxdb_client.domain.notification_endpoint.NotificationEndpoint",
    "influxdb_client.domain.notification_endpoint_base.NotificationEndpointBase",
    "influxdb_client.domain.notification_endpoint_base_links.NotificationEndpointBaseLinks",
    "influxdb_client.domain.notification_endpoint_type.NotificationEndpointType",
    "influxdb_client.domain.notification_endpoint_update.NotificationEndpointUpdate",
    "influxdb_client.domain.notification_endpoints.NotificationEndpoints",
    "influxdb_client.domain.notification_rule.NotificationRule",
    "influxdb_client.domain.notification_rule_base.NotificationRuleBase",
    "influxdb_client.domain.notification_rule_base_links.NotificationRuleBaseLinks",
    "influxdb_client.domain.notification_rule_update.NotificationRuleUpdate",
    "influxdb_client.domain.notification_rules.NotificationRules",
    "influxdb_client.domain.onboarding_request.OnboardingRequest",
    "influxdb_client.domain.onboarding_response.OnboardingResponse",
    "influxdb_client.domain.organization.Organization",
    "influxdb_client.domain.organization_links.OrganizationLinks",
    "influxdb_client.domain.organizations.Organizations",
    "influxdb_client.domain.package.Package",
    "influxdb_client.domain.package_clause.PackageClause",
    "influxdb_client.domain.password_reset_body.PasswordResetBody",
    "influxdb_client.domain.patch_bucket_request.PatchBucketRequest",
    "influxdb_client.domain.patch_dashboard_request.PatchDashboardRequest",
    "influxdb_client.domain.patch_organization_request.PatchOrganizationRequest",
    "influxdb_client.domain.patch_retention_rule.PatchRetentionRule",
    "influxdb_client.domain.patch_stack_request.PatchStackRequest",
    "influxdb_client.domain.patch_stack_request_additional_resources.PatchStackRequestAdditionalResources",
    "influxdb_client.domain.permission.Permission",
    "influxdb_client.domain.permission_resource.PermissionResource",
    "influxdb_client.domain.post_bucket_request.PostBucketRequest",
    "influxdb_client.domain.post_check.PostCheck",
    "influxdb_client.domain.post_notification_endpoint.PostNotificationEndpoint",
    "influxdb_client.domain.post_notification_rule.PostNotificationRule",
    "influxdb_client.domain.post_organization_request.PostOrganizationRequest",
    "influxdb_client.domain.post_restore_kv_response.PostRestoreKVResponse",
    "influxdb_client.domain.post_stack_request.PostStackRequest",
    "influxdb_client.domain.query.Query",
    "influxdb_client.domain.query_edit_mode.QueryEditMode",
    "influxdb_client.domain.query_variable_properties_values.QueryVariablePropertiesValues",
    "influxdb_client.domain.ready.Ready",
    "influxdb_client.domain.remote_connection.RemoteConnection",
    "influxdb_client.domain.remote_connection_creation_request.RemoteConnectionCreationRequest",
    "influxdb_client.domain.remote_connection_update_request.RemoteConnectionUpdateRequest",
    "influxdb_client.domain.remote_connections.RemoteConnections",
    "influxdb_client.domain.renamable_field.RenamableField",
    "influxdb_client.domain.replication.Replication",
    "influxdb_client.domain.replication_creation_request.ReplicationCreationRequest",
    "influxdb_client.domain.replication_update_request.ReplicationUpdateRequest",
    "influxdb_client.domain.replications.Replications",
    "influxdb_client.domain.resource_members.ResourceMembers",
    "influxdb_client.domain.resource_members_links.ResourceMembersLinks",
    "influxdb_client.domain.resource_owners.ResourceOwners",
    "influxdb_client.domain.restored_bucket_mappings.RestoredBucketMappings",
    "influxdb_client.domain.retention_policy_manifest.RetentionPolicyManifest",
    "influxdb_client.domain.routes.Routes",
    "influxdb_client.domain.routes_external.RoutesExternal",
    "influxdb_client.domain.routes_query.RoutesQuery",
    "influxdb_client.domain.routes_system.RoutesSystem",
    "influxdb_client.domain.rule_status_level.RuleStatusLevel",
    "influxdb_client.domain.run.Run",
    "influxdb_client.domain.run_links.RunLinks",
    "influxdb_client.domain.run_manually.RunManually",
    "influxdb_client.domain.runs.Runs",
    "influxdb_client.domain.schema_type.SchemaType",
    "influxdb_client.domain.scraper_target_request.ScraperTargetRequest",
    "influxdb_client.domain.scraper_target_responses.ScraperTargetResponses",
    "influxdb_client.domain.script.Script",
    "influxdb_client.domain.script_create_request.ScriptCreateRequest",
    "influxdb_client.domain.script_invocation_params.ScriptInvocationParams",
    "influxdb_client.domain.script_language.ScriptLanguage",
    "influxdb_client.domain.script_update_request.ScriptUpdateRequest",
    "influxdb_client.domain.scripts.Scripts",
    "influxdb_client.domain.secret_keys.SecretKeys",
    "influxdb_client.domain.shard_group_manifest.ShardGroupManifest",
    "influxdb_client.domain.shard_manifest.ShardManifest",
    "influxdb_client.domain.shard_owner.ShardOwner",
    "influxdb_client.domain.source.Source",
    "influxdb_client.domain.source_links.SourceLinks",
    "influxdb_client.domain.sources.Sources",
    "influxdb_client.domain.stack.Stack",
    "influxdb_client.domain.stack_associations.StackAssociations",
    "influxdb_client.domain.stack_events.StackEvents",
    "influxdb_client.domain.stack_links.StackLinks",
    "influxdb_client.domain.stack_resources.StackResources",
    "influxdb_client.domain.statement.Statement",
    "influxdb_client.domain.static_legend.StaticLegend",
    "influxdb_client.domain.status_rule.StatusRule",
    "influxdb_client.domain.subscription_manifest.SubscriptionManifest",
    "influxdb_client.domain.table_view_properties_table_options.TableViewPropertiesTableOptions",
    "influxdb_client.domain.tag_rule.TagRule",
    "influxdb_client.domain.task.Task",
    "influxdb_client.domain.task_create_request.TaskCreateRequest",
    "influxdb_client.domain.task_links.TaskLinks",
    "influxdb_client.domain.task_status_type.TaskStatusType",
    "influxdb_client.domain.task_update_request.TaskUpdateRequest",
    "influxdb_client.domain.tasks.Tasks",
    "influxdb_client.domain.telegraf_plugin.TelegrafPlugin",
    "influxdb_client.domain.telegraf_plugin_request.TelegrafPluginRequest",
    "influxdb_client.domain.telegraf_plugin_request_plugins.TelegrafPluginRequestPlugins",
    "influxdb_client.domain.telegraf_plugins.TelegrafPlugins",
    "influxdb_client.domain.telegraf_request.TelegrafRequest",
    "influxdb_client.domain.telegraf_request_metadata.TelegrafRequestMetadata",
    "influxdb_client.domain.telegrafs.Telegrafs",
    "influxdb_client.domain.template_apply.TemplateApply",
    "influxdb_client.domain.template_apply_remotes.TemplateApplyRemotes",
    "influxdb_client.domain.template_apply_template.TemplateApplyTemplate",
    "influxdb_client.domain.template_chart.TemplateChart",
    "influxdb_client.domain.template_export_by_id.TemplateExportByID",
    "influxdb_client.domain.template_export_by_id_org_ids.TemplateExportByIDOrgIDs",
    "influxdb_client.domain.template_export_by_id_resource_filters.TemplateExportByIDResourceFilters",
    "influxdb_client.domain.template_export_by_id_resources.TemplateExportByIDResources",
    "influxdb_client.domain.template_export_by_name.TemplateExportByName",
    "influxdb_client.domain.template_export_by_name_resources.TemplateExportByNameResources",
    "influxdb_client.domain.template_kind.TemplateKind",
    "influxdb_client.domain.template_summary.TemplateSummary",
    "influxdb_client.domain.template_summary_diff.TemplateSummaryDiff",
    "influxdb_client.domain.template_summary_diff_buckets.TemplateSummaryDiffBuckets",
    "influxdb_client.domain.template_summary_diff_buckets_new_old.TemplateSummaryDiffBucketsNewOld",
    "influxdb_client.domain.template_summary_diff_checks.TemplateSummaryDiffChecks",
    "influxdb_client.domain.template_summary_diff_dashboards.TemplateSummaryDiffDashboards",
    "influxdb_client.domain.template_summary_diff_dashboards_new_old.TemplateSummaryDiffDashboardsNewOld",
    "influxdb_client.domain.template_summary_diff_label_mappings.TemplateSummaryDiffLabelMappings",
    "influxdb_client.domain.template_summary_diff_labels.TemplateSummaryDiffLabels",
    "influxdb_client.domain.template_summary_diff_labels_new_old.TemplateSummaryDiffLabelsNewOld",
    "influxdb_client.domain.template_summary_diff_notification_endpoints.TemplateSummaryDiffNotificationEndpoints",
    "influxdb_client.domain.template_summary_diff_notification_rules.TemplateSummaryDiffNotificationRules",
    "influxdb_client.domain.template_summary_diff_notification_rules_new_old.TemplateSummaryDiffNotificationRulesNewOld",
    "influxdb_client.domain.template_summary_diff_tasks.TemplateSummaryDiffTasks",
    "influxdb_client.domain.template_summary_diff_tasks_new_old.TemplateSummaryDiffTasksNewOld",
    "influxdb_client.domain.template_summary_diff_telegraf_configs.TemplateSummaryDiffTelegrafConfigs",
    "influxdb_client.domain.template_summary_diff_variables.TemplateSummaryDiffVariables",
    "influxdb_client.domain.template_summary_diff_variables_new_old.TemplateSummaryDiffVariablesNewOld",
    "influxdb_client.domain.template_summary_errors.TemplateSummaryErrors",
    "influxdb_client.domain.template_summary_label.TemplateSummaryLabel",
    "influxdb_client.domain.template_summary_label_properties.TemplateSummaryLabelProperties",
    "influxdb_client.domain.template_summary_summary.TemplateSummarySummary",
    "influxdb_client.domain.template_summary_summary_buckets.TemplateSummarySummaryBuckets",
    "influxdb_client.domain.template_summary_summary_dashboards.TemplateSummarySummaryDashboards",
    "influxdb_client.domain.template_summary_summary_label_mappings.TemplateSummarySummaryLabelMappings",
    "influxdb_client.domain.template_summary_summary_notification_rules.TemplateSummarySummaryNotificationRules",
    "influxdb_client.domain.template_summary_summary_status_rules.TemplateSummarySummaryStatusRules",
    "influxdb_client.domain.template_summary_summary_tag_rules.TemplateSummarySummaryTagRules",
    "influxdb_client.domain.template_summary_summary_tasks.TemplateSummarySummaryTasks",
    "influxdb_client.domain.template_summary_summary_variables.TemplateSummarySummaryVariables",
    "influxdb_client.domain.threshold.Threshold",
    "influxdb_client.domain.threshold_base.ThresholdBase",
    "influxdb_client.domain.user.User",
    "influxdb_client.domain.user_response.UserResponse",
    "influxdb_client.domain.user_response_links.UserResponseLinks",
    "influxdb_client.domain.users.Users",
    "influxdb_client.domain.variable.Variable",
    "influxdb_client.domain.variable_links.VariableLinks",
    "influxdb_client.domain.variable_properties.VariableProperties",
    "influxdb_client.domain.variables.Variables",
    "influxdb_client.domain.view.View",
    "influxdb_client.domain.view_links.ViewLinks",
    "influxdb_client.domain.view_properties.ViewProperties",
    "influxdb_client.domain.views.Views",
    "influxdb_client.domain.write_precision.WritePrecision",
    "influxdb_client.domain.xy_geom.XYGeom",
    "influxdb_client.service._base_service._BaseService",
    "inspect.BoundArguments",
    "inspect.Parameter",
    "inspect.Signature",
    "invoke.collection.Collection",
    "invoke.env.Environment",
    "invoke.executor.Executor",
    "invoke.loader.Loader",
    "invoke.parser.argument.Argument",
    "invoke.parser.context.ParserContext",
    "invoke.parser.parser.ParseMachine",
    "invoke.parser.parser.Parser",
    "invoke.program.Program",
    "invoke.runners.Result",
    "invoke.runners.Runner",
    "invoke.tasks.Call",
    "itsdangerous.serializer.Serializer",
    "itsdangerous.signer.Signer",
    "jack.Client",
    "jack.Port",
    "jack.Ports",
    "jack.RingBuffer",
    "jack.Status",
    "jack.TransportState",
    "jinja2.bccache.Bucket",
    "jinja2.compiler.Frame",
    "jinja2.compiler.MacroRef",
    "jinja2.environment.Environment",
    "jinja2.environment.TemplateExpression",
    "jinja2.environment.TemplateModule",
    "jinja2.environment.TemplateStream",
    "jinja2.ext.Extension",
    "jinja2.ext._CommentFinder",
    "jinja2.idtracking.Symbols",
    "jinja2.lexer.Failure",
    "jinja2.lexer.Lexer",
    "jinja2.lexer.TokenStream",
    "jinja2.lexer.TokenStreamIterator",
    "jinja2.nodes.EvalContext",
    "jinja2.nodes.Node",
    "jinja2.parser.Parser",
    "jinja2.runtime.BlockReference",
    "jinja2.runtime.Context",
    "jinja2.runtime.LoopContext",
    "jinja2.runtime.Macro",
    "jinja2.runtime.TemplateReference",
    "jinja2.runtime.Undefined",
    "jinja2.utils.Cycler",
    "jinja2.utils.Joiner",
    "jinja2.utils.LRUCache",
    "jinja2.utils.Namespace",
    "jmespath.parser.ParsedResult",
    "jmespath.parser.Parser",
    "jmespath.visitor.Options",
    "jmespath.visitor.Visitor",
    "jmespath.visitor._Expression",
    "jose.backends.base.Key",
    "json.decoder.JSONDecoder",
    "json.encoder.JSONEncoder",
    "jsonschema._format.FormatChecker",
    "jsonschema._types.TypeChecker",
    "jsonschema.cli._Outputter",
    "jsonschema.cli._PlainFormatter",
    "jsonschema.exceptions.ErrorTree",
    "jsonschema.validators.RefResolver",
    "jsonschema.validators._Validator",
    "keyboard._keyboard_event.KeyboardEvent",
    "ldap3.abstract.attrDef.AttrDef",
    "ldap3.abstract.attribute.Attribute",
    "ldap3.abstract.cursor.Cursor",
    "ldap3.abstract.entry.EntryBase",
    "ldap3.abstract.entry.EntryState",
    "ldap3.abstract.objectDef.ObjectDef",
    "ldap3.core.connection.Connection",
    "ldap3.core.pooling.ServerPool",
    "ldap3.core.pooling.ServerPoolState",
    "ldap3.core.pooling.ServerState",
    "ldap3.core.server.Server",
    "ldap3.core.tls.Tls",
    "ldap3.core.usage.ConnectionUsage",
    "ldap3.extend.ExtendedOperationContainer",
    "ldap3.extend.microsoft.dirSync.DirSync",
    "ldap3.extend.microsoft.persistentSearch.ADPersistentSearch",
    "ldap3.extend.operation.ExtendedOperation",
    "ldap3.extend.standard.PersistentSearch.PersistentSearch",
    "ldap3.operation.search.FilterNode",
    "ldap3.protocol.rfc4512.BaseObjectInfo",
    "ldap3.protocol.rfc4512.BaseServerInfo",
    "ldap3.strategy.base.BaseStrategy",
    "ldap3.strategy.mockBase.MockBaseStrategy",
    "ldap3.strategy.mockBase.PagedSearchSet",
    "ldap3.strategy.reusable.ReusableStrategy.ConnectionPool",
    "ldap3.strategy.reusable.ReusableStrategy.PooledConnectionWorker",
    "ldap3.utils.ntlm.NtlmClient",
    "lib2to3.pgen2.driver.Driver",
    "lib2to3.pgen2.parse.Parser",
    "lib2to3.pgen2.pgen.DFAState",
    "lib2to3.pgen2.pgen.ParserGenerator",
    "lib2to3.pygram.Symbols",
    "lib2to3.refactor.RefactoringTool",
    "libcst._parser.parso.pgen2.generator.DFAPlan",
    "libcst._parser.parso.pgen2.generator.ReservedString",
    "libcst._parser.parso.pgen2.grammar_parser.GrammarParser",
    "libcst._parser.parso.pgen2.grammar_parser.NFAArc",
    "libcst._parser.parso.pgen2.grammar_parser.NFAState",
    "libcst._parser.parso.python.tokenize.FStringNode",
    "libcst._position.CodeRange",
    "libcst.codemod._cli.Progress",
    "libcst.codemod._dummy_pool.DummyPool",
    "libcst.metadata.full_repo_manager.FullRepoManager",
    "libcst.metadata.reentrant_codegen.CodegenPartial",
    "libcst.metadata.scope_provider.Access",
    "libcst.metadata.scope_provider.Accesses",
    "libcst.metadata.scope_provider.Assignments",
    "libcst.metadata.wrapper.MetadataWrapper",
    "libcst.tests.pyre.simple_class.Item",
    "logging.BufferingFormatter",
    "logging.Filter",
    "logging.Formatter",
    "logging.LogRecord",
    "logging.Manager",
    "logging.PercentStyle",
    "logging.PlaceHolder",
    "logging.handlers.QueueListener",
    "lzma.LZMACompressor",
    "lzma.LZMADecompressor",
    "markdown.blockparser.BlockParser",
    "markdown.blockprocessors.BlockProcessor",
    "markdown.core.Markdown",
    "markdown.extensions.Extension",
    "markdown.extensions.codehilite.CodeHilite",
    "markdown.inlinepatterns.Pattern",
    "markdown.util.HtmlStash",
    "markdown.util.Processor",
    "markdown.util.Registry",
    "markupsafe._MarkupEscapeHelper",
    "marshmallow.error_store.ErrorStore",
    "marshmallow.schema.SchemaOpts",
    "marshmallow.validate.URL.RegexMemoizer",
    "mimetypes.MimeTypes",
    "mock.mock.Base",
    "mock.mock.MagicMixin",
    "mock.mock._SentinelObject",
    "mock.mock._SpecState",
    "mock.mock._patch_dict",
    "modulefinder.Module",
    "modulefinder.ModuleFinder",
    "multiprocessing.connection.Listener",
    "multiprocessing.connection._ConnectionBase",
    "multiprocessing.dummy.Namespace",
    "multiprocessing.dummy.Value",
    "multiprocessing.dummy.connection.Connection",
    "multiprocessing.dummy.connection.Listener",
    "multiprocessing.heap.Arena",
    "multiprocessing.heap.BufferWrapper",
    "multiprocessing.heap.Heap",
    "multiprocessing.managers.BaseManager",
    "multiprocessing.managers.BaseProxy",
    "multiprocessing.managers.Namespace",
    "multiprocessing.managers.Server",
    "multiprocessing.managers.Token",
    "multiprocessing.pool.Pool",
    "multiprocessing.popen_fork.Popen",
    "multiprocessing.popen_forkserver._DupFd",
    "multiprocessing.popen_spawn_posix._DupFd",
    "multiprocessing.process.BaseProcess",
    "multiprocessing.reduction.AbstractReducer",
    "multiprocessing.resource_sharer.DupFd",
    "multiprocessing.shared_memory.SharedMemory",
    "multiprocessing.synchronize.Event",
    "multiprocessing.util.Finalize",
    "mypy_django_plugin.config.DjangoPluginConfig",
    "mypy_django_plugin.django.context.DjangoContext",
    "mypy_django_plugin.main.NewSemanalDjangoPlugin",
    "mypy_django_plugin.transformers.models.ModelClassInitializer",
    "netaddr.contrib.subnet_splitter.SubnetSplitter",
    "netaddr.core.DictDotLookup",
    "netaddr.core.Publisher",
    "netaddr.eui.BaseIdentifier",
    "netaddr.ip.BaseIP",
    "netaddr.ip.sets.IPSet",
    "netrc.netrc",
    "nmap.nmap.PortScanner",
    "nmap.nmap.PortScannerAsync",
    "nntplib.NNTP",
    "oauthlib.common.Request",
    "oauthlib.oauth1.rfc5849.Client",
    "oauthlib.oauth1.rfc5849.endpoints.base.BaseEndpoint",
    "oauthlib.oauth1.rfc5849.request_validator.RequestValidator",
    "oauthlib.oauth2.rfc6749.clients.base.Client",
    "oauthlib.oauth2.rfc6749.endpoints.base.BaseEndpoint",
    "oauthlib.oauth2.rfc6749.grant_types.base.GrantTypeBase",
    "oauthlib.oauth2.rfc6749.grant_types.base.ValidatorsContainer",
    "oauthlib.signals._FakeSignal",
    "openpyxl.cell.read_only.ReadOnlyCell",
    "openpyxl.chart.reference.DummyWorksheet",
    "openpyxl.comments.comments.Comment",
    "openpyxl.comments.shape_writer.ShapeWriter",
    "openpyxl.descriptors.base.Descriptor",
    "openpyxl.drawing.drawing.Drawing",
    "openpyxl.drawing.image.Image",
    "openpyxl.formatting.formatting.ConditionalFormattingList",
    "openpyxl.formula.tokenizer.Token",
    "openpyxl.formula.tokenizer.Tokenizer",
    "openpyxl.formula.translate.Translator",
    "openpyxl.reader.excel.ExcelReader",
    "openpyxl.reader.workbook.WorkbookParser",
    "openpyxl.styles.cell_style.ArrayDescriptor",
    "openpyxl.styles.proxy.StyleProxy",
    "openpyxl.styles.styleable.StyleArrayDescriptor",
    "openpyxl.styles.styleable.StyleDescriptor",
    "openpyxl.styles.styleable.StyleableObject",
    "openpyxl.workbook._writer.WorkbookWriter",
    "openpyxl.workbook.child._WorkbookChild",
    "openpyxl.workbook.workbook.Workbook",
    "openpyxl.worksheet._read_only.ReadOnlyWorksheet",
    "openpyxl.worksheet._reader.WorkSheetParser",
    "openpyxl.worksheet._reader.WorksheetReader",
    "openpyxl.worksheet._writer.WorksheetWriter",
    "openpyxl.worksheet.copier.WorksheetCopy",
    "openpyxl.writer.excel.ExcelWriter",
    "opentracing.mocktracer.span.LogData",
    "opentracing.scope.Scope",
    "opentracing.scope_manager.ScopeManager",
    "opentracing.scope_managers.tornado.ThreadSafeStackContext",
    "opentracing.span.Span",
    "opentracing.tracer.Tracer",
    "optparse.HelpFormatter",
    "optparse.Option",
    "optparse.OptionContainer",
    "optparse.Values",
    "packaging._elffile.ELFFile",
    "packaging._parser.Node",
    "packaging._tokenizer.Tokenizer",
    "packaging.markers.Marker",
    "packaging.requirements.Requirement",
    "packaging.tags.Tag",
    "paho.mqtt.client.Client",
    "paho.mqtt.client.MQTTMessage",
    "paho.mqtt.client.MQTTMessageInfo",
    "paho.mqtt.client.WebsocketWrapper",
    "paho.mqtt.matcher.MQTTMatcher",
    "paho.mqtt.properties.Properties",
    "paho.mqtt.reasoncodes.ReasonCodes",
    "paho.mqtt.subscribeoptions.SubscribeOptions",
    "paramiko.agent.AgentClientProxy",
    "paramiko.agent.AgentRequestHandler",
    "paramiko.agent.AgentSSH",
    "paramiko.auth_handler.AuthHandler",
    "paramiko.auth_handler.GssapiWithMicAuthHandler",
    "paramiko.ber.BER",
    "paramiko.compress.ZlibCompressor",
    "paramiko.compress.ZlibDecompressor",
    "paramiko.config.LazyFqdn",
    "paramiko.config.SSHConfig",
    "paramiko.ecdsakey._ECDSACurve",
    "paramiko.ecdsakey._ECDSACurveSet",
    "paramiko.hostkeys.HostKeyEntry",
    "paramiko.kex_curve25519.KexCurve25519",
    "paramiko.kex_ecdh_nist.KexNistp256",
    "paramiko.kex_gex.KexGex",
    "paramiko.kex_group1.KexGroup1",
    "paramiko.kex_gss.KexGSSGex",
    "paramiko.kex_gss.KexGSSGroup1",
    "paramiko.kex_gss.NullHostKey",
    "paramiko.message.Message",
    "paramiko.packet.Packetizer",
    "paramiko.pipe.OrPipe",
    "paramiko.pipe.PosixPipe",
    "paramiko.pipe.WindowsPipe",
    "paramiko.pkey.PKey",
    "paramiko.pkey.PublicBlob",
    "paramiko.primes.ModulusPack",
    "paramiko.server.InteractiveQuery",
    "paramiko.sftp.BaseSFTP",
    "paramiko.sftp_attr.SFTPAttributes",
    "paramiko.sftp_si.SFTPServerInterface",
    "paramiko.ssh_gss._SSH_GSSAuth",
    "paramiko.transport.ChannelMap",
    "paramiko.transport.SecurityOptions",
    "parsimonious.nodes.Node",
    "parso.cache._NodeCacheItem",
    "parso.file_io.FileIO",
    "parso.normalizer.Issue",
    "parso.normalizer.Normalizer",
    "parso.normalizer.Rule",
    "parso.parser.BaseParser",
    "parso.parser.StackNode",
    "parso.pgen2.generator.DFAPlan",
    "parso.pgen2.generator.ReservedString",
    "parso.pgen2.grammar_parser.GrammarParser",
    "parso.pgen2.grammar_parser.NFAArc",
    "parso.pgen2.grammar_parser.NFAState",
    "parso.python.diff.DiffParser",
    "parso.python.diff._NodesTree",
    "parso.python.diff._NodesTreeNode",
    "parso.python.errors._Context",
    "parso.python.pep8.IndentationNode",
    "parso.python.prefix.PrefixPart",
    "parso.python.token.TokenType",
    "parso.python.tokenize.FStringNode",
    "passlib.apache._CommonFile",
    "passlib.context.CryptContext",
    "passlib.context.CryptPolicy",
    "passlib.crypto._blowfish.base.BlowfishEngine",
    "passlib.crypto._md4.md4",
    "passlib.crypto.scrypt._builtin.ScryptEngine",
    "passlib.ext.django.utils.DjangoTranslator",
    "passlib.ext.django.utils.ProxyProperty",
    "passlib.pwd.SequenceGenerator",
    "passlib.totp.AppWallet",
    "passlib.totp.TOTP",
    "passlib.utils.binary.Base64Engine",
    "passlib.utils.decor.classproperty",
    "passlib.utils.decor.hybrid_method",
    "passlib.utils.decor.memoized_property",
    "passlib.utils.handlers.PrefixWrapper",
    "passpy.store.Store",
    "peewee.AliasManager",
    "peewee.BackrefAccessor",
    "peewee.BigBitFieldData",
    "peewee.ColumnFactory",
    "peewee.Context",
    "peewee.CursorWrapper",
    "peewee.DeferredThroughModel",
    "peewee.EntityFactory",
    "peewee.ExceptionWrapper",
    "peewee.FieldAccessor",
    "peewee.Metadata",
    "peewee.Model",
    "peewee.ObjectIdAccessor",
    "peewee.Proxy",
    "peewee.ResultIterator",
    "peewee.SchemaManager",
    "peewee._ConnectionState",
    "peewee._HashableSource",
    "peewee._ModelQueryHelper",
    "peewee._SortedFieldList",
    "pep8ext_naming.NamingChecker",
    "pickle.PickleBuffer",
    "pickle.Pickler",
    "pickle.Unpickler",
    "pickletools.ArgumentDescriptor",
    "pickletools.OpcodeInfo",
    "pickletools.StackObject",
    "pika.adapters.blocking_connection.BlockingChannel",
    "pika.adapters.blocking_connection.BlockingConnection",
    "pika.adapters.blocking_connection.ReturnedMessage",
    "pika.adapters.blocking_connection._CallbackResult",
    "pika.adapters.blocking_connection._ConnectionBlockedUnblockedEvtBase",
    "pika.adapters.blocking_connection._ConsumerInfo",
    "pika.adapters.blocking_connection._IoloopTimerContext",
    "pika.adapters.blocking_connection._QueueConsumerGeneratorInfo",
    "pika.adapters.blocking_connection._TimerEvt",
    "pika.adapters.gevent_connection._GeventAddressResolver",
    "pika.adapters.gevent_connection._TSafeCallbackQueue",
    "pika.adapters.select_connection._Timeout",
    "pika.adapters.select_connection._Timer",
    "pika.adapters.twisted_connection.ClosableDeferredQueue",
    "pika.adapters.twisted_connection.TwistedChannel",
    "pika.adapters.twisted_connection.TwistedProtocolConnection",
    "pika.adapters.utils.connection_workflow.AMQPConnector",
    "pika.adapters.utils.io_services_utils._AsyncSocketConnector",
    "pika.adapters.utils.io_services_utils._AsyncStreamConnector",
    "pika.adapters.utils.selector_ioloop_adapter._AddressResolver",
    "pika.adapters.utils.selector_ioloop_adapter._FileDescriptorCallbacks",
    "pika.callback.CallbackManager",
    "pika.channel.Channel",
    "pika.channel.ContentFrameAssembler",
    "pika.connection.Parameters",
    "pika.connection.SSLOptions",
    "pika.credentials.ExternalCredentials",
    "pika.credentials.PlainCredentials",
    "pika.heartbeat.HeartbeatChecker",
    "pip._internal.build_env.BuildEnvironment",
    "pip._internal.build_env._Prefix",
    "pip._internal.cache.Cache",
    "pip._internal.cache.CacheEntry",
    "pip._internal.cli.command_context.CommandContextMixIn",
    "pip._internal.cli.spinners.RateLimiter",
    "pip._internal.configuration.Configuration",
    "pip._internal.distributions.base.AbstractDistribution",
    "pip._internal.index.collector.CacheablePageContent",
    "pip._internal.index.collector.IndexContent",
    "pip._internal.index.collector.LinkCollector",
    "pip._internal.index.package_finder.BestCandidateResult",
    "pip._internal.index.package_finder.CandidateEvaluator",
    "pip._internal.index.package_finder.CandidatePreferences",
    "pip._internal.index.package_finder.LinkEvaluator",
    "pip._internal.index.package_finder.PackageFinder",
    "pip._internal.metadata.importlib._envs._DistributionFinder",
    "pip._internal.metadata.pkg_resources.InMemoryMetadata",
    "pip._internal.models.direct_url.ArchiveInfo",
    "pip._internal.models.direct_url.DirInfo",
    "pip._internal.models.direct_url.DirectUrl",
    "pip._internal.models.direct_url.VcsInfo",
    "pip._internal.models.format_control.FormatControl",
    "pip._internal.models.index.PackageIndex",
    "pip._internal.models.installation_report.InstallationReport",
    "pip._internal.models.scheme.Scheme",
    "pip._internal.models.search_scope.SearchScope",
    "pip._internal.models.selection_prefs.SelectionPreferences",
    "pip._internal.models.target_python.TargetPython",
    "pip._internal.models.wheel.Wheel",
    "pip._internal.network.download.BatchDownloader",
    "pip._internal.network.download.Downloader",
    "pip._internal.network.lazy_wheel.LazyZipOverHTTP",
    "pip._internal.network.session._SSLContextAdapterMixin",
    "pip._internal.operations.build.build_tracker.BuildTracker",
    "pip._internal.operations.freeze.FrozenRequirement",
    "pip._internal.operations.install.wheel.ScriptFile",
    "pip._internal.operations.install.wheel.ZipBackedFile",
    "pip._internal.operations.prepare.File",
    "pip._internal.operations.prepare.RequirementPreparer",
    "pip._internal.req.InstallationResult",
    "pip._internal.req.constructors.RequirementParts",
    "pip._internal.req.req_file.ParsedLine",
    "pip._internal.req.req_file.ParsedRequirement",
    "pip._internal.req.req_file.RequirementsFileParser",
    "pip._internal.req.req_install.InstallRequirement",
    "pip._internal.req.req_set.RequirementSet",
    "pip._internal.req.req_uninstall.StashedUninstallPathSet",
    "pip._internal.req.req_uninstall.UninstallPathSet",
    "pip._internal.req.req_uninstall.UninstallPthEntries",
    "pip._internal.resolution.resolvelib.base.Constraint",
    "pip._internal.resolution.resolvelib.factory.Factory",
    "pip._internal.self_outdated_check.SelfCheckState",
    "pip._internal.utils.hashes.Hashes",
    "pip._internal.utils.misc.HiddenText",
    "pip._internal.utils.models.KeyBasedCompareMixin",
    "pip._internal.utils.temp_dir.TempDirectory",
    "pip._internal.utils.temp_dir.TempDirectoryTypeRegistry",
    "pip._internal.vcs.versioncontrol.RevOptions",
    "pip._internal.vcs.versioncontrol.VcsSupport",
    "pip._vendor.cachecontrol.caches.file_cache._FileCacheMixin",
    "pip._vendor.cachecontrol.controller.CacheController",
    "pip._vendor.cachecontrol.filewrapper.CallbackFileWrapper",
    "pip._vendor.chardet.chardistribution.CharDistributionAnalysis",
    "pip._vendor.chardet.charsetprober.CharSetProber",
    "pip._vendor.chardet.codingstatemachine.CodingStateMachine",
    "pip._vendor.chardet.jpcntx.JapaneseContextAnalysis",
    "pip._vendor.chardet.metadata.languages.Language",
    "pip._vendor.chardet.universaldetector.UniversalDetector",
    "pip._vendor.colorama.ansi.AnsiCodes",
    "pip._vendor.colorama.ansitowin32.AnsiToWin32",
    "pip._vendor.colorama.ansitowin32.StreamWrapper",
    "pip._vendor.colorama.winterm.WinTerm",
    "pip._vendor.distlib.compat.BaseConfigurator",
    "pip._vendor.distlib.compat.Container",
    "pip._vendor.distlib.database.DependencyGraph",
    "pip._vendor.distlib.database.Distribution",
    "pip._vendor.distlib.database.DistributionPath",
    "pip._vendor.distlib.database._Cache",
    "pip._vendor.distlib.index.PackageIndex",
    "pip._vendor.distlib.locators.DependencyFinder",
    "pip._vendor.distlib.locators.Locator",
    "pip._vendor.distlib.locators.Page",
    "pip._vendor.distlib.manifest.Manifest",
    "pip._vendor.distlib.metadata.LegacyMetadata",
    "pip._vendor.distlib.metadata.Metadata",
    "pip._vendor.distlib.resources.ResourceBase",
    "pip._vendor.distlib.resources.ResourceFinder",
    "pip._vendor.distlib.scripts.ScriptMaker",
    "pip._vendor.distlib.util.Cache",
    "pip._vendor.distlib.util.EventMixin",
    "pip._vendor.distlib.util.ExportEntry",
    "pip._vendor.distlib.util.FileOperator",
    "pip._vendor.distlib.util.Progress",
    "pip._vendor.distlib.util.PyPIRCFile",
    "pip._vendor.distlib.util.Sequencer",
    "pip._vendor.distlib.util.SubprocessMixin",
    "pip._vendor.distlib.util.cached_property",
    "pip._vendor.distlib.version.Matcher",
    "pip._vendor.distlib.version.Version",
    "pip._vendor.distlib.version.VersionScheme",
    "pip._vendor.distlib.wheel.Mounter",
    "pip._vendor.distlib.wheel.Wheel",
    "pip._vendor.distro.distro.LinuxDistribution",
    "pip._vendor.distro.distro.cached_property",
    "pip._vendor.msgpack.ext.Timestamp",
    "pip._vendor.msgpack.fallback.Packer",
    "pip._vendor.msgpack.fallback.StringIO",
    "pip._vendor.msgpack.fallback.Unpacker",
    "pip._vendor.packaging._manylinux._ELFFileHeader",
    "pip._vendor.packaging.markers.Marker",
    "pip._vendor.packaging.markers.Node",
    "pip._vendor.packaging.requirements.Requirement",
    "pip._vendor.packaging.tags.Tag",
    "pip._vendor.pkg_resources.Distribution",
    "pip._vendor.pkg_resources.EntryPoint",
    "pip._vendor.pkg_resources.Environment",
    "pip._vendor.pkg_resources.NullProvider",
    "pip._vendor.pkg_resources.ResourceManager",
    "pip._vendor.pkg_resources.WorkingSet",
    "pip._vendor.pygments.filter.Filter",
    "pip._vendor.pygments.formatter.Formatter",
    "pip._vendor.pygments.formatters.img.FontManager",
    "pip._vendor.pygments.formatters.terminal256.EscapeSequence",
    "pip._vendor.pygments.lexer.Lexer",
    "pip._vendor.pygments.lexer.LexerContext",
    "pip._vendor.pygments.lexer._PseudoMatch",
    "pip._vendor.pygments.lexer.default",
    "pip._vendor.pygments.scanner.Scanner",
    "pip._vendor.pyparsing.actions.OnlyOnce",
    "pip._vendor.pyparsing.diagram.AnnotatedItem",
    "pip._vendor.pyparsing.diagram.ConverterState",
    "pip._vendor.pyparsing.diagram.EachItem",
    "pip._vendor.pyparsing.diagram.ElementState",
    "pip._vendor.pyparsing.results.ParseResults",
    "pip._vendor.pyparsing.results._ParseResultsWithOffset",
    "pip._vendor.pyparsing.testing.pyparsing_test.reset_pyparsing_context",
    "pip._vendor.pyparsing.util.LRUMemo",
    "pip._vendor.pyparsing.util._FifoCache",
    "pip._vendor.pyparsing.util._UnboundedCache",
    "pip._vendor.pyproject_hooks._impl.BuildBackendHookCaller",
    "pip._vendor.requests.adapters.BaseAdapter",
    "pip._vendor.requests.cookies.MockRequest",
    "pip._vendor.requests.cookies.MockResponse",
    "pip._vendor.requests.models.Response",
    "pip._vendor.resolvelib.providers.AbstractResolver",
    "pip._vendor.resolvelib.resolvers.Criterion",
    "pip._vendor.resolvelib.resolvers.Resolution",
    "pip._vendor.resolvelib.structs.DirectedGraph",
    "pip._vendor.resolvelib.structs._FactoryIterableView",
    "pip._vendor.resolvelib.structs._SequenceIterableView",
    "pip._vendor.rich._log_render.LogRender",
    "pip._vendor.rich._win32_console.LegacyWindowsTerm",
    "pip._vendor.rich.ansi.AnsiDecoder",
    "pip._vendor.rich.box.Box",
    "pip._vendor.rich.console.Capture",
    "pip._vendor.rich.console.Console",
    "pip._vendor.rich.console.Group",
    "pip._vendor.rich.console.NewLine",
    "pip._vendor.rich.console.PagerContext",
    "pip._vendor.rich.console.ScreenContext",
    "pip._vendor.rich.console.ScreenUpdate",
    "pip._vendor.rich.console.ThemeContext",
    "pip._vendor.rich.containers.Lines",
    "pip._vendor.rich.containers.Renderables",
    "pip._vendor.rich.control.Control",
    "pip._vendor.rich.json.JSON",
    "pip._vendor.rich.jupyter.JupyterRenderable",
    "pip._vendor.rich.layout.Layout",
    "pip._vendor.rich.layout._Placeholder",
    "pip._vendor.rich.live_render.LiveRender",
    "pip._vendor.rich.palette.Palette",
    "pip._vendor.rich.screen.Screen",
    "pip._vendor.rich.segment.SegmentLines",
    "pip._vendor.rich.segment.Segments",
    "pip._vendor.rich.spinner.Spinner",
    "pip._vendor.rich.style.Style",
    "pip._vendor.rich.style.StyleStack",
    "pip._vendor.rich.style._Bit",
    "pip._vendor.rich.styled.Styled",
    "pip._vendor.rich.terminal_theme.TerminalTheme",
    "pip._vendor.rich.theme.Theme",
    "pip._vendor.rich.theme.ThemeStack",
    "pip._vendor.rich.traceback.Traceback",
    "pip._vendor.six._LazyDescr",
    "pip._vendor.six._SixMetaPathImporter",
    "pip._vendor.tenacity.AttemptManager",
    "pip._vendor.tenacity.RetryCallState",
    "pip._vendor.tenacity.nap.sleep_using_event",
    "pip._vendor.tomli._parser.Flags",
    "pip._vendor.tomli._parser.NestedDict",
    "pip._vendor.truststore._api.SSLContext",
    "pip._vendor.typing_extensions.NewType",
    "pip._vendor.typing_extensions.TypeAliasType",
    "pip._vendor.typing_extensions._AnnotatedAlias",
    "pip._vendor.typing_extensions._ProtocolMeta",
    "pip._vendor.typing_extensions._SpecialForm",
    "pip._vendor.urllib3.connection.HTTPConnection",
    "pip._vendor.urllib3.connectionpool.ConnectionPool",
    "pip._vendor.urllib3.contrib.pyopenssl.PyOpenSSLContext",
    "pip._vendor.urllib3.contrib.pyopenssl.WrappedSocket",
    "pip._vendor.urllib3.contrib.securetransport.SecureTransportContext",
    "pip._vendor.urllib3.contrib.securetransport.WrappedSocket",
    "pip._vendor.urllib3.fields.RequestField",
    "pip._vendor.urllib3.packages.backports.weakref_finalize.weakref_finalize",
    "pip._vendor.urllib3.packages.six._LazyDescr",
    "pip._vendor.urllib3.packages.six._SixMetaPathImporter",
    "pip._vendor.urllib3.request.RequestMethods",
    "pip._vendor.urllib3.response.BrotliDecoder",
    "pip._vendor.urllib3.response.DeflateDecoder",
    "pip._vendor.urllib3.response.GzipDecoder",
    "pip._vendor.urllib3.response.MultiDecoder",
    "pip._vendor.urllib3.util.retry.Retry",
    "pip._vendor.urllib3.util.ssl_.SSLContext",
    "pip._vendor.urllib3.util.ssltransport.SSLTransport",
    "pip._vendor.urllib3.util.timeout.Timeout",
    "pip._vendor.webencodings.Encoding",
    "pip._vendor.webencodings.IncrementalDecoder",
    "pip._vendor.webencodings.IncrementalEncoder",
    "pkg_resources.EntryPoint",
    "pkg_resources.Environment",
    "pkg_resources.WorkingSet",
    "pkgutil.ImpImporter",
    "pkgutil.ImpLoader",
    "plistlib.UID",
    "polib._BaseEntry",
    "poplib.POP3",
    "pprint.PrettyPrinter",
    "prettytable.colortable.Theme",
    "prettytable.prettytable.PrettyTable",
    "profile.Profile",
    "promise.compat.Future",
    "promise.promise_list.PromiseList",
    "promise.schedulers.asyncio.AsyncioScheduler",
    "promise.utils.deprecated",
    "prompt_toolkit.application.current.AppSession",
    "prompt_toolkit.auto_suggest.Suggestion",
    "prompt_toolkit.buffer.Buffer",
    "prompt_toolkit.buffer.CompletionState",
    "prompt_toolkit.buffer.YankNthArgState",
    "prompt_toolkit.clipboard.base.ClipboardData",
    "prompt_toolkit.completion.base.CompleteEvent",
    "prompt_toolkit.completion.base.Completion",
    "prompt_toolkit.contrib.regular_languages.compiler.Match",
    "prompt_toolkit.contrib.regular_languages.compiler.MatchVariable",
    "prompt_toolkit.contrib.regular_languages.compiler.Variables",
    "prompt_toolkit.contrib.regular_languages.compiler._CompiledGrammar",
    "prompt_toolkit.contrib.ssh.server.PromptToolkitSSHServer",
    "prompt_toolkit.contrib.ssh.server.PromptToolkitSSHSession",
    "prompt_toolkit.contrib.telnet.protocol.TelnetProtocolParser",
    "prompt_toolkit.contrib.telnet.server.TelnetConnection",
    "prompt_toolkit.contrib.telnet.server.TelnetServer",
    "prompt_toolkit.contrib.telnet.server._ConnectionStdout",
    "prompt_toolkit.document.Document",
    "prompt_toolkit.document._DocumentCache",
    "prompt_toolkit.eventloop.inputhook.InputHookContext",
    "prompt_toolkit.filters.base.Filter",
    "prompt_toolkit.formatted_text.ansi.ANSI",
    "prompt_toolkit.formatted_text.base.Template",
    "prompt_toolkit.formatted_text.html.HTML",
    "prompt_toolkit.formatted_text.pygments.PygmentsTokens",
    "prompt_toolkit.history.History",
    "prompt_toolkit.input.posix_pipe._Pipe",
    "prompt_toolkit.input.posix_utils.PosixStdinReader",
    "prompt_toolkit.input.vt100.raw_mode",
    "prompt_toolkit.input.vt100_parser.Vt100Parser",
    "prompt_toolkit.input.win32.ConsoleInputReader",
    "prompt_toolkit.input.win32._Win32Handles",
    "prompt_toolkit.input.win32.raw_mode",
    "prompt_toolkit.key_binding.bindings.vi.TextObject",
    "prompt_toolkit.key_binding.emacs_state.EmacsState",
    "prompt_toolkit.key_binding.key_bindings.Binding",
    "prompt_toolkit.key_binding.key_processor.KeyPress",
    "prompt_toolkit.key_binding.key_processor.KeyPressEvent",
    "prompt_toolkit.key_binding.key_processor.KeyProcessor",
    "prompt_toolkit.key_binding.vi_state.CharacterFind",
    "prompt_toolkit.key_binding.vi_state.ViState",
    "prompt_toolkit.layout.containers.ColorColumn",
    "prompt_toolkit.layout.containers.Float",
    "prompt_toolkit.layout.containers.ScrollOffsets",
    "prompt_toolkit.layout.containers.WindowRenderInfo",
    "prompt_toolkit.layout.controls.UIContent",
    "prompt_toolkit.layout.dimension.Dimension",
    "prompt_toolkit.layout.layout.Layout",
    "prompt_toolkit.layout.mouse_handlers.MouseHandlers",
    "prompt_toolkit.layout.processors.Transformation",
    "prompt_toolkit.layout.processors.TransformationInput",
    "prompt_toolkit.layout.screen.Char",
    "prompt_toolkit.layout.screen.Screen",
    "prompt_toolkit.layout.screen.WritePosition",
    "prompt_toolkit.mouse_events.MouseEvent",
    "prompt_toolkit.output.conemu.ConEmuOutput",
    "prompt_toolkit.output.vt100._16ColorCache",
    "prompt_toolkit.output.win32.ColorLookupTable",
    "prompt_toolkit.output.windows10.Windows10_Output",
    "prompt_toolkit.patch_stdout.StdoutProxy",
    "prompt_toolkit.renderer.Renderer",
    "prompt_toolkit.search.SearchState",
    "prompt_toolkit.selection.SelectionState",
    "prompt_toolkit.shortcuts.progress_bar.base.ProgressBar",
    "prompt_toolkit.widgets.base.Box",
    "prompt_toolkit.widgets.base.Button",
    "prompt_toolkit.widgets.base.Frame",
    "prompt_toolkit.widgets.base.HorizontalLine",
    "prompt_toolkit.widgets.base.Label",
    "prompt_toolkit.widgets.base.ProgressBar",
    "prompt_toolkit.widgets.base.Shadow",
    "prompt_toolkit.widgets.base.TextArea",
    "prompt_toolkit.widgets.base.VerticalLine",
    "prompt_toolkit.widgets.dialogs.Dialog",
    "prompt_toolkit.widgets.menus.MenuContainer",
    "prompt_toolkit.widgets.menus.MenuItem",
    "prompt_toolkit.widgets.toolbars.ArgToolbar",
    "prompt_toolkit.widgets.toolbars.CompletionsToolbar",
    "prompt_toolkit.widgets.toolbars.SearchToolbar",
    "prompt_toolkit.widgets.toolbars.SystemToolbar",
    "prompt_toolkit.widgets.toolbars.ValidationToolbar",
    "property",
    "pstats.Stats",
    "psutil.Process",
    "psutil._common._WrapNumbers",
    "psutil._psaix.Process",
    "psutil._psbsd.Process",
    "psutil._pslinux.Connections",
    "psutil._pslinux.Process",
    "psutil._pslinux.RootFsDeviceFinder",
    "psutil._psosx.Process",
    "psutil._pssunos.Process",
    "psutil._pswindows.Process",
    "psutil._pswindows.WindowsService",
    "psycopg2._json.Json",
    "psycopg2._psycopg.AsIs",
    "psycopg2._psycopg.Binary",
    "psycopg2._psycopg.Boolean",
    "psycopg2._psycopg.Column",
    "psycopg2._psycopg.ConnectionInfo",
    "psycopg2._psycopg.Decimal",
    "psycopg2._psycopg.Diagnostics",
    "psycopg2._psycopg.Float",
    "psycopg2._psycopg.ISQLQuote",
    "psycopg2._psycopg.Int",
    "psycopg2._psycopg.List",
    "psycopg2._psycopg.Notify",
    "psycopg2._psycopg.QuotedString",
    "psycopg2._psycopg.ReplicationMessage",
    "psycopg2._psycopg.Xid",
    "psycopg2._psycopg.connection",
    "psycopg2._psycopg.cursor",
    "psycopg2._psycopg.lobject",
    "psycopg2._range.Range",
    "psycopg2._range.RangeAdapter",
    "psycopg2._range.RangeCaster",
    "psycopg2.extensions.NoneAdapter",
    "psycopg2.extensions.SQL_IN",
    "psycopg2.extras.CompositeCaster",
    "psycopg2.extras.HstoreAdapter",
    "psycopg2.extras.Inet",
    "psycopg2.extras.UUID_adapter",
    "psycopg2.pool.AbstractConnectionPool",
    "psycopg2.sql.Composable",
    "pure_eval.core.Evaluator",
    "pyVmomi.vim.PerformanceManager.MetricId",
    "pyVmomi.vim.event.EventFilterSpec.ByTime",
    "pyVmomi.vmodl.DynamicProperty",
    "pyVmomi.vmodl.query.PropertyCollector.FilterSpec",
    "pyVmomi.vmodl.query.PropertyCollector.ObjectContent",
    "pyVmomi.vmodl.query.PropertyCollector.ObjectSpec",
    "pyVmomi.vmodl.query.PropertyCollector.PropertySpec",
    "pyVmomi.vmodl.query.PropertyCollector.RetrieveOptions",
    "pyVmomi.vmodl.query.PropertyCollector.RetrieveResult",
    "pyVmomi.vmodl.query.PropertyCollector.TraversalSpec",
    "pyasn1.codec.ber.decoder.Decoder",
    "pyasn1.codec.ber.encoder.Encoder",
    "pyasn1.codec.native.decoder.Decoder",
    "pyasn1.codec.native.encoder.Encoder",
    "pyasn1.debug.Debug",
    "pyasn1.debug.Printer",
    "pyasn1.debug.Scope",
    "pyasn1.type.constraint.AbstractConstraint",
    "pyasn1.type.namedtype.NamedType",
    "pyasn1.type.namedtype.NamedTypes",
    "pyasn1.type.namedtype.NamedTypes.PostponedError",
    "pyasn1.type.namedval.NamedValues",
    "pyasn1.type.opentype.OpenType",
    "pyasn1.type.tag.Tag",
    "pyasn1.type.tag.TagSet",
    "pyasn1.type.tagmap.TagMap",
    "pyasn1.type.univ.SequenceAndSetBase.DynamicNames",
    "pyaudio.PaMacCoreStreamInfo",
    "pyaudio.PyAudio",
    "pyaudio.Stream",
    "pyclbr.Class",
    "pyclbr.Function",
    "pycocotools.coco.COCO",
    "pycocotools.cocoeval.COCOeval",
    "pycocotools.cocoeval.Params",
    "pydoc.Helper",
    "pyflakes.checker.Binding",
    "pyflakes.checker.Checker",
    "pyflakes.checker.VariableKey",
    "pyflakes.messages.Message",
    "pyflakes.reporter.Reporter",
    "pygments.filter.Filter",
    "pygments.formatters.img.FontManager",
    "pygments.formatters.terminal256.EscapeSequence",
    "pygments.lexer.Lexer",
    "pygments.lexer.LexerContext",
    "pygments.lexer._PseudoMatch",
    "pygments.lexer.default",
    "pygments.scanner.Scanner",
    "pymysql.charset.Charset",
    "pymysql.connections.LoadLocalFile",
    "pymysql.connections.MySQLResult",
    "pymysql.connections.MysqlPacket",
    "pymysql.cursors.Cursor",
    "pynput.keyboard.HotKey",
    "pynput.keyboard._base.Controller",
    "pynput.keyboard._base.KeyCode",
    "pynput.mouse._base.Controller",
    "pysftp.CnOpts",
    "pysftp.Connection",
    "pysftp.helpers.WTCallbacks",
    "pytest_lazyfixture.LazyFixture",
    "redis.asyncio.client.Monitor",
    "redis.asyncio.client.PubSub",
    "redis.asyncio.cluster.ClusterNode",
    "redis.asyncio.cluster.NodesManager",
    "redis.asyncio.cluster.PipelineCommand",
    "redis.asyncio.connection.BaseParser",
    "redis.asyncio.connection.Connection",
    "redis.asyncio.connection.ConnectionPool",
    "redis.asyncio.connection.Encoder",
    "redis.asyncio.connection.RedisSSLContext",
    "redis.asyncio.lock.Lock",
    "redis.asyncio.retry.Retry",
    "redis.client.Monitor",
    "redis.client.PubSub",
    "redis.cluster.ClusterNode",
    "redis.cluster.LoadBalancer",
    "redis.cluster.NodeCommands",
    "redis.cluster.NodesManager",
    "redis.cluster.PipelineCommand",
    "redis.commands.bf.info.BFInfo",
    "redis.commands.bf.info.CFInfo",
    "redis.commands.bf.info.CMSInfo",
    "redis.commands.bf.info.TDigestInfo",
    "redis.commands.bf.info.TopKInfo",
    "redis.commands.core.AsyncScript",
    "redis.commands.core.BitFieldOperation",
    "redis.commands.core.Script",
    "redis.commands.graph.edge.Edge",
    "redis.commands.graph.node.Node",
    "redis.commands.graph.path.Path",
    "redis.commands.graph.query_result.QueryResult",
    "redis.commands.json.path.Path",
    "redis.commands.parser.CommandsParser",
    "redis.commands.search.Search.BatchIndexer",
    "redis.commands.search.aggregation.AggregateRequest",
    "redis.commands.search.aggregation.AggregateResult",
    "redis.commands.search.aggregation.Cursor",
    "redis.commands.search.aggregation.Limit",
    "redis.commands.search.aggregation.Reducer",
    "redis.commands.search.aggregation.SortDirection",
    "redis.commands.search.query.Filter",
    "redis.commands.search.query.Query",
    "redis.commands.search.query.SortbyField",
    "redis.commands.search.result.Result",
    "redis.commands.timeseries.info.TSInfo",
    "redis.connection.Connection",
    "redis.connection.ConnectionPool",
    "redis.connection.Encoder",
    "redis.connection.SocketBuffer",
    "redis.lock.Lock",
    "redis.ocsp.OCSPVerifier",
    "redis.retry.Retry",
    "requests.adapters.BaseAdapter",
    "requests.cookies.MockRequest",
    "requests.cookies.MockResponse",
    "requests.models.Response",
    "rlcompleter.Completer",
    "runpy._ModifiedArgv0",
    "runpy._TempModule",
    "sched.scheduler",
    "select.epoll",
    "select.kevent",
    "select.kqueue",
    "serial.rfc2217.PortManager",
    "serial.rfc2217.TelnetOption",
    "serial.rfc2217.TelnetSubnegotiation",
    "serial.rs485.RS485Settings",
    "serial.serialutil.Timeout",
    "serial.tools.list_ports_common.ListPortInfo",
    "serial.tools.miniterm.ConsoleBase",
    "serial.tools.miniterm.Miniterm",
    "setuptools._distutils.cmd.Command",
    "setuptools._distutils.dist.Distribution",
    "setuptools._distutils.dist.DistributionMetadata",
    "setuptools._distutils.extension.Extension",
    "setuptools._distutils.filelist.FileList",
    "setuptools.command.develop.VersionlessRequirement",
    "setuptools.depends.Require",
    "setuptools.extern.VendorImporter",
    "setuptools.msvc.EnvironmentInfo",
    "setuptools.msvc.PlatformInfo",
    "setuptools.msvc.RegistryInfo",
    "setuptools.msvc.SystemInfo",
    "setuptools.package_index.Credential",
    "setuptools.wheel.Wheel",
    "simplejson.decoder.JSONDecoder",
    "simplejson.encoder.JSONEncoder",
    "simplejson.raw_json.RawJSON",
    "six._LazyDescr",
    "slice",
    "slumber.serialize.Serializer",
    "smtplib.SMTP",
    "socketserver.BaseRequestHandler",
    "socketserver.BaseServer",
    "sqlalchemy.cresultproxy.BaseRow",
    "sqlalchemy.dialects.mysql.aiomysql.AsyncAdapt_aiomysql_cursor",
    "sqlalchemy.dialects.mysql.aiomysql.AsyncAdapt_aiomysql_dbapi",
    "sqlalchemy.dialects.mysql.asyncmy.AsyncAdapt_asyncmy_cursor",
    "sqlalchemy.dialects.mysql.asyncmy.AsyncAdapt_asyncmy_dbapi",
    "sqlalchemy.dialects.mysql.base._DecodingRow",
    "sqlalchemy.dialects.mysql.reflection.MySQLTableDefinitionParser",
    "sqlalchemy.dialects.mysql.types._NumericType",
    "sqlalchemy.dialects.postgresql.asyncpg.AsyncAdapt_asyncpg_cursor",
    "sqlalchemy.dialects.postgresql.asyncpg.AsyncAdapt_asyncpg_dbapi",
    "sqlalchemy.dialects.postgresql.pg8000.ServerSideCursor",
    "sqlalchemy.dialects.sqlite.aiosqlite.AsyncAdapt_aiosqlite_cursor",
    "sqlalchemy.dialects.sqlite.aiosqlite.AsyncAdapt_aiosqlite_dbapi",
    "sqlalchemy.dialects.sqlite.base._DateTimeMixin",
    "sqlalchemy.engine.base.Engine._trans_ctx",
    "sqlalchemy.engine.base.OptionEngineMixin",
    "sqlalchemy.engine.cursor.BaseCursorResult",
    "sqlalchemy.engine.interfaces.CreateEnginePlugin",
    "sqlalchemy.engine.reflection.Inspector",
    "sqlalchemy.engine.result.FrozenResult",
    "sqlalchemy.event.base._Dispatch",
    "sqlalchemy.event.base._JoinedDispatcher",
    "sqlalchemy.event.base.dispatcher",
    "sqlalchemy.event.registry._EventKey",
    "sqlalchemy.exc.HasDescriptionCode",
    "sqlalchemy.ext.associationproxy.AssociationProxyInstance",
    "sqlalchemy.ext.associationproxy._AssociationCollection",
    "sqlalchemy.ext.associationproxy._lazy_collection",
    "sqlalchemy.ext.asyncio.session._AsyncSessionContextManager",
    "sqlalchemy.ext.baked.BakedQuery",
    "sqlalchemy.ext.baked.Bakery",
    "sqlalchemy.ext.baked.Result",
    "sqlalchemy.ext.instrumentation.InstrumentationManager",
    "sqlalchemy.log.InstanceLogger",
    "sqlalchemy.orm.attributes.AttributeEvent",
    "sqlalchemy.orm.attributes.AttributeImpl",
    "sqlalchemy.orm.clsregistry._GetColumns",
    "sqlalchemy.orm.clsregistry._GetTable",
    "sqlalchemy.orm.clsregistry._ModNS",
    "sqlalchemy.orm.clsregistry._ModuleMarker",
    "sqlalchemy.orm.clsregistry._MultipleClassMarker",
    "sqlalchemy.orm.clsregistry._class_resolver",
    "sqlalchemy.orm.collections.CollectionAdapter",
    "sqlalchemy.orm.collections._PlainColumnGetter",
    "sqlalchemy.orm.collections._SerializableAttrGetter",
    "sqlalchemy.orm.collections._SerializableColumnGetter",
    "sqlalchemy.orm.context.QueryContext",
    "sqlalchemy.orm.decl_api._DeclarativeBase",
    "sqlalchemy.orm.decl_api.registry",
    "sqlalchemy.orm.decl_base._MapperConfig",
    "sqlalchemy.orm.dependency.DependencyProcessor",
    "sqlalchemy.orm.dynamic.AppenderMixin",
    "sqlalchemy.orm.dynamic.CollectionHistory",
    "sqlalchemy.orm.dynamic.DynamicCollectionAdapter",
    "sqlalchemy.orm.evaluator.EvaluatorCompiler",
    "sqlalchemy.orm.events._InstrumentationEventsHold",
    "sqlalchemy.orm.instrumentation._SerializeManager",
    "sqlalchemy.orm.interfaces.LoaderStrategy",
    "sqlalchemy.orm.query.BulkUD",
    "sqlalchemy.orm.relationships.JoinCondition",
    "sqlalchemy.orm.relationships._ColInAnnotations",
    "sqlalchemy.orm.state.AttributeState",
    "sqlalchemy.orm.strategies.LoadDeferredColumns",
    "sqlalchemy.orm.strategies.LoadLazyAttribute",
    "sqlalchemy.orm.strategies.SubqueryLoader._SubqCollections",
    "sqlalchemy.orm.unitofwork.PostSortRec",
    "sqlalchemy.orm.unitofwork.UOWTransaction",
    "sqlalchemy.orm.util.AliasedClass",
    "sqlalchemy.orm.util._WrapUserEntity",
    "sqlalchemy.pool.base._ConnectionFairy",
    "sqlalchemy.pool.base._ConnectionRecord",
    "sqlalchemy.pool.dbapi_proxy._DBProxy",
    "sqlalchemy.sql.annotation.Annotated",
    "sqlalchemy.sql.base.ColumnCollection",
    "sqlalchemy.sql.base.CompileState",
    "sqlalchemy.sql.base.Options",
    "sqlalchemy.sql.coercions.RoleImpl",
    "sqlalchemy.sql.compiler.Compiled",
    "sqlalchemy.sql.compiler.IdentifierPreparer",
    "sqlalchemy.sql.compiler.TypeCompiler",
    "sqlalchemy.sql.functions.GenericFunction",
    "sqlalchemy.sql.functions._FunctionGenerator",
    "sqlalchemy.sql.lambdas.AnalyzedCode",
    "sqlalchemy.sql.lambdas.AnalyzedFunction",
    "sqlalchemy.sql.lambdas.NonAnalyzedFunction",
    "sqlalchemy.sql.naming.ConventionDict",
    "sqlalchemy.sql.operators.custom_op",
    "sqlalchemy.sql.schema.ColumnCollectionMixin",
    "sqlalchemy.sql.schema.IdentityOptions",
    "sqlalchemy.sql.selectable.NoInit",
    "sqlalchemy.sql.util.ColumnAdapter._IncludeExcludeMapping",
    "sqlalchemy.testing.assertsql.SQLExecuteObserved",
    "sqlalchemy.testing.config.Config",
    "sqlalchemy.testing.engines.DBAPIProxyConnection",
    "sqlalchemy.testing.engines.DBAPIProxyCursor",
    "sqlalchemy.testing.engines.ReconnectFixture",
    "sqlalchemy.testing.entities.BasicEntity",
    "sqlalchemy.testing.pickleable.Bar",
    "sqlalchemy.testing.pickleable.BarWithoutCompare",
    "sqlalchemy.testing.pickleable.BrokenComparable",
    "sqlalchemy.testing.pickleable.Foo",
    "sqlalchemy.testing.pickleable.NotComparable",
    "sqlalchemy.testing.pickleable.OldSchool",
    "sqlalchemy.testing.pickleable.OldSchoolWithoutCompare",
    "sqlalchemy.testing.pickleable.Screen",
    "sqlalchemy.testing.profiling.ProfileStatsFile",
    "sqlalchemy.testing.schema.eq_clause_element",
    "sqlalchemy.testing.schema.eq_type_affinity",
    "sqlalchemy.util._collections.IdentitySet",
    "sqlalchemy.util._collections.ScopedRegistry",
    "sqlalchemy.util._collections.UniqueAppender",
    "sqlalchemy.util._collections.WeakSequence",
    "sqlalchemy.util._compat_py3k._AsyncGeneratorContextManager",
    "sqlalchemy.util._preloaded._ModuleRegistry",
    "sqlalchemy.util.compat.nullcontext",
    "sqlalchemy.util.langhelpers.PluginLoader",
    "sqlalchemy.util.langhelpers.hybridmethod",
    "sqlalchemy.util.langhelpers.portable_instancemethod",
    "sqlalchemy.util.langhelpers.safe_reraise",
    "sqlalchemy.util.queue.AsyncAdaptedQueue",
    "sqlalchemy.util.queue.Queue",
    "sqlite3.dbapi2.Connection",
    "sqlite3.dbapi2.PrepareProtocol",
    "sqlite3.dbapi2.Row",
    "sre_parse.SubPattern",
    "sre_parse.Tokenizer",
    "ssl.SSLObject",
    "stack_data.core.BlankLineRange",
    "stack_data.core.FrameInfo",
    "stack_data.core.Line",
    "stack_data.core.Options",
    "stack_data.core.RepeatedFrames",
    "stack_data.formatting.Formatter",
    "stack_data.serializing.Serializer",
    "stack_data.utils.cached_property",
    "statistics.NormalDist",
    "string.Template",
    "stripe.api_requestor.APIRequestor",
    "stripe.http_client.HTTPClient",
    "stripe.multipart_data_generator.MultipartDataGenerator",
    "stripe.request_metrics.RequestMetrics",
    "stripe.stripe_response.StripeResponseBase",
    "stripe.util.class_method_variant",
    "struct.Struct",
    "sunau.Au_read",
    "sunau.Au_write",
    "super",
    "symtable.Symbol",
    "symtable.SymbolTable",
    "tarfile.TarFile",
    "tarfile.TarInfo",
    "telnetlib.Telnet",
    "tensorflow.IndexedSlices",
    "tensorflow.Operation",
    "tensorflow.Tensor",
    "tensorflow.TensorShape",
    "tensorflow.sparse.SparseTensor",
    "testslide.cli.Cli",
    "testslide.dsl._DSLContext",
    "testslide.import_profiler.ImportProfiler",
    "testslide.import_profiler.ImportedModule",
    "testslide.mock_callable._BaseRunner",
    "testslide.mock_callable._CallableMock",
    "testslide.mock_callable._MockCallableDSL",
    "testslide.mock_constructor.AttrAccessValidation",
    "testslide.patch._DescriptorProxy",
    "testslide.runner.BaseFormatter",
    "testslide.runner.Runner",
    "testslide.strict_mock.StrictMock",
    "testslide.strict_mock._DefaultMagic",
    "testslide.strict_mock._MethodProxy",
    "textwrap.TextWrapper",
    "threading.Barrier",
    "threading.Condition",
    "threading.Semaphore",
    "threading.Thread",
    "timeit.Timer",
    "tkinter.CallWrapper",
    "tkinter.Variable",
    "tkinter._setit",
    "tkinter.commondialog.Dialog",
    "tkinter.dnd.DndHandler",
    "tkinter.filedialog.FileDialog",
    "tkinter.font.Font",
    "tkinter.simpledialog.SimpleDialog",
    "tkinter.tix.DisplayStyle",
    "tkinter.ttk.Style",
    "toml.decoder.CommentValue",
    "tomli._parser.Flags",
    "tomli._parser.NestedDict",
    "tqdm.dask._Callback",
    "tqdm.keras._Callback",
    "tqdm.utils.FormatReplace",
    "tqdm.utils.ObjectWrapper",
    "trace.CoverageResults",
    "trace.Trace",
    "traceback.TracebackException",
    "tracemalloc.BaseFilter",
    "tracemalloc.Frame",
    "tracemalloc.Snapshot",
    "tracemalloc.Statistic",
    "tracemalloc.StatisticDiff",
    "tracemalloc.Trace",
    "traitlets.config.loader.ConfigLoader",
    "traitlets.traitlets._CallbackWrapper",
    "traitlets.traitlets._SimpleTest",
    "traitlets.traitlets.directional_link",
    "traitlets.traitlets.link",
    "traitlets.utils.sentinel.Sentinel",
    "tree_sitter.Language",
    "tree_sitter.binding.Parser",
    "ttkthemes._widget.ThemedWidget",
    "turtle.Shape",
    "turtle.TNavigator",
    "turtle.TPen",
    "turtle.TurtleScreenBase",
    "typed_ast.ast27.AST",
    "typed_ast.ast3.AST",
    "typeguard.TypeCheckedAsyncGenerator",
    "typeguard.TypeCheckedGenerator",
    "typeguard.TypeChecker",
    "typeguard._TypeCheckMemo",
    "typeguard.importhook.ImportHookManager",
    "types.CodeType",
    "types.FunctionType",
    "types.GenericAlias",
    "types.MethodType",
    "types.ModuleType",
    "types.SimpleNamespace",
    "types.TracebackType",
    "types._Cell",
    "typeshed.typeshed.stdlib.__future__._Feature",
    "typeshed.typeshed.stdlib._ast.AST",
    "typeshed.typeshed.stdlib._csv.Dialect",
    "typeshed.typeshed.stdlib._decimal.Context",
    "typeshed.typeshed.stdlib._decimal._ContextManager",
    "typeshed.typeshed.stdlib._dummy_threading.Barrier",
    "typeshed.typeshed.stdlib._dummy_threading.Condition",
    "typeshed.typeshed.stdlib._dummy_threading.Semaphore",
    "typeshed.typeshed.stdlib._dummy_threading.Thread",
    "typeshed.typeshed.stdlib._json.make_encoder",
    "typeshed.typeshed.stdlib._json.make_scanner",
    "typeshed.typeshed.stdlib._operator.methodcaller",
    "typeshed.typeshed.stdlib._random.Random",
    "typeshed.typeshed.stdlib._sitebuiltins.Quitter",
    "typeshed.typeshed.stdlib._sitebuiltins._Printer",
    "typeshed.typeshed.stdlib._socket.socket",
    "typeshed.typeshed.stdlib.aifc.Aifc_read",
    "typeshed.typeshed.stdlib.aifc.Aifc_write",
    "typeshed.typeshed.stdlib.argparse.FileType",
    "typeshed.typeshed.stdlib.argparse.HelpFormatter",
    "typeshed.typeshed.stdlib.argparse.HelpFormatter._Section",
    "typeshed.typeshed.stdlib.argparse._ActionsContainer",
    "typeshed.typeshed.stdlib.asynchat.simple_producer",
    "typeshed.typeshed.stdlib.asyncio.events.Handle",
    "typeshed.typeshed.stdlib.asyncio.locks.Event",
    "typeshed.typeshed.stdlib.asyncio.mixins._LoopBoundMixin",
    "typeshed.typeshed.stdlib.asyncio.sslproto._SSLPipe",
    "typeshed.typeshed.stdlib.asyncio.streams.StreamWriter",
    "typeshed.typeshed.stdlib.asyncio.subprocess.Process",
    "typeshed.typeshed.stdlib.asyncio.timeouts.Timeout",
    "typeshed.typeshed.stdlib.asyncio.transports.BaseTransport",
    "typeshed.typeshed.stdlib.asyncio.trsock.TransportSocket",
    "typeshed.typeshed.stdlib.asyncore.dispatcher",
    "typeshed.typeshed.stdlib.asyncore.file_wrapper",
    "typeshed.typeshed.stdlib.bdb.Bdb",
    "typeshed.typeshed.stdlib.bdb.Breakpoint",
    "typeshed.typeshed.stdlib.binhex.BinHex",
    "typeshed.typeshed.stdlib.binhex.HexBin",
    "typeshed.typeshed.stdlib.binhex.openrsrc",
    "typeshed.typeshed.stdlib.builtins.BaseException",
    "typeshed.typeshed.stdlib.builtins.object",
    "typeshed.typeshed.stdlib.builtins.property",
    "typeshed.typeshed.stdlib.builtins.super",
    "typeshed.typeshed.stdlib.builtins.type",
    "typeshed.typeshed.stdlib.bz2.BZ2Compressor",
    "typeshed.typeshed.stdlib.cProfile.Profile",
    "typeshed.typeshed.stdlib.calendar.Calendar",
    "typeshed.typeshed.stdlib.calendar.different_locale",
    "typeshed.typeshed.stdlib.cgi.FieldStorage",
    "typeshed.typeshed.stdlib.cgi.MiniFieldStorage",
    "typeshed.typeshed.stdlib.cgitb.Hook",
    "typeshed.typeshed.stdlib.chunk.Chunk",
    "typeshed.typeshed.stdlib.cmd.Cmd",
    "typeshed.typeshed.stdlib.code.InteractiveInterpreter",
    "typeshed.typeshed.stdlib.codecs.IncrementalDecoder",
    "typeshed.typeshed.stdlib.codecs.IncrementalEncoder",
    "typeshed.typeshed.stdlib.concurrent.futures._base._AcquireFutures",
    "typeshed.typeshed.stdlib.concurrent.futures.process._CallItem",
    "typeshed.typeshed.stdlib.concurrent.futures.process._ExceptionWithTraceback",
    "typeshed.typeshed.stdlib.concurrent.futures.process._ResultItem",
    "typeshed.typeshed.stdlib.ctypes.CDLL",
    "typeshed.typeshed.stdlib.ctypes.c_bool",
    "typeshed.typeshed.stdlib.ctypes.c_char",
    "typeshed.typeshed.stdlib.curses.textpad.Textbox",
    "typeshed.typeshed.stdlib.difflib.Differ",
    "typeshed.typeshed.stdlib.difflib.HtmlDiff",
    "typeshed.typeshed.stdlib.dis.Bytecode",
    "typeshed.typeshed.stdlib.distutils.ccompiler.CCompiler",
    "typeshed.typeshed.stdlib.distutils.cmd.Command",
    "typeshed.typeshed.stdlib.distutils.command.check.SilentReporter",
    "typeshed.typeshed.stdlib.distutils.dist.Distribution",
    "typeshed.typeshed.stdlib.distutils.dist.DistributionMetadata",
    "typeshed.typeshed.stdlib.distutils.extension.Extension",
    "typeshed.typeshed.stdlib.distutils.fancy_getopt.FancyGetopt",
    "typeshed.typeshed.stdlib.distutils.fancy_getopt.OptionDummy",
    "typeshed.typeshed.stdlib.distutils.filelist.FileList",
    "typeshed.typeshed.stdlib.distutils.log.Log",
    "typeshed.typeshed.stdlib.distutils.text_file.TextFile",
    "typeshed.typeshed.stdlib.distutils.version.Version",
    "typeshed.typeshed.stdlib.email.charset.Charset",
    "typeshed.typeshed.stdlib.email.generator.Generator",
    "typeshed.typeshed.stdlib.email.header.Header",
    "typeshed.typeshed.stdlib.email.headerregistry.Address",
    "typeshed.typeshed.stdlib.email.headerregistry.Group",
    "typeshed.typeshed.stdlib.email.headerregistry.HeaderRegistry",
    "typeshed.typeshed.stdlib.email.message.Message",
    "typeshed.typeshed.stdlib.email.parser.BytesParser",
    "typeshed.typeshed.stdlib.email.parser.Parser",
    "typeshed.typeshed.stdlib.email.policy.Policy",
    "typeshed.typeshed.stdlib.formatter.AbstractFormatter",
    "typeshed.typeshed.stdlib.formatter.NullFormatter",
    "typeshed.typeshed.stdlib.ftplib.FTP",
    "typeshed.typeshed.stdlib.gettext.NullTranslations",
    "typeshed.typeshed.stdlib.gzip._PaddedFile",
    "typeshed.typeshed.stdlib.hashlib._Hash",
    "typeshed.typeshed.stdlib.hashlib._VarLenHash",
    "typeshed.typeshed.stdlib.hmac.HMAC",
    "typeshed.typeshed.stdlib.http.client.HTTPConnection",
    "typeshed.typeshed.stdlib.http.cookiejar.Cookie",
    "typeshed.typeshed.stdlib.imaplib.IMAP4",
    "typeshed.typeshed.stdlib.imaplib._Authenticator",
    "typeshed.typeshed.stdlib.imp.NullImporter",
    "typeshed.typeshed.stdlib.importlib.machinery.ModuleSpec",
    "typeshed.typeshed.stdlib.importlib.metadata.DistributionFinder.Context",
    "typeshed.typeshed.stdlib.importlib.metadata.FileHash",
    "typeshed.typeshed.stdlib.inspect.BoundArguments",
    "typeshed.typeshed.stdlib.inspect.Parameter",
    "typeshed.typeshed.stdlib.inspect.Signature",
    "typeshed.typeshed.stdlib.json.decoder.JSONDecoder",
    "typeshed.typeshed.stdlib.json.encoder.JSONEncoder",
    "typeshed.typeshed.stdlib.lib2to3.btm_matcher.BMNode",
    "typeshed.typeshed.stdlib.lib2to3.btm_matcher.BottomMatcher",
    "typeshed.typeshed.stdlib.lib2to3.fixer_base.BaseFix",
    "typeshed.typeshed.stdlib.lib2to3.fixes.fix_exitfunc.FixExitfunc",
    "typeshed.typeshed.stdlib.lib2to3.pgen2.driver.Driver",
    "typeshed.typeshed.stdlib.lib2to3.pgen2.parse.Parser",
    "typeshed.typeshed.stdlib.lib2to3.pgen2.pgen.DFAState",
    "typeshed.typeshed.stdlib.lib2to3.pgen2.pgen.ParserGenerator",
    "typeshed.typeshed.stdlib.lib2to3.pygram.Symbols",
    "typeshed.typeshed.stdlib.lib2to3.refactor.RefactoringTool",
    "typeshed.typeshed.stdlib.logging.BufferingFormatter",
    "typeshed.typeshed.stdlib.logging.Filter",
    "typeshed.typeshed.stdlib.logging.Formatter",
    "typeshed.typeshed.stdlib.logging.LogRecord",
    "typeshed.typeshed.stdlib.logging.Manager",
    "typeshed.typeshed.stdlib.logging.PercentStyle",
    "typeshed.typeshed.stdlib.logging.PlaceHolder",
    "typeshed.typeshed.stdlib.logging.config.BaseConfigurator",
    "typeshed.typeshed.stdlib.logging.handlers.QueueListener",
    "typeshed.typeshed.stdlib.lzma.LZMACompressor",
    "typeshed.typeshed.stdlib.lzma.LZMADecompressor",
    "typeshed.typeshed.stdlib.mimetypes.MimeTypes",
    "typeshed.typeshed.stdlib.modulefinder.Module",
    "typeshed.typeshed.stdlib.modulefinder.ModuleFinder",
    "typeshed.typeshed.stdlib.multiprocessing.connection.Listener",
    "typeshed.typeshed.stdlib.multiprocessing.connection._ConnectionBase",
    "typeshed.typeshed.stdlib.multiprocessing.dummy.Namespace",
    "typeshed.typeshed.stdlib.multiprocessing.dummy.Value",
    "typeshed.typeshed.stdlib.multiprocessing.dummy.connection.Connection",
    "typeshed.typeshed.stdlib.multiprocessing.dummy.connection.Listener",
    "typeshed.typeshed.stdlib.multiprocessing.heap.Arena",
    "typeshed.typeshed.stdlib.multiprocessing.heap.BufferWrapper",
    "typeshed.typeshed.stdlib.multiprocessing.heap.Heap",
    "typeshed.typeshed.stdlib.multiprocessing.managers.BaseManager",
    "typeshed.typeshed.stdlib.multiprocessing.managers.BaseProxy",
    "typeshed.typeshed.stdlib.multiprocessing.managers.Namespace",
    "typeshed.typeshed.stdlib.multiprocessing.managers.Server",
    "typeshed.typeshed.stdlib.multiprocessing.managers.Token",
    "typeshed.typeshed.stdlib.multiprocessing.pool.Pool",
    "typeshed.typeshed.stdlib.multiprocessing.popen_fork.Popen",
    "typeshed.typeshed.stdlib.multiprocessing.popen_forkserver._DupFd",
    "typeshed.typeshed.stdlib.multiprocessing.popen_spawn_posix._DupFd",
    "typeshed.typeshed.stdlib.multiprocessing.process.BaseProcess",
    "typeshed.typeshed.stdlib.multiprocessing.reduction.AbstractReducer",
    "typeshed.typeshed.stdlib.multiprocessing.resource_sharer.DupFd",
    "typeshed.typeshed.stdlib.multiprocessing.shared_memory.SharedMemory",
    "typeshed.typeshed.stdlib.multiprocessing.synchronize.Event",
    "typeshed.typeshed.stdlib.multiprocessing.util.Finalize",
    "typeshed.typeshed.stdlib.netrc.netrc",
    "typeshed.typeshed.stdlib.nntplib.NNTP",
    "typeshed.typeshed.stdlib.optparse.HelpFormatter",
    "typeshed.typeshed.stdlib.optparse.Option",
    "typeshed.typeshed.stdlib.optparse.OptionContainer",
    "typeshed.typeshed.stdlib.optparse.Values",
    "typeshed.typeshed.stdlib.pickle.PickleBuffer",
    "typeshed.typeshed.stdlib.pickle.Pickler",
    "typeshed.typeshed.stdlib.pickle.Unpickler",
    "typeshed.typeshed.stdlib.pickletools.ArgumentDescriptor",
    "typeshed.typeshed.stdlib.pickletools.OpcodeInfo",
    "typeshed.typeshed.stdlib.pickletools.StackObject",
    "typeshed.typeshed.stdlib.pkgutil.ImpImporter",
    "typeshed.typeshed.stdlib.pkgutil.ImpLoader",
    "typeshed.typeshed.stdlib.plistlib.UID",
    "typeshed.typeshed.stdlib.poplib.POP3",
    "typeshed.typeshed.stdlib.pprint.PrettyPrinter",
    "typeshed.typeshed.stdlib.profile.Profile",
    "typeshed.typeshed.stdlib.pstats.Stats",
    "typeshed.typeshed.stdlib.pyclbr.Class",
    "typeshed.typeshed.stdlib.pyclbr.Function",
    "typeshed.typeshed.stdlib.pydoc.Helper",
    "typeshed.typeshed.stdlib.rlcompleter.Completer",
    "typeshed.typeshed.stdlib.runpy._ModifiedArgv0",
    "typeshed.typeshed.stdlib.runpy._TempModule",
    "typeshed.typeshed.stdlib.sched.scheduler",
    "typeshed.typeshed.stdlib.select.epoll",
    "typeshed.typeshed.stdlib.select.kevent",
    "typeshed.typeshed.stdlib.select.kqueue",
    "typeshed.typeshed.stdlib.smtplib.SMTP",
    "typeshed.typeshed.stdlib.socketserver.BaseRequestHandler",
    "typeshed.typeshed.stdlib.socketserver.BaseServer",
    "typeshed.typeshed.stdlib.sqlite3.dbapi2.Connection",
    "typeshed.typeshed.stdlib.sqlite3.dbapi2.PrepareProtocol",
    "typeshed.typeshed.stdlib.sqlite3.dbapi2.Row",
    "typeshed.typeshed.stdlib.sre_parse.SubPattern",
    "typeshed.typeshed.stdlib.sre_parse.Tokenizer",
    "typeshed.typeshed.stdlib.ssl.SSLObject",
    "typeshed.typeshed.stdlib.statistics.NormalDist",
    "typeshed.typeshed.stdlib.string.Template",
    "typeshed.typeshed.stdlib.struct.Struct",
    "typeshed.typeshed.stdlib.sunau.Au_read",
    "typeshed.typeshed.stdlib.sunau.Au_write",
    "typeshed.typeshed.stdlib.symtable.Symbol",
    "typeshed.typeshed.stdlib.symtable.SymbolTable",
    "typeshed.typeshed.stdlib.tarfile.TarFile",
    "typeshed.typeshed.stdlib.tarfile.TarInfo",
    "typeshed.typeshed.stdlib.telnetlib.Telnet",
    "typeshed.typeshed.stdlib.textwrap.TextWrapper",
    "typeshed.typeshed.stdlib.threading.Barrier",
    "typeshed.typeshed.stdlib.threading.Condition",
    "typeshed.typeshed.stdlib.threading.Semaphore",
    "typeshed.typeshed.stdlib.threading.Thread",
    "typeshed.typeshed.stdlib.timeit.Timer",
    "typeshed.typeshed.stdlib.tkinter.CallWrapper",
    "typeshed.typeshed.stdlib.tkinter.Variable",
    "typeshed.typeshed.stdlib.tkinter._setit",
    "typeshed.typeshed.stdlib.tkinter.commondialog.Dialog",
    "typeshed.typeshed.stdlib.tkinter.dnd.DndHandler",
    "typeshed.typeshed.stdlib.tkinter.filedialog.FileDialog",
    "typeshed.typeshed.stdlib.tkinter.font.Font",
    "typeshed.typeshed.stdlib.tkinter.simpledialog.SimpleDialog",
    "typeshed.typeshed.stdlib.tkinter.tix.DisplayStyle",
    "typeshed.typeshed.stdlib.tkinter.ttk.Style",
    "typeshed.typeshed.stdlib.trace.CoverageResults",
    "typeshed.typeshed.stdlib.trace.Trace",
    "typeshed.typeshed.stdlib.traceback.TracebackException",
    "typeshed.typeshed.stdlib.tracemalloc.BaseFilter",
    "typeshed.typeshed.stdlib.tracemalloc.Frame",
    "typeshed.typeshed.stdlib.tracemalloc.Snapshot",
    "typeshed.typeshed.stdlib.tracemalloc.Statistic",
    "typeshed.typeshed.stdlib.tracemalloc.StatisticDiff",
    "typeshed.typeshed.stdlib.tracemalloc.Trace",
    "typeshed.typeshed.stdlib.turtle.Shape",
    "typeshed.typeshed.stdlib.turtle.TNavigator",
    "typeshed.typeshed.stdlib.turtle.TPen",
    "typeshed.typeshed.stdlib.turtle.TurtleScreenBase",
    "typeshed.typeshed.stdlib.types.ModuleType",
    "typeshed.typeshed.stdlib.types.SimpleNamespace",
    "typeshed.typeshed.stdlib.typing.ForwardRef",
    "typeshed.typeshed.stdlib.typing.TypeVar",
    "typeshed.typeshed.stdlib.typing_extensions.Doc",
    "typeshed.typeshed.stdlib.typing_extensions.NewType",
    "typeshed.typeshed.stdlib.typing_extensions.ParamSpec",
    "typeshed.typeshed.stdlib.typing_extensions.ParamSpecArgs",
    "typeshed.typeshed.stdlib.typing_extensions.ParamSpecKwargs",
    "typeshed.typeshed.stdlib.typing_extensions.TypeAliasType",
    "typeshed.typeshed.stdlib.typing_extensions.TypeVar",
    "typeshed.typeshed.stdlib.typing_extensions.TypeVarTuple",
    "typeshed.typeshed.stdlib.unittest.case.TestCase",
    "typeshed.typeshed.stdlib.unittest.case._BaseTestCaseContext",
    "typeshed.typeshed.stdlib.unittest.main.TestProgram",
    "typeshed.typeshed.stdlib.unittest.mock.Base",
    "typeshed.typeshed.stdlib.unittest.mock.MagicMixin",
    "typeshed.typeshed.stdlib.unittest.mock.MagicProxy",
    "typeshed.typeshed.stdlib.unittest.mock._SentinelObject",
    "typeshed.typeshed.stdlib.unittest.mock._SpecState",
    "typeshed.typeshed.stdlib.unittest.mock._patch_dict",
    "typeshed.typeshed.stdlib.unittest.result.TestResult",
    "typeshed.typeshed.stdlib.unittest.runner.TextTestRunner",
    "typeshed.typeshed.stdlib.urllib.request.AbstractBasicAuthHandler",
    "typeshed.typeshed.stdlib.urllib.request.AbstractDigestAuthHandler",
    "typeshed.typeshed.stdlib.urllib.request.Request",
    "typeshed.typeshed.stdlib.urllib.request.URLopener",
    "typeshed.typeshed.stdlib.urllib.request.ftpwrapper",
    "typeshed.typeshed.stdlib.urllib.robotparser.RobotFileParser",
    "typeshed.typeshed.stdlib.uuid.UUID",
    "typeshed.typeshed.stdlib.warnings.WarningMessage",
    "typeshed.typeshed.stdlib.wave.Wave_read",
    "typeshed.typeshed.stdlib.wave.Wave_write",
    "typeshed.typeshed.stdlib.weakref.finalize",
    "typeshed.typeshed.stdlib.webbrowser.BaseBrowser",
    "typeshed.typeshed.stdlib.wsgiref.headers.Headers",
    "typeshed.typeshed.stdlib.wsgiref.util.FileWrapper",
    "typeshed.typeshed.stdlib.wsgiref.validate.ErrorWrapper",
    "typeshed.typeshed.stdlib.wsgiref.validate.InputWrapper",
    "typeshed.typeshed.stdlib.wsgiref.validate.IteratorWrapper",
    "typeshed.typeshed.stdlib.wsgiref.validate.PartialIteratorWrapper",
    "typeshed.typeshed.stdlib.wsgiref.validate.WriteWrapper",
    "typeshed.typeshed.stdlib.xdrlib.Unpacker",
    "typeshed.typeshed.stdlib.xml.dom.expatbuilder.ElementInfo",
    "typeshed.typeshed.stdlib.xml.dom.expatbuilder.ExpatBuilder",
    "typeshed.typeshed.stdlib.xml.dom.expatbuilder.FilterCrutch",
    "typeshed.typeshed.stdlib.xml.dom.expatbuilder.FilterVisibilityController",
    "typeshed.typeshed.stdlib.xml.dom.minidom.ElementInfo",
    "typeshed.typeshed.stdlib.xml.dom.minidom.NamedNodeMap",
    "typeshed.typeshed.stdlib.xml.dom.minidom.ReadOnlySequentialNamedNodeMap",
    "typeshed.typeshed.stdlib.xml.dom.minidom.TypeInfo",
    "typeshed.typeshed.stdlib.xml.dom.pulldom.DOMEventStream",
    "typeshed.typeshed.stdlib.xml.etree.ElementPath._SelectorContext",
    "typeshed.typeshed.stdlib.xml.etree.ElementTree.C14NWriterTarget",
    "typeshed.typeshed.stdlib.xml.etree.ElementTree.Element",
    "typeshed.typeshed.stdlib.xml.etree.ElementTree.ElementTree",
    "typeshed.typeshed.stdlib.xml.etree.ElementTree.QName",
    "typeshed.typeshed.stdlib.xml.etree.ElementTree.TreeBuilder",
    "typeshed.typeshed.stdlib.xml.etree.ElementTree.XMLParser",
    "typeshed.typeshed.stdlib.xml.etree.ElementTree.XMLPullParser",
    "typeshed.typeshed.stdlib.xml.sax.xmlreader.AttributesImpl",
    "typeshed.typeshed.stdlib.xml.sax.xmlreader.InputSource",
    "typeshed.typeshed.stdlib.xmlrpc.client.Binary",
    "typeshed.typeshed.stdlib.xmlrpc.client.DateTime",
    "typeshed.typeshed.stdlib.xmlrpc.client.ExpatParser",
    "typeshed.typeshed.stdlib.xmlrpc.client.Marshaller",
    "typeshed.typeshed.stdlib.xmlrpc.client.MultiCall",
    "typeshed.typeshed.stdlib.xmlrpc.client.MultiCallIterator",
    "typeshed.typeshed.stdlib.xmlrpc.client.ServerProxy",
    "typeshed.typeshed.stdlib.xmlrpc.client.Transport",
    "typeshed.typeshed.stdlib.xmlrpc.client.Unmarshaller",
    "typeshed.typeshed.stdlib.xmlrpc.client._Method",
    "typeshed.typeshed.stdlib.xmlrpc.client._MultiCallMethod",
    "typeshed.typeshed.stdlib.xmlrpc.server.SimpleXMLRPCDispatcher",
    "typeshed.typeshed.stdlib.zipfile.Path",
    "typeshed.typeshed.stdlib.zipfile.ZipFile",
    "typeshed.typeshed.stdlib.zipfile.ZipInfo",
    "typeshed.typeshed.stdlib.zipimport.zipimporter",
    "typeshed.typeshed.stubs.Deprecated.deprecated.classic.ClassicAdapter",
    "typeshed.typeshed.stubs.ExifRead.exifread.classes.ExifHeader",
    "typeshed.typeshed.stubs.ExifRead.exifread.classes.IfdTag",
    "typeshed.typeshed.stubs.ExifRead.exifread.heic.Box",
    "typeshed.typeshed.stubs.ExifRead.exifread.heic.HEICExifFinder",
    "typeshed.typeshed.stubs.Flask-Cors.flask_cors.extension.CORS",
    "typeshed.typeshed.stubs.Flask-Migrate.flask_migrate.Config",
    "typeshed.typeshed.stubs.Flask-Migrate.flask_migrate.Migrate",
    "typeshed.typeshed.stubs.Flask-SocketIO.flask_socketio.SocketIO",
    "typeshed.typeshed.stubs.Flask-SocketIO.flask_socketio.test_client.SocketIOTestClient",
    "typeshed.typeshed.stubs.JACK-Client.jack.Client",
    "typeshed.typeshed.stubs.JACK-Client.jack.Port",
    "typeshed.typeshed.stubs.JACK-Client.jack.Ports",
    "typeshed.typeshed.stubs.JACK-Client.jack.RingBuffer",
    "typeshed.typeshed.stubs.JACK-Client.jack.Status",
    "typeshed.typeshed.stubs.JACK-Client.jack.TransportState",
    "typeshed.typeshed.stubs.Markdown.markdown.blockparser.BlockParser",
    "typeshed.typeshed.stubs.Markdown.markdown.blockprocessors.BlockProcessor",
    "typeshed.typeshed.stubs.Markdown.markdown.core.Markdown",
    "typeshed.typeshed.stubs.Markdown.markdown.extensions.Extension",
    "typeshed.typeshed.stubs.Markdown.markdown.extensions.codehilite.CodeHilite",
    "typeshed.typeshed.stubs.Markdown.markdown.inlinepatterns.Pattern",
    "typeshed.typeshed.stubs.Markdown.markdown.util.HtmlStash",
    "typeshed.typeshed.stubs.Markdown.markdown.util.Processor",
    "typeshed.typeshed.stubs.Pillow.PIL.ContainerIO.ContainerIO",
    "typeshed.typeshed.stubs.Pillow.PIL.EpsImagePlugin.PSFile",
    "typeshed.typeshed.stubs.Pillow.PIL.FontFile.FontFile",
    "typeshed.typeshed.stubs.Pillow.PIL.GimpPaletteFile.GimpPaletteFile",
    "typeshed.typeshed.stubs.Pillow.PIL.IcnsImagePlugin.IcnsFile",
    "typeshed.typeshed.stubs.Pillow.PIL.IcoImagePlugin.IcoFile",
    "typeshed.typeshed.stubs.Pillow.PIL.Image._E",
    "typeshed.typeshed.stubs.Pillow.PIL.ImageCms.ImageCmsProfile",
    "typeshed.typeshed.stubs.Pillow.PIL.ImageDraw.ImageDraw",
    "typeshed.typeshed.stubs.Pillow.PIL.ImageDraw2.Brush",
    "typeshed.typeshed.stubs.Pillow.PIL.ImageDraw2.Draw",
    "typeshed.typeshed.stubs.Pillow.PIL.ImageDraw2.Font",
    "typeshed.typeshed.stubs.Pillow.PIL.ImageDraw2.Pen",
    "typeshed.typeshed.stubs.Pillow.PIL.ImageFile.PyCodec",
    "typeshed.typeshed.stubs.Pillow.PIL.ImageFile.PyDecoder",
    "typeshed.typeshed.stubs.Pillow.PIL.ImageFont.FreeTypeFont",
    "typeshed.typeshed.stubs.Pillow.PIL.ImageFont.TransposedFont",
    "typeshed.typeshed.stubs.Pillow.PIL.ImageMath._Operand",
    "typeshed.typeshed.stubs.Pillow.PIL.ImageMode.ModeDescriptor",
    "typeshed.typeshed.stubs.Pillow.PIL.ImageMorph.LutBuilder",
    "typeshed.typeshed.stubs.Pillow.PIL.ImageMorph.MorphOp",
    "typeshed.typeshed.stubs.Pillow.PIL.ImagePalette.ImagePalette",
    "typeshed.typeshed.stubs.Pillow.PIL.ImageQt.ImageQt",
    "typeshed.typeshed.stubs.Pillow.PIL.ImageSequence.Iterator",
    "typeshed.typeshed.stubs.Pillow.PIL.ImageStat.Stat",
    "typeshed.typeshed.stubs.Pillow.PIL.ImageWin.Dib",
    "typeshed.typeshed.stubs.Pillow.PIL.ImageWin.HDC",
    "typeshed.typeshed.stubs.Pillow.PIL.ImageWin.HWND",
    "typeshed.typeshed.stubs.Pillow.PIL.ImageWin.Window",
    "typeshed.typeshed.stubs.Pillow.PIL.Jpeg2KImagePlugin.BoxReader",
    "typeshed.typeshed.stubs.Pillow.PIL.MpegImagePlugin.BitStream",
    "typeshed.typeshed.stubs.Pillow.PIL.PSDraw.PSDraw",
    "typeshed.typeshed.stubs.Pillow.PIL.PaletteFile.PaletteFile",
    "typeshed.typeshed.stubs.Pillow.PIL.PdfParser.PdfBinary",
    "typeshed.typeshed.stubs.Pillow.PIL.PdfParser.PdfName",
    "typeshed.typeshed.stubs.Pillow.PIL.PdfParser.PdfParser",
    "typeshed.typeshed.stubs.Pillow.PIL.PdfParser.PdfStream",
    "typeshed.typeshed.stubs.Pillow.PIL.PdfParser.XrefTable",
    "typeshed.typeshed.stubs.Pillow.PIL.PngImagePlugin.ChunkStream",
    "typeshed.typeshed.stubs.Pillow.PIL.PngImagePlugin.PngInfo",
    "typeshed.typeshed.stubs.Pillow.PIL.PngImagePlugin._fdat",
    "typeshed.typeshed.stubs.Pillow.PIL.PngImagePlugin._idat",
    "typeshed.typeshed.stubs.Pillow.PIL.PyAccess.PyAccess",
    "typeshed.typeshed.stubs.Pillow.PIL.TiffImagePlugin.AppendingTiffWriter",
    "typeshed.typeshed.stubs.PyMySQL.pymysql.charset.Charset",
    "typeshed.typeshed.stubs.PyMySQL.pymysql.connections.LoadLocalFile",
    "typeshed.typeshed.stubs.PyMySQL.pymysql.connections.MySQLResult",
    "typeshed.typeshed.stubs.PyMySQL.pymysql.connections.MysqlPacket",
    "typeshed.typeshed.stubs.PyMySQL.pymysql.cursors.Cursor",
    "typeshed.typeshed.stubs.PyYAML.yaml._yaml.CEmitter",
    "typeshed.typeshed.stubs.PyYAML.yaml._yaml.CParser",
    "typeshed.typeshed.stubs.PyYAML.yaml._yaml.Mark",
    "typeshed.typeshed.stubs.PyYAML.yaml.composer.Composer",
    "typeshed.typeshed.stubs.PyYAML.yaml.constructor.BaseConstructor",
    "typeshed.typeshed.stubs.PyYAML.yaml.emitter.Emitter",
    "typeshed.typeshed.stubs.PyYAML.yaml.emitter.ScalarAnalysis",
    "typeshed.typeshed.stubs.PyYAML.yaml.error.Mark",
    "typeshed.typeshed.stubs.PyYAML.yaml.events.Event",
    "typeshed.typeshed.stubs.PyYAML.yaml.nodes.Node",
    "typeshed.typeshed.stubs.PyYAML.yaml.parser.Parser",
    "typeshed.typeshed.stubs.PyYAML.yaml.reader.Reader",
    "typeshed.typeshed.stubs.PyYAML.yaml.representer.BaseRepresenter",
    "typeshed.typeshed.stubs.PyYAML.yaml.resolver.BaseResolver",
    "typeshed.typeshed.stubs.PyYAML.yaml.scanner.Scanner",
    "typeshed.typeshed.stubs.PyYAML.yaml.scanner.SimpleKey",
    "typeshed.typeshed.stubs.PyYAML.yaml.serializer.Serializer",
    "typeshed.typeshed.stubs.PyYAML.yaml.tokens.Token",
    "typeshed.typeshed.stubs.Pygments.pygments.filter.Filter",
    "typeshed.typeshed.stubs.Pygments.pygments.formatters.img.FontManager",
    "typeshed.typeshed.stubs.Pygments.pygments.formatters.terminal256.EscapeSequence",
    "typeshed.typeshed.stubs.Pygments.pygments.lexer.Lexer",
    "typeshed.typeshed.stubs.Pygments.pygments.lexer.LexerContext",
    "typeshed.typeshed.stubs.Pygments.pygments.lexer._PseudoMatch",
    "typeshed.typeshed.stubs.Pygments.pygments.lexer.default",
    "typeshed.typeshed.stubs.Pygments.pygments.scanner.Scanner",
    "typeshed.typeshed.stubs.WTForms.wtforms.csrf.core.CSRFTokenField",
    "typeshed.typeshed.stubs.WTForms.wtforms.fields.choices.SelectFieldBase",
    "typeshed.typeshed.stubs.WTForms.wtforms.fields.core.Field",
    "typeshed.typeshed.stubs.WTForms.wtforms.fields.core.Label",
    "typeshed.typeshed.stubs.WTForms.wtforms.fields.datetime.DateTimeField",
    "typeshed.typeshed.stubs.WTForms.wtforms.fields.numeric.FloatField",
    "typeshed.typeshed.stubs.WTForms.wtforms.fields.numeric.IntegerField",
    "typeshed.typeshed.stubs.WTForms.wtforms.fields.numeric.LocaleAwareNumberField",
    "typeshed.typeshed.stubs.WTForms.wtforms.fields.simple.BooleanField",
    "typeshed.typeshed.stubs.WTForms.wtforms.fields.simple.StringField",
    "typeshed.typeshed.stubs.WTForms.wtforms.form.BaseForm",
    "typeshed.typeshed.stubs.WTForms.wtforms.i18n.DefaultTranslations",
    "typeshed.typeshed.stubs.WTForms.wtforms.utils.WebobInputWrapper",
    "typeshed.typeshed.stubs.WTForms.wtforms.validators.AnyOf",
    "typeshed.typeshed.stubs.WTForms.wtforms.validators.DataRequired",
    "typeshed.typeshed.stubs.WTForms.wtforms.validators.Email",
    "typeshed.typeshed.stubs.WTForms.wtforms.validators.EqualTo",
    "typeshed.typeshed.stubs.WTForms.wtforms.validators.HostnameValidation",
    "typeshed.typeshed.stubs.WTForms.wtforms.validators.IPAddress",
    "typeshed.typeshed.stubs.WTForms.wtforms.validators.InputRequired",
    "typeshed.typeshed.stubs.WTForms.wtforms.validators.Length",
    "typeshed.typeshed.stubs.WTForms.wtforms.validators.NoneOf",
    "typeshed.typeshed.stubs.WTForms.wtforms.validators.NumberRange",
    "typeshed.typeshed.stubs.WTForms.wtforms.validators.Optional",
    "typeshed.typeshed.stubs.WTForms.wtforms.validators.Regexp",
    "typeshed.typeshed.stubs.WTForms.wtforms.validators.UUID",
    "typeshed.typeshed.stubs.WTForms.wtforms.widgets.core.Input",
    "typeshed.typeshed.stubs.WTForms.wtforms.widgets.core.ListWidget",
    "typeshed.typeshed.stubs.WTForms.wtforms.widgets.core.Select",
    "typeshed.typeshed.stubs.WTForms.wtforms.widgets.core.TableWidget",
    "typeshed.typeshed.stubs.WebOb.webob.byterange.ContentRange",
    "typeshed.typeshed.stubs.WebOb.webob.byterange.Range",
    "typeshed.typeshed.stubs.WebOb.webob.cachecontrol.exists_property",
    "typeshed.typeshed.stubs.WebOb.webob.client.SendRequest",
    "typeshed.typeshed.stubs.WebOb.webob.cookies.Base64Serializer",
    "typeshed.typeshed.stubs.WebOb.webob.cookies.CookieProfile",
    "typeshed.typeshed.stubs.WebOb.webob.cookies.SignedSerializer",
    "typeshed.typeshed.stubs.WebOb.webob.dec._MiddlewareFactory",
    "typeshed.typeshed.stubs.WebOb.webob.dec._UnboundMiddleware",
    "typeshed.typeshed.stubs.WebOb.webob.dec.wsgify",
    "typeshed.typeshed.stubs.WebOb.webob.etag.ETagMatcher",
    "typeshed.typeshed.stubs.WebOb.webob.etag.IfRange",
    "typeshed.typeshed.stubs.WebOb.webob.etag.IfRangeDate",
    "typeshed.typeshed.stubs.WebOb.webob.exc.HTTPExceptionMiddleware",
    "typeshed.typeshed.stubs.WebOb.webob.multidict.NoVars",
    "typeshed.typeshed.stubs.WebOb.webob.request.BaseRequest",
    "typeshed.typeshed.stubs.WebOb.webob.request.Transcoder",
    "typeshed.typeshed.stubs.WebOb.webob.response.AppIterRange",
    "typeshed.typeshed.stubs.WebOb.webob.response.EmptyResponse",
    "typeshed.typeshed.stubs.WebOb.webob.response.Response",
    "typeshed.typeshed.stubs.WebOb.webob.response.ResponseBodyFile",
    "typeshed.typeshed.stubs.WebOb.webob.static.DirectoryApp",
    "typeshed.typeshed.stubs.WebOb.webob.static.FileApp",
    "typeshed.typeshed.stubs.WebOb.webob.static.FileIter",
    "typeshed.typeshed.stubs.aiofiles.aiofiles.tempfile.temptypes.AsyncTemporaryDirectory",
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.async_context.TaskLocalStorage",
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.context.Context",
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.daemon_config.DaemonConfig",
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.emitters.udp_emitter.UDPEmitter",
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.models.default_dynamic_naming.DefaultDynamicNaming",
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.models.entity.Entity",
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.models.noop_traceid.NoOpTraceId",
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.models.segment.SegmentContextManager",
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.models.subsegment.SubsegmentContextManager",
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.models.throwable.Throwable",
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.models.trace_header.TraceHeader",
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.models.traceid.TraceId",
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.recorder.AWSXRayRecorder",
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.sampling.connector.ServiceConnector",
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.sampling.local.reservoir.Reservoir",
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.sampling.local.sampler.LocalSampler",
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.sampling.local.sampling_rule.SamplingRule",
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.sampling.reservoir.Reservoir",
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.sampling.rule_cache.RuleCache",
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.sampling.rule_poller.RulePoller",
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.sampling.sampler.DefaultSampler",
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.sampling.sampling_rule.SamplingRule",
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.sampling.target_poller.TargetPoller",
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.streaming.default_streaming.DefaultStreaming",
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.utils.atomic_counter.AtomicCounter",
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.builder.TreeBuilder",
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.builder.TreeBuilderRegistry",
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.builder._html5lib.AttrList",
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.dammit.EncodingDetector",
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.dammit.UnicodeDammit",
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.element.SoupStrainer",
    "typeshed.typeshed.stubs.bleach.bleach.css_sanitizer.CSSSanitizer",
    "typeshed.typeshed.stubs.bleach.bleach.html5lib_shim.Filter",
    "typeshed.typeshed.stubs.bleach.bleach.linkifier.Linker",
    "typeshed.typeshed.stubs.bleach.bleach.sanitizer.Cleaner",
    "typeshed.typeshed.stubs.boltons.boltons.cacheutils.CachedFunction",
    "typeshed.typeshed.stubs.boltons.boltons.cacheutils.CachedMethod",
    "typeshed.typeshed.stubs.boltons.boltons.fileutils.AtomicSaver",
    "typeshed.typeshed.stubs.boltons.boltons.fileutils.DummyFile",
    "typeshed.typeshed.stubs.boltons.boltons.fileutils.FilePerms",
    "typeshed.typeshed.stubs.boltons.boltons.formatutils.BaseFormatField",
    "typeshed.typeshed.stubs.boltons.boltons.formatutils.DeferredValue",
    "typeshed.typeshed.stubs.boltons.boltons.funcutils.FunctionBuilder",
    "typeshed.typeshed.stubs.boltons.boltons.gcutils.GCToggler",
    "typeshed.typeshed.stubs.boltons.boltons.ioutils.MultiFileReader",
    "typeshed.typeshed.stubs.boltons.boltons.ioutils.SpooledIOBase",
    "typeshed.typeshed.stubs.boltons.boltons.iterutils.GUIDerator",
    "typeshed.typeshed.stubs.boltons.boltons.jsonutils.JSONLIterator",
    "typeshed.typeshed.stubs.boltons.boltons.mathutils.Bits",
    "typeshed.typeshed.stubs.boltons.boltons.queueutils.BasePriorityQueue",
    "typeshed.typeshed.stubs.boltons.boltons.setutils._ComplementSet",
    "typeshed.typeshed.stubs.boltons.boltons.socketutils.BufferedSocket",
    "typeshed.typeshed.stubs.boltons.boltons.socketutils.NetstringSocket",
    "typeshed.typeshed.stubs.boltons.boltons.statsutils.Stats",
    "typeshed.typeshed.stubs.boltons.boltons.statsutils._StatsProperty",
    "typeshed.typeshed.stubs.boltons.boltons.strutils.MultiReplace",
    "typeshed.typeshed.stubs.boltons.boltons.tableutils.InputType",
    "typeshed.typeshed.stubs.boltons.boltons.tableutils.Table",
    "typeshed.typeshed.stubs.boltons.boltons.tbutils.Callpoint",
    "typeshed.typeshed.stubs.boltons.boltons.tbutils.ExceptionInfo",
    "typeshed.typeshed.stubs.boltons.boltons.tbutils.ParsedException",
    "typeshed.typeshed.stubs.boltons.boltons.tbutils.TracebackInfo",
    "typeshed.typeshed.stubs.boltons.boltons.typeutils.classproperty",
    "typeshed.typeshed.stubs.boltons.boltons.urlutils.URL",
    "typeshed.typeshed.stubs.boltons.boltons.urlutils.cachedproperty",
    "typeshed.typeshed.stubs.boto.boto.auth.HmacKeys",
    "typeshed.typeshed.stubs.boto.boto.connection.AWSAuthConnection",
    "typeshed.typeshed.stubs.boto.boto.connection.ConnectionPool",
    "typeshed.typeshed.stubs.boto.boto.connection.HTTPRequest",
    "typeshed.typeshed.stubs.boto.boto.connection.HostConnectionPool",
    "typeshed.typeshed.stubs.boto.boto.exception.ConsoleOutput",
    "typeshed.typeshed.stubs.boto.boto.exception._EC2Error",
    "typeshed.typeshed.stubs.boto.boto.regioninfo.RegionInfo",
    "typeshed.typeshed.stubs.boto.boto.s3.acl.ACL",
    "typeshed.typeshed.stubs.boto.boto.s3.acl.Grant",
    "typeshed.typeshed.stubs.boto.boto.s3.acl.Policy",
    "typeshed.typeshed.stubs.boto.boto.s3.bucket.Bucket",
    "typeshed.typeshed.stubs.boto.boto.s3.bucketlistresultset.MultiPartUploadListResultSet",
    "typeshed.typeshed.stubs.boto.boto.s3.bucketlistresultset.VersionedBucketListResultSet",
    "typeshed.typeshed.stubs.boto.boto.s3.bucketlogging.BucketLogging",
    "typeshed.typeshed.stubs.boto.boto.s3.cors.CORSRule",
    "typeshed.typeshed.stubs.boto.boto.s3.deletemarker.DeleteMarker",
    "typeshed.typeshed.stubs.boto.boto.s3.key.Key",
    "typeshed.typeshed.stubs.boto.boto.s3.keyfile.KeyFile",
    "typeshed.typeshed.stubs.boto.boto.s3.lifecycle.Expiration",
    "typeshed.typeshed.stubs.boto.boto.s3.lifecycle.Rule",
    "typeshed.typeshed.stubs.boto.boto.s3.lifecycle.Transition",
    "typeshed.typeshed.stubs.boto.boto.s3.multidelete.Deleted",
    "typeshed.typeshed.stubs.boto.boto.s3.multidelete.Error",
    "typeshed.typeshed.stubs.boto.boto.s3.multidelete.MultiDeleteResult",
    "typeshed.typeshed.stubs.boto.boto.s3.multipart.CompleteMultiPartUpload",
    "typeshed.typeshed.stubs.boto.boto.s3.multipart.MultiPartUpload",
    "typeshed.typeshed.stubs.boto.boto.s3.multipart.Part",
    "typeshed.typeshed.stubs.boto.boto.s3.prefix.Prefix",
    "typeshed.typeshed.stubs.boto.boto.s3.tagging.Tag",
    "typeshed.typeshed.stubs.boto.boto.s3.user.User",
    "typeshed.typeshed.stubs.boto.boto.s3.website.RoutingRule",
    "typeshed.typeshed.stubs.boto.boto.s3.website.WebsiteConfiguration",
    "typeshed.typeshed.stubs.boto.boto.s3.website._XMLKeyValue",
    "typeshed.typeshed.stubs.boto.boto.utils.LRUCache._Item",
    "typeshed.typeshed.stubs.boto.boto.utils.Password",
    "typeshed.typeshed.stubs.boto.boto.utils.ShellCommand",
    "typeshed.typeshed.stubs.braintree.braintree.add_on_gateway.AddOnGateway",
    "typeshed.typeshed.stubs.braintree.braintree.address_gateway.AddressGateway",
    "typeshed.typeshed.stubs.braintree.braintree.apple_pay_gateway.ApplePayGateway",
    "typeshed.typeshed.stubs.braintree.braintree.attribute_getter.AttributeGetter",
    "typeshed.typeshed.stubs.braintree.braintree.braintree_gateway.BraintreeGateway",
    "typeshed.typeshed.stubs.braintree.braintree.client_token_gateway.ClientTokenGateway",
    "typeshed.typeshed.stubs.braintree.braintree.configuration.Configuration",
    "typeshed.typeshed.stubs.braintree.braintree.credentials_parser.CredentialsParser",
    "typeshed.typeshed.stubs.braintree.braintree.credit_card_gateway.CreditCardGateway",
    "typeshed.typeshed.stubs.braintree.braintree.credit_card_verification_gateway.CreditCardVerificationGateway",
    "typeshed.typeshed.stubs.braintree.braintree.customer_gateway.CustomerGateway",
    "typeshed.typeshed.stubs.braintree.braintree.discount_gateway.DiscountGateway",
    "typeshed.typeshed.stubs.braintree.braintree.dispute_gateway.DisputeGateway",
    "typeshed.typeshed.stubs.braintree.braintree.document_upload_gateway.DocumentUploadGateway",
    "typeshed.typeshed.stubs.braintree.braintree.environment.Environment",
    "typeshed.typeshed.stubs.braintree.braintree.error_result.ErrorResult",
    "typeshed.typeshed.stubs.braintree.braintree.errors.Errors",
    "typeshed.typeshed.stubs.braintree.braintree.merchant_account_gateway.MerchantAccountGateway",
    "typeshed.typeshed.stubs.braintree.braintree.merchant_gateway.MerchantGateway",
    "typeshed.typeshed.stubs.braintree.braintree.oauth_gateway.OAuthGateway",
    "typeshed.typeshed.stubs.braintree.braintree.paginated_collection.PaginatedCollection",
    "typeshed.typeshed.stubs.braintree.braintree.paginated_result.PaginatedResult",
    "typeshed.typeshed.stubs.braintree.braintree.payment_method_gateway.PaymentMethodGateway",
    "typeshed.typeshed.stubs.braintree.braintree.payment_method_nonce_gateway.PaymentMethodNonceGateway",
    "typeshed.typeshed.stubs.braintree.braintree.paypal_account_gateway.PayPalAccountGateway",
    "typeshed.typeshed.stubs.braintree.braintree.plan_gateway.PlanGateway",
    "typeshed.typeshed.stubs.braintree.braintree.resource_collection.ResourceCollection",
    "typeshed.typeshed.stubs.braintree.braintree.search.Search.EndsWithNodeBuilder",
    "typeshed.typeshed.stubs.braintree.braintree.search.Search.IsNodeBuilder",
    "typeshed.typeshed.stubs.braintree.braintree.search.Search.KeyValueNodeBuilder",
    "typeshed.typeshed.stubs.braintree.braintree.search.Search.MultipleValueNodeBuilder",
    "typeshed.typeshed.stubs.braintree.braintree.search.Search.Node",
    "typeshed.typeshed.stubs.braintree.braintree.search.Search.RangeNodeBuilder",
    "typeshed.typeshed.stubs.braintree.braintree.settlement_batch_summary_gateway.SettlementBatchSummaryGateway",
    "typeshed.typeshed.stubs.braintree.braintree.signature_service.SignatureService",
    "typeshed.typeshed.stubs.braintree.braintree.subscription_gateway.SubscriptionGateway",
    "typeshed.typeshed.stubs.braintree.braintree.testing_gateway.TestingGateway",
    "typeshed.typeshed.stubs.braintree.braintree.transaction_gateway.TransactionGateway",
    "typeshed.typeshed.stubs.braintree.braintree.transaction_line_item_gateway.TransactionLineItemGateway",
    "typeshed.typeshed.stubs.braintree.braintree.us_bank_account_gateway.UsBankAccountGateway",
    "typeshed.typeshed.stubs.braintree.braintree.us_bank_account_verification_gateway.UsBankAccountVerificationGateway",
    "typeshed.typeshed.stubs.braintree.braintree.util.generator.Generator",
    "typeshed.typeshed.stubs.braintree.braintree.util.http.Http",
    "typeshed.typeshed.stubs.braintree.braintree.util.parser.Parser",
    "typeshed.typeshed.stubs.braintree.braintree.validation_error_collection.ValidationErrorCollection",
    "typeshed.typeshed.stubs.braintree.braintree.webhook_notification_gateway.WebhookNotificationGateway",
    "typeshed.typeshed.stubs.braintree.braintree.webhook_testing_gateway.WebhookTestingGateway",
    "typeshed.typeshed.stubs.cachetools.cachetools._TimedCache._Timer",
    "typeshed.typeshed.stubs.caldav.caldav.davclient.DAVClient",
    "typeshed.typeshed.stubs.caldav.caldav.davclient.DAVResponse",
    "typeshed.typeshed.stubs.caldav.caldav.elements.base.BaseElement",
    "typeshed.typeshed.stubs.caldav.caldav.lib.url.URL",
    "typeshed.typeshed.stubs.caldav.caldav.objects.DAVObject",
    "typeshed.typeshed.stubs.caldav.caldav.objects.SynchronizableCalendarObjectCollection",
    "typeshed.typeshed.stubs.cffi._cffi_backend.FFI",
    "typeshed.typeshed.stubs.cffi._cffi_backend.buffer",
    "typeshed.typeshed.stubs.cffi.cffi.api.FFI",
    "typeshed.typeshed.stubs.cffi.cffi.backend_ctypes.CTypesBackend",
    "typeshed.typeshed.stubs.cffi.cffi.backend_ctypes.CTypesData",
    "typeshed.typeshed.stubs.cffi.cffi.backend_ctypes.CTypesLibrary",
    "typeshed.typeshed.stubs.cffi.cffi.cffi_opcode.CffiOp",
    "typeshed.typeshed.stubs.cffi.cffi.cparser.Parser",
    "typeshed.typeshed.stubs.cffi.cffi.recompiler.EnumExpr",
    "typeshed.typeshed.stubs.cffi.cffi.recompiler.FieldExpr",
    "typeshed.typeshed.stubs.cffi.cffi.recompiler.GlobalExpr",
    "typeshed.typeshed.stubs.cffi.cffi.recompiler.Recompiler",
    "typeshed.typeshed.stubs.cffi.cffi.recompiler.StructUnionExpr",
    "typeshed.typeshed.stubs.cffi.cffi.recompiler.TypenameExpr",
    "typeshed.typeshed.stubs.cffi.cffi.vengine_cpy.VCPythonEngine",
    "typeshed.typeshed.stubs.cffi.cffi.vengine_gen.VGenericEngine",
    "typeshed.typeshed.stubs.cffi.cffi.verifier.Verifier",
    "typeshed.typeshed.stubs.click-default-group.click_default_group.DefaultCommandFormatter",
    "typeshed.typeshed.stubs.click-spinner.click_spinner.Spinner",
    "typeshed.typeshed.stubs.colorama.colorama.ansi.AnsiCodes",
    "typeshed.typeshed.stubs.colorama.colorama.ansitowin32.AnsiToWin32",
    "typeshed.typeshed.stubs.colorama.colorama.ansitowin32.StreamWrapper",
    "typeshed.typeshed.stubs.commonmark.commonmark.blocks.Parser",
    "typeshed.typeshed.stubs.commonmark.commonmark.inlines.InlineParser",
    "typeshed.typeshed.stubs.commonmark.commonmark.node.Node",
    "typeshed.typeshed.stubs.commonmark.commonmark.node.NodeWalker",
    "typeshed.typeshed.stubs.console-menu.consolemenu.console_menu.ConsoleMenu",
    "typeshed.typeshed.stubs.console-menu.consolemenu.console_menu.MenuItem",
    "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.MenuBorderStyleFactory",
    "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_margins.MenuMargins",
    "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_padding.MenuPadding",
    "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_style.MenuStyle",
    "typeshed.typeshed.stubs.console-menu.consolemenu.menu_component.Dimension",
    "typeshed.typeshed.stubs.console-menu.consolemenu.menu_component.MenuComponent",
    "typeshed.typeshed.stubs.console-menu.consolemenu.menu_formatter.MenuFormatBuilder",
    "typeshed.typeshed.stubs.console-menu.consolemenu.prompt_utils.PromptUtils",
    "typeshed.typeshed.stubs.console-menu.consolemenu.screen.Screen",
    "typeshed.typeshed.stubs.console-menu.consolemenu.validators.base.BaseValidator",
    "typeshed.typeshed.stubs.croniter.croniter.croniter.HashExpander",
    "typeshed.typeshed.stubs.dateparser.dateparser.calendars.CalendarBase",
    "typeshed.typeshed.stubs.dateparser.dateparser.calendars.hijri_parser.HijriDate",
    "typeshed.typeshed.stubs.dateparser.dateparser.calendars.jalali_parser.PersianDate",
    "typeshed.typeshed.stubs.dateparser.dateparser.conf.Settings",
    "typeshed.typeshed.stubs.dateparser.dateparser.date.DateData",
    "typeshed.typeshed.stubs.dateparser.dateparser.date.DateDataParser",
    "typeshed.typeshed.stubs.dateparser.dateparser.date._DateLocaleParser",
    "typeshed.typeshed.stubs.dateparser.dateparser.languages.dictionary.Dictionary",
    "typeshed.typeshed.stubs.dateparser.dateparser.languages.locale.Locale",
    "typeshed.typeshed.stubs.dateparser.dateparser.parser._no_spaces_parser",
    "typeshed.typeshed.stubs.dateparser.dateparser.parser._parser",
    "typeshed.typeshed.stubs.dateparser.dateparser.parser.tokenizer",
    "typeshed.typeshed.stubs.dateparser.dateparser.search.detection.BaseLanguageDetector",
    "typeshed.typeshed.stubs.dateparser.dateparser.search.search.DateSearchWithDetection",
    "typeshed.typeshed.stubs.dateparser.dateparser.search.search._ExactLanguageSearch",
    "typeshed.typeshed.stubs.decorator.decorator.FunctionMaker",
    "typeshed.typeshed.stubs.dockerfile-parse.dockerfile_parse.parser.DockerfileParser",
    "typeshed.typeshed.stubs.dockerfile-parse.dockerfile_parse.util.Context",
    "typeshed.typeshed.stubs.dockerfile-parse.dockerfile_parse.util.WordSplitter",
    "typeshed.typeshed.stubs.docutils.docutils.io.ErrorOutput",
    "typeshed.typeshed.stubs.docutils.docutils.nodes.NodeVisitor",
    "typeshed.typeshed.stubs.docutils.docutils.parsers.rst.Directive",
    "typeshed.typeshed.stubs.docutils.docutils.parsers.rst.states.Inliner",
    "typeshed.typeshed.stubs.docutils.docutils.transforms.Transform",
    "typeshed.typeshed.stubs.docutils.docutils.transforms.Transformer",
    "typeshed.typeshed.stubs.docutils.docutils.utils.DependencyList",
    "typeshed.typeshed.stubs.entrypoints.entrypoints.Distribution",
    "typeshed.typeshed.stubs.entrypoints.entrypoints.EntryPoint",
    "typeshed.typeshed.stubs.flake8-2020.flake8_2020.Plugin",
    "typeshed.typeshed.stubs.flake8-bugbear.bugbear.BugBearChecker",
    "typeshed.typeshed.stubs.flake8-builtins.flake8_builtins.BuiltinsChecker",
    "typeshed.typeshed.stubs.flake8-docstrings.flake8_docstrings.pep257Checker",
    "typeshed.typeshed.stubs.flake8-plugin-utils.flake8_plugin_utils.plugin.Error",
    "typeshed.typeshed.stubs.flake8-rst-docstrings.flake8_rst_docstrings.reStructuredTextChecker",
    "typeshed.typeshed.stubs.flake8-simplify.flake8_simplify.Plugin",
    "typeshed.typeshed.stubs.flake8-typing-imports.flake8_typing_imports.Plugin",
    "typeshed.typeshed.stubs.fpdf2.fpdf.annotations.AnnotationMixin",
    "typeshed.typeshed.stubs.fpdf2.fpdf.drawing.DrawingContext",
    "typeshed.typeshed.stubs.fpdf2.fpdf.drawing.GraphicsContext",
    "typeshed.typeshed.stubs.fpdf2.fpdf.drawing.GraphicsStyle",
    "typeshed.typeshed.stubs.fpdf2.fpdf.drawing.PaintedPath",
    "typeshed.typeshed.stubs.fpdf2.fpdf.encryption.CryptFilter",
    "typeshed.typeshed.stubs.fpdf2.fpdf.encryption.StandardSecurityHandler",
    "typeshed.typeshed.stubs.fpdf2.fpdf.fonts.FontFace",
    "typeshed.typeshed.stubs.fpdf2.fpdf.fonts.Glyph",
    "typeshed.typeshed.stubs.fpdf2.fpdf.fonts.SubsetMap",
    "typeshed.typeshed.stubs.fpdf2.fpdf.graphics_state.GraphicsStateMixin",
    "typeshed.typeshed.stubs.fpdf2.fpdf.html.HTMLMixin",
    "typeshed.typeshed.stubs.fpdf2.fpdf.image_parsing.temp_attr",
    "typeshed.typeshed.stubs.fpdf2.fpdf.line_break.CurrentLine",
    "typeshed.typeshed.stubs.fpdf2.fpdf.line_break.Fragment",
    "typeshed.typeshed.stubs.fpdf2.fpdf.line_break.MultiLineBreak",
    "typeshed.typeshed.stubs.fpdf2.fpdf.output.AcroForm",
    "typeshed.typeshed.stubs.fpdf2.fpdf.output.OutputProducer",
    "typeshed.typeshed.stubs.fpdf2.fpdf.prefs.ViewerPreferences",
    "typeshed.typeshed.stubs.fpdf2.fpdf.recorder.CallRecorder",
    "typeshed.typeshed.stubs.fpdf2.fpdf.recorder.FPDFRecorder",
    "typeshed.typeshed.stubs.fpdf2.fpdf.sign.Signature",
    "typeshed.typeshed.stubs.fpdf2.fpdf.structure_tree.StructureTreeBuilder",
    "typeshed.typeshed.stubs.fpdf2.fpdf.svg.SVGObject",
    "typeshed.typeshed.stubs.fpdf2.fpdf.syntax.PDFDate",
    "typeshed.typeshed.stubs.fpdf2.fpdf.table.Row",
    "typeshed.typeshed.stubs.fpdf2.fpdf.table.Table",
    "typeshed.typeshed.stubs.fpdf2.fpdf.template.FlexTemplate",
    "typeshed.typeshed.stubs.fpdf2.fpdf.text_region.Paragraph",
    "typeshed.typeshed.stubs.fpdf2.fpdf.text_region.ParagraphCollectorMixin",
    "typeshed.typeshed.stubs.fpdf2.fpdf.text_region.TextColumnarMixin",
    "typeshed.typeshed.stubs.fpdf2.fpdf.text_region.TextRegionMixin",
    "typeshed.typeshed.stubs.gdb.gdb.Breakpoint",
    "typeshed.typeshed.stubs.gdb.gdb.Command",
    "typeshed.typeshed.stubs.gdb.gdb.Function",
    "typeshed.typeshed.stubs.gdb.gdb.MICommand",
    "typeshed.typeshed.stubs.gdb.gdb.Parameter",
    "typeshed.typeshed.stubs.gdb.gdb.Value",
    "typeshed.typeshed.stubs.gdb.gdb.printing.PrettyPrinter",
    "typeshed.typeshed.stubs.gdb.gdb.printing.SubPrettyPrinter",
    "typeshed.typeshed.stubs.gdb.gdb.types.TypePrinter",
    "typeshed.typeshed.stubs.gdb.gdb.xmethod.XMethod",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb._datastore_query.Cursor",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb._eventloop.EventLoop",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb._options.Options",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.blobstore.BlobFetchSizeTooLargeError",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.blobstore.BlobInfo",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.blobstore.BlobInfoParseError",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.blobstore.BlobNotFoundError",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.blobstore.BlobReader",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.blobstore.DataIndexOutOfRangeError",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.blobstore.Error",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.blobstore.InternalError",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.blobstore.PermissionDeniedError",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.client.Client",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.context.AutoBatcher",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.context.ContextOptions",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.context._LocalState",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.django_middleware.NdbDjangoMiddleware",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.model.User",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.msgprop.EnumProperty",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.msgprop.MessageProperty",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.query.PropertyOrder",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.query.Query",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.query.RepeatedStructuredPropertyPredicate",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.query._BooleanClauses",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.tasklets.Future",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.tasklets.QueueFuture",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.tasklets.ReducingFuture",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.tasklets.SerialQueueFuture",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.utils.keyword_only",
    "typeshed.typeshed.stubs.greenlet.greenlet._greenlet.greenlet",
    "typeshed.typeshed.stubs.hdbcli.hdbcli.dbapi.Connection",
    "typeshed.typeshed.stubs.hdbcli.hdbcli.dbapi.Cursor",
    "typeshed.typeshed.stubs.hdbcli.hdbcli.dbapi.LOB",
    "typeshed.typeshed.stubs.hdbcli.hdbcli.resultrow.ResultRow",
    "typeshed.typeshed.stubs.html5lib.html5lib._ihatexml.InfosetFilter",
    "typeshed.typeshed.stubs.html5lib.html5lib._inputstream.BufferedStream",
    "typeshed.typeshed.stubs.html5lib.html5lib._inputstream.ContentAttrParser",
    "typeshed.typeshed.stubs.html5lib.html5lib._inputstream.EncodingParser",
    "typeshed.typeshed.stubs.html5lib.html5lib._inputstream.HTMLUnicodeInputStream",
    "typeshed.typeshed.stubs.html5lib.html5lib._tokenizer.HTMLTokenizer",
    "typeshed.typeshed.stubs.html5lib.html5lib.filters.base.Filter",
    "typeshed.typeshed.stubs.html5lib.html5lib.html5parser.HTMLParser",
    "typeshed.typeshed.stubs.html5lib.html5lib.serializer.HTMLSerializer",
    "typeshed.typeshed.stubs.html5lib.html5lib.treebuilders.base.Node",
    "typeshed.typeshed.stubs.html5lib.html5lib.treebuilders.base.TreeBuilder",
    "typeshed.typeshed.stubs.html5lib.html5lib.treebuilders.etree_lxml.Document",
    "typeshed.typeshed.stubs.html5lib.html5lib.treebuilders.etree_lxml.DocumentType",
    "typeshed.typeshed.stubs.html5lib.html5lib.treewalkers.base.TreeWalker",
    "typeshed.typeshed.stubs.html5lib.html5lib.treewalkers.etree_lxml.Doctype",
    "typeshed.typeshed.stubs.html5lib.html5lib.treewalkers.etree_lxml.FragmentWrapper",
    "typeshed.typeshed.stubs.html5lib.html5lib.treewalkers.etree_lxml.Root",
    "typeshed.typeshed.stubs.httplib2.httplib2.Authentication",
    "typeshed.typeshed.stubs.httplib2.httplib2.Credentials",
    "typeshed.typeshed.stubs.httplib2.httplib2.FileCache",
    "typeshed.typeshed.stubs.httplib2.httplib2.Http",
    "typeshed.typeshed.stubs.httplib2.httplib2.ProxyInfo",
    "typeshed.typeshed.stubs.humanfriendly.humanfriendly.Timer",
    "typeshed.typeshed.stubs.humanfriendly.humanfriendly.terminal.spinners.AutomaticSpinner",
    "typeshed.typeshed.stubs.humanfriendly.humanfriendly.terminal.spinners.Spinner",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client._async.api_client.ApiClientAsync",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client._async.rest.RESTClientObjectAsync",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client._sync.api_client.ApiClient",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client._sync.rest.RESTClientObject",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.client._base._BaseClient",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.client._base._BaseDeleteApi",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.client._base._BaseQueryApi",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.client._base._BaseWriteApi",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.client.authorizations_api.AuthorizationsApi",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.client.bucket_api.BucketsApi",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.client.flux_csv_parser.FluxCsvParser",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.client.flux_csv_parser._FluxCsvParserMetadata",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.client.flux_csv_parser._StreamReaderToWithAsyncRead",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.client.labels_api.LabelsApi",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.client.organizations_api.OrganizationsApi",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.client.query_api.QueryOptions",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.client.tasks_api.TasksApi",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.client.users_api.UsersApi",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.client.util.date_utils.DateHelper",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.client.write.dataframe_serializer.DataframeSerializer",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.client.write.point.Point",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.client.write_api.PointSettings",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.client.write_api.WriteOptions",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.client.write_api._BatchItem",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.client.write_api._BatchItemKey",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.client.write_api._BatchResponse",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.configuration.Configuration",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.add_resource_member_request_body.AddResourceMemberRequestBody",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.analyze_query_response.AnalyzeQueryResponse",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.analyze_query_response_errors.AnalyzeQueryResponseErrors",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.ast_response.ASTResponse",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.authorization_update_request.AuthorizationUpdateRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.authorizations.Authorizations",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.axes.Axes",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.axis.Axis",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.axis_scale.AxisScale",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.bucket.Bucket",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.bucket_links.BucketLinks",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.bucket_metadata_manifest.BucketMetadataManifest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.bucket_retention_rules.BucketRetentionRules",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.bucket_shard_mapping.BucketShardMapping",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.buckets.Buckets",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.builder_aggregate_function_type.BuilderAggregateFunctionType",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.builder_config.BuilderConfig",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.builder_config_aggregate_window.BuilderConfigAggregateWindow",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.builder_functions_type.BuilderFunctionsType",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.builder_tags_type.BuilderTagsType",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.cell.Cell",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.cell_links.CellLinks",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.cell_update.CellUpdate",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.check.Check",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.check_base.CheckBase",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.check_base_links.CheckBaseLinks",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.check_patch.CheckPatch",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.check_status_level.CheckStatusLevel",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.checks.Checks",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.column_data_type.ColumnDataType",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.column_semantic_type.ColumnSemanticType",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.config.Config",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.create_cell.CreateCell",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.create_dashboard_request.CreateDashboardRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.dashboard_color.DashboardColor",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.dashboard_query.DashboardQuery",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.dashboards.Dashboards",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.dbr_ps.DBRPs",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.dbrp.DBRP",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.dbrp_create.DBRPCreate",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.dbrp_get.DBRPGet",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.dbrp_update.DBRPUpdate",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.decimal_places.DecimalPlaces",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.delete_predicate_request.DeletePredicateRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.dialect.Dialect",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.dict_item.DictItem",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.duration.Duration",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.error.Error",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.field.Field",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.file.File",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.flux_response.FluxResponse",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.flux_suggestion.FluxSuggestion",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.flux_suggestions.FluxSuggestions",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.health_check.HealthCheck",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.import_declaration.ImportDeclaration",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.is_onboarding.IsOnboarding",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.label.Label",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.label_create_request.LabelCreateRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.label_mapping.LabelMapping",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.label_response.LabelResponse",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.label_update.LabelUpdate",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.labels_response.LabelsResponse",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.language_request.LanguageRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.line_protocol_error.LineProtocolError",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.line_protocol_length_error.LineProtocolLengthError",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.links.Links",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.list_stacks_response.ListStacksResponse",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.log_event.LogEvent",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.logs.Logs",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.measurement_schema.MeasurementSchema",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.measurement_schema_column.MeasurementSchemaColumn",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.measurement_schema_create_request.MeasurementSchemaCreateRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.measurement_schema_list.MeasurementSchemaList",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.measurement_schema_update_request.MeasurementSchemaUpdateRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.metadata_backup.MetadataBackup",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.model_property.ModelProperty",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.node.Node",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.notification_endpoint.NotificationEndpoint",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.notification_endpoint_base.NotificationEndpointBase",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.notification_endpoint_base_links.NotificationEndpointBaseLinks",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.notification_endpoint_type.NotificationEndpointType",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.notification_endpoint_update.NotificationEndpointUpdate",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.notification_endpoints.NotificationEndpoints",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.notification_rule.NotificationRule",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.notification_rule_base.NotificationRuleBase",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.notification_rule_base_links.NotificationRuleBaseLinks",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.notification_rule_update.NotificationRuleUpdate",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.notification_rules.NotificationRules",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.onboarding_request.OnboardingRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.onboarding_response.OnboardingResponse",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.organization.Organization",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.organization_links.OrganizationLinks",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.organizations.Organizations",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.package.Package",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.package_clause.PackageClause",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.password_reset_body.PasswordResetBody",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.patch_bucket_request.PatchBucketRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.patch_dashboard_request.PatchDashboardRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.patch_organization_request.PatchOrganizationRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.patch_retention_rule.PatchRetentionRule",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.patch_stack_request.PatchStackRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.patch_stack_request_additional_resources.PatchStackRequestAdditionalResources",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.permission.Permission",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.permission_resource.PermissionResource",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.post_bucket_request.PostBucketRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.post_check.PostCheck",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.post_notification_endpoint.PostNotificationEndpoint",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.post_notification_rule.PostNotificationRule",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.post_organization_request.PostOrganizationRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.post_restore_kv_response.PostRestoreKVResponse",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.post_stack_request.PostStackRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.query.Query",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.query_edit_mode.QueryEditMode",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.query_variable_properties_values.QueryVariablePropertiesValues",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.ready.Ready",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.remote_connection.RemoteConnection",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.remote_connection_creation_request.RemoteConnectionCreationRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.remote_connection_update_request.RemoteConnectionUpdateRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.remote_connections.RemoteConnections",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.renamable_field.RenamableField",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.replication.Replication",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.replication_creation_request.ReplicationCreationRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.replication_update_request.ReplicationUpdateRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.replications.Replications",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.resource_members.ResourceMembers",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.resource_members_links.ResourceMembersLinks",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.resource_owners.ResourceOwners",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.restored_bucket_mappings.RestoredBucketMappings",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.retention_policy_manifest.RetentionPolicyManifest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.routes.Routes",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.routes_external.RoutesExternal",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.routes_query.RoutesQuery",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.routes_system.RoutesSystem",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.rule_status_level.RuleStatusLevel",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.run.Run",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.run_links.RunLinks",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.run_manually.RunManually",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.runs.Runs",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.schema_type.SchemaType",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.scraper_target_request.ScraperTargetRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.scraper_target_responses.ScraperTargetResponses",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.script.Script",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.script_create_request.ScriptCreateRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.script_invocation_params.ScriptInvocationParams",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.script_update_request.ScriptUpdateRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.scripts.Scripts",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.secret_keys.SecretKeys",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.shard_group_manifest.ShardGroupManifest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.shard_manifest.ShardManifest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.shard_owner.ShardOwner",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.source.Source",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.source_links.SourceLinks",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.sources.Sources",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.stack.Stack",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.stack_associations.StackAssociations",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.stack_events.StackEvents",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.stack_links.StackLinks",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.stack_resources.StackResources",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.statement.Statement",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.static_legend.StaticLegend",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.status_rule.StatusRule",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.subscription_manifest.SubscriptionManifest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.table_view_properties_table_options.TableViewPropertiesTableOptions",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.tag_rule.TagRule",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.task.Task",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.task_create_request.TaskCreateRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.task_links.TaskLinks",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.task_status_type.TaskStatusType",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.task_update_request.TaskUpdateRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.tasks.Tasks",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.telegraf_plugin.TelegrafPlugin",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.telegraf_plugin_request.TelegrafPluginRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.telegraf_plugin_request_plugins.TelegrafPluginRequestPlugins",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.telegraf_plugins.TelegrafPlugins",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.telegraf_request.TelegrafRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.telegraf_request_metadata.TelegrafRequestMetadata",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.telegrafs.Telegrafs",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_apply.TemplateApply",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_apply_remotes.TemplateApplyRemotes",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_apply_template.TemplateApplyTemplate",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_chart.TemplateChart",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_export_by_id.TemplateExportByID",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_export_by_id_org_ids.TemplateExportByIDOrgIDs",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_export_by_id_resource_filters.TemplateExportByIDResourceFilters",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_export_by_id_resources.TemplateExportByIDResources",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_export_by_name.TemplateExportByName",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_export_by_name_resources.TemplateExportByNameResources",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_kind.TemplateKind",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary.TemplateSummary",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_diff.TemplateSummaryDiff",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_diff_buckets.TemplateSummaryDiffBuckets",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_diff_buckets_new_old.TemplateSummaryDiffBucketsNewOld",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_diff_checks.TemplateSummaryDiffChecks",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_diff_dashboards.TemplateSummaryDiffDashboards",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_diff_dashboards_new_old.TemplateSummaryDiffDashboardsNewOld",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_diff_label_mappings.TemplateSummaryDiffLabelMappings",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_diff_labels.TemplateSummaryDiffLabels",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_diff_labels_new_old.TemplateSummaryDiffLabelsNewOld",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_diff_notification_endpoints.TemplateSummaryDiffNotificationEndpoints",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_diff_notification_rules.TemplateSummaryDiffNotificationRules",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_diff_notification_rules_new_old.TemplateSummaryDiffNotificationRulesNewOld",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_diff_tasks.TemplateSummaryDiffTasks",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_diff_tasks_new_old.TemplateSummaryDiffTasksNewOld",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_diff_telegraf_configs.TemplateSummaryDiffTelegrafConfigs",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_diff_variables.TemplateSummaryDiffVariables",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_diff_variables_new_old.TemplateSummaryDiffVariablesNewOld",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_errors.TemplateSummaryErrors",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_label.TemplateSummaryLabel",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_label_properties.TemplateSummaryLabelProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_summary.TemplateSummarySummary",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_summary_buckets.TemplateSummarySummaryBuckets",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_summary_dashboards.TemplateSummarySummaryDashboards",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_summary_label_mappings.TemplateSummarySummaryLabelMappings",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_summary_notification_rules.TemplateSummarySummaryNotificationRules",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_summary_status_rules.TemplateSummarySummaryStatusRules",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_summary_tag_rules.TemplateSummarySummaryTagRules",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_summary_tasks.TemplateSummarySummaryTasks",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_summary_variables.TemplateSummarySummaryVariables",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.threshold.Threshold",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.threshold_base.ThresholdBase",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.user.User",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.user_response.UserResponse",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.user_response_links.UserResponseLinks",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.users.Users",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.variable.Variable",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.variable_links.VariableLinks",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.variable_properties.VariableProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.variables.Variables",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.view.View",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.view_links.ViewLinks",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.view_properties.ViewProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.views.Views",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.write_precision.WritePrecision",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.xy_geom.XYGeom",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.service._base_service._BaseService",
    "typeshed.typeshed.stubs.inifile.inifile.Dialect",
    "typeshed.typeshed.stubs.jmespath.jmespath.parser.ParsedResult",
    "typeshed.typeshed.stubs.jmespath.jmespath.parser.Parser",
    "typeshed.typeshed.stubs.jmespath.jmespath.visitor.Options",
    "typeshed.typeshed.stubs.jmespath.jmespath.visitor.Visitor",
    "typeshed.typeshed.stubs.jmespath.jmespath.visitor._Expression",
    "typeshed.typeshed.stubs.jsonschema.jsonschema._format.FormatChecker",
    "typeshed.typeshed.stubs.jsonschema.jsonschema._types.TypeChecker",
    "typeshed.typeshed.stubs.jsonschema.jsonschema.cli._Outputter",
    "typeshed.typeshed.stubs.jsonschema.jsonschema.cli._PlainFormatter",
    "typeshed.typeshed.stubs.jsonschema.jsonschema.exceptions.ErrorTree",
    "typeshed.typeshed.stubs.jsonschema.jsonschema.validators.RefResolver",
    "typeshed.typeshed.stubs.jsonschema.jsonschema.validators._Validator",
    "typeshed.typeshed.stubs.keyboard.keyboard._keyboard_event.KeyboardEvent",
    "typeshed.typeshed.stubs.ldap3.ldap3.abstract.attrDef.AttrDef",
    "typeshed.typeshed.stubs.ldap3.ldap3.abstract.attribute.Attribute",
    "typeshed.typeshed.stubs.ldap3.ldap3.abstract.cursor.Cursor",
    "typeshed.typeshed.stubs.ldap3.ldap3.abstract.entry.EntryBase",
    "typeshed.typeshed.stubs.ldap3.ldap3.abstract.entry.EntryState",
    "typeshed.typeshed.stubs.ldap3.ldap3.abstract.objectDef.ObjectDef",
    "typeshed.typeshed.stubs.ldap3.ldap3.core.connection.Connection",
    "typeshed.typeshed.stubs.ldap3.ldap3.core.pooling.ServerPool",
    "typeshed.typeshed.stubs.ldap3.ldap3.core.pooling.ServerPoolState",
    "typeshed.typeshed.stubs.ldap3.ldap3.core.pooling.ServerState",
    "typeshed.typeshed.stubs.ldap3.ldap3.core.server.Server",
    "typeshed.typeshed.stubs.ldap3.ldap3.core.tls.Tls",
    "typeshed.typeshed.stubs.ldap3.ldap3.core.usage.ConnectionUsage",
    "typeshed.typeshed.stubs.ldap3.ldap3.extend.ExtendedOperationContainer",
    "typeshed.typeshed.stubs.ldap3.ldap3.extend.microsoft.dirSync.DirSync",
    "typeshed.typeshed.stubs.ldap3.ldap3.extend.microsoft.persistentSearch.ADPersistentSearch",
    "typeshed.typeshed.stubs.ldap3.ldap3.extend.operation.ExtendedOperation",
    "typeshed.typeshed.stubs.ldap3.ldap3.extend.standard.PersistentSearch.PersistentSearch",
    "typeshed.typeshed.stubs.ldap3.ldap3.operation.search.FilterNode",
    "typeshed.typeshed.stubs.ldap3.ldap3.protocol.rfc4512.BaseObjectInfo",
    "typeshed.typeshed.stubs.ldap3.ldap3.protocol.rfc4512.BaseServerInfo",
    "typeshed.typeshed.stubs.ldap3.ldap3.strategy.base.BaseStrategy",
    "typeshed.typeshed.stubs.ldap3.ldap3.strategy.mockBase.MockBaseStrategy",
    "typeshed.typeshed.stubs.ldap3.ldap3.strategy.mockBase.PagedSearchSet",
    "typeshed.typeshed.stubs.ldap3.ldap3.strategy.reusable.ReusableStrategy.ConnectionPool",
    "typeshed.typeshed.stubs.ldap3.ldap3.strategy.reusable.ReusableStrategy.PooledConnectionWorker",
    "typeshed.typeshed.stubs.ldap3.ldap3.utils.ntlm.NtlmClient",
    "typeshed.typeshed.stubs.libsass.sassutils.builder.Manifest",
    "typeshed.typeshed.stubs.libsass.sassutils.wsgi.SassMiddleware",
    "typeshed.typeshed.stubs.mock.mock.mock.Base",
    "typeshed.typeshed.stubs.mock.mock.mock.MagicMixin",
    "typeshed.typeshed.stubs.mock.mock.mock._SentinelObject",
    "typeshed.typeshed.stubs.mock.mock.mock._SpecState",
    "typeshed.typeshed.stubs.mock.mock.mock._patch_dict",
    "typeshed.typeshed.stubs.mysqlclient.MySQLdb._mysql.connection",
    "typeshed.typeshed.stubs.mysqlclient.MySQLdb._mysql.result",
    "typeshed.typeshed.stubs.mysqlclient.MySQLdb.cursors.BaseCursor",
    "typeshed.typeshed.stubs.netaddr.netaddr.contrib.subnet_splitter.SubnetSplitter",
    "typeshed.typeshed.stubs.netaddr.netaddr.core.DictDotLookup",
    "typeshed.typeshed.stubs.netaddr.netaddr.core.Publisher",
    "typeshed.typeshed.stubs.netaddr.netaddr.eui.BaseIdentifier",
    "typeshed.typeshed.stubs.netaddr.netaddr.ip.BaseIP",
    "typeshed.typeshed.stubs.netaddr.netaddr.ip.sets.IPSet",
    "typeshed.typeshed.stubs.oauthlib.oauthlib.common.Request",
    "typeshed.typeshed.stubs.oauthlib.oauthlib.oauth1.rfc5849.Client",
    "typeshed.typeshed.stubs.oauthlib.oauthlib.oauth1.rfc5849.endpoints.base.BaseEndpoint",
    "typeshed.typeshed.stubs.oauthlib.oauthlib.oauth1.rfc5849.request_validator.RequestValidator",
    "typeshed.typeshed.stubs.oauthlib.oauthlib.oauth2.rfc6749.clients.base.Client",
    "typeshed.typeshed.stubs.oauthlib.oauthlib.oauth2.rfc6749.endpoints.base.BaseEndpoint",
    "typeshed.typeshed.stubs.oauthlib.oauthlib.oauth2.rfc6749.grant_types.base.GrantTypeBase",
    "typeshed.typeshed.stubs.oauthlib.oauthlib.oauth2.rfc6749.grant_types.base.ValidatorsContainer",
    "typeshed.typeshed.stubs.oauthlib.oauthlib.signals._FakeSignal",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.cell.read_only.ReadOnlyCell",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.reference.DummyWorksheet",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.comments.comments.Comment",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.comments.shape_writer.ShapeWriter",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.drawing.Drawing",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.image.Image",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.formatting.formatting.ConditionalFormattingList",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.formula.tokenizer.Token",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.formula.tokenizer.Tokenizer",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.formula.translate.Translator",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.reader.excel.ExcelReader",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.reader.workbook.WorkbookParser",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.styles.cell_style.ArrayDescriptor",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.styles.proxy.StyleProxy",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.styles.styleable.StyleArrayDescriptor",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.styles.styleable.StyleDescriptor",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.styles.styleable.StyleableObject",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.workbook._writer.WorkbookWriter",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.workbook.child._WorkbookChild",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.workbook.workbook.Workbook",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet._read_only.ReadOnlyWorksheet",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet._reader.WorkSheetParser",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet._reader.WorksheetReader",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet._writer.WorksheetWriter",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.copier.WorksheetCopy",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.formula.ArrayFormula",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.formula.DataTableFormula",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.writer.excel.ExcelWriter",
    "typeshed.typeshed.stubs.opentracing.opentracing.mocktracer.span.LogData",
    "typeshed.typeshed.stubs.opentracing.opentracing.scope.Scope",
    "typeshed.typeshed.stubs.opentracing.opentracing.scope_manager.ScopeManager",
    "typeshed.typeshed.stubs.opentracing.opentracing.scope_managers.tornado.ThreadSafeStackContext",
    "typeshed.typeshed.stubs.opentracing.opentracing.span.Span",
    "typeshed.typeshed.stubs.opentracing.opentracing.tracer.Tracer",
    "typeshed.typeshed.stubs.paho-mqtt.paho.mqtt.client.Client",
    "typeshed.typeshed.stubs.paho-mqtt.paho.mqtt.client.MQTTMessage",
    "typeshed.typeshed.stubs.paho-mqtt.paho.mqtt.client.MQTTMessageInfo",
    "typeshed.typeshed.stubs.paho-mqtt.paho.mqtt.client.WebsocketWrapper",
    "typeshed.typeshed.stubs.paho-mqtt.paho.mqtt.matcher.MQTTMatcher",
    "typeshed.typeshed.stubs.paho-mqtt.paho.mqtt.properties.Properties",
    "typeshed.typeshed.stubs.paho-mqtt.paho.mqtt.reasoncodes.ReasonCodes",
    "typeshed.typeshed.stubs.paho-mqtt.paho.mqtt.subscribeoptions.SubscribeOptions",
    "typeshed.typeshed.stubs.paramiko.paramiko.agent.AgentClientProxy",
    "typeshed.typeshed.stubs.paramiko.paramiko.agent.AgentRequestHandler",
    "typeshed.typeshed.stubs.paramiko.paramiko.agent.AgentSSH",
    "typeshed.typeshed.stubs.paramiko.paramiko.auth_handler.AuthHandler",
    "typeshed.typeshed.stubs.paramiko.paramiko.auth_handler.GssapiWithMicAuthHandler",
    "typeshed.typeshed.stubs.paramiko.paramiko.auth_strategy.AuthSource",
    "typeshed.typeshed.stubs.paramiko.paramiko.auth_strategy.AuthStrategy",
    "typeshed.typeshed.stubs.paramiko.paramiko.ber.BER",
    "typeshed.typeshed.stubs.paramiko.paramiko.compress.ZlibCompressor",
    "typeshed.typeshed.stubs.paramiko.paramiko.compress.ZlibDecompressor",
    "typeshed.typeshed.stubs.paramiko.paramiko.config.LazyFqdn",
    "typeshed.typeshed.stubs.paramiko.paramiko.config.SSHConfig",
    "typeshed.typeshed.stubs.paramiko.paramiko.ecdsakey._ECDSACurve",
    "typeshed.typeshed.stubs.paramiko.paramiko.ecdsakey._ECDSACurveSet",
    "typeshed.typeshed.stubs.paramiko.paramiko.hostkeys.HostKeyEntry",
    "typeshed.typeshed.stubs.paramiko.paramiko.kex_curve25519.KexCurve25519",
    "typeshed.typeshed.stubs.paramiko.paramiko.kex_ecdh_nist.KexNistp256",
    "typeshed.typeshed.stubs.paramiko.paramiko.kex_gex.KexGex",
    "typeshed.typeshed.stubs.paramiko.paramiko.kex_group1.KexGroup1",
    "typeshed.typeshed.stubs.paramiko.paramiko.kex_gss.KexGSSGex",
    "typeshed.typeshed.stubs.paramiko.paramiko.kex_gss.KexGSSGroup1",
    "typeshed.typeshed.stubs.paramiko.paramiko.kex_gss.NullHostKey",
    "typeshed.typeshed.stubs.paramiko.paramiko.message.Message",
    "typeshed.typeshed.stubs.paramiko.paramiko.packet.Packetizer",
    "typeshed.typeshed.stubs.paramiko.paramiko.pipe.OrPipe",
    "typeshed.typeshed.stubs.paramiko.paramiko.pipe.PosixPipe",
    "typeshed.typeshed.stubs.paramiko.paramiko.pipe.WindowsPipe",
    "typeshed.typeshed.stubs.paramiko.paramiko.pkey.PKey",
    "typeshed.typeshed.stubs.paramiko.paramiko.pkey.PublicBlob",
    "typeshed.typeshed.stubs.paramiko.paramiko.primes.ModulusPack",
    "typeshed.typeshed.stubs.paramiko.paramiko.server.InteractiveQuery",
    "typeshed.typeshed.stubs.paramiko.paramiko.sftp.BaseSFTP",
    "typeshed.typeshed.stubs.paramiko.paramiko.sftp_attr.SFTPAttributes",
    "typeshed.typeshed.stubs.paramiko.paramiko.sftp_si.SFTPServerInterface",
    "typeshed.typeshed.stubs.paramiko.paramiko.ssh_gss._SSH_GSSAuth",
    "typeshed.typeshed.stubs.paramiko.paramiko.transport.ChannelMap",
    "typeshed.typeshed.stubs.paramiko.paramiko.transport.SecurityOptions",
    "typeshed.typeshed.stubs.parsimonious.parsimonious.nodes.Node",
    "typeshed.typeshed.stubs.passlib.passlib.apache._CommonFile",
    "typeshed.typeshed.stubs.passlib.passlib.context.CryptContext",
    "typeshed.typeshed.stubs.passlib.passlib.context.CryptPolicy",
    "typeshed.typeshed.stubs.passlib.passlib.crypto._blowfish.base.BlowfishEngine",
    "typeshed.typeshed.stubs.passlib.passlib.crypto._md4.md4",
    "typeshed.typeshed.stubs.passlib.passlib.crypto.scrypt._builtin.ScryptEngine",
    "typeshed.typeshed.stubs.passlib.passlib.ext.django.utils.DjangoTranslator",
    "typeshed.typeshed.stubs.passlib.passlib.ext.django.utils.ProxyProperty",
    "typeshed.typeshed.stubs.passlib.passlib.pwd.SequenceGenerator",
    "typeshed.typeshed.stubs.passlib.passlib.totp.AppWallet",
    "typeshed.typeshed.stubs.passlib.passlib.totp.TOTP",
    "typeshed.typeshed.stubs.passlib.passlib.utils.binary.Base64Engine",
    "typeshed.typeshed.stubs.passlib.passlib.utils.decor.classproperty",
    "typeshed.typeshed.stubs.passlib.passlib.utils.decor.hybrid_method",
    "typeshed.typeshed.stubs.passlib.passlib.utils.decor.memoized_property",
    "typeshed.typeshed.stubs.passlib.passlib.utils.handlers.PrefixWrapper",
    "typeshed.typeshed.stubs.passpy.passpy.store.Store",
    "typeshed.typeshed.stubs.peewee.peewee.AliasManager",
    "typeshed.typeshed.stubs.peewee.peewee.BackrefAccessor",
    "typeshed.typeshed.stubs.peewee.peewee.BigBitFieldData",
    "typeshed.typeshed.stubs.peewee.peewee.ColumnFactory",
    "typeshed.typeshed.stubs.peewee.peewee.Context",
    "typeshed.typeshed.stubs.peewee.peewee.CursorWrapper",
    "typeshed.typeshed.stubs.peewee.peewee.DeferredThroughModel",
    "typeshed.typeshed.stubs.peewee.peewee.EntityFactory",
    "typeshed.typeshed.stubs.peewee.peewee.ExceptionWrapper",
    "typeshed.typeshed.stubs.peewee.peewee.FieldAccessor",
    "typeshed.typeshed.stubs.peewee.peewee.Metadata",
    "typeshed.typeshed.stubs.peewee.peewee.Model",
    "typeshed.typeshed.stubs.peewee.peewee.ObjectIdAccessor",
    "typeshed.typeshed.stubs.peewee.peewee.Proxy",
    "typeshed.typeshed.stubs.peewee.peewee.ResultIterator",
    "typeshed.typeshed.stubs.peewee.peewee.SchemaManager",
    "typeshed.typeshed.stubs.peewee.peewee._ConnectionState",
    "typeshed.typeshed.stubs.peewee.peewee._HashableSource",
    "typeshed.typeshed.stubs.peewee.peewee._ModelQueryHelper",
    "typeshed.typeshed.stubs.peewee.peewee._SortedFieldList",
    "typeshed.typeshed.stubs.pep8-naming.pep8ext_naming.NamingChecker",
    "typeshed.typeshed.stubs.pexpect.pexpect.FSM.FSM",
    "typeshed.typeshed.stubs.pexpect.pexpect.expect.Expecter",
    "typeshed.typeshed.stubs.pexpect.pexpect.expect.searcher_re",
    "typeshed.typeshed.stubs.pexpect.pexpect.expect.searcher_string",
    "typeshed.typeshed.stubs.pexpect.pexpect.pxssh.pxssh",
    "typeshed.typeshed.stubs.pexpect.pexpect.replwrap.REPLWrapper",
    "typeshed.typeshed.stubs.pexpect.pexpect.screen.screen",
    "typeshed.typeshed.stubs.pexpect.pexpect.spawnbase.SpawnBase",
    "typeshed.typeshed.stubs.pika.pika.adapters.blocking_connection.BlockingChannel",
    "typeshed.typeshed.stubs.pika.pika.adapters.blocking_connection.BlockingConnection",
    "typeshed.typeshed.stubs.pika.pika.adapters.blocking_connection.ReturnedMessage",
    "typeshed.typeshed.stubs.pika.pika.adapters.blocking_connection._CallbackResult",
    "typeshed.typeshed.stubs.pika.pika.adapters.blocking_connection._ConnectionBlockedUnblockedEvtBase",
    "typeshed.typeshed.stubs.pika.pika.adapters.blocking_connection._ConsumerInfo",
    "typeshed.typeshed.stubs.pika.pika.adapters.blocking_connection._IoloopTimerContext",
    "typeshed.typeshed.stubs.pika.pika.adapters.blocking_connection._QueueConsumerGeneratorInfo",
    "typeshed.typeshed.stubs.pika.pika.adapters.blocking_connection._TimerEvt",
    "typeshed.typeshed.stubs.pika.pika.adapters.gevent_connection._GeventAddressResolver",
    "typeshed.typeshed.stubs.pika.pika.adapters.gevent_connection._TSafeCallbackQueue",
    "typeshed.typeshed.stubs.pika.pika.adapters.select_connection._Timeout",
    "typeshed.typeshed.stubs.pika.pika.adapters.select_connection._Timer",
    "typeshed.typeshed.stubs.pika.pika.adapters.twisted_connection.TwistedChannel",
    "typeshed.typeshed.stubs.pika.pika.adapters.twisted_connection.TwistedProtocolConnection",
    "typeshed.typeshed.stubs.pika.pika.adapters.utils.connection_workflow.AMQPConnector",
    "typeshed.typeshed.stubs.pika.pika.adapters.utils.io_services_utils._AsyncSocketConnector",
    "typeshed.typeshed.stubs.pika.pika.adapters.utils.io_services_utils._AsyncStreamConnector",
    "typeshed.typeshed.stubs.pika.pika.adapters.utils.selector_ioloop_adapter._AddressResolver",
    "typeshed.typeshed.stubs.pika.pika.adapters.utils.selector_ioloop_adapter._FileDescriptorCallbacks",
    "typeshed.typeshed.stubs.pika.pika.callback.CallbackManager",
    "typeshed.typeshed.stubs.pika.pika.channel.Channel",
    "typeshed.typeshed.stubs.pika.pika.channel.ContentFrameAssembler",
    "typeshed.typeshed.stubs.pika.pika.connection.Parameters",
    "typeshed.typeshed.stubs.pika.pika.connection.SSLOptions",
    "typeshed.typeshed.stubs.pika.pika.credentials.ExternalCredentials",
    "typeshed.typeshed.stubs.pika.pika.credentials.PlainCredentials",
    "typeshed.typeshed.stubs.pika.pika.heartbeat.HeartbeatChecker",
    "typeshed.typeshed.stubs.pluggy.pluggy._hooks.HookImpl",
    "typeshed.typeshed.stubs.pluggy.pluggy._hooks.HookSpec",
    "typeshed.typeshed.stubs.pluggy.pluggy._hooks.HookimplMarker",
    "typeshed.typeshed.stubs.pluggy.pluggy._hooks.HookspecMarker",
    "typeshed.typeshed.stubs.pluggy.pluggy._hooks._HookCaller",
    "typeshed.typeshed.stubs.pluggy.pluggy._manager.DistFacade",
    "typeshed.typeshed.stubs.pluggy.pluggy._manager.PluginManager",
    "typeshed.typeshed.stubs.pluggy.pluggy._tracing.TagTracer",
    "typeshed.typeshed.stubs.pluggy.pluggy._tracing.TagTracerSub",
    "typeshed.typeshed.stubs.polib.polib._BaseEntry",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor.DescriptorBase",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor.OneofDescriptor",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor_pool.DescriptorPool",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.internal.well_known_types._FieldMaskTree",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.message.Message",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.message_factory.MessageFactory",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.text_format.TextWriter",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.text_format.Tokenizer",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.text_format._Parser",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.text_format._Printer",
    "typeshed.typeshed.stubs.psutil.psutil.Process",
    "typeshed.typeshed.stubs.psutil.psutil._common._WrapNumbers",
    "typeshed.typeshed.stubs.psutil.psutil._psaix.Process",
    "typeshed.typeshed.stubs.psutil.psutil._psbsd.Process",
    "typeshed.typeshed.stubs.psutil.psutil._pslinux.Connections",
    "typeshed.typeshed.stubs.psutil.psutil._pslinux.Process",
    "typeshed.typeshed.stubs.psutil.psutil._pslinux.RootFsDeviceFinder",
    "typeshed.typeshed.stubs.psutil.psutil._psosx.Process",
    "typeshed.typeshed.stubs.psutil.psutil._pssunos.Process",
    "typeshed.typeshed.stubs.psutil.psutil._pswindows.Process",
    "typeshed.typeshed.stubs.psutil.psutil._pswindows.WindowsService",
    "typeshed.typeshed.stubs.psycopg2.psycopg2._json.Json",
    "typeshed.typeshed.stubs.psycopg2.psycopg2._psycopg.AsIs",
    "typeshed.typeshed.stubs.psycopg2.psycopg2._psycopg.Binary",
    "typeshed.typeshed.stubs.psycopg2.psycopg2._psycopg.Boolean",
    "typeshed.typeshed.stubs.psycopg2.psycopg2._psycopg.Column",
    "typeshed.typeshed.stubs.psycopg2.psycopg2._psycopg.ConnectionInfo",
    "typeshed.typeshed.stubs.psycopg2.psycopg2._psycopg.Decimal",
    "typeshed.typeshed.stubs.psycopg2.psycopg2._psycopg.Diagnostics",
    "typeshed.typeshed.stubs.psycopg2.psycopg2._psycopg.Float",
    "typeshed.typeshed.stubs.psycopg2.psycopg2._psycopg.ISQLQuote",
    "typeshed.typeshed.stubs.psycopg2.psycopg2._psycopg.Int",
    "typeshed.typeshed.stubs.psycopg2.psycopg2._psycopg.List",
    "typeshed.typeshed.stubs.psycopg2.psycopg2._psycopg.Notify",
    "typeshed.typeshed.stubs.psycopg2.psycopg2._psycopg.QuotedString",
    "typeshed.typeshed.stubs.psycopg2.psycopg2._psycopg.ReplicationMessage",
    "typeshed.typeshed.stubs.psycopg2.psycopg2._psycopg.Xid",
    "typeshed.typeshed.stubs.psycopg2.psycopg2._psycopg._datetime",
    "typeshed.typeshed.stubs.psycopg2.psycopg2._psycopg.connection",
    "typeshed.typeshed.stubs.psycopg2.psycopg2._psycopg.cursor",
    "typeshed.typeshed.stubs.psycopg2.psycopg2._psycopg.lobject",
    "typeshed.typeshed.stubs.psycopg2.psycopg2._range.Range",
    "typeshed.typeshed.stubs.psycopg2.psycopg2._range.RangeAdapter",
    "typeshed.typeshed.stubs.psycopg2.psycopg2._range.RangeCaster",
    "typeshed.typeshed.stubs.psycopg2.psycopg2.extensions.NoneAdapter",
    "typeshed.typeshed.stubs.psycopg2.psycopg2.extensions.SQL_IN",
    "typeshed.typeshed.stubs.psycopg2.psycopg2.extras.CompositeCaster",
    "typeshed.typeshed.stubs.psycopg2.psycopg2.extras.HstoreAdapter",
    "typeshed.typeshed.stubs.psycopg2.psycopg2.extras.Inet",
    "typeshed.typeshed.stubs.psycopg2.psycopg2.extras.UUID_adapter",
    "typeshed.typeshed.stubs.psycopg2.psycopg2.pool.AbstractConnectionPool",
    "typeshed.typeshed.stubs.psycopg2.psycopg2.sql.Composable",
    "typeshed.typeshed.stubs.pyOpenSSL.OpenSSL.SSL.Connection",
    "typeshed.typeshed.stubs.pyOpenSSL.OpenSSL.SSL.Context",
    "typeshed.typeshed.stubs.pyOpenSSL.OpenSSL.crypto.CRL",
    "typeshed.typeshed.stubs.pyOpenSSL.OpenSSL.crypto.NetscapeSPKI",
    "typeshed.typeshed.stubs.pyOpenSSL.OpenSSL.crypto.PKCS12",
    "typeshed.typeshed.stubs.pyOpenSSL.OpenSSL.crypto.PKey",
    "typeshed.typeshed.stubs.pyOpenSSL.OpenSSL.crypto.Revoked",
    "typeshed.typeshed.stubs.pyOpenSSL.OpenSSL.crypto.X509",
    "typeshed.typeshed.stubs.pyOpenSSL.OpenSSL.crypto.X509Extension",
    "typeshed.typeshed.stubs.pyOpenSSL.OpenSSL.crypto.X509Name",
    "typeshed.typeshed.stubs.pyOpenSSL.OpenSSL.crypto.X509Req",
    "typeshed.typeshed.stubs.pyOpenSSL.OpenSSL.crypto.X509Store",
    "typeshed.typeshed.stubs.pyOpenSSL.OpenSSL.crypto.X509StoreContext",
    "typeshed.typeshed.stubs.pyOpenSSL.OpenSSL.crypto._EllipticCurve",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.codec.ber.decoder.SingleItemDecoder",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.codec.ber.decoder.StreamingDecoder",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.codec.ber.encoder.Encoder",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.codec.ber.encoder.SingleItemEncoder",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.codec.native.decoder.Decoder",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.codec.native.decoder.SingleItemDecoder",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.codec.native.encoder.Encoder",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.codec.native.encoder.SingleItemEncoder",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.debug.Debug",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.debug.Printer",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.debug.Scope",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.constraint.AbstractConstraint",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.namedtype.NamedType",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.namedtype.NamedTypes",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.namedtype.NamedTypes.PostponedError",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.namedval.NamedValues",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.opentype.OpenType",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.tag.Tag",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.tag.TagSet",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.tagmap.TagMap",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.univ.SequenceAndSetBase.DynamicNames",
    "typeshed.typeshed.stubs.pyaudio.pyaudio.PaMacCoreStreamInfo",
    "typeshed.typeshed.stubs.pyaudio.pyaudio.PyAudio",
    "typeshed.typeshed.stubs.pyaudio.pyaudio.Stream",
    "typeshed.typeshed.stubs.pycocotools.pycocotools.coco.COCO",
    "typeshed.typeshed.stubs.pycocotools.pycocotools.cocoeval.COCOeval",
    "typeshed.typeshed.stubs.pycocotools.pycocotools.cocoeval.Params",
    "typeshed.typeshed.stubs.pyflakes.pyflakes.checker.Binding",
    "typeshed.typeshed.stubs.pyflakes.pyflakes.checker.Checker",
    "typeshed.typeshed.stubs.pyflakes.pyflakes.checker.VariableKey",
    "typeshed.typeshed.stubs.pyflakes.pyflakes.messages.Message",
    "typeshed.typeshed.stubs.pyflakes.pyflakes.reporter.Reporter",
    "typeshed.typeshed.stubs.pyinstaller.PyInstaller.building.api.MERGE",
    "typeshed.typeshed.stubs.pyinstaller.PyInstaller.building.datastruct.Target",
    "typeshed.typeshed.stubs.pyinstaller.PyInstaller.depend.analysis.PyiModuleGraph",
    "typeshed.typeshed.stubs.pyinstaller.PyInstaller.depend.imphookapi.PostGraphAPI",
    "typeshed.typeshed.stubs.pyinstaller.PyInstaller.depend.imphookapi.PreFindModulePathAPI",
    "typeshed.typeshed.stubs.pyinstaller.PyInstaller.depend.imphookapi.PreSafeImportModuleAPI",
    "typeshed.typeshed.stubs.pyinstaller.PyInstaller.isolated._parent.Python",
    "typeshed.typeshed.stubs.pyinstaller.PyInstaller.lib.modulegraph.modulegraph.Node",
    "typeshed.typeshed.stubs.pyinstaller.PyInstaller.utils.hooks.conda.Distribution",
    "typeshed.typeshed.stubs.pyinstaller.PyInstaller.utils.win32.versioninfo.FixedFileInfo",
    "typeshed.typeshed.stubs.pyinstaller.PyInstaller.utils.win32.versioninfo.VSVersionInfo",
    "typeshed.typeshed.stubs.pyjks.jks.util.AbstractKeystore",
    "typeshed.typeshed.stubs.pyjks.jks.util.AbstractKeystoreEntry",
    "typeshed.typeshed.stubs.pynput.pynput.keyboard.HotKey",
    "typeshed.typeshed.stubs.pynput.pynput.keyboard._base.Controller",
    "typeshed.typeshed.stubs.pynput.pynput.keyboard._base.KeyCode",
    "typeshed.typeshed.stubs.pynput.pynput.mouse._base.Controller",
    "typeshed.typeshed.stubs.pyserial.serial.rfc2217.PortManager",
    "typeshed.typeshed.stubs.pyserial.serial.rfc2217.TelnetOption",
    "typeshed.typeshed.stubs.pyserial.serial.rfc2217.TelnetSubnegotiation",
    "typeshed.typeshed.stubs.pyserial.serial.rs485.RS485Settings",
    "typeshed.typeshed.stubs.pyserial.serial.serialutil.Timeout",
    "typeshed.typeshed.stubs.pyserial.serial.tools.list_ports_common.ListPortInfo",
    "typeshed.typeshed.stubs.pyserial.serial.tools.miniterm.ConsoleBase",
    "typeshed.typeshed.stubs.pyserial.serial.tools.miniterm.Miniterm",
    "typeshed.typeshed.stubs.pysftp.pysftp.CnOpts",
    "typeshed.typeshed.stubs.pysftp.pysftp.Connection",
    "typeshed.typeshed.stubs.pysftp.pysftp.helpers.WTCallbacks",
    "typeshed.typeshed.stubs.pytest-lazy-fixture.pytest_lazyfixture.LazyFixture",
    "typeshed.typeshed.stubs.python-crontab.cronlog.LogReader",
    "typeshed.typeshed.stubs.python-crontab.cronlog.ProgramLog",
    "typeshed.typeshed.stubs.python-crontab.crontab.Also",
    "typeshed.typeshed.stubs.python-crontab.crontab.CronItem",
    "typeshed.typeshed.stubs.python-crontab.crontab.CronRange",
    "typeshed.typeshed.stubs.python-crontab.crontab.CronSlice",
    "typeshed.typeshed.stubs.python-crontab.crontab.CronTab",
    "typeshed.typeshed.stubs.python-crontab.crontab.CronValue",
    "typeshed.typeshed.stubs.python-crontab.crontab.Every",
    "typeshed.typeshed.stubs.python-crontab.crontab.Process",
    "typeshed.typeshed.stubs.python-dateutil.@tests.test_cases.check_relativedelta.Calendar",
    "typeshed.typeshed.stubs.python-dateutil.dateutil._common.weekday",
    "typeshed.typeshed.stubs.python-dateutil.dateutil.parser.isoparser.isoparser",
    "typeshed.typeshed.stubs.python-dateutil.dateutil.parser.parser",
    "typeshed.typeshed.stubs.python-dateutil.dateutil.parser.parserinfo",
    "typeshed.typeshed.stubs.python-dateutil.dateutil.relativedelta.relativedelta",
    "typeshed.typeshed.stubs.python-dateutil.dateutil.rrule._iterinfo",
    "typeshed.typeshed.stubs.python-dateutil.dateutil.rrule.rrulebase",
    "typeshed.typeshed.stubs.python-dateutil.dateutil.rrule.rruleset._genitem",
    "typeshed.typeshed.stubs.python-dateutil.dateutil.tz.tz._ttinfo",
    "typeshed.typeshed.stubs.python-dateutil.dateutil.tz.tz.tzical",
    "typeshed.typeshed.stubs.python-dateutil.dateutil.zoneinfo.ZoneInfoFile",
    "typeshed.typeshed.stubs.python-gflags.gflags.Flag",
    "typeshed.typeshed.stubs.python-jose.jose.backends.base.Key",
    "typeshed.typeshed.stubs.python-nmap.nmap.nmap.PortScanner",
    "typeshed.typeshed.stubs.python-nmap.nmap.nmap.PortScannerAsync",
    "typeshed.typeshed.stubs.python-xlib.Xlib.display.Display",
    "typeshed.typeshed.stubs.python-xlib.Xlib.error.CatchError",
    "typeshed.typeshed.stubs.python-xlib.Xlib.ext.xinput.ButtonMask",
    "typeshed.typeshed.stubs.python-xlib.Xlib.protocol.display.Display",
    "typeshed.typeshed.stubs.python-xlib.Xlib.protocol.display.bytesview",
    "typeshed.typeshed.stubs.python-xlib.Xlib.protocol.rq.Request",
    "typeshed.typeshed.stubs.python-xlib.Xlib.protocol.rq.ResourceObj",
    "typeshed.typeshed.stubs.python-xlib.Xlib.protocol.rq.ScalarObj",
    "typeshed.typeshed.stubs.python-xlib.Xlib.protocol.rq.Struct",
    "typeshed.typeshed.stubs.python-xlib.Xlib.rdb.ResourceDB",
    "typeshed.typeshed.stubs.python-xlib.Xlib.xauth.Xauthority",
    "typeshed.typeshed.stubs.python-xlib.Xlib.xobject.resource.Resource",
    "typeshed.typeshed.stubs.pywin32.win32.lib.pywintypes.HANDLEType",
    "typeshed.typeshed.stubs.pywin32.win32.lib.win32gui_struct.DEV_BROADCAST_INFO",
    "typeshed.typeshed.stubs.pywin32.win32.lib.win32pdhquery.BaseQuery",
    "typeshed.typeshed.stubs.pywin32.win32.lib.win32serviceutil.ServiceFramework",
    "typeshed.typeshed.stubs.pywin32.win32.lib.win32timezone._SimpleStruct",
    "typeshed.typeshed.stubs.pywin32.win32com.client.CoClassBaseClass",
    "typeshed.typeshed.stubs.pywin32.win32com.client.DispatchBaseClass",
    "typeshed.typeshed.stubs.pywin32.win32com.client.EventsProxy",
    "typeshed.typeshed.stubs.pywin32.win32com.client.VARIANT",
    "typeshed.typeshed.stubs.pywin32.win32com.client.build.OleItem",
    "typeshed.typeshed.stubs.pywin32.win32com.client.dynamic.CDispatch",
    "typeshed.typeshed.stubs.pywin32.win32com.server.dispatcher.DispatcherBase",
    "typeshed.typeshed.stubs.pywin32.win32com.server.util.Collection",
    "typeshed.typeshed.stubs.pywin32.win32com.server.util.FileStream",
    "typeshed.typeshed.stubs.pywin32.win32com.server.util.ListEnumerator",
    "typeshed.typeshed.stubs.pywin32.win32com.universal.Arg",
    "typeshed.typeshed.stubs.pywin32.win32com.universal.Definition",
    "typeshed.typeshed.stubs.pywin32.win32com.universal.Method",
    "typeshed.typeshed.stubs.pywin32.win32comext.adsi.ADSIEnumerator",
    "typeshed.typeshed.stubs.pywin32.win32comext.axdebug.adb.OutputReflector",
    "typeshed.typeshed.stubs.pywin32.win32comext.axdebug.codecontainer.SourceCodeContainer",
    "typeshed.typeshed.stubs.pywin32.win32comext.axdebug.debugger.AXDebugger",
    "typeshed.typeshed.stubs.pywin32.win32comext.axdebug.debugger.ModuleTreeNode",
    "typeshed.typeshed.stubs.pywin32.win32comext.axdebug.expressions.DebugProperty",
    "typeshed.typeshed.stubs.pywin32.win32comext.axdebug.stackframe.DebugStackFrameSniffer",
    "typeshed.typeshed.stubs.pywin32.win32comext.axdebug.stackframe.StackFrameDebugProperty",
    "typeshed.typeshed.stubs.pywin32.win32comext.axscript.server.axsite.AXEngine",
    "typeshed.typeshed.stubs.pywin32.win32comext.axscript.server.axsite.AXSite",
    "typeshed.typeshed.stubs.pywin32.win32comext.axscript.server.error.Exception",
    "typeshed.typeshed.stubs.pyxdg.xdg.DesktopEntry.DesktopEntry",
    "typeshed.typeshed.stubs.pyxdg.xdg.IconTheme.IconData",
    "typeshed.typeshed.stubs.pyxdg.xdg.IconTheme.IconTheme",
    "typeshed.typeshed.stubs.pyxdg.xdg.IniFile.IniFile",
    "typeshed.typeshed.stubs.pyxdg.xdg.Menu.Header",
    "typeshed.typeshed.stubs.pyxdg.xdg.Menu.Layout",
    "typeshed.typeshed.stubs.pyxdg.xdg.Menu.Menu",
    "typeshed.typeshed.stubs.pyxdg.xdg.Menu.MenuEntry",
    "typeshed.typeshed.stubs.pyxdg.xdg.Menu.MenuEntryCache",
    "typeshed.typeshed.stubs.pyxdg.xdg.Menu.Move",
    "typeshed.typeshed.stubs.pyxdg.xdg.Menu.Rule",
    "typeshed.typeshed.stubs.pyxdg.xdg.Menu.Separator",
    "typeshed.typeshed.stubs.pyxdg.xdg.Menu.XMLMenuBuilder",
    "typeshed.typeshed.stubs.pyxdg.xdg.MenuEditor.MenuEditor",
    "typeshed.typeshed.stubs.pyxdg.xdg.Mime.GlobDB",
    "typeshed.typeshed.stubs.pyxdg.xdg.Mime.MagicDB",
    "typeshed.typeshed.stubs.pyxdg.xdg.Mime.MagicMatchAny",
    "typeshed.typeshed.stubs.pyxdg.xdg.Mime.MagicRule",
    "typeshed.typeshed.stubs.pyxdg.xdg.RecentFiles.RecentFile",
    "typeshed.typeshed.stubs.pyxdg.xdg.RecentFiles.RecentFiles",
    "typeshed.typeshed.stubs.qrcode.qrcode.base.Polynomial",
    "typeshed.typeshed.stubs.qrcode.qrcode.image.base.BaseImage",
    "typeshed.typeshed.stubs.qrcode.qrcode.image.styledpil.StyledPilImage",
    "typeshed.typeshed.stubs.qrcode.qrcode.image.styles.moduledrawers.svg.BaseSvgQRModuleDrawer",
    "typeshed.typeshed.stubs.qrcode.qrcode.image.svg.SvgFragmentImage",
    "typeshed.typeshed.stubs.qrcode.qrcode.util.BitBuffer",
    "typeshed.typeshed.stubs.qrcode.qrcode.util.QRData",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Monitor",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.PubSub",
    "typeshed.typeshed.stubs.redis.redis.asyncio.cluster.ClusterNode",
    "typeshed.typeshed.stubs.redis.redis.asyncio.cluster.NodesManager",
    "typeshed.typeshed.stubs.redis.redis.asyncio.cluster.PipelineCommand",
    "typeshed.typeshed.stubs.redis.redis.asyncio.connection.BaseParser",
    "typeshed.typeshed.stubs.redis.redis.asyncio.connection.Connection",
    "typeshed.typeshed.stubs.redis.redis.asyncio.connection.ConnectionPool",
    "typeshed.typeshed.stubs.redis.redis.asyncio.connection.Encoder",
    "typeshed.typeshed.stubs.redis.redis.asyncio.connection.RedisSSLContext",
    "typeshed.typeshed.stubs.redis.redis.asyncio.lock.Lock",
    "typeshed.typeshed.stubs.redis.redis.asyncio.retry.Retry",
    "typeshed.typeshed.stubs.redis.redis.client.Monitor",
    "typeshed.typeshed.stubs.redis.redis.client.PubSub",
    "typeshed.typeshed.stubs.redis.redis.cluster.ClusterNode",
    "typeshed.typeshed.stubs.redis.redis.cluster.LoadBalancer",
    "typeshed.typeshed.stubs.redis.redis.cluster.NodeCommands",
    "typeshed.typeshed.stubs.redis.redis.cluster.NodesManager",
    "typeshed.typeshed.stubs.redis.redis.cluster.PipelineCommand",
    "typeshed.typeshed.stubs.redis.redis.commands.bf.info.BFInfo",
    "typeshed.typeshed.stubs.redis.redis.commands.bf.info.CFInfo",
    "typeshed.typeshed.stubs.redis.redis.commands.bf.info.CMSInfo",
    "typeshed.typeshed.stubs.redis.redis.commands.bf.info.TDigestInfo",
    "typeshed.typeshed.stubs.redis.redis.commands.bf.info.TopKInfo",
    "typeshed.typeshed.stubs.redis.redis.commands.core.AsyncScript",
    "typeshed.typeshed.stubs.redis.redis.commands.core.BitFieldOperation",
    "typeshed.typeshed.stubs.redis.redis.commands.core.Script",
    "typeshed.typeshed.stubs.redis.redis.commands.graph.edge.Edge",
    "typeshed.typeshed.stubs.redis.redis.commands.graph.node.Node",
    "typeshed.typeshed.stubs.redis.redis.commands.graph.path.Path",
    "typeshed.typeshed.stubs.redis.redis.commands.graph.query_result.QueryResult",
    "typeshed.typeshed.stubs.redis.redis.commands.json.path.Path",
    "typeshed.typeshed.stubs.redis.redis.commands.parser.CommandsParser",
    "typeshed.typeshed.stubs.redis.redis.commands.search.Search.BatchIndexer",
    "typeshed.typeshed.stubs.redis.redis.commands.search.aggregation.AggregateRequest",
    "typeshed.typeshed.stubs.redis.redis.commands.search.aggregation.AggregateResult",
    "typeshed.typeshed.stubs.redis.redis.commands.search.aggregation.Cursor",
    "typeshed.typeshed.stubs.redis.redis.commands.search.aggregation.Limit",
    "typeshed.typeshed.stubs.redis.redis.commands.search.aggregation.Reducer",
    "typeshed.typeshed.stubs.redis.redis.commands.search.aggregation.SortDirection",
    "typeshed.typeshed.stubs.redis.redis.commands.search.query.Filter",
    "typeshed.typeshed.stubs.redis.redis.commands.search.query.Query",
    "typeshed.typeshed.stubs.redis.redis.commands.search.query.SortbyField",
    "typeshed.typeshed.stubs.redis.redis.commands.search.result.Result",
    "typeshed.typeshed.stubs.redis.redis.commands.timeseries.info.TSInfo",
    "typeshed.typeshed.stubs.redis.redis.connection.AbstractConnection",
    "typeshed.typeshed.stubs.redis.redis.connection.ConnectionPool",
    "typeshed.typeshed.stubs.redis.redis.connection.Encoder",
    "typeshed.typeshed.stubs.redis.redis.connection.SocketBuffer",
    "typeshed.typeshed.stubs.redis.redis.lock.Lock",
    "typeshed.typeshed.stubs.redis.redis.ocsp.OCSPVerifier",
    "typeshed.typeshed.stubs.redis.redis.retry.Retry",
    "typeshed.typeshed.stubs.requests.requests.adapters.BaseAdapter",
    "typeshed.typeshed.stubs.requests.requests.cookies.MockRequest",
    "typeshed.typeshed.stubs.requests.requests.cookies.MockResponse",
    "typeshed.typeshed.stubs.requests.requests.models.Response",
    "typeshed.typeshed.stubs.seaborn.seaborn._core.data.PlotData",
    "typeshed.typeshed.stubs.seaborn.seaborn._core.groupby.GroupBy",
    "typeshed.typeshed.stubs.seaborn.seaborn._core.plot.Plot",
    "typeshed.typeshed.stubs.seaborn.seaborn._core.plot.PlotConfig",
    "typeshed.typeshed.stubs.seaborn.seaborn._core.plot.Plotter",
    "typeshed.typeshed.stubs.seaborn.seaborn._core.plot.ThemeConfig",
    "typeshed.typeshed.stubs.seaborn.seaborn._core.properties.Property",
    "typeshed.typeshed.stubs.seaborn.seaborn._core.scales.PseudoAxis",
    "typeshed.typeshed.stubs.seaborn.seaborn._core.subplots.Subplots",
    "typeshed.typeshed.stubs.seaborn.seaborn._marks.base.Mappable",
    "typeshed.typeshed.stubs.seaborn.seaborn.external.docscrape.Reader",
    "typeshed.typeshed.stubs.seaborn.seaborn.external.kde.gaussian_kde",
    "typeshed.typeshed.stubs.seaborn.seaborn.matrix._DendrogramPlotter",
    "typeshed.typeshed.stubs.setuptools.pkg_resources.EntryPoint",
    "typeshed.typeshed.stubs.setuptools.pkg_resources.Environment",
    "typeshed.typeshed.stubs.setuptools.pkg_resources.NullProvider",
    "typeshed.typeshed.stubs.setuptools.pkg_resources.WorkingSet",
    "typeshed.typeshed.stubs.setuptools.pkg_resources._vendor.packaging.markers.Marker",
    "typeshed.typeshed.stubs.setuptools.pkg_resources._vendor.packaging.requirements.Requirement",
    "typeshed.typeshed.stubs.setuptools.setuptools._distutils.ccompiler.CCompiler",
    "typeshed.typeshed.stubs.setuptools.setuptools._distutils.cmd.Command",
    "typeshed.typeshed.stubs.setuptools.setuptools._distutils.dist.Distribution",
    "typeshed.typeshed.stubs.setuptools.setuptools._distutils.dist.DistributionMetadata",
    "typeshed.typeshed.stubs.setuptools.setuptools._distutils.extension.Extension",
    "typeshed.typeshed.stubs.setuptools.setuptools._distutils.filelist.FileList",
    "typeshed.typeshed.stubs.setuptools.setuptools.command.develop.VersionlessRequirement",
    "typeshed.typeshed.stubs.setuptools.setuptools.command.editable_wheel._StaticPth",
    "typeshed.typeshed.stubs.setuptools.setuptools.command.editable_wheel._TopLevelFinder",
    "typeshed.typeshed.stubs.setuptools.setuptools.config.expand.EnsurePackagesDiscovered",
    "typeshed.typeshed.stubs.setuptools.setuptools.config.expand.StaticModule",
    "typeshed.typeshed.stubs.setuptools.setuptools.config.pyprojecttoml._ConfigExpander",
    "typeshed.typeshed.stubs.setuptools.setuptools.depends.Require",
    "typeshed.typeshed.stubs.setuptools.setuptools.discovery.ConfigDiscovery",
    "typeshed.typeshed.stubs.setuptools.setuptools.discovery._Filter",
    "typeshed.typeshed.stubs.setuptools.setuptools.extern.VendorImporter",
    "typeshed.typeshed.stubs.setuptools.setuptools.msvc.EnvironmentInfo",
    "typeshed.typeshed.stubs.setuptools.setuptools.msvc.PlatformInfo",
    "typeshed.typeshed.stubs.setuptools.setuptools.msvc.RegistryInfo",
    "typeshed.typeshed.stubs.setuptools.setuptools.msvc.SystemInfo",
    "typeshed.typeshed.stubs.setuptools.setuptools.package_index.Credential",
    "typeshed.typeshed.stubs.setuptools.setuptools.wheel.Wheel",
    "typeshed.typeshed.stubs.simplejson.simplejson.decoder.JSONDecoder",
    "typeshed.typeshed.stubs.simplejson.simplejson.encoder.JSONEncoder",
    "typeshed.typeshed.stubs.simplejson.simplejson.raw_json.RawJSON",
    "typeshed.typeshed.stubs.six.six._LazyDescr",
    "typeshed.typeshed.stubs.slumber.slumber.serialize.Serializer",
    "typeshed.typeshed.stubs.stripe.stripe.api_requestor.APIRequestor",
    "typeshed.typeshed.stubs.stripe.stripe.http_client.HTTPClient",
    "typeshed.typeshed.stubs.stripe.stripe.multipart_data_generator.MultipartDataGenerator",
    "typeshed.typeshed.stubs.stripe.stripe.request_metrics.RequestMetrics",
    "typeshed.typeshed.stubs.stripe.stripe.stripe_response.StripeResponseBase",
    "typeshed.typeshed.stubs.stripe.stripe.util.class_method_variant",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.GradientTape",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.IndexedSlices",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.Module",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.Operation",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.Tensor",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.TensorShape",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.io.TFRecordOptions",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.io.TFRecordWriter",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.layers.InputSpec",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.optimizers.legacy.Optimizer",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.name_scope",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.python.feature_column.feature_column_v2.SharedEmbeddingColumnCreator",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.sparse.SparseTensor",
    "typeshed.typeshed.stubs.toml.toml.decoder.CommentValue",
    "typeshed.typeshed.stubs.tqdm.tqdm.dask._Callback",
    "typeshed.typeshed.stubs.tqdm.tqdm.keras._Callback",
    "typeshed.typeshed.stubs.tqdm.tqdm.utils.FormatReplace",
    "typeshed.typeshed.stubs.tqdm.tqdm.utils.ObjectWrapper",
    "typeshed.typeshed.stubs.tree-sitter.tree_sitter.Language",
    "typeshed.typeshed.stubs.tree-sitter.tree_sitter.binding.Parser",
    "typeshed.typeshed.stubs.ttkthemes.ttkthemes._widget.ThemedWidget",
    "typeshed.typeshed.stubs.uWSGI.uwsgi.SymbolsZipImporter",
    "typeshed.typeshed.stubs.uWSGI.uwsgi.ZipImporter",
    "typeshed.typeshed.stubs.uWSGI.uwsgidecorators.cron",
    "typeshed.typeshed.stubs.uWSGI.uwsgidecorators.farm",
    "typeshed.typeshed.stubs.uWSGI.uwsgidecorators.farm_loop",
    "typeshed.typeshed.stubs.uWSGI.uwsgidecorators.filemon",
    "typeshed.typeshed.stubs.uWSGI.uwsgidecorators.harakiri",
    "typeshed.typeshed.stubs.uWSGI.uwsgidecorators.mule",
    "typeshed.typeshed.stubs.uWSGI.uwsgidecorators.mule_brain",
    "typeshed.typeshed.stubs.uWSGI.uwsgidecorators.mulemsg",
    "typeshed.typeshed.stubs.uWSGI.uwsgidecorators.mulemsg_loop",
    "typeshed.typeshed.stubs.uWSGI.uwsgidecorators.rbtimer",
    "typeshed.typeshed.stubs.uWSGI.uwsgidecorators.rpc",
    "typeshed.typeshed.stubs.uWSGI.uwsgidecorators.signal",
    "typeshed.typeshed.stubs.uWSGI.uwsgidecorators.timer",
    "typeshed.typeshed.stubs.untangle.untangle.Element",
    "typeshed.typeshed.stubs.vobject.vobject.base.VBase",
    "typeshed.typeshed.stubs.vobject.vobject.vcard.Address",
    "typeshed.typeshed.stubs.vobject.vobject.vcard.Name",
    "typeshed.typeshed.stubs.waitress.waitress.adjustments.Adjustments",
    "typeshed.typeshed.stubs.waitress.waitress.buffers.FileBasedBuffer",
    "typeshed.typeshed.stubs.waitress.waitress.buffers.OverflowableBuffer",
    "typeshed.typeshed.stubs.waitress.waitress.parser.HTTPRequestParser",
    "typeshed.typeshed.stubs.waitress.waitress.receiver.ChunkedReceiver",
    "typeshed.typeshed.stubs.waitress.waitress.receiver.FixedStreamReceiver",
    "typeshed.typeshed.stubs.waitress.waitress.server.MultiSocketServer",
    "typeshed.typeshed.stubs.waitress.waitress.task.Task",
    "typeshed.typeshed.stubs.waitress.waitress.utilities.Error",
    "typeshed.typeshed.stubs.waitress.waitress.wasyncore.dispatcher",
    "typeshed.typeshed.stubs.waitress.waitress.wasyncore.file_wrapper",
    "typeshed.typeshed.stubs.workalendar.workalendar.core.CalverterMixin",
    "typeshed.typeshed.stubs.workalendar.workalendar.core.CoreCalendar",
    "typeshed.typeshed.stubs.workalendar.workalendar.registry.IsoRegistry",
    "typing.ForwardRef",
    "typing.TypeVar",
    "typing_extensions.ParamSpec",
    "typing_extensions.ParamSpecArgs",
    "typing_extensions.ParamSpecKwargs",
    "typing_extensions.TypeVar",
    "typing_extensions.TypeVarTuple",
    "unittest.main.TestProgram",
    "unittest.mock.Base",
    "unittest.mock.MagicMixin",
    "unittest.mock.MagicProxy",
    "unittest.mock._SentinelObject",
    "unittest.mock._SpecState",
    "unittest.mock._patch_dict",
    "unittest.result.TestResult",
    "unittest.runner.TextTestRunner",
    "untangle.Element",
    "urllib.request.AbstractBasicAuthHandler",
    "urllib.request.AbstractDigestAuthHandler",
    "urllib.request.Request",
    "urllib.request.URLopener",
    "urllib.request.ftpwrapper",
    "urllib.robotparser.RobotFileParser",
    "urllib3.connectionpool.ConnectionPool",
    "urllib3.fields.RequestField",
    "urllib3.request.RequestMethods",
    "urllib3.response.MultiDecoder",
    "urllib3.util.retry.Retry",
    "urllib3.util.timeout.Timeout",
    "uuid.UUID",
    "vobject.base.VBase",
    "vobject.vcard.Address",
    "vobject.vcard.Name",
    "waitress.adjustments.Adjustments",
    "waitress.buffers.FileBasedBuffer",
    "waitress.buffers.OverflowableBuffer",
    "waitress.parser.HTTPRequestParser",
    "waitress.receiver.ChunkedReceiver",
    "waitress.receiver.FixedStreamReceiver",
    "waitress.server.MultiSocketServer",
    "waitress.task.Task",
    "waitress.utilities.Error",
    "waitress.wasyncore.dispatcher",
    "waitress.wasyncore.file_wrapper",
    "warnings.WarningMessage",
    "wave.Wave_read",
    "wave.Wave_write",
    "weakref.finalize",
    "webbrowser.BaseBrowser",
    "werkzeug._reloader.ReloaderLoop",
    "werkzeug.datastructures.auth.Authorization",
    "werkzeug.datastructures.auth.WWWAuthenticate",
    "werkzeug.datastructures.file_storage.FileStorage",
    "werkzeug.datastructures.range.ContentRange",
    "werkzeug.datastructures.range.IfRange",
    "werkzeug.datastructures.range.Range",
    "werkzeug.debug.DebuggedApplication",
    "werkzeug.debug._ConsoleFrame",
    "werkzeug.debug.console.Console",
    "werkzeug.debug.console.HTMLStringO",
    "werkzeug.debug.console._ConsoleLoader",
    "werkzeug.debug.repr.DebugReprGenerator",
    "werkzeug.debug.tbtools.DebugTraceback",
    "werkzeug.exceptions.Aborter",
    "werkzeug.formparser.FormDataParser",
    "werkzeug.formparser.MultiPartParser",
    "werkzeug.local.Local",
    "werkzeug.local.LocalManager",
    "werkzeug.local._ProxyLookup",
    "werkzeug.middleware.dispatcher.DispatcherMiddleware",
    "werkzeug.middleware.http_proxy.ProxyMiddleware",
    "werkzeug.middleware.lint.ErrorStream",
    "werkzeug.middleware.lint.GuardedIterator",
    "werkzeug.middleware.lint.GuardedWrite",
    "werkzeug.middleware.lint.InputStream",
    "werkzeug.middleware.lint.LintMiddleware",
    "werkzeug.middleware.profiler.ProfilerMiddleware",
    "werkzeug.middleware.proxy_fix.ProxyFix",
    "werkzeug.middleware.shared_data.SharedDataMiddleware",
    "werkzeug.routing.converters.BaseConverter",
    "werkzeug.routing.map.Map",
    "werkzeug.routing.map.MapAdapter",
    "werkzeug.routing.matcher.StateMachineMatcher",
    "werkzeug.routing.rules.RuleTemplate",
    "werkzeug.sansio.multipart.MultipartDecoder",
    "werkzeug.sansio.multipart.MultipartEncoder",
    "werkzeug.sansio.request.Request",
    "werkzeug.sansio.response.Response",
    "werkzeug.test.Client",
    "werkzeug.test.EnvironBuilder",
    "werkzeug.user_agent.UserAgent",
    "werkzeug.wrappers.response.ResponseStream",
    "werkzeug.wsgi.ClosingIterator",
    "werkzeug.wsgi.FileWrapper",
    "werkzeug.wsgi._RangeWrapper",
    "win32.lib.win32gui_struct.DEV_BROADCAST_INFO",
    "win32.lib.win32pdhquery.BaseQuery",
    "win32.lib.win32serviceutil.ServiceFramework",
    "win32.lib.win32timezone._SimpleStruct",
    "win32com.client.CoClassBaseClass",
    "win32com.client.DispatchBaseClass",
    "win32com.client.EventsProxy",
    "win32com.client.VARIANT",
    "win32com.client.build.OleItem",
    "win32com.client.dynamic.CDispatch",
    "win32com.server.dispatcher.DispatcherBase",
    "win32com.server.util.Collection",
    "win32com.server.util.FileStream",
    "win32com.server.util.ListEnumerator",
    "win32com.universal.Arg",
    "win32com.universal.Definition",
    "win32com.universal.Method",
    "win32comext.adsi.ADSIEnumerator",
    "win32comext.axdebug.adb.OutputReflector",
    "win32comext.axdebug.codecontainer.SourceCodeContainer",
    "win32comext.axdebug.debugger.AXDebugger",
    "win32comext.axdebug.debugger.ModuleTreeNode",
    "win32comext.axdebug.expressions.DebugProperty",
    "win32comext.axdebug.stackframe.DebugStackFrameSniffer",
    "win32comext.axdebug.stackframe.StackFrameDebugProperty",
    "win32comext.axscript.server.axsite.AXEngine",
    "win32comext.axscript.server.axsite.AXSite",
    "win32comext.axscript.server.error.Exception",
    "wsgiref.headers.Headers",
    "wsgiref.util.FileWrapper",
    "wsgiref.validate.ErrorWrapper",
    "wsgiref.validate.InputWrapper",
    "wsgiref.validate.IteratorWrapper",
    "wsgiref.validate.PartialIteratorWrapper",
    "wsgiref.validate.WriteWrapper",
    "xdrlib.Unpacker",
    "xml.dom.expatbuilder.ElementInfo",
    "xml.dom.expatbuilder.ExpatBuilder",
    "xml.dom.expatbuilder.FilterCrutch",
    "xml.dom.expatbuilder.FilterVisibilityController",
    "xml.dom.minidom.ElementInfo",
    "xml.dom.minidom.NamedNodeMap",
    "xml.dom.minidom.ReadOnlySequentialNamedNodeMap",
    "xml.dom.minidom.TypeInfo",
    "xml.dom.pulldom.DOMEventStream",
    "xml.etree.ElementPath._SelectorContext",
    "xml.etree.ElementTree.C14NWriterTarget",
    "xml.etree.ElementTree.Element",
    "xml.etree.ElementTree.ElementTree",
    "xml.etree.ElementTree.QName",
    "xml.etree.ElementTree.TreeBuilder",
    "xml.etree.ElementTree.XMLParser",
    "xml.etree.ElementTree.XMLPullParser",
    "xml.sax.xmlreader.AttributesImpl",
    "xml.sax.xmlreader.InputSource",
    "xmlrpc.client.Binary",
    "xmlrpc.client.DateTime",
    "xmlrpc.client.ExpatParser",
    "xmlrpc.client.Marshaller",
    "xmlrpc.client.MultiCall",
    "xmlrpc.client.MultiCallIterator",
    "xmlrpc.client.ServerProxy",
    "xmlrpc.client.Transport",
    "xmlrpc.client.Unmarshaller",
    "xmlrpc.client._Method",
    "xmlrpc.client._MultiCallMethod",
    "xmlrpc.server.SimpleXMLRPCDispatcher",
    "xxhash._Hasher",
    "yaml._yaml.CEmitter",
    "yaml._yaml.CParser",
    "yaml._yaml.Mark",
    "yaml.composer.Composer",
    "yaml.constructor.BaseConstructor",
    "yaml.emitter.Emitter",
    "yaml.emitter.ScalarAnalysis",
    "yaml.error.Mark",
    "yaml.events.Event",
    "yaml.nodes.Node",
    "yaml.parser.Parser",
    "yaml.reader.Reader",
    "yaml.representer.BaseRepresenter",
    "yaml.resolver.BaseResolver",
    "yaml.scanner.Scanner",
    "yaml.scanner.SimpleKey",
    "yaml.serializer.Serializer",
    "yaml.tokens.Token",
    "zipfile.Path",
    "zipfile.ZipFile",
    "zipfile.ZipInfo",
    "zipimport.zipimporter"
  ],
  "object.__init_subclass__": [
    "flask.views.MethodView",
    "jinja2.ext.Extension",
    "libcst._nodes.base.CSTNode",
    "pip._vendor.typing_extensions.Annotated",
    "pip._vendor.typing_extensions.NewType.__mro_entries__.Dummy",
    "pip._vendor.typing_extensions.ParamSpec",
    "pip._vendor.typing_extensions.Protocol",
    "pip._vendor.typing_extensions.TypeAliasType",
    "pip._vendor.typing_extensions.TypeVar",
    "pip._vendor.typing_extensions.TypeVarTuple",
    "typeshed.typeshed.stdlib.builtins.object",
    "werkzeug.routing.converters.BaseConverter"
  ],
  "object.__module__": [
    "typeshed.typeshed.stdlib.typing_extensions.TypeAliasType"
  ],
  "object.__ne__": [
    "PIL.ImageMath._Operand",
    "PIL.PdfParser.IndirectReference",
    "PyInstaller.lib.modulegraph.modulegraph.Node",
    "_cffi_backend._CDataBase",
    "_cffi_backend.buffer",
    "_tkinter.Tcl_Obj",
    "babel.core.Locale",
    "babel.messages.catalog.Message",
    "babel.messages.pofile._NormalizedString",
    "babel.support.LazyProxy",
    "braintree.search.Search.EqualityNodeBuilder",
    "braintree.search.Search.KeyValueNodeBuilder",
    "bs4.element.Tag",
    "bytearray",
    "bytes",
    "caldav.lib.url.URL",
    "caldav.requests.HTTPBearerAuth",
    "cffi.backend_ctypes.CTypesData",
    "cffi.model.BaseType",
    "complex",
    "datetimerange.DateTimeRange",
    "dateutil.relativedelta.relativedelta",
    "dateutil.rrule.rruleset._genitem",
    "dateutil.tz._common.tzrangebase",
    "dateutil.tz.tz._ttinfo",
    "dateutil.tz.tz.tzfile",
    "dateutil.tz.tz.tzlocal",
    "dateutil.tz.tz.tzoffset",
    "dateutil.tz.tz.tzutc",
    "email.charset.Charset",
    "email.header.Header",
    "gdb.Value",
    "google.cloud.ndb._datastore_query.Cursor",
    "google.cloud.ndb._options.Options",
    "google.cloud.ndb.key.Key",
    "google.cloud.ndb.model.Property",
    "google.cloud.ndb.model._NotEqualMixin",
    "google.cloud.ndb.query.Node",
    "google.cloud.ndb.query.ParameterizedThing",
    "google.protobuf.internal.containers.BaseContainer",
    "google.protobuf.message.Message",
    "httplib2.Authentication",
    "influxdb_client.domain.add_resource_member_request_body.AddResourceMemberRequestBody",
    "influxdb_client.domain.analyze_query_response.AnalyzeQueryResponse",
    "influxdb_client.domain.analyze_query_response_errors.AnalyzeQueryResponseErrors",
    "influxdb_client.domain.ast_response.ASTResponse",
    "influxdb_client.domain.authorization_update_request.AuthorizationUpdateRequest",
    "influxdb_client.domain.authorizations.Authorizations",
    "influxdb_client.domain.axes.Axes",
    "influxdb_client.domain.axis.Axis",
    "influxdb_client.domain.axis_scale.AxisScale",
    "influxdb_client.domain.bucket.Bucket",
    "influxdb_client.domain.bucket_links.BucketLinks",
    "influxdb_client.domain.bucket_metadata_manifest.BucketMetadataManifest",
    "influxdb_client.domain.bucket_retention_rules.BucketRetentionRules",
    "influxdb_client.domain.bucket_shard_mapping.BucketShardMapping",
    "influxdb_client.domain.buckets.Buckets",
    "influxdb_client.domain.builder_aggregate_function_type.BuilderAggregateFunctionType",
    "influxdb_client.domain.builder_config.BuilderConfig",
    "influxdb_client.domain.builder_config_aggregate_window.BuilderConfigAggregateWindow",
    "influxdb_client.domain.builder_functions_type.BuilderFunctionsType",
    "influxdb_client.domain.builder_tags_type.BuilderTagsType",
    "influxdb_client.domain.cell.Cell",
    "influxdb_client.domain.cell_links.CellLinks",
    "influxdb_client.domain.cell_update.CellUpdate",
    "influxdb_client.domain.check.Check",
    "influxdb_client.domain.check_base.CheckBase",
    "influxdb_client.domain.check_base_links.CheckBaseLinks",
    "influxdb_client.domain.check_patch.CheckPatch",
    "influxdb_client.domain.check_status_level.CheckStatusLevel",
    "influxdb_client.domain.checks.Checks",
    "influxdb_client.domain.column_data_type.ColumnDataType",
    "influxdb_client.domain.column_semantic_type.ColumnSemanticType",
    "influxdb_client.domain.config.Config",
    "influxdb_client.domain.create_cell.CreateCell",
    "influxdb_client.domain.create_dashboard_request.CreateDashboardRequest",
    "influxdb_client.domain.dashboard_color.DashboardColor",
    "influxdb_client.domain.dashboard_query.DashboardQuery",
    "influxdb_client.domain.dashboards.Dashboards",
    "influxdb_client.domain.dbr_ps.DBRPs",
    "influxdb_client.domain.dbrp.DBRP",
    "influxdb_client.domain.dbrp_create.DBRPCreate",
    "influxdb_client.domain.dbrp_get.DBRPGet",
    "influxdb_client.domain.dbrp_update.DBRPUpdate",
    "influxdb_client.domain.decimal_places.DecimalPlaces",
    "influxdb_client.domain.delete_predicate_request.DeletePredicateRequest",
    "influxdb_client.domain.dialect.Dialect",
    "influxdb_client.domain.dict_item.DictItem",
    "influxdb_client.domain.duration.Duration",
    "influxdb_client.domain.error.Error",
    "influxdb_client.domain.field.Field",
    "influxdb_client.domain.file.File",
    "influxdb_client.domain.flux_response.FluxResponse",
    "influxdb_client.domain.flux_suggestion.FluxSuggestion",
    "influxdb_client.domain.flux_suggestions.FluxSuggestions",
    "influxdb_client.domain.health_check.HealthCheck",
    "influxdb_client.domain.import_declaration.ImportDeclaration",
    "influxdb_client.domain.is_onboarding.IsOnboarding",
    "influxdb_client.domain.label.Label",
    "influxdb_client.domain.label_create_request.LabelCreateRequest",
    "influxdb_client.domain.label_mapping.LabelMapping",
    "influxdb_client.domain.label_response.LabelResponse",
    "influxdb_client.domain.label_update.LabelUpdate",
    "influxdb_client.domain.labels_response.LabelsResponse",
    "influxdb_client.domain.language_request.LanguageRequest",
    "influxdb_client.domain.line_protocol_error.LineProtocolError",
    "influxdb_client.domain.line_protocol_length_error.LineProtocolLengthError",
    "influxdb_client.domain.links.Links",
    "influxdb_client.domain.list_stacks_response.ListStacksResponse",
    "influxdb_client.domain.log_event.LogEvent",
    "influxdb_client.domain.logs.Logs",
    "influxdb_client.domain.measurement_schema.MeasurementSchema",
    "influxdb_client.domain.measurement_schema_column.MeasurementSchemaColumn",
    "influxdb_client.domain.measurement_schema_create_request.MeasurementSchemaCreateRequest",
    "influxdb_client.domain.measurement_schema_list.MeasurementSchemaList",
    "influxdb_client.domain.measurement_schema_update_request.MeasurementSchemaUpdateRequest",
    "influxdb_client.domain.metadata_backup.MetadataBackup",
    "influxdb_client.domain.model_property.ModelProperty",
    "influxdb_client.domain.node.Node",
    "influxdb_client.domain.notification_endpoint.NotificationEndpoint",
    "influxdb_client.domain.notification_endpoint_base.NotificationEndpointBase",
    "influxdb_client.domain.notification_endpoint_base_links.NotificationEndpointBaseLinks",
    "influxdb_client.domain.notification_endpoint_type.NotificationEndpointType",
    "influxdb_client.domain.notification_endpoint_update.NotificationEndpointUpdate",
    "influxdb_client.domain.notification_endpoints.NotificationEndpoints",
    "influxdb_client.domain.notification_rule.NotificationRule",
    "influxdb_client.domain.notification_rule_base.NotificationRuleBase",
    "influxdb_client.domain.notification_rule_base_links.NotificationRuleBaseLinks",
    "influxdb_client.domain.notification_rule_update.NotificationRuleUpdate",
    "influxdb_client.domain.notification_rules.NotificationRules",
    "influxdb_client.domain.onboarding_request.OnboardingRequest",
    "influxdb_client.domain.onboarding_response.OnboardingResponse",
    "influxdb_client.domain.organization.Organization",
    "influxdb_client.domain.organization_links.OrganizationLinks",
    "influxdb_client.domain.organizations.Organizations",
    "influxdb_client.domain.package.Package",
    "influxdb_client.domain.package_clause.PackageClause",
    "influxdb_client.domain.password_reset_body.PasswordResetBody",
    "influxdb_client.domain.patch_bucket_request.PatchBucketRequest",
    "influxdb_client.domain.patch_dashboard_request.PatchDashboardRequest",
    "influxdb_client.domain.patch_organization_request.PatchOrganizationRequest",
    "influxdb_client.domain.patch_retention_rule.PatchRetentionRule",
    "influxdb_client.domain.patch_stack_request.PatchStackRequest",
    "influxdb_client.domain.patch_stack_request_additional_resources.PatchStackRequestAdditionalResources",
    "influxdb_client.domain.permission.Permission",
    "influxdb_client.domain.permission_resource.PermissionResource",
    "influxdb_client.domain.post_bucket_request.PostBucketRequest",
    "influxdb_client.domain.post_check.PostCheck",
    "influxdb_client.domain.post_notification_endpoint.PostNotificationEndpoint",
    "influxdb_client.domain.post_notification_rule.PostNotificationRule",
    "influxdb_client.domain.post_organization_request.PostOrganizationRequest",
    "influxdb_client.domain.post_restore_kv_response.PostRestoreKVResponse",
    "influxdb_client.domain.post_stack_request.PostStackRequest",
    "influxdb_client.domain.query.Query",
    "influxdb_client.domain.query_edit_mode.QueryEditMode",
    "influxdb_client.domain.query_variable_properties_values.QueryVariablePropertiesValues",
    "influxdb_client.domain.ready.Ready",
    "influxdb_client.domain.remote_connection.RemoteConnection",
    "influxdb_client.domain.remote_connection_creation_request.RemoteConnectionCreationRequest",
    "influxdb_client.domain.remote_connection_update_request.RemoteConnectionUpdateRequest",
    "influxdb_client.domain.remote_connections.RemoteConnections",
    "influxdb_client.domain.renamable_field.RenamableField",
    "influxdb_client.domain.replication.Replication",
    "influxdb_client.domain.replication_creation_request.ReplicationCreationRequest",
    "influxdb_client.domain.replication_update_request.ReplicationUpdateRequest",
    "influxdb_client.domain.replications.Replications",
    "influxdb_client.domain.resource_members.ResourceMembers",
    "influxdb_client.domain.resource_members_links.ResourceMembersLinks",
    "influxdb_client.domain.resource_owners.ResourceOwners",
    "influxdb_client.domain.restored_bucket_mappings.RestoredBucketMappings",
    "influxdb_client.domain.retention_policy_manifest.RetentionPolicyManifest",
    "influxdb_client.domain.routes.Routes",
    "influxdb_client.domain.routes_external.RoutesExternal",
    "influxdb_client.domain.routes_query.RoutesQuery",
    "influxdb_client.domain.routes_system.RoutesSystem",
    "influxdb_client.domain.rule_status_level.RuleStatusLevel",
    "influxdb_client.domain.run.Run",
    "influxdb_client.domain.run_links.RunLinks",
    "influxdb_client.domain.run_manually.RunManually",
    "influxdb_client.domain.runs.Runs",
    "influxdb_client.domain.schema_type.SchemaType",
    "influxdb_client.domain.scraper_target_request.ScraperTargetRequest",
    "influxdb_client.domain.scraper_target_responses.ScraperTargetResponses",
    "influxdb_client.domain.script.Script",
    "influxdb_client.domain.script_create_request.ScriptCreateRequest",
    "influxdb_client.domain.script_invocation_params.ScriptInvocationParams",
    "influxdb_client.domain.script_language.ScriptLanguage",
    "influxdb_client.domain.script_update_request.ScriptUpdateRequest",
    "influxdb_client.domain.scripts.Scripts",
    "influxdb_client.domain.secret_keys.SecretKeys",
    "influxdb_client.domain.shard_group_manifest.ShardGroupManifest",
    "influxdb_client.domain.shard_manifest.ShardManifest",
    "influxdb_client.domain.shard_owner.ShardOwner",
    "influxdb_client.domain.source.Source",
    "influxdb_client.domain.source_links.SourceLinks",
    "influxdb_client.domain.sources.Sources",
    "influxdb_client.domain.stack.Stack",
    "influxdb_client.domain.stack_associations.StackAssociations",
    "influxdb_client.domain.stack_events.StackEvents",
    "influxdb_client.domain.stack_links.StackLinks",
    "influxdb_client.domain.stack_resources.StackResources",
    "influxdb_client.domain.statement.Statement",
    "influxdb_client.domain.static_legend.StaticLegend",
    "influxdb_client.domain.status_rule.StatusRule",
    "influxdb_client.domain.subscription_manifest.SubscriptionManifest",
    "influxdb_client.domain.table_view_properties_table_options.TableViewPropertiesTableOptions",
    "influxdb_client.domain.tag_rule.TagRule",
    "influxdb_client.domain.task.Task",
    "influxdb_client.domain.task_create_request.TaskCreateRequest",
    "influxdb_client.domain.task_links.TaskLinks",
    "influxdb_client.domain.task_status_type.TaskStatusType",
    "influxdb_client.domain.task_update_request.TaskUpdateRequest",
    "influxdb_client.domain.tasks.Tasks",
    "influxdb_client.domain.telegraf_plugin.TelegrafPlugin",
    "influxdb_client.domain.telegraf_plugin_request.TelegrafPluginRequest",
    "influxdb_client.domain.telegraf_plugin_request_plugins.TelegrafPluginRequestPlugins",
    "influxdb_client.domain.telegraf_plugins.TelegrafPlugins",
    "influxdb_client.domain.telegraf_request.TelegrafRequest",
    "influxdb_client.domain.telegraf_request_metadata.TelegrafRequestMetadata",
    "influxdb_client.domain.telegrafs.Telegrafs",
    "influxdb_client.domain.template_apply.TemplateApply",
    "influxdb_client.domain.template_apply_remotes.TemplateApplyRemotes",
    "influxdb_client.domain.template_apply_template.TemplateApplyTemplate",
    "influxdb_client.domain.template_chart.TemplateChart",
    "influxdb_client.domain.template_export_by_id.TemplateExportByID",
    "influxdb_client.domain.template_export_by_id_org_ids.TemplateExportByIDOrgIDs",
    "influxdb_client.domain.template_export_by_id_resource_filters.TemplateExportByIDResourceFilters",
    "influxdb_client.domain.template_export_by_id_resources.TemplateExportByIDResources",
    "influxdb_client.domain.template_export_by_name.TemplateExportByName",
    "influxdb_client.domain.template_export_by_name_resources.TemplateExportByNameResources",
    "influxdb_client.domain.template_kind.TemplateKind",
    "influxdb_client.domain.template_summary.TemplateSummary",
    "influxdb_client.domain.template_summary_diff.TemplateSummaryDiff",
    "influxdb_client.domain.template_summary_diff_buckets.TemplateSummaryDiffBuckets",
    "influxdb_client.domain.template_summary_diff_buckets_new_old.TemplateSummaryDiffBucketsNewOld",
    "influxdb_client.domain.template_summary_diff_checks.TemplateSummaryDiffChecks",
    "influxdb_client.domain.template_summary_diff_dashboards.TemplateSummaryDiffDashboards",
    "influxdb_client.domain.template_summary_diff_dashboards_new_old.TemplateSummaryDiffDashboardsNewOld",
    "influxdb_client.domain.template_summary_diff_label_mappings.TemplateSummaryDiffLabelMappings",
    "influxdb_client.domain.template_summary_diff_labels.TemplateSummaryDiffLabels",
    "influxdb_client.domain.template_summary_diff_labels_new_old.TemplateSummaryDiffLabelsNewOld",
    "influxdb_client.domain.template_summary_diff_notification_endpoints.TemplateSummaryDiffNotificationEndpoints",
    "influxdb_client.domain.template_summary_diff_notification_rules.TemplateSummaryDiffNotificationRules",
    "influxdb_client.domain.template_summary_diff_notification_rules_new_old.TemplateSummaryDiffNotificationRulesNewOld",
    "influxdb_client.domain.template_summary_diff_tasks.TemplateSummaryDiffTasks",
    "influxdb_client.domain.template_summary_diff_tasks_new_old.TemplateSummaryDiffTasksNewOld",
    "influxdb_client.domain.template_summary_diff_telegraf_configs.TemplateSummaryDiffTelegrafConfigs",
    "influxdb_client.domain.template_summary_diff_variables.TemplateSummaryDiffVariables",
    "influxdb_client.domain.template_summary_diff_variables_new_old.TemplateSummaryDiffVariablesNewOld",
    "influxdb_client.domain.template_summary_errors.TemplateSummaryErrors",
    "influxdb_client.domain.template_summary_label.TemplateSummaryLabel",
    "influxdb_client.domain.template_summary_label_properties.TemplateSummaryLabelProperties",
    "influxdb_client.domain.template_summary_summary.TemplateSummarySummary",
    "influxdb_client.domain.template_summary_summary_buckets.TemplateSummarySummaryBuckets",
    "influxdb_client.domain.template_summary_summary_dashboards.TemplateSummarySummaryDashboards",
    "influxdb_client.domain.template_summary_summary_label_mappings.TemplateSummarySummaryLabelMappings",
    "influxdb_client.domain.template_summary_summary_notification_rules.TemplateSummarySummaryNotificationRules",
    "influxdb_client.domain.template_summary_summary_status_rules.TemplateSummarySummaryStatusRules",
    "influxdb_client.domain.template_summary_summary_tag_rules.TemplateSummarySummaryTagRules",
    "influxdb_client.domain.template_summary_summary_tasks.TemplateSummarySummaryTasks",
    "influxdb_client.domain.template_summary_summary_variables.TemplateSummarySummaryVariables",
    "influxdb_client.domain.threshold.Threshold",
    "influxdb_client.domain.threshold_base.ThresholdBase",
    "influxdb_client.domain.user.User",
    "influxdb_client.domain.user_response.UserResponse",
    "influxdb_client.domain.user_response_links.UserResponseLinks",
    "influxdb_client.domain.users.Users",
    "influxdb_client.domain.variable.Variable",
    "influxdb_client.domain.variable_links.VariableLinks",
    "influxdb_client.domain.variable_properties.VariableProperties",
    "influxdb_client.domain.variables.Variables",
    "influxdb_client.domain.view.View",
    "influxdb_client.domain.view_links.ViewLinks",
    "influxdb_client.domain.view_properties.ViewProperties",
    "influxdb_client.domain.views.Views",
    "influxdb_client.domain.write_precision.WritePrecision",
    "influxdb_client.domain.xy_geom.XYGeom",
    "jack.Port",
    "jinja2.runtime.Undefined",
    "ldap3.abstract.attribute.Attribute",
    "libcst._parser.parso.utils.PythonVersionInfo",
    "mock.mock._ANY",
    "mock.mock._Call",
    "netaddr.eui.EUI",
    "netaddr.eui.IAB",
    "netaddr.eui.OUI",
    "netaddr.ip.BaseIP",
    "netaddr.ip.sets.IPSet",
    "openpyxl.cell.read_only.ReadOnlyCell",
    "openpyxl.descriptors.serialisable.Serialisable",
    "openpyxl.styles.proxy.StyleProxy",
    "openpyxl.worksheet.cell_range.MultiCellRange",
    "packaging.version._BaseVersion",
    "paho.mqtt.client.MQTTMessage",
    "paramiko.pkey.PublicBlob",
    "parso.normalizer.Issue",
    "parso.utils.PythonVersionInfo",
    "passlib.utils.SequenceMixin",
    "passlib.utils.compat._ordered_dict.OrderedDict",
    "peewee.ColumnBase",
    "peewee.CompositeKey",
    "peewee.Model",
    "peewee._HashableSource",
    "pika.adapters.select_connection._Timeout",
    "pika.connection.Parameters",
    "pika.credentials.ExternalCredentials",
    "pika.credentials.PlainCredentials",
    "pip._vendor.distlib.compat.OrderedDict",
    "pip._vendor.distlib.version.Matcher",
    "pip._vendor.distlib.version.Version",
    "pip._vendor.msgpack.ext.Timestamp",
    "pip._vendor.packaging.version._BaseVersion",
    "pip._vendor.pkg_resources.Distribution",
    "pip._vendor.pkg_resources.Requirement",
    "pip._vendor.requests.auth.HTTPBasicAuth",
    "pip._vendor.requests.auth.HTTPDigestAuth",
    "pip._vendor.rich.style.Style",
    "pip._vendor.urllib3._collections.HTTPHeaderDict",
    "polib.POEntry",
    "psutil.Process",
    "psutil._pswindows.WindowsService",
    "psycopg2._psycopg.Column",
    "psycopg2._psycopg.Notify",
    "psycopg2._range.Range",
    "psycopg2.sql.Composable",
    "psycopg2.tz.FixedOffsetTimezone",
    "pyasn1.type.base.ConstructedAsn1Type",
    "pyasn1.type.base.SimpleAsn1Type",
    "pyasn1.type.constraint.AbstractConstraint",
    "pyasn1.type.namedtype.NamedType",
    "pyasn1.type.namedtype.NamedTypes",
    "pyasn1.type.namedval.NamedValues",
    "pyasn1.type.tag.Tag",
    "pyasn1.type.tag.TagSet",
    "pyasn1.type.univ.Choice",
    "pymysql.DBAPISet",
    "sqlalchemy.dialects.postgresql.ranges.RangeOperators.comparator_factory",
    "sqlalchemy.engine.result.RMKeyView",
    "sqlalchemy.engine.row.ROMappingView",
    "sqlalchemy.engine.row.Row",
    "sqlalchemy.engine.url.URL",
    "sqlalchemy.ext.associationproxy.AmbiguousAssociationProxyInstance",
    "sqlalchemy.ext.associationproxy.ObjectAssociationProxyInstance",
    "sqlalchemy.ext.associationproxy._AssociationDict",
    "sqlalchemy.ext.associationproxy._AssociationList",
    "sqlalchemy.ext.associationproxy._AssociationSet",
    "sqlalchemy.ext.asyncio.base.ProxyComparable",
    "sqlalchemy.orm.descriptor_props.CompositeProperty.Comparator",
    "sqlalchemy.orm.path_registry.PathRegistry",
    "sqlalchemy.orm.relationships.RelationshipProperty.Comparator",
    "sqlalchemy.sql.operators.ColumnOperators",
    "sqlalchemy.sql.selectable.ForUpdateArg",
    "sqlalchemy.testing.entities.ComparableMixin",
    "sqlalchemy.testing.pickleable.BrokenComparable",
    "sqlalchemy.testing.pickleable.NotComparable",
    "sqlalchemy.testing.schema.eq_clause_element",
    "sqlalchemy.testing.schema.eq_type_affinity",
    "sqlalchemy.util._collections.IdentitySet",
    "sqlite3.dbapi2.Row",
    "str",
    "tensorflow.Tensor",
    "tqdm.utils.Comparable",
    "tree_sitter.binding.Node",
    "types.MethodWrapperType",
    "typeshed.typeshed.stdlib._tkinter.Tcl_Obj",
    "typeshed.typeshed.stdlib.builtins.bytearray",
    "typeshed.typeshed.stdlib.builtins.bytes",
    "typeshed.typeshed.stdlib.builtins.complex",
    "typeshed.typeshed.stdlib.builtins.float",
    "typeshed.typeshed.stdlib.builtins.int",
    "typeshed.typeshed.stdlib.builtins.object",
    "typeshed.typeshed.stdlib.builtins.str",
    "typeshed.typeshed.stdlib.email.charset.Charset",
    "typeshed.typeshed.stdlib.email.header.Header",
    "typeshed.typeshed.stdlib.sqlite3.dbapi2.Row",
    "typeshed.typeshed.stdlib.types.MethodWrapperType",
    "typeshed.typeshed.stdlib.unittest.mock._ANY",
    "typeshed.typeshed.stdlib.unittest.mock._Call",
    "typeshed.typeshed.stdlib.weakref.WeakMethod",
    "typeshed.typeshed.stubs.JACK-Client.jack.Port",
    "typeshed.typeshed.stubs.Pillow.PIL.ImageMath._Operand",
    "typeshed.typeshed.stubs.Pillow.PIL.PdfParser.IndirectReference",
    "typeshed.typeshed.stubs.PyMySQL.pymysql.DBAPISet",
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.element.Tag",
    "typeshed.typeshed.stubs.boltons.boltons.ioutils.SpooledIOBase",
    "typeshed.typeshed.stubs.boltons.boltons.urlutils.URL",
    "typeshed.typeshed.stubs.braintree.braintree.search.Search.EqualityNodeBuilder",
    "typeshed.typeshed.stubs.braintree.braintree.search.Search.KeyValueNodeBuilder",
    "typeshed.typeshed.stubs.caldav.caldav.lib.url.URL",
    "typeshed.typeshed.stubs.caldav.caldav.requests.HTTPBearerAuth",
    "typeshed.typeshed.stubs.cffi._cffi_backend._CDataBase",
    "typeshed.typeshed.stubs.cffi._cffi_backend.buffer",
    "typeshed.typeshed.stubs.cffi.cffi.backend_ctypes.CTypesData",
    "typeshed.typeshed.stubs.cffi.cffi.model.BaseType",
    "typeshed.typeshed.stubs.gdb.gdb.Value",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb._datastore_query.Cursor",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb._options.Options",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.key.Key",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.model.Property",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.model._NotEqualMixin",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.query.Node",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.query.ParameterizedThing",
    "typeshed.typeshed.stubs.httplib2.httplib2.Authentication",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.add_resource_member_request_body.AddResourceMemberRequestBody",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.analyze_query_response.AnalyzeQueryResponse",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.analyze_query_response_errors.AnalyzeQueryResponseErrors",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.ast_response.ASTResponse",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.authorization_update_request.AuthorizationUpdateRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.authorizations.Authorizations",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.axes.Axes",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.axis.Axis",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.axis_scale.AxisScale",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.bucket.Bucket",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.bucket_links.BucketLinks",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.bucket_metadata_manifest.BucketMetadataManifest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.bucket_retention_rules.BucketRetentionRules",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.bucket_shard_mapping.BucketShardMapping",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.buckets.Buckets",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.builder_aggregate_function_type.BuilderAggregateFunctionType",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.builder_config.BuilderConfig",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.builder_config_aggregate_window.BuilderConfigAggregateWindow",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.builder_functions_type.BuilderFunctionsType",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.builder_tags_type.BuilderTagsType",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.cell.Cell",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.cell_links.CellLinks",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.cell_update.CellUpdate",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.check.Check",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.check_base.CheckBase",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.check_base_links.CheckBaseLinks",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.check_patch.CheckPatch",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.check_status_level.CheckStatusLevel",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.checks.Checks",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.column_data_type.ColumnDataType",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.column_semantic_type.ColumnSemanticType",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.config.Config",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.create_cell.CreateCell",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.create_dashboard_request.CreateDashboardRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.dashboard_color.DashboardColor",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.dashboard_query.DashboardQuery",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.dashboards.Dashboards",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.dbr_ps.DBRPs",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.dbrp.DBRP",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.dbrp_create.DBRPCreate",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.dbrp_get.DBRPGet",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.dbrp_update.DBRPUpdate",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.decimal_places.DecimalPlaces",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.delete_predicate_request.DeletePredicateRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.dialect.Dialect",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.dict_item.DictItem",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.duration.Duration",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.error.Error",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.field.Field",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.file.File",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.flux_response.FluxResponse",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.flux_suggestion.FluxSuggestion",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.flux_suggestions.FluxSuggestions",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.health_check.HealthCheck",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.import_declaration.ImportDeclaration",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.is_onboarding.IsOnboarding",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.label.Label",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.label_create_request.LabelCreateRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.label_mapping.LabelMapping",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.label_response.LabelResponse",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.label_update.LabelUpdate",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.labels_response.LabelsResponse",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.language_request.LanguageRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.line_protocol_error.LineProtocolError",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.line_protocol_length_error.LineProtocolLengthError",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.links.Links",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.list_stacks_response.ListStacksResponse",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.log_event.LogEvent",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.logs.Logs",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.measurement_schema.MeasurementSchema",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.measurement_schema_column.MeasurementSchemaColumn",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.measurement_schema_create_request.MeasurementSchemaCreateRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.measurement_schema_list.MeasurementSchemaList",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.measurement_schema_update_request.MeasurementSchemaUpdateRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.metadata_backup.MetadataBackup",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.model_property.ModelProperty",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.node.Node",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.notification_endpoint.NotificationEndpoint",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.notification_endpoint_base.NotificationEndpointBase",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.notification_endpoint_base_links.NotificationEndpointBaseLinks",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.notification_endpoint_type.NotificationEndpointType",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.notification_endpoint_update.NotificationEndpointUpdate",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.notification_endpoints.NotificationEndpoints",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.notification_rule.NotificationRule",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.notification_rule_base.NotificationRuleBase",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.notification_rule_base_links.NotificationRuleBaseLinks",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.notification_rule_update.NotificationRuleUpdate",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.notification_rules.NotificationRules",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.onboarding_request.OnboardingRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.onboarding_response.OnboardingResponse",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.organization.Organization",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.organization_links.OrganizationLinks",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.organizations.Organizations",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.package.Package",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.package_clause.PackageClause",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.password_reset_body.PasswordResetBody",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.patch_bucket_request.PatchBucketRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.patch_dashboard_request.PatchDashboardRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.patch_organization_request.PatchOrganizationRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.patch_retention_rule.PatchRetentionRule",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.patch_stack_request.PatchStackRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.patch_stack_request_additional_resources.PatchStackRequestAdditionalResources",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.permission.Permission",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.permission_resource.PermissionResource",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.post_bucket_request.PostBucketRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.post_check.PostCheck",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.post_notification_endpoint.PostNotificationEndpoint",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.post_notification_rule.PostNotificationRule",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.post_organization_request.PostOrganizationRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.post_restore_kv_response.PostRestoreKVResponse",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.post_stack_request.PostStackRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.query.Query",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.query_edit_mode.QueryEditMode",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.query_variable_properties_values.QueryVariablePropertiesValues",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.ready.Ready",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.remote_connection.RemoteConnection",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.remote_connection_creation_request.RemoteConnectionCreationRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.remote_connection_update_request.RemoteConnectionUpdateRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.remote_connections.RemoteConnections",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.renamable_field.RenamableField",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.replication.Replication",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.replication_creation_request.ReplicationCreationRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.replication_update_request.ReplicationUpdateRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.replications.Replications",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.resource_members.ResourceMembers",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.resource_members_links.ResourceMembersLinks",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.resource_owners.ResourceOwners",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.restored_bucket_mappings.RestoredBucketMappings",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.retention_policy_manifest.RetentionPolicyManifest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.routes.Routes",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.routes_external.RoutesExternal",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.routes_query.RoutesQuery",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.routes_system.RoutesSystem",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.rule_status_level.RuleStatusLevel",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.run.Run",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.run_links.RunLinks",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.run_manually.RunManually",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.runs.Runs",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.schema_type.SchemaType",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.scraper_target_request.ScraperTargetRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.scraper_target_responses.ScraperTargetResponses",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.script.Script",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.script_create_request.ScriptCreateRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.script_invocation_params.ScriptInvocationParams",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.script_language.ScriptLanguage",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.script_update_request.ScriptUpdateRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.scripts.Scripts",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.secret_keys.SecretKeys",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.shard_group_manifest.ShardGroupManifest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.shard_manifest.ShardManifest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.shard_owner.ShardOwner",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.source.Source",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.source_links.SourceLinks",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.sources.Sources",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.stack.Stack",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.stack_associations.StackAssociations",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.stack_events.StackEvents",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.stack_links.StackLinks",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.stack_resources.StackResources",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.statement.Statement",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.static_legend.StaticLegend",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.status_rule.StatusRule",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.subscription_manifest.SubscriptionManifest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.table_view_properties_table_options.TableViewPropertiesTableOptions",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.tag_rule.TagRule",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.task.Task",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.task_create_request.TaskCreateRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.task_links.TaskLinks",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.task_status_type.TaskStatusType",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.task_update_request.TaskUpdateRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.tasks.Tasks",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.telegraf_plugin.TelegrafPlugin",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.telegraf_plugin_request.TelegrafPluginRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.telegraf_plugin_request_plugins.TelegrafPluginRequestPlugins",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.telegraf_plugins.TelegrafPlugins",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.telegraf_request.TelegrafRequest",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.telegraf_request_metadata.TelegrafRequestMetadata",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.telegrafs.Telegrafs",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_apply.TemplateApply",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_apply_remotes.TemplateApplyRemotes",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_apply_template.TemplateApplyTemplate",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_chart.TemplateChart",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_export_by_id.TemplateExportByID",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_export_by_id_org_ids.TemplateExportByIDOrgIDs",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_export_by_id_resource_filters.TemplateExportByIDResourceFilters",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_export_by_id_resources.TemplateExportByIDResources",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_export_by_name.TemplateExportByName",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_export_by_name_resources.TemplateExportByNameResources",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_kind.TemplateKind",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary.TemplateSummary",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_diff.TemplateSummaryDiff",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_diff_buckets.TemplateSummaryDiffBuckets",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_diff_buckets_new_old.TemplateSummaryDiffBucketsNewOld",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_diff_checks.TemplateSummaryDiffChecks",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_diff_dashboards.TemplateSummaryDiffDashboards",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_diff_dashboards_new_old.TemplateSummaryDiffDashboardsNewOld",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_diff_label_mappings.TemplateSummaryDiffLabelMappings",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_diff_labels.TemplateSummaryDiffLabels",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_diff_labels_new_old.TemplateSummaryDiffLabelsNewOld",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_diff_notification_endpoints.TemplateSummaryDiffNotificationEndpoints",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_diff_notification_rules.TemplateSummaryDiffNotificationRules",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_diff_notification_rules_new_old.TemplateSummaryDiffNotificationRulesNewOld",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_diff_tasks.TemplateSummaryDiffTasks",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_diff_tasks_new_old.TemplateSummaryDiffTasksNewOld",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_diff_telegraf_configs.TemplateSummaryDiffTelegrafConfigs",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_diff_variables.TemplateSummaryDiffVariables",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_diff_variables_new_old.TemplateSummaryDiffVariablesNewOld",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_errors.TemplateSummaryErrors",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_label.TemplateSummaryLabel",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_label_properties.TemplateSummaryLabelProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_summary.TemplateSummarySummary",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_summary_buckets.TemplateSummarySummaryBuckets",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_summary_dashboards.TemplateSummarySummaryDashboards",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_summary_label_mappings.TemplateSummarySummaryLabelMappings",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_summary_notification_rules.TemplateSummarySummaryNotificationRules",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_summary_status_rules.TemplateSummarySummaryStatusRules",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_summary_tag_rules.TemplateSummarySummaryTagRules",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_summary_tasks.TemplateSummarySummaryTasks",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.template_summary_summary_variables.TemplateSummarySummaryVariables",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.threshold.Threshold",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.threshold_base.ThresholdBase",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.user.User",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.user_response.UserResponse",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.user_response_links.UserResponseLinks",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.users.Users",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.variable.Variable",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.variable_links.VariableLinks",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.variable_properties.VariableProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.variables.Variables",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.view.View",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.view_links.ViewLinks",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.view_properties.ViewProperties",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.views.Views",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.write_precision.WritePrecision",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.domain.xy_geom.XYGeom",
    "typeshed.typeshed.stubs.ldap3.ldap3.abstract.attribute.Attribute",
    "typeshed.typeshed.stubs.mock.mock.mock._ANY",
    "typeshed.typeshed.stubs.mock.mock.mock._Call",
    "typeshed.typeshed.stubs.netaddr.netaddr.eui.EUI",
    "typeshed.typeshed.stubs.netaddr.netaddr.eui.IAB",
    "typeshed.typeshed.stubs.netaddr.netaddr.eui.OUI",
    "typeshed.typeshed.stubs.netaddr.netaddr.ip.BaseIP",
    "typeshed.typeshed.stubs.netaddr.netaddr.ip.sets.IPSet",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.cell.read_only.ReadOnlyCell",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.serialisable.Serialisable",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.styles.proxy.StyleProxy",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.cell_range.MultiCellRange",
    "typeshed.typeshed.stubs.paho-mqtt.paho.mqtt.client.MQTTMessage",
    "typeshed.typeshed.stubs.paramiko.paramiko.pkey.PublicBlob",
    "typeshed.typeshed.stubs.passlib.passlib.utils.SequenceMixin",
    "typeshed.typeshed.stubs.passlib.passlib.utils.compat._ordered_dict.OrderedDict",
    "typeshed.typeshed.stubs.peewee.peewee.ColumnBase",
    "typeshed.typeshed.stubs.peewee.peewee.CompositeKey",
    "typeshed.typeshed.stubs.peewee.peewee.Model",
    "typeshed.typeshed.stubs.peewee.peewee._HashableSource",
    "typeshed.typeshed.stubs.pika.pika.adapters.select_connection._Timeout",
    "typeshed.typeshed.stubs.pika.pika.connection.Parameters",
    "typeshed.typeshed.stubs.pika.pika.credentials.ExternalCredentials",
    "typeshed.typeshed.stubs.pika.pika.credentials.PlainCredentials",
    "typeshed.typeshed.stubs.polib.polib.POEntry",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.internal.containers.BaseContainer",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.message.Message",
    "typeshed.typeshed.stubs.psutil.psutil.Process",
    "typeshed.typeshed.stubs.psutil.psutil._pswindows.WindowsService",
    "typeshed.typeshed.stubs.psycopg2.psycopg2._psycopg.Column",
    "typeshed.typeshed.stubs.psycopg2.psycopg2._psycopg.Notify",
    "typeshed.typeshed.stubs.psycopg2.psycopg2._range.Range",
    "typeshed.typeshed.stubs.psycopg2.psycopg2.sql.Composable",
    "typeshed.typeshed.stubs.psycopg2.psycopg2.tz.FixedOffsetTimezone",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.base.ConstructedAsn1Type",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.base.SimpleAsn1Type",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.constraint.AbstractConstraint",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.namedtype.NamedType",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.namedtype.NamedTypes",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.namedval.NamedValues",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.tag.Tag",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.tag.TagSet",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.univ.Choice",
    "typeshed.typeshed.stubs.pyinstaller.PyInstaller.lib.modulegraph.modulegraph.Node",
    "typeshed.typeshed.stubs.python-dateutil.dateutil.relativedelta.relativedelta",
    "typeshed.typeshed.stubs.python-dateutil.dateutil.rrule.rruleset._genitem",
    "typeshed.typeshed.stubs.python-dateutil.dateutil.tz._common.tzrangebase",
    "typeshed.typeshed.stubs.python-dateutil.dateutil.tz.tz._ttinfo",
    "typeshed.typeshed.stubs.python-dateutil.dateutil.tz.tz.tzfile",
    "typeshed.typeshed.stubs.python-dateutil.dateutil.tz.tz.tzlocal",
    "typeshed.typeshed.stubs.python-dateutil.dateutil.tz.tz.tzoffset",
    "typeshed.typeshed.stubs.python-dateutil.dateutil.tz.tz.tzutc",
    "typeshed.typeshed.stubs.pywin32.win32.lib.win32timezone.TimeZoneInfo",
    "typeshed.typeshed.stubs.pywin32.win32.lib.win32timezone._SimpleStruct",
    "typeshed.typeshed.stubs.pywin32.win32com.client.DispatchBaseClass",
    "typeshed.typeshed.stubs.pywin32.win32com.client.dynamic.CDispatch",
    "typeshed.typeshed.stubs.seaborn.seaborn.external.version._BaseVersion",
    "typeshed.typeshed.stubs.setuptools.pkg_resources.Distribution",
    "typeshed.typeshed.stubs.setuptools.pkg_resources._vendor.packaging.version._BaseVersion",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.Tensor",
    "typeshed.typeshed.stubs.tqdm.tqdm.utils.Comparable",
    "typeshed.typeshed.stubs.tree-sitter.tree_sitter.binding.Node",
    "unittest.mock._ANY",
    "unittest.mock._Call",
    "urllib3._collections.HTTPHeaderDict",
    "weakref.WeakMethod",
    "win32.lib.win32timezone.TimeZoneInfo",
    "win32.lib.win32timezone._SimpleStruct",
    "win32com.client.DispatchBaseClass",
    "win32com.client.dynamic.CDispatch"
  ],
  "object.__new__": [
    "_decimal.Decimal",
    "_win32typing.PyDSOP_SCOPE_INIT_INFOs",
    "blinker._saferef.BoundMethodWeakref",
    "blinker._utilities.symbol",
    "dateparser.conf.Settings",
    "datetime.date",
    "datetime.time",
    "datetime.timedelta",
    "django.db.migrations.operations.base.Operation",
    "django.utils.deconstruct._Deconstructible",
    "enum.Enum",
    "google.cloud.ndb.key.Key",
    "google.cloud.ndb.metadata.EntityGroup",
    "google.cloud.ndb.model.ModelAdapter",
    "google.cloud.ndb.query.Node",
    "google.protobuf.descriptor.OneofDescriptor",
    "google.protobuf.descriptor_pool.DescriptorPool",
    "ibm_db.IBM_DBClientInfo",
    "ibm_db.IBM_DBConnection",
    "ibm_db.IBM_DBServerInfo",
    "ibm_db.IBM_DBStatement",
    "importlib_metadata.DeprecatedNonAbstract",
    "importlib_metadata.FastPath",
    "jinja2.environment.Template",
    "ldap3.strategy.reusable.ReusableStrategy.ConnectionPool",
    "peewee.PrefetchQuery",
    "peewee.State",
    "pip._vendor.pyparsing.results.ParseResults",
    "pip._vendor.typing_extensions.Annotated",
    "pip._vendor.typing_extensions.Any",
    "pip._vendor.typing_extensions.TypeVar",
    "pip._vendor.typing_extensions._ProtocolMeta",
    "pyasn1.type.base.NoValue",
    "sqlalchemy.util.langhelpers.symbol",
    "ssl.SSLContext",
    "testslide.strict_mock.StrictMock",
    "traitlets.traitlets.HasDescriptors",
    "typeshed.typeshed.stdlib._decimal.Decimal",
    "typeshed.typeshed.stdlib.builtins.complex",
    "typeshed.typeshed.stdlib.builtins.float",
    "typeshed.typeshed.stdlib.builtins.int",
    "typeshed.typeshed.stdlib.builtins.object",
    "typeshed.typeshed.stdlib.builtins.slice",
    "typeshed.typeshed.stdlib.builtins.type",
    "typeshed.typeshed.stdlib.datetime.date",
    "typeshed.typeshed.stdlib.datetime.time",
    "typeshed.typeshed.stdlib.datetime.timedelta",
    "typeshed.typeshed.stdlib.enum.Enum",
    "typeshed.typeshed.stdlib.ssl.SSLContext",
    "typeshed.typeshed.stdlib.types.CodeType",
    "typeshed.typeshed.stdlib.types.FunctionType",
    "typeshed.typeshed.stdlib.types.GenericAlias",
    "typeshed.typeshed.stdlib.types.MethodType",
    "typeshed.typeshed.stdlib.types.TracebackType",
    "typeshed.typeshed.stdlib.types._Cell",
    "typeshed.typeshed.stubs.WTForms.wtforms.fields.core.Field",
    "typeshed.typeshed.stubs.dateparser.dateparser.conf.Settings",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.key.Key",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.metadata.EntityGroup",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.model.ModelAdapter",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.query.Node",
    "typeshed.typeshed.stubs.ibm-db.ibm_db.IBM_DBClientInfo",
    "typeshed.typeshed.stubs.ibm-db.ibm_db.IBM_DBConnection",
    "typeshed.typeshed.stubs.ibm-db.ibm_db.IBM_DBServerInfo",
    "typeshed.typeshed.stubs.ibm-db.ibm_db.IBM_DBStatement",
    "typeshed.typeshed.stubs.ldap3.ldap3.strategy.reusable.ReusableStrategy.ConnectionPool",
    "typeshed.typeshed.stubs.peewee.peewee.PrefetchQuery",
    "typeshed.typeshed.stubs.peewee.peewee.State",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor.OneofDescriptor",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor_pool.DescriptorPool",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.base.NoValue",
    "typeshed.typeshed.stubs.pywin32._win32typing.PyDSOP_SCOPE_INIT_INFOs",
    "typeshed.typeshed.stubs.pyxdg.xdg.Mime.MIMEtype",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.python.feature_column.sequence_feature_column.SequenceNumericColumn"
  ],
  "object.__reduce__": [
    "_decimal.Context",
    "_decimal.Decimal",
    "blinker._utilities._symbol",
    "collections.deque",
    "concurrent.futures.process._ExceptionWithTraceback",
    "dateutil.tz.tz.tzfile",
    "django.db.models.fields.related_descriptors.ForwardManyToOneDescriptor",
    "django.db.models.fields.related_descriptors.ReverseOneToOneDescriptor",
    "django.utils.functional.LazyObject",
    "django.utils.functional.Promise",
    "graphql.pyutils.default_ordered_dict.DefaultOrderedDict",
    "jinja2.exceptions.TemplateSyntaxError",
    "libcst._exceptions.ParserSyntaxError",
    "libcst.matchers._visitors.MatchDecoratorMismatch",
    "multiprocessing.managers.BaseProxy",
    "multiprocessing.shared_memory.ShareableList",
    "multiprocessing.sharedctypes.SynchronizedBase",
    "paramiko.ssh_exception.NoValidConnectionsError",
    "passlib.utils.compat._ordered_dict.OrderedDict",
    "pip._vendor.distlib.compat.OrderedDict",
    "pip._vendor.typing_extensions.NewType",
    "pip._vendor.typing_extensions.ParamSpec",
    "pip._vendor.typing_extensions.TypeAliasType",
    "pip._vendor.typing_extensions.TypeVarTuple",
    "pip._vendor.typing_extensions._AnnotatedAlias",
    "pip._vendor.typing_extensions._SpecialForm",
    "pip._vendor.urllib3.exceptions.PoolError",
    "plistlib.UID",
    "psycopg2._psycopg.Error",
    "psycopg2.extras.DictRow",
    "simplejson.errors.JSONDecodeError",
    "sqlalchemy.cresultproxy.BaseRow",
    "sqlalchemy.event.base._Dispatch",
    "sqlalchemy.exc.CircularDependencyError",
    "sqlalchemy.exc.NoReferencedColumnError",
    "sqlalchemy.exc.NoReferencedTableError",
    "sqlalchemy.exc.ObjectNotExecutableError",
    "sqlalchemy.exc.StatementError",
    "sqlalchemy.exc.UnsupportedCompilationError",
    "sqlalchemy.ext.orderinglist.OrderingList",
    "sqlalchemy.orm.attributes.QueryableAttribute",
    "sqlalchemy.orm.collections._PlainColumnGetter",
    "sqlalchemy.orm.collections._SerializableAttrGetter",
    "sqlalchemy.orm.collections._SerializableColumnGetter",
    "sqlalchemy.orm.exc.ObjectDeletedError",
    "sqlalchemy.orm.exc.UnmappedClassError",
    "sqlalchemy.orm.exc.UnmappedInstanceError",
    "sqlalchemy.orm.path_registry.PathRegistry",
    "sqlalchemy.sql.annotation.Annotated",
    "sqlalchemy.sql.elements.Label",
    "sqlalchemy.sql.elements.Over",
    "sqlalchemy.sql.elements.WithinGroup",
    "sqlalchemy.sql.elements.quoted_name",
    "sqlalchemy.sql.sqltypes.PickleType",
    "sqlalchemy.sql.type_api.TypeEngine.Comparator",
    "sqlalchemy.util._collections.FacadeDict",
    "sqlalchemy.util.langhelpers._symbol",
    "stripe.stripe_object.StripeObject",
    "typeshed.typeshed.stdlib._decimal.Context",
    "typeshed.typeshed.stdlib._decimal.Decimal",
    "typeshed.typeshed.stdlib.builtins.object",
    "typeshed.typeshed.stdlib.collections.deque",
    "typeshed.typeshed.stdlib.concurrent.futures.process._ExceptionWithTraceback",
    "typeshed.typeshed.stdlib.multiprocessing.managers.BaseProxy",
    "typeshed.typeshed.stdlib.multiprocessing.shared_memory.ShareableList",
    "typeshed.typeshed.stdlib.multiprocessing.sharedctypes.SynchronizedBase",
    "typeshed.typeshed.stdlib.plistlib.UID",
    "typeshed.typeshed.stubs.paramiko.paramiko.ssh_exception.NoValidConnectionsError",
    "typeshed.typeshed.stubs.passlib.passlib.utils.compat._ordered_dict.OrderedDict",
    "typeshed.typeshed.stubs.psycopg2.psycopg2._psycopg.Error",
    "typeshed.typeshed.stubs.psycopg2.psycopg2.extras.DictRow",
    "typeshed.typeshed.stubs.python-dateutil.dateutil.tz.tz.tzfile",
    "typeshed.typeshed.stubs.simplejson.simplejson.errors.JSONDecodeError",
    "typeshed.typeshed.stubs.stripe.stripe.stripe_object.StripeObject",
    "typeshed.typeshed.stubs.translationstring.translationstring.TranslationString",
    "werkzeug._internal._Missing"
  ],
  "object.__reduce_ex__": [
    "dateutil.tz.tz.tzfile",
    "enum.Enum",
    "sqlalchemy.ext.mutable.MutableList",
    "sqlalchemy.ext.mutable.MutableSet",
    "typeshed.typeshed.stdlib.builtins.object",
    "typeshed.typeshed.stdlib.enum.Enum",
    "typeshed.typeshed.stubs.python-dateutil.dateutil.tz.tz.tzfile"
  ],
  "object.__repr__": [
    "BaseException",
    "IPython.core.alias.Alias",
    "IPython.core.async_helpers._AsyncIOProxy",
    "IPython.core.completer.Completion",
    "IPython.core.completer.SimpleCompletion",
    "IPython.core.completer._FakeJediCompletion",
    "IPython.core.display.DisplayObject",
    "IPython.core.display_functions.DisplayHandle",
    "IPython.core.display_functions._Sentinel",
    "IPython.core.inputtransformer.CoroutineInputTransformer",
    "IPython.core.inputtransformer.StatelessInputTransformer",
    "IPython.core.interactiveshell.ExecutionInfo",
    "IPython.core.interactiveshell.ExecutionResult",
    "IPython.core.macro.Macro",
    "IPython.core.prefilter.PrefilterChecker",
    "IPython.core.prefilter.PrefilterTransformer",
    "IPython.lib.backgroundjobs.BackgroundJobBase",
    "IPython.lib.display.Code",
    "IPython.lib.display.FileLink",
    "IPython.terminal.embed._Sentinel",
    "IPython.utils.sentinel.Sentinel",
    "IPython.utils.shimmodule.ShimModule",
    "IPython.utils.strdispatch.StrDispatch",
    "IPython.utils.text.DollarFormatter",
    "blinker._utilities._symbol",
    "blinker.base.NamedSignal",
    "cffi.backend_ctypes.CTypesData",
    "click._compat._AtomicFile",
    "click._winconsole.ConsoleStream",
    "click.core.BaseCommand",
    "click.core.Parameter",
    "click.testing.EchoingStdin",
    "click.testing.Result",
    "click.types.BoolParamType",
    "click.types.Choice",
    "click.types.DateTime",
    "click.types.FloatParamType",
    "click.types.IntParamType",
    "click.types.StringParamType",
    "click.types.UUIDParameterType",
    "click.types.UnprocessedParamType",
    "click.types._NumberRangeBase",
    "click.utils.KeepOpenFile",
    "click.utils.LazyFile",
    "django_stubs_ext.patch.MPGeneric",
    "flask.config.Config",
    "flask.ctx.RequestContext",
    "flask.ctx._AppCtxGlobals",
    "flask.sansio.scaffold.Scaffold",
    "graphql.language.ast.Argument",
    "graphql.language.ast.BooleanValue",
    "graphql.language.ast.Directive",
    "graphql.language.ast.DirectiveDefinition",
    "graphql.language.ast.Document",
    "graphql.language.ast.EnumTypeDefinition",
    "graphql.language.ast.EnumValue",
    "graphql.language.ast.EnumValueDefinition",
    "graphql.language.ast.Field",
    "graphql.language.ast.FieldDefinition",
    "graphql.language.ast.FloatValue",
    "graphql.language.ast.FragmentDefinition",
    "graphql.language.ast.FragmentSpread",
    "graphql.language.ast.InlineFragment",
    "graphql.language.ast.InputObjectTypeDefinition",
    "graphql.language.ast.InputValueDefinition",
    "graphql.language.ast.IntValue",
    "graphql.language.ast.InterfaceTypeDefinition",
    "graphql.language.ast.ListType",
    "graphql.language.ast.ListValue",
    "graphql.language.ast.Name",
    "graphql.language.ast.NamedType",
    "graphql.language.ast.NonNullType",
    "graphql.language.ast.ObjectField",
    "graphql.language.ast.ObjectTypeDefinition",
    "graphql.language.ast.ObjectValue",
    "graphql.language.ast.OperationDefinition",
    "graphql.language.ast.OperationTypeDefinition",
    "graphql.language.ast.ScalarTypeDefinition",
    "graphql.language.ast.SchemaDefinition",
    "graphql.language.ast.SelectionSet",
    "graphql.language.ast.StringValue",
    "graphql.language.ast.TypeExtensionDefinition",
    "graphql.language.ast.UnionTypeDefinition",
    "graphql.language.ast.Variable",
    "graphql.language.ast.VariableDefinition",
    "graphql.language.lexer.Token",
    "graphql.language.location.SourceLocation",
    "graphql.language.parser.Loc",
    "graphql.pyutils.default_ordered_dict.DefaultOrderedDict",
    "graphql.pyutils.enum.EnumMeta",
    "graphql.pyutils.pair_set.PairSet",
    "graphql.utils.undefined._Undefined",
    "importlib_metadata.EntryPoint",
    "importlib_metadata.EntryPoints",
    "importlib_metadata.FileHash",
    "jinja2.environment.Template",
    "jinja2.environment.TemplateModule",
    "jinja2.filters._GroupTuple",
    "jinja2.nodes.Node",
    "jinja2.runtime.Context",
    "jinja2.runtime.LoopContext",
    "jinja2.runtime.Macro",
    "jinja2.runtime.TemplateReference",
    "jinja2.runtime.Undefined",
    "jinja2.utils.LRUCache",
    "jinja2.utils.Namespace",
    "ldap3.operation.search.FilterNode",
    "libcst._exceptions.ParserSyntaxError",
    "libcst._maybe_sentinel.MaybeSentinel",
    "libcst._nodes.base.CSTNode",
    "libcst._parser.parso.pgen2.generator.DFAPlan",
    "libcst._parser.parso.pgen2.generator.DFAState",
    "libcst._parser.parso.pgen2.generator.ReservedString",
    "libcst._parser.parso.pgen2.grammar_parser.NFAArc",
    "libcst._parser.parso.pgen2.grammar_parser.NFAState",
    "libcst._parser.parso.python.py_token.TokenType",
    "libcst._parser.parso.python.tokenize.PythonToken",
    "libcst._parser.types.config.AutoConfig",
    "libcst._parser.types.config.PartialParserConfig",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.AtLeastN",
    "libcst.matchers._matcher_base.AtMostN",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.MatchIfTrue",
    "libcst.matchers._matcher_base.MatchMetadata",
    "libcst.matchers._matcher_base.MatchMetadataIfTrue",
    "libcst.matchers._matcher_base.OneOf",
    "libcst.matchers._matcher_base.TypeOf",
    "libcst.matchers._matcher_base._ExtractMatchingNode",
    "libcst.matchers._matcher_base._InverseOf",
    "libcst.metadata.wrapper.MetadataWrapper",
    "markupsafe.Markup",
    "markupsafe._MarkupEscapeHelper",
    "marshmallow.fields.Field",
    "marshmallow.orderedset.OrderedSet",
    "marshmallow.schema.Schema",
    "marshmallow.utils._Missing",
    "marshmallow.validate.Validator",
    "packaging._parser.Node",
    "packaging._structures.InfinityType",
    "packaging._structures.NegativeInfinityType",
    "packaging.markers.Marker",
    "packaging.metadata.ExceptionGroup",
    "packaging.requirements.Requirement",
    "packaging.specifiers.Specifier",
    "packaging.specifiers.SpecifierSet",
    "packaging.tags.Tag",
    "packaging.version.Version",
    "parsimonious.nodes.Node",
    "parso.file_io.FileIO",
    "parso.grammar.Grammar",
    "parso.normalizer.Issue",
    "parso.parser.StackNode",
    "parso.pgen2.generator.DFAPlan",
    "parso.pgen2.generator.DFAState",
    "parso.pgen2.generator.ReservedString",
    "parso.pgen2.grammar_parser.NFAArc",
    "parso.pgen2.grammar_parser.NFAState",
    "parso.python.diff._NodesTreeNode",
    "parso.python.pep8.IndentationNode",
    "parso.python.prefix.PrefixPart",
    "parso.python.token.TokenType",
    "parso.python.tokenize.PythonToken",
    "parso.python.tree.EndMarker",
    "parso.python.tree.Lambda",
    "parso.python.tree.Name",
    "parso.python.tree.Newline",
    "parso.python.tree.Param",
    "parso.python.tree.Scope",
    "parso.tree.BaseNode",
    "parso.tree.Leaf",
    "pdb._rstr",
    "pip._internal.configuration.Configuration",
    "pip._internal.exceptions.DiagnosticPipError",
    "pip._internal.metadata.base.BaseDistribution",
    "pip._internal.models.candidate.InstallationCandidate",
    "pip._internal.models.format_control.FormatControl",
    "pip._internal.models.link.Link",
    "pip._internal.req.InstallationResult",
    "pip._internal.req.req_install.InstallRequirement",
    "pip._internal.req.req_set.RequirementSet",
    "pip._internal.resolution.resolvelib.candidates.AlreadyInstalledCandidate",
    "pip._internal.resolution.resolvelib.candidates.ExtrasCandidate",
    "pip._internal.resolution.resolvelib.candidates._InstallRequirementBackedCandidate",
    "pip._internal.resolution.resolvelib.requirements.ExplicitRequirement",
    "pip._internal.resolution.resolvelib.requirements.RequiresPythonRequirement",
    "pip._internal.resolution.resolvelib.requirements.SpecifierRequirement",
    "pip._internal.resolution.resolvelib.requirements.UnsatisfiableRequirement",
    "pip._internal.utils.misc.HiddenText",
    "pip._internal.utils.temp_dir.TempDirectory",
    "pip._internal.vcs.versioncontrol.RevOptions",
    "pip._vendor.chardet.metadata.languages.Language",
    "pip._vendor.distlib.compat.ChainMap",
    "pip._vendor.distlib.compat.OrderedDict",
    "pip._vendor.distlib.database.DependencyGraph",
    "pip._vendor.distlib.database.Distribution",
    "pip._vendor.distlib.database.EggInfoDistribution",
    "pip._vendor.distlib.database.InstalledDistribution",
    "pip._vendor.distlib.metadata.LegacyMetadata",
    "pip._vendor.distlib.metadata.Metadata",
    "pip._vendor.distlib.util.ExportEntry",
    "pip._vendor.distlib.version.Matcher",
    "pip._vendor.distlib.version.Version",
    "pip._vendor.distro.distro.LinuxDistribution",
    "pip._vendor.msgpack.ext.Timestamp",
    "pip._vendor.packaging._structures.InfinityType",
    "pip._vendor.packaging._structures.NegativeInfinityType",
    "pip._vendor.packaging.markers.Marker",
    "pip._vendor.packaging.markers.Node",
    "pip._vendor.packaging.requirements.Requirement",
    "pip._vendor.packaging.specifiers.SpecifierSet",
    "pip._vendor.packaging.specifiers._IndividualSpecifier",
    "pip._vendor.packaging.tags.Tag",
    "pip._vendor.packaging.version.LegacyVersion",
    "pip._vendor.packaging.version.Version",
    "pip._vendor.pkg_resources.Distribution",
    "pip._vendor.pkg_resources.EntryPoint",
    "pip._vendor.pkg_resources.ResolutionError",
    "pip._vendor.pygments.lexer.Lexer",
    "pip._vendor.pygments.lexer.LexerContext",
    "pip._vendor.pygments.lexer._inherit",
    "pip._vendor.pygments.scanner.Scanner",
    "pip._vendor.pygments.token._TokenType",
    "pip._vendor.pyparsing.core.ParserElement",
    "pip._vendor.pyparsing.exceptions.ParseBaseException",
    "pip._vendor.pyparsing.results.ParseResults",
    "pip._vendor.pyparsing.version_info",
    "pip._vendor.requests.models.PreparedRequest",
    "pip._vendor.requests.models.Request",
    "pip._vendor.requests.models.Response",
    "pip._vendor.requests.structures.CaseInsensitiveDict",
    "pip._vendor.requests.structures.LookupDict",
    "pip._vendor.resolvelib.resolvers.Criterion",
    "pip._vendor.resolvelib.structs.IteratorMapping",
    "pip._vendor.resolvelib.structs._FactoryIterableView",
    "pip._vendor.resolvelib.structs._SequenceIterableView",
    "pip._vendor.rich.align.Align",
    "pip._vendor.rich.align.VerticalCenter",
    "pip._vendor.rich.bar.Bar",
    "pip._vendor.rich.box.Box",
    "pip._vendor.rich.color.ColorSystem",
    "pip._vendor.rich.color.ColorType",
    "pip._vendor.rich.console.Console",
    "pip._vendor.rich.containers.Lines",
    "pip._vendor.rich.emoji.Emoji",
    "pip._vendor.rich.padding.Padding",
    "pip._vendor.rich.pretty.BrokenRepr",
    "pip._vendor.rich.pretty.Thing",
    "pip._vendor.rich.progress_bar.ProgressBar",
    "pip._vendor.rich.rule.Rule",
    "pip._vendor.rich.style.StyleStack",
    "pip._vendor.rich.text.Span",
    "pip._vendor.rich.text.Text",
    "pip._vendor.tenacity.BaseAction",
    "pip._vendor.tenacity.BaseRetrying",
    "pip._vendor.tenacity.RetryCallState",
    "pip._vendor.typing_extensions.NewType",
    "pip._vendor.typing_extensions.ParamSpec",
    "pip._vendor.typing_extensions.ParamSpecArgs",
    "pip._vendor.typing_extensions.ParamSpecKwargs",
    "pip._vendor.typing_extensions.TypeAliasType",
    "pip._vendor.typing_extensions.TypeVarTuple",
    "pip._vendor.typing_extensions._AnnotatedAlias",
    "pip._vendor.typing_extensions._AnyMeta",
    "pip._vendor.typing_extensions._ConcatenateGenericAlias",
    "pip._vendor.typing_extensions._ExtensionsSpecialForm",
    "pip._vendor.typing_extensions._Sentinel",
    "pip._vendor.typing_extensions._SpecialForm",
    "pip._vendor.urllib3._collections.HTTPHeaderDict",
    "pip._vendor.urllib3.exceptions.IncompleteRead",
    "pip._vendor.urllib3.exceptions.InvalidChunkLength",
    "pip._vendor.urllib3.packages.backports.weakref_finalize.weakref_finalize",
    "pip._vendor.urllib3.util.retry.Retry",
    "pip._vendor.urllib3.util.timeout.Timeout",
    "pip._vendor.webencodings.Encoding",
    "promise.promise.Promise",
    "prompt_toolkit.application.current.AppSession",
    "prompt_toolkit.auto_suggest.Suggestion",
    "prompt_toolkit.buffer.Buffer",
    "prompt_toolkit.buffer.CompletionState",
    "prompt_toolkit.buffer.YankNthArgState",
    "prompt_toolkit.completion.base.CompleteEvent",
    "prompt_toolkit.completion.base.Completion",
    "prompt_toolkit.completion.base.ConditionalCompleter",
    "prompt_toolkit.completion.base.DummyCompleter",
    "prompt_toolkit.completion.base.DynamicCompleter",
    "prompt_toolkit.completion.base.ThreadedCompleter",
    "prompt_toolkit.completion.nested.NestedCompleter",
    "prompt_toolkit.contrib.regular_languages.compiler.MatchVariable",
    "prompt_toolkit.contrib.regular_languages.compiler.Variables",
    "prompt_toolkit.contrib.regular_languages.regex_parser.AnyNode",
    "prompt_toolkit.contrib.regular_languages.regex_parser.Lookahead",
    "prompt_toolkit.contrib.regular_languages.regex_parser.NodeSequence",
    "prompt_toolkit.contrib.regular_languages.regex_parser.Regex",
    "prompt_toolkit.contrib.regular_languages.regex_parser.Repeat",
    "prompt_toolkit.contrib.regular_languages.regex_parser.Variable",
    "prompt_toolkit.document.Document",
    "prompt_toolkit.filters.base.Condition",
    "prompt_toolkit.filters.base._AndList",
    "prompt_toolkit.filters.base._Invert",
    "prompt_toolkit.filters.base._OrList",
    "prompt_toolkit.formatted_text.ansi.ANSI",
    "prompt_toolkit.formatted_text.base.FormattedText",
    "prompt_toolkit.formatted_text.html.HTML",
    "prompt_toolkit.history.ThreadedHistory",
    "prompt_toolkit.key_binding.key_bindings.Binding",
    "prompt_toolkit.key_binding.key_processor.KeyPress",
    "prompt_toolkit.key_binding.key_processor.KeyPressEvent",
    "prompt_toolkit.layout.containers.ConditionalContainer",
    "prompt_toolkit.layout.containers.Float",
    "prompt_toolkit.layout.containers.ScrollOffsets",
    "prompt_toolkit.layout.containers.Window",
    "prompt_toolkit.layout.controls.BufferControl",
    "prompt_toolkit.layout.controls.FormattedTextControl",
    "prompt_toolkit.layout.dimension.Dimension",
    "prompt_toolkit.layout.layout.Layout",
    "prompt_toolkit.layout.processors.AfterInput",
    "prompt_toolkit.layout.processors.BeforeInput",
    "prompt_toolkit.layout.processors.ConditionalProcessor",
    "prompt_toolkit.layout.screen.Char",
    "prompt_toolkit.layout.screen.WritePosition",
    "prompt_toolkit.layout.scrollable_pane.ScrollablePane",
    "prompt_toolkit.mouse_events.MouseEvent",
    "prompt_toolkit.search.SearchState",
    "prompt_toolkit.selection.SelectionState",
    "prompt_toolkit.validation.ValidationError",
    "prompt_toolkit.validation._ValidatorFromCallable",
    "prompt_toolkit.win32_types.CONSOLE_SCREEN_BUFFER_INFO",
    "prompt_toolkit.win32_types.COORD",
    "pure_eval.utils.CannotEval",
    "stack_data.core.FrameInfo",
    "stack_data.core.Line",
    "stack_data.core.LineGap",
    "stack_data.core.Options",
    "stack_data.core.RepeatedFrames",
    "testslide.matchers.RegexMatches",
    "testslide.matchers._AndMatcher",
    "testslide.matchers._InvMatcher",
    "testslide.matchers._OrMatcher",
    "testslide.matchers._RichComparison",
    "testslide.matchers._XorMatcher",
    "testslide.strict_mock.StrictMock",
    "testslide.strict_mock._MethodProxy",
    "traitlets.config.loader.DeferredConfigList",
    "traitlets.config.loader.DeferredConfigString",
    "traitlets.config.loader.LazyConfigValue",
    "traitlets.config.loader._Sentinel",
    "traitlets.traitlets._SimpleTest",
    "traitlets.utils.sentinel.Sentinel",
    "typeshed.typeshed.stdlib.builtins.BaseException",
    "typeshed.typeshed.stdlib.builtins.object",
    "typeshed.typeshed.stdlib.pdb._rstr",
    "typeshed.typeshed.stubs.cffi.cffi.backend_ctypes.CTypesData",
    "typeshed.typeshed.stubs.ldap3.ldap3.operation.search.FilterNode",
    "typeshed.typeshed.stubs.parsimonious.parsimonious.nodes.Node",
    "werkzeug._internal._DictAccessorProperty",
    "werkzeug._internal._Missing",
    "werkzeug.datastructures.auth.Authorization",
    "werkzeug.datastructures.auth.WWWAuthenticate",
    "werkzeug.datastructures.file_storage.FileStorage",
    "werkzeug.debug.console.ThreadedStream",
    "werkzeug.debug.repr._Helper",
    "werkzeug.exceptions.HTTPException",
    "werkzeug.local.LocalManager",
    "werkzeug.local._ProxyLookup",
    "werkzeug.routing.map.Map",
    "werkzeug.routing.rules.Rule",
    "werkzeug.sansio.request.Request",
    "werkzeug.sansio.response.Response",
    "werkzeug.test.Client",
    "werkzeug.user_agent.UserAgent",
    "werkzeug.utils.ImportStringError"
  ],
  "object.__setattr__": [
    "IPython.utils.ipstruct.Struct",
    "MySQLdb._mysql.connection",
    "MySQLdb._mysql.result",
    "PIL.PdfParser.PdfDict",
    "Xlib.protocol.rq.GetAttrData",
    "_dummy_threading.local",
    "_threading_local.local",
    "argparse.Namespace",
    "asgiref.local.Local",
    "aws_xray_sdk.core.async_context.TaskLocalStorage",
    "babel.support.LazyProxy",
    "boto.exception.BotoServerError",
    "ctypes._StructUnionBase",
    "django.conf.UserSettingsHolder",
    "django.db.backends.oracle.base.VariableWrapper",
    "django.utils.connection.ConnectionProxy",
    "django.utils.functional.LazyObject",
    "django_stubs_ext.types.AnyAttrAllowed",
    "flask.ctx._AppCtxGlobals",
    "fpdf.deprecation.WarnOnDeprecatedModuleAttributes",
    "gflags.FlagValues",
    "google.cloud.ndb.model.Expando",
    "graphql.pyutils.enum.EnumMeta",
    "importlib_metadata.EntryPoint",
    "invoke.config.DataProxy",
    "ldap3.abstract.attrDef.AttrDef",
    "ldap3.abstract.entry.EntryBase",
    "ldap3.abstract.objectDef.ObjectDef",
    "logging.LogRecord",
    "multiprocessing.dummy.Namespace",
    "multiprocessing.managers.Namespace",
    "oauthlib.openid.connect.core.grant_types.base.GrantTypeBase",
    "openpyxl.styles.named_styles.NamedStyle",
    "openpyxl.styles.proxy.StyleProxy",
    "optparse.Values",
    "paho.mqtt.properties.Properties",
    "paho.mqtt.subscribeoptions.SubscribeOptions",
    "passlib.registry._PasslibRegistryProxy",
    "passlib.utils.handlers.PrefixWrapper",
    "peewee.ModelAlias",
    "peewee.Proxy",
    "peewee.attrdict",
    "pip._vendor.distlib.metadata.Metadata",
    "pip._vendor.typing_extensions.TypeAliasType",
    "pyasn1.type.base.Asn1Type",
    "requests.structures.LookupDict",
    "sqlalchemy.orm.decl_api.DeclarativeMeta",
    "sqlalchemy.sql.base.ColumnCollection",
    "sqlalchemy.util._collections.ImmutableContainer",
    "sqlalchemy.util._collections.Properties",
    "stripe.stripe_object.StripeObject",
    "testslide.strict_mock.StrictMock",
    "testslide.strict_mock._MethodProxy",
    "threading.local",
    "tqdm.utils.ObjectWrapper",
    "traitlets.config.loader.Config",
    "traitlets.utils.bunch.Bunch",
    "types.SimpleNamespace",
    "typeshed.typeshed.stdlib._ctypes._StructUnionBase",
    "typeshed.typeshed.stdlib._dummy_threading.local",
    "typeshed.typeshed.stdlib._threading_local.local",
    "typeshed.typeshed.stdlib.argparse.Namespace",
    "typeshed.typeshed.stdlib.builtins.object",
    "typeshed.typeshed.stdlib.logging.LogRecord",
    "typeshed.typeshed.stdlib.multiprocessing.dummy.Namespace",
    "typeshed.typeshed.stdlib.multiprocessing.managers.Namespace",
    "typeshed.typeshed.stdlib.optparse.Values",
    "typeshed.typeshed.stdlib.threading.local",
    "typeshed.typeshed.stdlib.types.SimpleNamespace",
    "typeshed.typeshed.stdlib.unittest.mock.NonCallableMock",
    "typeshed.typeshed.stubs.Pillow.PIL.PdfParser.PdfDict",
    "typeshed.typeshed.stubs.WTForms.wtforms.fields.core.Flags",
    "typeshed.typeshed.stubs.WTForms.wtforms.form.FormMeta",
    "typeshed.typeshed.stubs.WebOb.webob.request.AdhocAttrMixin",
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.async_context.TaskLocalStorage",
    "typeshed.typeshed.stubs.boto.boto.exception.BotoServerError",
    "typeshed.typeshed.stubs.fpdf2.fpdf.deprecation.WarnOnDeprecatedModuleAttributes",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.model.Expando",
    "typeshed.typeshed.stubs.ldap3.ldap3.abstract.attrDef.AttrDef",
    "typeshed.typeshed.stubs.ldap3.ldap3.abstract.entry.EntryBase",
    "typeshed.typeshed.stubs.ldap3.ldap3.abstract.objectDef.ObjectDef",
    "typeshed.typeshed.stubs.mysqlclient.MySQLdb._mysql.connection",
    "typeshed.typeshed.stubs.mysqlclient.MySQLdb._mysql.result",
    "typeshed.typeshed.stubs.oauthlib.oauthlib.openid.connect.core.grant_types.base.GrantTypeBase",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.styles.named_styles.NamedStyle",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.styles.proxy.StyleProxy",
    "typeshed.typeshed.stubs.paho-mqtt.paho.mqtt.properties.Properties",
    "typeshed.typeshed.stubs.paho-mqtt.paho.mqtt.subscribeoptions.SubscribeOptions",
    "typeshed.typeshed.stubs.passlib.passlib.registry._PasslibRegistryProxy",
    "typeshed.typeshed.stubs.passlib.passlib.utils.handlers.PrefixWrapper",
    "typeshed.typeshed.stubs.peewee.peewee.ModelAlias",
    "typeshed.typeshed.stubs.peewee.peewee.Proxy",
    "typeshed.typeshed.stubs.peewee.peewee.attrdict",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.base.Asn1Type",
    "typeshed.typeshed.stubs.python-gflags.gflags.FlagValues",
    "typeshed.typeshed.stubs.python-xlib.Xlib.protocol.rq.GetAttrData",
    "typeshed.typeshed.stubs.pywin32.win32com.client.CoClassBaseClass",
    "typeshed.typeshed.stubs.pywin32.win32com.client.DispatchBaseClass",
    "typeshed.typeshed.stubs.pywin32.win32com.client.EventsProxy",
    "typeshed.typeshed.stubs.pywin32.win32com.client.dynamic.CDispatch",
    "typeshed.typeshed.stubs.requests.requests.structures.LookupDict",
    "typeshed.typeshed.stubs.stripe.stripe.stripe_object.StripeObject",
    "typeshed.typeshed.stubs.tqdm.tqdm.utils.ObjectWrapper",
    "typeshed.typeshed.stubs.usersettings.usersettings.Settings",
    "typeshed.typeshed.stubs.vobject.vobject.base.Component",
    "typeshed.typeshed.stubs.vobject.vobject.base.ContentLine",
    "unittest.mock.NonCallableMock",
    "vobject.base.Component",
    "vobject.base.ContentLine",
    "werkzeug.datastructures.auth.WWWAuthenticate",
    "werkzeug.debug.console.ThreadedStream",
    "werkzeug.local.Local",
    "win32com.client.CoClassBaseClass",
    "win32com.client.DispatchBaseClass",
    "win32com.client.EventsProxy",
    "win32com.client.dynamic.CDispatch"
  ],
  "object.__sizeof__": [
    "typeshed.typeshed.stdlib.builtins.object"
  ],
  "object.__str__": [
    "BaseException",
    "IPython.core.async_helpers._AsyncIORunner",
    "IPython.core.hooks.CommandChainDispatcher",
    "IPython.core.macro.Macro",
    "IPython.core.magics.basic.MagicsDisplay",
    "IPython.core.magics.execution.TimeitResult",
    "IPython.core.prefilter.PrefilterHandler",
    "IPython.core.prompts.LazyEvaluate",
    "IPython.core.splitinput.LineInfo",
    "IPython.lib.backgroundjobs.BackgroundJobBase",
    "IPython.terminal.pt_inputhooks.UnknownBackend",
    "IPython.utils.capture.CapturedIO",
    "asttokens.util.Token",
    "blinker._saferef.BoundMethodWeakref",
    "click.exceptions.ClickException",
    "click.exceptions.MissingParameter",
    "distutils.version.Version",
    "flask.debughelpers.DebugFilesKeyError",
    "graphql.execution.base.ExecutionResult",
    "graphql.pyutils.pair_set.PairSet",
    "graphql.type.definition.GraphQLList",
    "graphql.type.definition.GraphQLNamedType",
    "graphql.type.definition.GraphQLNonNull",
    "importlib_metadata.PackageNotFoundError",
    "itsdangerous.exc.BadData",
    "jinja2.environment.TemplateModule",
    "jinja2.exceptions.TemplateNotFound",
    "jinja2.exceptions.TemplateSyntaxError",
    "jinja2.filters._GroupTuple",
    "jinja2.lexer.Token",
    "jinja2.runtime.Undefined",
    "jinja2.runtime.make_logging_undefined.LoggingUndefined",
    "ldap3.operation.search.FilterNode",
    "libcst._exceptions.ParserSyntaxError",
    "libcst._parser.types.production.Production",
    "markupsafe._MarkupEscapeHelper",
    "packaging._parser.Node",
    "packaging._tokenizer.ParserSyntaxError",
    "packaging.markers.Marker",
    "packaging.requirements.Requirement",
    "packaging.specifiers.BaseSpecifier",
    "packaging.tags.Tag",
    "packaging.version.Version",
    "pip._internal.exceptions.ConfigurationFileCouldNotBeLoaded",
    "pip._internal.exceptions.HashError",
    "pip._internal.exceptions.HashErrors",
    "pip._internal.exceptions.InstallationSubprocessError",
    "pip._internal.exceptions.InvalidSchemeCombination",
    "pip._internal.exceptions.InvalidWheel",
    "pip._internal.exceptions.MetadataInconsistent",
    "pip._internal.exceptions.NetworkConnectionError",
    "pip._internal.exceptions.NoneMetadataError",
    "pip._internal.exceptions.UserInstallationInvalid",
    "pip._internal.index.collector.IndexContent",
    "pip._internal.metadata.base.BaseDistribution",
    "pip._internal.metadata.importlib._compat.BadMetadata",
    "pip._internal.models.candidate.InstallationCandidate",
    "pip._internal.models.link.Link",
    "pip._internal.operations.freeze.FrozenRequirement",
    "pip._internal.req.req_install.InstallRequirement",
    "pip._internal.req.req_set.RequirementSet",
    "pip._internal.resolution.resolvelib.candidates.AlreadyInstalledCandidate",
    "pip._internal.resolution.resolvelib.candidates.ExtrasCandidate",
    "pip._internal.resolution.resolvelib.candidates.RequiresPythonCandidate",
    "pip._internal.resolution.resolvelib.candidates._InstallRequirementBackedCandidate",
    "pip._internal.resolution.resolvelib.requirements.ExplicitRequirement",
    "pip._internal.resolution.resolvelib.requirements.RequiresPythonRequirement",
    "pip._internal.resolution.resolvelib.requirements.SpecifierRequirement",
    "pip._internal.resolution.resolvelib.requirements.UnsatisfiableRequirement",
    "pip._internal.utils.misc.HiddenText",
    "pip._vendor.colorama.win32.CONSOLE_SCREEN_BUFFER_INFO",
    "pip._vendor.distlib.database.EggInfoDistribution",
    "pip._vendor.distlib.database.InstalledDistribution",
    "pip._vendor.distlib.version.Matcher",
    "pip._vendor.distlib.version.Version",
    "pip._vendor.msgpack.exceptions.ExtraData",
    "pip._vendor.packaging.markers.Marker",
    "pip._vendor.packaging.markers.Node",
    "pip._vendor.packaging.requirements.Requirement",
    "pip._vendor.packaging.specifiers.BaseSpecifier",
    "pip._vendor.packaging.tags.Tag",
    "pip._vendor.packaging.version.LegacyVersion",
    "pip._vendor.packaging.version.Version",
    "pip._vendor.pkg_resources.Distribution",
    "pip._vendor.pkg_resources.DistributionNotFound",
    "pip._vendor.pkg_resources.EntryPoint",
    "pip._vendor.pyparsing.core.ParserElement",
    "pip._vendor.pyparsing.core._NullToken",
    "pip._vendor.pyparsing.exceptions.ParseBaseException",
    "pip._vendor.pyparsing.exceptions.RecursiveGrammarException",
    "pip._vendor.pyparsing.results.ParseResults",
    "pip._vendor.pyparsing.version_info",
    "pip._vendor.resolvelib.resolvers.InconsistentCandidate",
    "pip._vendor.resolvelib.resolvers.RequirementsConflicted",
    "pip._vendor.rich.box.Box",
    "pip._vendor.rich.color.ColorSystem",
    "pip._vendor.rich.control.Control",
    "pip._vendor.rich.emoji.Emoji",
    "pip._vendor.rich.markup.Tag",
    "pip._vendor.rich.pretty.Node",
    "pip._vendor.rich.pretty._Line",
    "pip._vendor.rich.style.Style",
    "pip._vendor.rich.text.Text",
    "pip._vendor.tenacity.BaseAction",
    "pip._vendor.tenacity.RetryError",
    "pip._vendor.urllib3.connectionpool.ConnectionPool",
    "pip._vendor.urllib3.util.url.Url",
    "testslide.import_profiler.ImportedModule",
    "testslide.strict_mock.StrictMock",
    "traitlets.config.loader._Sentinel",
    "traitlets.traitlets._SimpleTest",
    "typeshed.typeshed.stdlib.builtins.BaseException",
    "typeshed.typeshed.stdlib.builtins.object",
    "typeshed.typeshed.stdlib.distutils.version.Version",
    "typeshed.typeshed.stubs.WebOb.webob.cookies.Cookie",
    "typeshed.typeshed.stubs.WebOb.webob.cookies.Morsel",
    "typeshed.typeshed.stubs.WebOb.webob.exc.WSGIHTTPException",
    "typeshed.typeshed.stubs.WebOb.webob.response.Response",
    "typeshed.typeshed.stubs.ldap3.ldap3.operation.search.FilterNode",
    "typeshed.typeshed.stubs.pyinstaller.PyInstaller.utils.win32.versioninfo.FixedFileInfo",
    "typeshed.typeshed.stubs.pyinstaller.PyInstaller.utils.win32.versioninfo.VSVersionInfo",
    "typeshed.typeshed.stubs.pyinstaller.PyInstaller.utils.win32.versioninfo._Kid",
    "typeshed.typeshed.stubs.setuptools.pkg_resources._vendor.packaging.specifiers.BaseSpecifier",
    "werkzeug.datastructures.auth.Authorization",
    "werkzeug.datastructures.auth.WWWAuthenticate",
    "werkzeug.debug.tbtools.DebugTraceback",
    "werkzeug.exceptions.HTTPException",
    "werkzeug.routing.exceptions.BuildError",
    "werkzeug.routing.rules.Rule",
    "werkzeug.user_agent.UserAgent"
  ],
  "object.__subclasshook__": [
    "pip._vendor.rich.abc.RichRenderable",
    "typeshed.typeshed.stdlib.builtins.object"
  ],
  "openpyxl.chart._chart.ChartBase.__init__": [
    "openpyxl.chart.area_chart._AreaChartBase",
    "openpyxl.chart.bar_chart._BarChartBase",
    "openpyxl.chart.bubble_chart.BubbleChart",
    "openpyxl.chart.line_chart._LineChartBase",
    "openpyxl.chart.pie_chart._PieChartBase",
    "openpyxl.chart.radar_chart.RadarChart",
    "openpyxl.chart.scatter_chart.ScatterChart",
    "openpyxl.chart.stock_chart.StockChart",
    "openpyxl.chart.surface_chart._SurfaceChartBase"
  ],
  "openpyxl.chart._chart.ChartBase.tagname": [
    "openpyxl.chart.area_chart._AreaChartBase",
    "openpyxl.chart.bar_chart._BarChartBase",
    "openpyxl.chart.line_chart._LineChartBase",
    "openpyxl.chart.pie_chart._PieChartBase",
    "openpyxl.chart.surface_chart._SurfaceChartBase"
  ],
  "openpyxl.chart.area_chart.AreaChart.__init__": [
    "openpyxl.chart.area_chart.AreaChart3D"
  ],
  "openpyxl.chart.area_chart._AreaChartBase.__init__": [
    "openpyxl.chart.area_chart.AreaChart"
  ],
  "openpyxl.chart.axis.TextAxis.__init__": [
    "openpyxl.chart.axis.DateAxis"
  ],
  "openpyxl.chart.axis._BaseAxis.__init__": [
    "openpyxl.chart.axis.NumericAxis",
    "openpyxl.chart.axis.SeriesAxis",
    "openpyxl.chart.axis.TextAxis"
  ],
  "openpyxl.chart.bar_chart._BarChartBase.__init__": [
    "openpyxl.chart.bar_chart.BarChart",
    "openpyxl.chart.bar_chart.BarChart3D"
  ],
  "openpyxl.chart.label._DataLabelBase.__init__": [
    "openpyxl.chart.label.DataLabel",
    "openpyxl.chart.label.DataLabelList"
  ],
  "openpyxl.chart.line_chart._LineChartBase.__init__": [
    "openpyxl.chart.line_chart.LineChart",
    "openpyxl.chart.line_chart.LineChart3D"
  ],
  "openpyxl.chart.pie_chart._PieChartBase.__init__": [
    "openpyxl.chart.pie_chart.DoughnutChart",
    "openpyxl.chart.pie_chart.PieChart",
    "openpyxl.chart.pie_chart.ProjectedPieChart"
  ],
  "openpyxl.chart.surface_chart.SurfaceChart3D.__init__": [
    "openpyxl.chart.surface_chart.SurfaceChart"
  ],
  "openpyxl.chart.surface_chart._SurfaceChartBase.__init__": [
    "openpyxl.chart.surface_chart.SurfaceChart3D"
  ],
  "openpyxl.descriptors.base.Alias.__get__": [
    "openpyxl.descriptors.sequence.MultiSequencePart"
  ],
  "openpyxl.descriptors.base.Alias.__init__": [
    "openpyxl.descriptors.sequence.MultiSequencePart"
  ],
  "openpyxl.descriptors.base.Alias.__set__": [
    "openpyxl.descriptors.sequence.MultiSequencePart"
  ],
  "openpyxl.descriptors.base.Convertible.__set__": [
    "openpyxl.descriptors.base.Bool",
    "openpyxl.descriptors.base.Max",
    "openpyxl.descriptors.base.Min",
    "openpyxl.formatting.rule.ValueDescriptor",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.formatting.rule.ValueDescriptor",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.filters.CustomFilterValueDescriptor"
  ],
  "openpyxl.descriptors.base.Descriptor.__init__": [
    "openpyxl.descriptors.base.Alias",
    "openpyxl.descriptors.base.Length",
    "openpyxl.descriptors.base.MatchPattern",
    "openpyxl.descriptors.base.Set",
    "openpyxl.descriptors.base.Typed",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.nested.Nested"
  ],
  "openpyxl.descriptors.base.Descriptor.__set__": [
    "openpyxl.descriptors.base.Alias",
    "openpyxl.descriptors.base.Length",
    "openpyxl.descriptors.base.MatchPattern",
    "openpyxl.descriptors.base.Set",
    "openpyxl.descriptors.base.Typed",
    "openpyxl.descriptors.nested.Nested",
    "openpyxl.descriptors.sequence.Sequence",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.nested.Nested"
  ],
  "openpyxl.descriptors.base.MatchPattern.__set__": [
    "openpyxl.descriptors.excel.CellRange"
  ],
  "openpyxl.descriptors.base.Min.__set__": [
    "openpyxl.descriptors.excel.Percentage"
  ],
  "openpyxl.descriptors.base.Set.__init__": [
    "openpyxl.descriptors.base.NoneSet"
  ],
  "openpyxl.descriptors.base.Set.__set__": [
    "openpyxl.descriptors.base.NoneSet"
  ],
  "openpyxl.descriptors.base.Typed.__init__": [
    "openpyxl.descriptors.base.Default",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.colors.ColorChoiceDescriptor",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.styles.colors.ColorDescriptor",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.styles.colors.RGB"
  ],
  "openpyxl.descriptors.base.Typed.__set__": [
    "openpyxl.chart.descriptors.NumberFormatDescriptor",
    "openpyxl.chart.title.TitleDescriptor",
    "openpyxl.descriptors.base.Convertible",
    "openpyxl.descriptors.base.DateTime",
    "openpyxl.drawing.colors.ColorChoiceDescriptor",
    "openpyxl.styles.colors.ColorDescriptor",
    "openpyxl.styles.colors.RGB",
    "openpyxl.styles.numbers.NumberFormatDescriptor",
    "openpyxl.worksheet.table.TableNameDescriptor",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.descriptors.NumberFormatDescriptor",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.title.TitleDescriptor",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.colors.ColorChoiceDescriptor",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.styles.colors.ColorDescriptor",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.styles.colors.RGB",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.styles.numbers.NumberFormatDescriptor",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.table.TableNameDescriptor"
  ],
  "openpyxl.descriptors.nested.Nested.__set__": [
    "openpyxl.chart.data_source.NumberValueDescriptor",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.data_source.NumberValueDescriptor"
  ],
  "openpyxl.descriptors.nested.Nested.from_tree": [
    "openpyxl.descriptors.nested.EmptyTag",
    "openpyxl.descriptors.nested.NestedBool",
    "openpyxl.descriptors.nested.NestedText"
  ],
  "openpyxl.descriptors.nested.Nested.to_tree": [
    "openpyxl.descriptors.nested.EmptyTag",
    "openpyxl.descriptors.nested.NestedText"
  ],
  "openpyxl.descriptors.nested.NestedText.to_tree": [
    "openpyxl.packaging.core.NestedDateTime",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.packaging.core.NestedDateTime"
  ],
  "openpyxl.descriptors.sequence.Sequence.__set__": [
    "openpyxl.descriptors.sequence.MultiSequence",
    "openpyxl.styles.fills.StopList",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.styles.fills.StopList"
  ],
  "openpyxl.descriptors.sequence.Sequence.to_tree": [
    "openpyxl.descriptors.sequence.MultiSequence",
    "openpyxl.descriptors.sequence.NestedSequence",
    "openpyxl.descriptors.sequence.ValueSequence"
  ],
  "openpyxl.descriptors.serialisable.Serialisable.__add__": [
    "openpyxl.styles.colors.Color",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.styles.colors.Color"
  ],
  "openpyxl.descriptors.serialisable.Serialisable.__copy__": [
    "openpyxl.worksheet.cell_range.CellRange",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.cell_range.CellRange"
  ],
  "openpyxl.descriptors.serialisable.Serialisable.__eq__": [
    "openpyxl.formatting.formatting.ConditionalFormatting",
    "openpyxl.worksheet.cell_range.CellRange",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.formatting.formatting.ConditionalFormatting",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.cell_range.CellRange"
  ],
  "openpyxl.descriptors.serialisable.Serialisable.__hash__": [
    "openpyxl.chart._chart.ChartBase",
    "openpyxl.drawing.spreadsheet_drawing.SpreadsheetDrawing",
    "openpyxl.formatting.formatting.ConditionalFormatting",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart._chart.ChartBase",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.spreadsheet_drawing.SpreadsheetDrawing",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.formatting.formatting.ConditionalFormatting"
  ],
  "openpyxl.descriptors.serialisable.Serialisable.__iter__": [
    "openpyxl.styles.alignment.Alignment",
    "openpyxl.styles.borders.Border",
    "openpyxl.styles.colors.Color",
    "openpyxl.styles.fills.GradientFill",
    "openpyxl.styles.named_styles.NamedStyle",
    "openpyxl.workbook.defined_name.DefinedName",
    "openpyxl.worksheet.cell_range.CellRange",
    "openpyxl.worksheet.table.TableColumn",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.styles.alignment.Alignment",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.styles.borders.Border",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.styles.colors.Color",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.styles.fills.GradientFill",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.styles.named_styles.NamedStyle",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.workbook.defined_name.DefinedName",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.cell_range.CellRange",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.table.TableColumn"
  ],
  "openpyxl.descriptors.serialisable.Serialisable.__ne__": [
    "openpyxl.worksheet.cell_range.CellRange",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.cell_range.CellRange"
  ],
  "openpyxl.descriptors.serialisable.Serialisable.from_tree": [
    "openpyxl.chart.axis.NumericAxis",
    "openpyxl.chart.plotarea.PlotArea",
    "openpyxl.styles.fills.Fill",
    "openpyxl.styles.fonts.Font",
    "openpyxl.styles.stylesheet.Stylesheet",
    "openpyxl.workbook.protection.WorkbookProtection",
    "openpyxl.worksheet.page.PrintPageSetup",
    "openpyxl.worksheet.table.TableColumn",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.axis.NumericAxis",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.plotarea.PlotArea",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.styles.fills.Fill",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.styles.fonts.Font",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.styles.stylesheet.Stylesheet",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.workbook.protection.WorkbookProtection",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.page.PrintPageSetup",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.table.TableColumn"
  ],
  "openpyxl.descriptors.serialisable.Serialisable.tagname": [
    "openpyxl.chart._chart.ChartBase",
    "openpyxl.chart.axis._BaseAxis",
    "openpyxl.chart.label._DataLabelBase"
  ],
  "openpyxl.descriptors.serialisable.Serialisable.to_tree": [
    "openpyxl.chart._chart.ChartBase",
    "openpyxl.chart.chartspace.ChartSpace",
    "openpyxl.chart.plotarea.PlotArea",
    "openpyxl.chart.series.Series",
    "openpyxl.chart.text.Text",
    "openpyxl.chartsheet.chartsheet.Chartsheet",
    "openpyxl.comments.comment_sheet.CommentSheet",
    "openpyxl.packaging.extended.ExtendedProperties",
    "openpyxl.packaging.manifest.Manifest",
    "openpyxl.packaging.relationship.RelationshipList",
    "openpyxl.packaging.workbook.WorkbookPackage",
    "openpyxl.pivot.cache.CacheDefinition",
    "openpyxl.pivot.record.RecordList",
    "openpyxl.pivot.table.TableDefinition",
    "openpyxl.styles.fills.GradientFill",
    "openpyxl.styles.fills.PatternFill",
    "openpyxl.styles.stylesheet.Stylesheet",
    "openpyxl.workbook.external_link.external.ExternalLink",
    "openpyxl.worksheet.datavalidation.DataValidationList",
    "openpyxl.worksheet.related.Related",
    "openpyxl.worksheet.table.Table",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart._chart.ChartBase",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.chartspace.ChartSpace",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.plotarea.PlotArea",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.series.Series",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.text.Text",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chartsheet.chartsheet.Chartsheet",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.comments.comment_sheet.CommentSheet",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.packaging.extended.ExtendedProperties",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.packaging.manifest.Manifest",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.packaging.relationship.RelationshipList",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.packaging.workbook.WorkbookPackage",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.pivot.cache.CacheDefinition",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.pivot.record.RecordList",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.pivot.table.ConditionalFormatList",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.pivot.table.TableDefinition",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.styles.fills.GradientFill",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.styles.fills.PatternFill",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.styles.stylesheet.Stylesheet",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.workbook.external_link.external.ExternalLink",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.datavalidation.DataValidationList",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.related.Related",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.table.Table"
  ],
  "openpyxl.drawing.colors.ColorChoice.__init__": [
    "openpyxl.drawing.effect.GlowEffect",
    "openpyxl.drawing.effect.InnerShadowEffect",
    "openpyxl.drawing.effect.OuterShadow",
    "openpyxl.drawing.effect.PresetShadowEffect"
  ],
  "openpyxl.drawing.spreadsheet_drawing._AnchorBase.__init__": [
    "openpyxl.drawing.spreadsheet_drawing.AbsoluteAnchor",
    "openpyxl.drawing.spreadsheet_drawing.OneCellAnchor",
    "openpyxl.drawing.spreadsheet_drawing.TwoCellAnchor"
  ],
  "openpyxl.packaging.core.NestedDateTime.to_tree": [
    "openpyxl.packaging.core.QualifiedDateTime"
  ],
  "openpyxl.styles.fonts.Font.__init__": [
    "openpyxl.cell.text.InlineFont",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.cell.text.InlineFont"
  ],
  "openpyxl.styles.styleable.StyleableObject.__init__": [
    "openpyxl.cell.cell.Cell",
    "openpyxl.cell.cell.MergedCell",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.cell.cell.Cell",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.cell.cell.MergedCell"
  ],
  "openpyxl.utils.bound_dictionary.BoundDictionary.__init__": [
    "openpyxl.worksheet.dimensions.DimensionHolder",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.dimensions.DimensionHolder"
  ],
  "openpyxl.workbook.child._WorkbookChild.__init__": [
    "openpyxl.chartsheet.chartsheet.Chartsheet",
    "openpyxl.worksheet._write_only.WriteOnlyWorksheet",
    "openpyxl.worksheet.worksheet.Worksheet",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chartsheet.chartsheet.Chartsheet",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet._write_only.WriteOnlyWorksheet",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.worksheet.Worksheet"
  ],
  "openpyxl.worksheet.cell_range.CellRange.__contains__": [
    "openpyxl.worksheet.merge.MergedCellRange"
  ],
  "openpyxl.worksheet.cell_range.CellRange.__copy__": [
    "openpyxl.worksheet.merge.MergeCell",
    "openpyxl.worksheet.merge.MergedCellRange"
  ],
  "openpyxl.worksheet.cell_range.CellRange.__init__": [
    "openpyxl.worksheet.merge.MergeCell",
    "openpyxl.worksheet.merge.MergedCellRange"
  ],
  "openpyxl.worksheet.dimensions.Dimension.__init__": [
    "openpyxl.worksheet.dimensions.ColumnDimension",
    "openpyxl.worksheet.dimensions.RowDimension"
  ],
  "openpyxl.worksheet.pagebreak.RowBreak.count": [
    "openpyxl.worksheet.pagebreak.ColBreak"
  ],
  "openpyxl.worksheet.pagebreak.RowBreak.manualBreakCount": [
    "openpyxl.worksheet.pagebreak.ColBreak"
  ],
  "openpyxl.worksheet.protection._Protected.set_password": [
    "openpyxl.worksheet.protection.SheetProtection"
  ],
  "opentracing.mocktracer.propagator.Propagator.extract": [
    "opentracing.mocktracer.binary_propagator.BinaryPropagator",
    "opentracing.mocktracer.text_propagator.TextPropagator"
  ],
  "opentracing.mocktracer.propagator.Propagator.inject": [
    "opentracing.mocktracer.binary_propagator.BinaryPropagator",
    "opentracing.mocktracer.text_propagator.TextPropagator"
  ],
  "opentracing.scope_manager.ScopeManager.__init__": [
    "opentracing.scope_managers.ThreadLocalScopeManager"
  ],
  "opentracing.scope_manager.ScopeManager.activate": [
    "opentracing.scope_managers.ThreadLocalScopeManager",
    "opentracing.scope_managers.contextvars.ContextVarsScopeManager",
    "opentracing.scope_managers.gevent.GeventScopeManager"
  ],
  "opentracing.scope_manager.ScopeManager.active": [
    "opentracing.scope_managers.ThreadLocalScopeManager",
    "opentracing.scope_managers.contextvars.ContextVarsScopeManager",
    "opentracing.scope_managers.gevent.GeventScopeManager"
  ],
  "opentracing.scope_managers.ThreadLocalScopeManager.activate": [
    "opentracing.scope_managers.asyncio.AsyncioScopeManager",
    "opentracing.scope_managers.tornado.TornadoScopeManager"
  ],
  "opentracing.scope_managers.ThreadLocalScopeManager.active": [
    "opentracing.scope_managers.asyncio.AsyncioScopeManager",
    "opentracing.scope_managers.tornado.TornadoScopeManager"
  ],
  "opentracing.span.Span.__init__": [
    "opentracing.mocktracer.span.MockSpan"
  ],
  "opentracing.span.Span.context": [
    "opentracing.mocktracer.span.MockSpan"
  ],
  "opentracing.span.Span.log_kv": [
    "opentracing.mocktracer.span.MockSpan"
  ],
  "opentracing.span.Span.set_baggage_item": [
    "opentracing.mocktracer.span.MockSpan"
  ],
  "opentracing.span.Span.set_operation_name": [
    "opentracing.mocktracer.span.MockSpan"
  ],
  "opentracing.span.Span.set_tag": [
    "opentracing.mocktracer.span.MockSpan"
  ],
  "opentracing.span.Span.tracer": [
    "opentracing.mocktracer.span.MockSpan"
  ],
  "opentracing.span.SpanContext.baggage": [
    "opentracing.mocktracer.context.SpanContext",
    "typeshed.typeshed.stubs.opentracing.opentracing.mocktracer.context.SpanContext"
  ],
  "opentracing.tracer.Tracer.__init__": [
    "opentracing.mocktracer.tracer.MockTracer"
  ],
  "opentracing.tracer.Tracer.active_span": [
    "opentracing.mocktracer.tracer.MockTracer"
  ],
  "opentracing.tracer.Tracer.extract": [
    "opentracing.mocktracer.tracer.MockTracer"
  ],
  "opentracing.tracer.Tracer.start_span": [
    "opentracing.mocktracer.tracer.MockTracer"
  ],
  "optparse.BadOptionError.__init__": [
    "optparse.AmbiguousOptionError"
  ],
  "optparse.HelpFormatter.__init__": [
    "optparse.IndentedHelpFormatter",
    "optparse.TitledHelpFormatter"
  ],
  "optparse.HelpFormatter.expand_default": [
    "pip._internal.cli.parser.UpdatingDefaultsHelpFormatter"
  ],
  "optparse.HelpFormatter.format_description": [
    "pip._internal.cli.parser.PrettyHelpFormatter"
  ],
  "optparse.HelpFormatter.format_epilog": [
    "pip._internal.cli.parser.PrettyHelpFormatter"
  ],
  "optparse.HelpFormatter.format_heading": [
    "optparse.IndentedHelpFormatter",
    "optparse.TitledHelpFormatter"
  ],
  "optparse.HelpFormatter.format_option_strings": [
    "pip._internal.cli.parser.PrettyHelpFormatter"
  ],
  "optparse.HelpFormatter.format_usage": [
    "optparse.IndentedHelpFormatter",
    "optparse.TitledHelpFormatter"
  ],
  "optparse.IndentedHelpFormatter.__init__": [
    "pip._internal.cli.parser.PrettyHelpFormatter"
  ],
  "optparse.IndentedHelpFormatter.format_heading": [
    "pip._internal.cli.parser.PrettyHelpFormatter"
  ],
  "optparse.IndentedHelpFormatter.format_usage": [
    "pip._internal.cli.parser.PrettyHelpFormatter"
  ],
  "optparse.OptParseError.__init__": [
    "optparse.BadOptionError",
    "optparse.OptionError"
  ],
  "optparse.OptionContainer.__init__": [
    "optparse.OptionGroup",
    "optparse.OptionParser"
  ],
  "optparse.OptionContainer.format_help": [
    "optparse.OptionParser"
  ],
  "optparse.OptionContainer.format_option_help": [
    "optparse.OptionParser"
  ],
  "optparse.OptionParser.__init__": [
    "docutils.frontend.OptionParser",
    "typeshed.typeshed.stubs.docutils.docutils.frontend.OptionParser"
  ],
  "optparse.OptionParser.error": [
    "pip._internal.cli.parser.ConfigOptionParser"
  ],
  "optparse.OptionParser.get_default_values": [
    "pip._internal.cli.parser.ConfigOptionParser"
  ],
  "os.PathLike.__fspath__": [
    "pathlib.PurePath",
    "typeshed.typeshed.stdlib.pathlib.PurePath"
  ],
  "packaging._parser.Node.serialize": [
    "packaging._parser.Op",
    "packaging._parser.Value",
    "packaging._parser.Variable"
  ],
  "packaging.specifiers.BaseSpecifier.__eq__": [
    "packaging.specifiers.Specifier",
    "packaging.specifiers.SpecifierSet"
  ],
  "packaging.specifiers.BaseSpecifier.__hash__": [
    "packaging.specifiers.Specifier",
    "packaging.specifiers.SpecifierSet"
  ],
  "packaging.specifiers.BaseSpecifier.__str__": [
    "packaging.specifiers.Specifier",
    "packaging.specifiers.SpecifierSet"
  ],
  "packaging.specifiers.BaseSpecifier.contains": [
    "packaging.specifiers.Specifier",
    "packaging.specifiers.SpecifierSet"
  ],
  "packaging.specifiers.BaseSpecifier.filter": [
    "packaging.specifiers.Specifier",
    "packaging.specifiers.SpecifierSet"
  ],
  "packaging.specifiers.BaseSpecifier.prereleases": [
    "packaging.specifiers.Specifier",
    "packaging.specifiers.SpecifierSet"
  ],
  "packaging.specifiers.BaseSpecifier.prereleases@setter": [
    "packaging.specifiers.Specifier",
    "packaging.specifiers.SpecifierSet"
  ],
  "paramiko.agent.AgentProxyThread.__init__": [
    "paramiko.agent.AgentLocalProxy",
    "paramiko.agent.AgentRemoteProxy"
  ],
  "paramiko.agent.AgentSSH.__init__": [
    "paramiko.agent.Agent",
    "paramiko.agent.AgentServerProxy"
  ],
  "paramiko.client.MissingHostKeyPolicy.missing_host_key": [
    "paramiko.client.AutoAddPolicy",
    "paramiko.client.RejectPolicy",
    "paramiko.client.WarningPolicy"
  ],
  "paramiko.file.BufferedFile.__del__": [
    "paramiko.sftp_file.SFTPFile",
    "typeshed.typeshed.stubs.paramiko.paramiko.sftp_file.SFTPFile"
  ],
  "paramiko.file.BufferedFile.__init__": [
    "paramiko.channel.ChannelFile",
    "paramiko.sftp_file.SFTPFile",
    "typeshed.typeshed.stubs.paramiko.paramiko.channel.ChannelFile",
    "typeshed.typeshed.stubs.paramiko.paramiko.sftp_file.SFTPFile"
  ],
  "paramiko.file.BufferedFile.close": [
    "paramiko.channel.ChannelStdinFile",
    "paramiko.sftp_file.SFTPFile",
    "typeshed.typeshed.stubs.paramiko.paramiko.channel.ChannelStdinFile",
    "typeshed.typeshed.stubs.paramiko.paramiko.sftp_file.SFTPFile"
  ],
  "paramiko.file.BufferedFile.seek": [
    "paramiko.sftp_file.SFTPFile",
    "typeshed.typeshed.stubs.paramiko.paramiko.sftp_file.SFTPFile"
  ],
  "paramiko.file.BufferedFile.seekable": [
    "paramiko.sftp_file.SFTPFile",
    "typeshed.typeshed.stubs.paramiko.paramiko.sftp_file.SFTPFile"
  ],
  "paramiko.pkey.PKey.__init__": [
    "paramiko.agent.AgentKey",
    "paramiko.dsskey.DSSKey",
    "paramiko.ecdsakey.ECDSAKey",
    "paramiko.ed25519key.Ed25519Key",
    "paramiko.rsakey.RSAKey",
    "typeshed.typeshed.stubs.paramiko.paramiko.agent.AgentKey",
    "typeshed.typeshed.stubs.paramiko.paramiko.dsskey.DSSKey",
    "typeshed.typeshed.stubs.paramiko.paramiko.ecdsakey.ECDSAKey",
    "typeshed.typeshed.stubs.paramiko.paramiko.ed25519key.Ed25519Key",
    "typeshed.typeshed.stubs.paramiko.paramiko.rsakey.RSAKey"
  ],
  "paramiko.pkey.PKey.asbytes": [
    "paramiko.agent.AgentKey",
    "paramiko.dsskey.DSSKey",
    "paramiko.ecdsakey.ECDSAKey",
    "paramiko.ed25519key.Ed25519Key",
    "paramiko.rsakey.RSAKey",
    "typeshed.typeshed.stubs.paramiko.paramiko.agent.AgentKey",
    "typeshed.typeshed.stubs.paramiko.paramiko.dsskey.DSSKey",
    "typeshed.typeshed.stubs.paramiko.paramiko.ecdsakey.ECDSAKey",
    "typeshed.typeshed.stubs.paramiko.paramiko.ed25519key.Ed25519Key",
    "typeshed.typeshed.stubs.paramiko.paramiko.rsakey.RSAKey"
  ],
  "paramiko.pkey.PKey.can_sign": [
    "paramiko.dsskey.DSSKey",
    "paramiko.ecdsakey.ECDSAKey",
    "paramiko.ed25519key.Ed25519Key",
    "paramiko.rsakey.RSAKey",
    "typeshed.typeshed.stubs.paramiko.paramiko.dsskey.DSSKey",
    "typeshed.typeshed.stubs.paramiko.paramiko.ecdsakey.ECDSAKey",
    "typeshed.typeshed.stubs.paramiko.paramiko.ed25519key.Ed25519Key",
    "typeshed.typeshed.stubs.paramiko.paramiko.rsakey.RSAKey"
  ],
  "paramiko.pkey.PKey.get_bits": [
    "paramiko.dsskey.DSSKey",
    "paramiko.ecdsakey.ECDSAKey",
    "paramiko.ed25519key.Ed25519Key",
    "paramiko.rsakey.RSAKey",
    "typeshed.typeshed.stubs.paramiko.paramiko.dsskey.DSSKey",
    "typeshed.typeshed.stubs.paramiko.paramiko.ecdsakey.ECDSAKey",
    "typeshed.typeshed.stubs.paramiko.paramiko.ed25519key.Ed25519Key",
    "typeshed.typeshed.stubs.paramiko.paramiko.rsakey.RSAKey"
  ],
  "paramiko.pkey.PKey.get_name": [
    "paramiko.agent.AgentKey",
    "paramiko.dsskey.DSSKey",
    "paramiko.ecdsakey.ECDSAKey",
    "paramiko.ed25519key.Ed25519Key",
    "paramiko.rsakey.RSAKey",
    "typeshed.typeshed.stubs.paramiko.paramiko.agent.AgentKey",
    "typeshed.typeshed.stubs.paramiko.paramiko.dsskey.DSSKey",
    "typeshed.typeshed.stubs.paramiko.paramiko.ecdsakey.ECDSAKey",
    "typeshed.typeshed.stubs.paramiko.paramiko.ed25519key.Ed25519Key",
    "typeshed.typeshed.stubs.paramiko.paramiko.rsakey.RSAKey"
  ],
  "paramiko.pkey.PKey.sign_ssh_data": [
    "paramiko.agent.AgentKey",
    "paramiko.dsskey.DSSKey",
    "paramiko.ecdsakey.ECDSAKey",
    "paramiko.ed25519key.Ed25519Key",
    "paramiko.rsakey.RSAKey",
    "typeshed.typeshed.stubs.paramiko.paramiko.agent.AgentKey",
    "typeshed.typeshed.stubs.paramiko.paramiko.dsskey.DSSKey",
    "typeshed.typeshed.stubs.paramiko.paramiko.ecdsakey.ECDSAKey",
    "typeshed.typeshed.stubs.paramiko.paramiko.ed25519key.Ed25519Key",
    "typeshed.typeshed.stubs.paramiko.paramiko.rsakey.RSAKey"
  ],
  "paramiko.pkey.PKey.verify_ssh_sig": [
    "paramiko.dsskey.DSSKey",
    "paramiko.ecdsakey.ECDSAKey",
    "paramiko.ed25519key.Ed25519Key",
    "paramiko.rsakey.RSAKey",
    "typeshed.typeshed.stubs.paramiko.paramiko.dsskey.DSSKey",
    "typeshed.typeshed.stubs.paramiko.paramiko.ecdsakey.ECDSAKey",
    "typeshed.typeshed.stubs.paramiko.paramiko.ed25519key.Ed25519Key",
    "typeshed.typeshed.stubs.paramiko.paramiko.rsakey.RSAKey"
  ],
  "paramiko.pkey.PKey.write_private_key": [
    "paramiko.dsskey.DSSKey",
    "paramiko.ecdsakey.ECDSAKey",
    "paramiko.rsakey.RSAKey",
    "typeshed.typeshed.stubs.paramiko.paramiko.dsskey.DSSKey",
    "typeshed.typeshed.stubs.paramiko.paramiko.ecdsakey.ECDSAKey",
    "typeshed.typeshed.stubs.paramiko.paramiko.rsakey.RSAKey"
  ],
  "paramiko.pkey.PKey.write_private_key_file": [
    "paramiko.dsskey.DSSKey",
    "paramiko.ecdsakey.ECDSAKey",
    "paramiko.rsakey.RSAKey",
    "typeshed.typeshed.stubs.paramiko.paramiko.dsskey.DSSKey",
    "typeshed.typeshed.stubs.paramiko.paramiko.ecdsakey.ECDSAKey",
    "typeshed.typeshed.stubs.paramiko.paramiko.rsakey.RSAKey"
  ],
  "paramiko.server.SubsystemHandler.finish_subsystem": [
    "paramiko.sftp_server.SFTPServer",
    "typeshed.typeshed.stubs.paramiko.paramiko.sftp_server.SFTPServer"
  ],
  "paramiko.server.SubsystemHandler.start_subsystem": [
    "paramiko.sftp_server.SFTPServer",
    "typeshed.typeshed.stubs.paramiko.paramiko.sftp_server.SFTPServer"
  ],
  "paramiko.sftp.BaseSFTP.__init__": [
    "paramiko.sftp_client.SFTPClient",
    "paramiko.sftp_server.SFTPServer",
    "typeshed.typeshed.stubs.paramiko.paramiko.sftp_client.SFTPClient",
    "typeshed.typeshed.stubs.paramiko.paramiko.sftp_server.SFTPServer"
  ],
  "paramiko.ssh_gss._SSH_GSSAuth.__init__": [
    "paramiko.ssh_gss._SSH_GSSAPI_NEW",
    "paramiko.ssh_gss._SSH_GSSAPI_OLD",
    "paramiko.ssh_gss._SSH_SSPI"
  ],
  "parsimonious.expressions.Compound.__init__": [
    "parsimonious.expressions.Lookahead",
    "parsimonious.expressions.Quantifier"
  ],
  "parsimonious.expressions.Expression.__init__": [
    "parsimonious.expressions.Compound",
    "parsimonious.expressions.Literal",
    "parsimonious.expressions.Regex"
  ],
  "parsimonious.grammar.RuleVisitor.visit_regex": [
    "parsimonious.grammar.TokenRuleVisitor"
  ],
  "parsimonious.grammar.RuleVisitor.visit_spaceless_literal": [
    "parsimonious.grammar.TokenRuleVisitor"
  ],
  "parsimonious.nodes.NodeVisitor.generic_visit": [
    "parsimonious.grammar.RuleVisitor",
    "typeshed.typeshed.stubs.parsimonious.parsimonious.grammar.RuleVisitor"
  ],
  "parso.file_io.FileIO.__init__": [
    "parso.file_io.KnownContentFileIO"
  ],
  "parso.file_io.FileIO.read": [
    "parso.file_io.KnownContentFileIO"
  ],
  "parso.grammar.Grammar.__init__": [
    "parso.grammar.PythonGrammar"
  ],
  "parso.normalizer.Normalizer.__init__": [
    "parso.normalizer.RefactoringNormalizer",
    "parso.python.errors.ErrorFinder"
  ],
  "parso.normalizer.Normalizer.add_issue": [
    "parso.python.errors.ErrorFinder"
  ],
  "parso.normalizer.Normalizer.finalize": [
    "parso.python.errors.ErrorFinder"
  ],
  "parso.normalizer.Normalizer.initialize": [
    "parso.python.errors.ErrorFinder"
  ],
  "parso.normalizer.Normalizer.visit": [
    "parso.normalizer.RefactoringNormalizer",
    "parso.python.errors.ErrorFinder"
  ],
  "parso.normalizer.Normalizer.visit_leaf": [
    "parso.normalizer.RefactoringNormalizer",
    "parso.python.errors.ErrorFinder"
  ],
  "parso.normalizer.Normalizer.visit_node": [
    "parso.python.errors.ErrorFinder"
  ],
  "parso.normalizer.Rule._get_message": [
    "parso.python.errors.IndentationRule",
    "parso.python.errors.SyntaxRule"
  ],
  "parso.normalizer.Rule.get_node": [
    "parso.python.errors._AnnotatorRule",
    "parso.python.errors._ExpectIndentedBlock",
    "parso.python.errors._InvalidSyntaxRule",
    "parso.python.errors._ReturnAndYieldChecks",
    "parso.python.errors._YieldFromCheck"
  ],
  "parso.normalizer.Rule.is_issue": [
    "parso.python.errors._AnnotatorRule",
    "parso.python.errors._ArglistRule",
    "parso.python.errors._ArgumentRule",
    "parso.python.errors._AwaitOutsideAsync",
    "parso.python.errors._BreakOutsideLoop",
    "parso.python.errors._BytesAndStringMix",
    "parso.python.errors._CompForRule",
    "parso.python.errors._ContinueChecks",
    "parso.python.errors._DelStmtRule",
    "parso.python.errors._ExpectIndentedBlock",
    "parso.python.errors._ExprListRule",
    "parso.python.errors._ExprStmtRule",
    "parso.python.errors._FStringRule",
    "parso.python.errors._ForStmtRule",
    "parso.python.errors._FutureImportRule",
    "parso.python.errors._ImportStarInFunction",
    "parso.python.errors._InvalidSyntaxRule",
    "parso.python.errors._NameChecks",
    "parso.python.errors._NamedExprRule",
    "parso.python.errors._NonlocalModuleLevelRule",
    "parso.python.errors._ParameterRule",
    "parso.python.errors._ReturnAndYieldChecks",
    "parso.python.errors._StarCheck",
    "parso.python.errors._StarExprParentRule",
    "parso.python.errors._StarExprRule",
    "parso.python.errors._StarStarCheck",
    "parso.python.errors._StringChecks",
    "parso.python.errors._TrailingImportComma",
    "parso.python.errors._TryStmtRule",
    "parso.python.errors._WithItemRule",
    "parso.python.errors._YieldFromCheck",
    "parso.python.pep8.BlankLineAtEnd"
  ],
  "parso.normalizer.Rule.message": [
    "parso.python.errors._ArglistRule"
  ],
  "parso.parser.BaseParser.__init__": [
    "parso.python.parser.Parser"
  ],
  "parso.parser.BaseParser.convert_leaf": [
    "parso.python.parser.Parser"
  ],
  "parso.parser.BaseParser.convert_node": [
    "parso.python.parser.Parser"
  ],
  "parso.parser.BaseParser.error_recovery": [
    "parso.python.parser.Parser"
  ],
  "parso.parser.BaseParser.parse": [
    "parso.python.parser.Parser"
  ],
  "parso.python.errors.ErrorFinder.__init__": [
    "parso.python.pep8.PEP8Normalizer"
  ],
  "parso.python.errors.ErrorFinder.add_issue": [
    "parso.python.pep8.PEP8Normalizer"
  ],
  "parso.python.errors.ErrorFinder.visit_leaf": [
    "parso.python.pep8.PEP8Normalizer"
  ],
  "parso.python.errors.ErrorFinder.visit_node": [
    "parso.python.pep8.PEP8Normalizer"
  ],
  "parso.python.pep8.BracketNode.__init__": [
    "parso.python.pep8.ImplicitNode"
  ],
  "parso.python.pep8.IndentationNode.__init__": [
    "parso.python.pep8.BackslashNode",
    "parso.python.pep8.BracketNode"
  ],
  "parso.python.tree.ClassOrFunc.name": [
    "parso.python.tree.Function"
  ],
  "parso.python.tree.Function.__init__": [
    "parso.python.tree.Lambda"
  ],
  "parso.python.tree.Function._get_param_nodes": [
    "parso.python.tree.Lambda"
  ],
  "parso.python.tree.Function.annotation": [
    "parso.python.tree.Lambda"
  ],
  "parso.python.tree.Function.name": [
    "parso.python.tree.Lambda"
  ],
  "parso.python.tree.Import.is_nested": [
    "parso.python.tree.ImportName"
  ],
  "parso.python.tree.Scope.__init__": [
    "parso.python.tree.Module"
  ],
  "parso.tree.BaseNode.__init__": [
    "parso.tree.Node"
  ],
  "parso.tree.BaseNode.__repr__": [
    "parso.tree.Node"
  ],
  "parso.tree.BaseNode.get_code": [
    "parso.python.tree.Param"
  ],
  "parso.tree.Leaf.__init__": [
    "parso.tree.ErrorLeaf",
    "parso.tree.TypedLeaf"
  ],
  "parso.tree.Leaf.__repr__": [
    "parso.tree.ErrorLeaf"
  ],
  "parso.tree.Leaf.end_pos": [
    "parso.python.tree._LeafWithoutNewlines"
  ],
  "parso.tree.Leaf.get_start_pos_of_prefix": [
    "parso.python.tree.PythonLeaf"
  ],
  "parso.tree.NodeOrLeaf.end_pos": [
    "parso.tree.BaseNode",
    "parso.tree.Leaf"
  ],
  "parso.tree.NodeOrLeaf.get_code": [
    "parso.tree.BaseNode",
    "parso.tree.Leaf"
  ],
  "parso.tree.NodeOrLeaf.get_first_leaf": [
    "parso.tree.BaseNode",
    "parso.tree.Leaf"
  ],
  "parso.tree.NodeOrLeaf.get_last_leaf": [
    "parso.tree.BaseNode",
    "parso.tree.Leaf"
  ],
  "parso.tree.NodeOrLeaf.get_start_pos_of_prefix": [
    "parso.tree.BaseNode",
    "parso.tree.Leaf"
  ],
  "parso.tree.NodeOrLeaf.start_pos": [
    "parso.tree.BaseNode",
    "parso.tree.Leaf"
  ],
  "parso.tree.NodeOrLeaf.start_pos@setter": [
    "parso.tree.Leaf"
  ],
  "parso.tree.NodeOrLeaf.type": [
    "parso.python.tree.KeywordStatement"
  ],
  "passlib.apache._CommonFile.__init__": [
    "passlib.apache.HtdigestFile",
    "passlib.apache.HtpasswdFile"
  ],
  "passlib.context.CryptContext.__init__": [
    "passlib.context.LazyCryptContext"
  ],
  "passlib.crypto._blowfish.base.BlowfishEngine.encipher": [
    "passlib.crypto._blowfish.unrolled.BlowfishEngine",
    "typeshed.typeshed.stubs.passlib.passlib.crypto._blowfish.unrolled.BlowfishEngine"
  ],
  "passlib.crypto._blowfish.base.BlowfishEngine.expand": [
    "passlib.crypto._blowfish.unrolled.BlowfishEngine",
    "typeshed.typeshed.stubs.passlib.passlib.crypto._blowfish.unrolled.BlowfishEngine"
  ],
  "passlib.exc.PasswordSizeError.__init__": [
    "passlib.exc.PasswordTruncateError"
  ],
  "passlib.exc.TokenError.__init__": [
    "passlib.exc.UsedTokenError"
  ],
  "passlib.ext.django.utils.DjangoTranslator.__init__": [
    "passlib.ext.django.utils.DjangoContextAdapter"
  ],
  "passlib.ext.django.utils.DjangoTranslator.reset_hashers": [
    "passlib.ext.django.utils.DjangoContextAdapter"
  ],
  "passlib.handlers.bcrypt._BcryptCommon.from_string": [
    "passlib.handlers.bcrypt.bcrypt_sha256",
    "passlib.handlers.django.django_bcrypt_sha256",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.django.django_bcrypt_sha256"
  ],
  "passlib.handlers.django.DjangoSaltedHash.from_string": [
    "passlib.handlers.django.DjangoVariableHash"
  ],
  "passlib.handlers.misc.plaintext.genconfig": [
    "passlib.handlers.ldap_digests.ldap_plaintext",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.ldap_digests.ldap_plaintext"
  ],
  "passlib.handlers.misc.plaintext.identify": [
    "passlib.handlers.ldap_digests.ldap_plaintext",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.ldap_digests.ldap_plaintext"
  ],
  "passlib.ifc.DisabledHash.disable": [
    "passlib.handlers.misc.unix_disabled",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.misc.unix_disabled"
  ],
  "passlib.ifc.DisabledHash.enable": [
    "passlib.handlers.misc.unix_disabled",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.misc.unix_disabled"
  ],
  "passlib.ifc.PasswordHash.genconfig": [
    "passlib.handlers.digests.htdigest",
    "passlib.handlers.misc.plaintext",
    "passlib.utils.handlers.GenericHandler",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.digests.htdigest",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.misc.plaintext",
    "typeshed.typeshed.stubs.passlib.passlib.utils.handlers.GenericHandler"
  ],
  "passlib.ifc.PasswordHash.genhash": [
    "passlib.handlers.digests.htdigest",
    "passlib.handlers.misc.plaintext",
    "passlib.handlers.misc.unix_disabled",
    "passlib.utils.handlers.GenericHandler",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.digests.htdigest",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.misc.plaintext",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.misc.unix_disabled",
    "typeshed.typeshed.stubs.passlib.passlib.utils.handlers.GenericHandler"
  ],
  "passlib.ifc.PasswordHash.hash": [
    "passlib.handlers.digests.htdigest",
    "passlib.handlers.misc.plaintext",
    "passlib.handlers.misc.unix_disabled",
    "passlib.utils.handlers.GenericHandler",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.digests.htdigest",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.misc.plaintext",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.misc.unix_disabled",
    "typeshed.typeshed.stubs.passlib.passlib.utils.handlers.GenericHandler"
  ],
  "passlib.ifc.PasswordHash.identify": [
    "passlib.handlers.digests.htdigest",
    "passlib.handlers.misc.plaintext",
    "passlib.handlers.misc.unix_disabled",
    "passlib.utils.handlers.GenericHandler",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.digests.htdigest",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.misc.plaintext",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.misc.unix_disabled",
    "typeshed.typeshed.stubs.passlib.passlib.utils.handlers.GenericHandler"
  ],
  "passlib.ifc.PasswordHash.needs_update": [
    "passlib.utils.handlers.GenericHandler",
    "typeshed.typeshed.stubs.passlib.passlib.utils.handlers.GenericHandler"
  ],
  "passlib.ifc.PasswordHash.using": [
    "passlib.utils.handlers.MinimalHandler",
    "typeshed.typeshed.stubs.passlib.passlib.utils.handlers.MinimalHandler"
  ],
  "passlib.ifc.PasswordHash.verify": [
    "passlib.handlers.digests.htdigest",
    "passlib.handlers.misc.plaintext",
    "passlib.handlers.misc.unix_disabled",
    "passlib.utils.handlers.GenericHandler",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.digests.htdigest",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.misc.plaintext",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.misc.unix_disabled",
    "typeshed.typeshed.stubs.passlib.passlib.utils.handlers.GenericHandler"
  ],
  "passlib.pwd.SequenceGenerator.__init__": [
    "passlib.pwd.PhraseGenerator",
    "passlib.pwd.WordGenerator"
  ],
  "passlib.pwd.SequenceGenerator.__next__": [
    "passlib.pwd.PhraseGenerator",
    "passlib.pwd.WordGenerator"
  ],
  "passlib.pwd.SequenceGenerator.symbol_count": [
    "passlib.pwd.PhraseGenerator",
    "passlib.pwd.WordGenerator"
  ],
  "passlib.utils.binary.Base64Engine.__init__": [
    "passlib.utils.binary.LazyBase64Engine"
  ],
  "passlib.utils.handlers.GenericHandler.__init__": [
    "passlib.handlers.cisco.cisco_type7",
    "passlib.utils.handlers.HasEncodingContext",
    "passlib.utils.handlers.HasManyIdents",
    "passlib.utils.handlers.HasRounds",
    "passlib.utils.handlers.HasSalt",
    "passlib.utils.handlers.HasUserContext",
    "passlib.utils.handlers.ParallelismMixin",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.cisco.cisco_type7"
  ],
  "passlib.utils.handlers.GenericHandler.bitsize": [
    "passlib.utils.handlers.HasRounds",
    "passlib.utils.handlers.HasSalt"
  ],
  "passlib.utils.handlers.GenericHandler.checksum_size": [
    "passlib.handlers.fshp.fshp",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.fshp.fshp"
  ],
  "passlib.utils.handlers.GenericHandler.from_string": [
    "passlib.handlers.argon2._Argon2Common",
    "passlib.handlers.bcrypt._BcryptCommon",
    "passlib.handlers.cisco.cisco_type7",
    "passlib.handlers.des_crypt.bigcrypt",
    "passlib.handlers.des_crypt.bsdi_crypt",
    "passlib.handlers.des_crypt.crypt16",
    "passlib.handlers.des_crypt.des_crypt",
    "passlib.handlers.django.DjangoSaltedHash",
    "passlib.handlers.django.django_des_crypt",
    "passlib.handlers.fshp.fshp",
    "passlib.handlers.ldap_digests._SaltedBase64DigestHelper",
    "passlib.handlers.md5_crypt._MD5_Common",
    "passlib.handlers.mssql.mssql2000",
    "passlib.handlers.mssql.mssql2005",
    "passlib.handlers.oracle.oracle11",
    "passlib.handlers.pbkdf2.Pbkdf2DigestHandler",
    "passlib.handlers.pbkdf2.atlassian_pbkdf2_sha1",
    "passlib.handlers.pbkdf2.cta_pbkdf2_sha1",
    "passlib.handlers.pbkdf2.dlitz_pbkdf2_sha1",
    "passlib.handlers.pbkdf2.grub_pbkdf2_sha512",
    "passlib.handlers.phpass.phpass",
    "passlib.handlers.scram.scram",
    "passlib.handlers.scrypt.scrypt",
    "passlib.handlers.sha1_crypt.sha1_crypt",
    "passlib.handlers.sha2_crypt._SHA2_Common",
    "passlib.handlers.sun_md5_crypt.sun_md5_crypt",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.argon2._Argon2Common",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.bcrypt._BcryptCommon",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.cisco.cisco_type7",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.des_crypt.bigcrypt",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.des_crypt.bsdi_crypt",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.des_crypt.crypt16",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.des_crypt.des_crypt",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.django.DjangoSaltedHash",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.django.django_des_crypt",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.fshp.fshp",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.ldap_digests._SaltedBase64DigestHelper",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.md5_crypt._MD5_Common",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.mssql.mssql2000",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.mssql.mssql2005",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.oracle.oracle11",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.pbkdf2.Pbkdf2DigestHandler",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.pbkdf2.atlassian_pbkdf2_sha1",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.pbkdf2.cta_pbkdf2_sha1",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.pbkdf2.dlitz_pbkdf2_sha1",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.pbkdf2.grub_pbkdf2_sha512",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.phpass.phpass",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.scram.scram",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.scrypt.scrypt",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.sha1_crypt.sha1_crypt",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.sha2_crypt._SHA2_Common",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.sun_md5_crypt.sun_md5_crypt"
  ],
  "passlib.utils.handlers.GenericHandler.genhash": [
    "passlib.handlers.argon2._CffiBackend",
    "passlib.handlers.argon2._NoBackend",
    "passlib.utils.handlers.HasUserContext",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.argon2._CffiBackend",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.argon2._NoBackend"
  ],
  "passlib.utils.handlers.GenericHandler.hash": [
    "passlib.handlers.argon2._CffiBackend",
    "passlib.handlers.argon2._NoBackend",
    "passlib.utils.handlers.HasUserContext",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.argon2._CffiBackend",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.argon2._NoBackend"
  ],
  "passlib.utils.handlers.GenericHandler.identify": [
    "passlib.handlers.argon2._Argon2Common",
    "passlib.handlers.bcrypt.bcrypt_sha256",
    "passlib.handlers.django.django_bcrypt_sha256",
    "passlib.handlers.django.django_disabled",
    "passlib.handlers.misc.unix_fallback",
    "passlib.handlers.sun_md5_crypt.sun_md5_crypt",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.argon2._Argon2Common",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.bcrypt.bcrypt_sha256",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.django.django_bcrypt_sha256",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.django.django_disabled",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.misc.unix_fallback",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.sun_md5_crypt.sun_md5_crypt"
  ],
  "passlib.utils.handlers.GenericHandler.needs_update": [
    "passlib.handlers.bcrypt._BcryptCommon",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.bcrypt._BcryptCommon"
  ],
  "passlib.utils.handlers.GenericHandler.to_string": [
    "passlib.handlers.scrypt.scrypt",
    "passlib.handlers.sha1_crypt.sha1_crypt",
    "passlib.handlers.sun_md5_crypt.sun_md5_crypt",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.scrypt.scrypt",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.sha1_crypt.sha1_crypt",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.sun_md5_crypt.sun_md5_crypt"
  ],
  "passlib.utils.handlers.GenericHandler.verify": [
    "passlib.handlers.argon2._CffiBackend",
    "passlib.handlers.argon2._NoBackend",
    "passlib.handlers.django.django_disabled",
    "passlib.handlers.misc.unix_fallback",
    "passlib.handlers.mssql.mssql2000",
    "passlib.handlers.scram.scram",
    "passlib.utils.handlers.HasUserContext",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.argon2._CffiBackend",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.argon2._NoBackend",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.django.django_disabled",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.misc.unix_fallback",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.mssql.mssql2000",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.scram.scram"
  ],
  "passlib.utils.handlers.HasRounds.__init__": [
    "passlib.handlers.fshp.fshp",
    "passlib.handlers.scram.scram",
    "passlib.handlers.sun_md5_crypt.sun_md5_crypt",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.fshp.fshp",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.scram.scram",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.sun_md5_crypt.sun_md5_crypt"
  ],
  "passlib.utils.handlers.HasRounds.using": [
    "passlib.handlers.des_crypt.bsdi_crypt",
    "passlib.handlers.fshp.fshp",
    "passlib.handlers.scram.scram",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.des_crypt.bsdi_crypt",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.fshp.fshp",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.scram.scram"
  ],
  "passlib.utils.handlers.MinimalHandler.using": [
    "passlib.handlers.cisco.cisco_type7",
    "passlib.handlers.misc.unix_disabled",
    "passlib.utils.handlers.HasManyIdents",
    "passlib.utils.handlers.HasRounds",
    "passlib.utils.handlers.HasSalt",
    "passlib.utils.handlers.ParallelismMixin",
    "passlib.utils.handlers.TruncateMixin",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.cisco.cisco_type7",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.misc.unix_disabled"
  ],
  "passlib.utils.handlers.ParallelismMixin.__init__": [
    "passlib.handlers.scrypt.scrypt",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.scrypt.scrypt"
  ],
  "passlib.utils.handlers.ParallelismMixin.using": [
    "passlib.handlers.argon2._Argon2Common",
    "passlib.handlers.scrypt.scrypt",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.argon2._Argon2Common",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.scrypt.scrypt"
  ],
  "passlib.utils.handlers.TruncateMixin.using": [
    "passlib.handlers.bcrypt.bcrypt_sha256",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.bcrypt.bcrypt_sha256"
  ],
  "pathlib.PurePath.__new__": [
    "pathlib.Path"
  ],
  "pdb.Pdb.__init__": [
    "IPython.core.debugger.Pdb"
  ],
  "pdb.Pdb._cmdloop": [
    "IPython.core.debugger.InterruptiblePdb"
  ],
  "pdb.Pdb.do_debug": [
    "IPython.core.debugger.Pdb"
  ],
  "pdb.Pdb.do_down": [
    "IPython.core.debugger.Pdb"
  ],
  "pdb.Pdb.do_interact": [
    "IPython.terminal.debugger.TerminalPdb"
  ],
  "pdb.Pdb.do_list": [
    "IPython.core.debugger.Pdb"
  ],
  "pdb.Pdb.do_longlist": [
    "IPython.core.debugger.Pdb"
  ],
  "pdb.Pdb.do_up": [
    "IPython.core.debugger.Pdb"
  ],
  "pdb.Pdb.do_where": [
    "IPython.core.debugger.Pdb"
  ],
  "pdb.Pdb.interaction": [
    "IPython.core.debugger.Pdb"
  ],
  "pdb.Pdb.print_stack_entry": [
    "IPython.core.debugger.Pdb"
  ],
  "pdb.Pdb.print_stack_trace": [
    "IPython.core.debugger.Pdb"
  ],
  "peewee.AutoField.__init__": [
    "peewee.IdentityField",
    "peewee.PrimaryKeyField"
  ],
  "peewee.BaseModelCursorWrapper.__init__": [
    "peewee.ModelCursorWrapper"
  ],
  "peewee.BaseModelCursorWrapper.initialize": [
    "peewee.ModelCursorWrapper",
    "peewee.ModelNamedTupleCursorWrapper"
  ],
  "peewee.BaseModelCursorWrapper.process_row": [
    "peewee.ModelCursorWrapper",
    "peewee.ModelDictCursorWrapper"
  ],
  "peewee.BaseQuery.__init__": [
    "peewee.Query",
    "peewee.RawQuery"
  ],
  "peewee.BaseQuery.__sql__": [
    "peewee.Query",
    "peewee.RawQuery"
  ],
  "peewee.BaseQuery.clone": [
    "peewee.Select"
  ],
  "peewee.BitwiseMixin.__invert__": [
    "peewee.BitwiseNegated"
  ],
  "peewee.BlobField.db_value": [
    "peewee.BigBitField",
    "peewee.BinaryUUIDField"
  ],
  "peewee.ColumnBase.__add__": [
    "peewee.StringExpression",
    "peewee._StringField"
  ],
  "peewee.ColumnBase.__invert__": [
    "peewee.DQ",
    "peewee.Negated"
  ],
  "peewee.ColumnBase.__radd__": [
    "peewee.StringExpression",
    "peewee._StringField"
  ],
  "peewee.ColumnBase.alias": [
    "peewee.Alias"
  ],
  "peewee.ColumnBase.collate": [
    "peewee.Ordering"
  ],
  "peewee.ColumnBase.get_sort_key": [
    "peewee.Column",
    "peewee.Entity",
    "peewee.Field"
  ],
  "peewee.ColumnBase.unalias": [
    "peewee.Alias"
  ],
  "peewee.CursorWrapper.initialize": [
    "peewee.NamedTupleCursorWrapper"
  ],
  "peewee.CursorWrapper.process_row": [
    "peewee.NamedTupleCursorWrapper"
  ],
  "peewee.Database.__init__": [
    "peewee.SqliteDatabase"
  ],
  "peewee.Database.begin": [
    "peewee.SqliteDatabase"
  ],
  "peewee.Database.conflict_statement": [
    "peewee.MySQLDatabase",
    "peewee.PostgresqlDatabase",
    "peewee.SqliteDatabase"
  ],
  "peewee.Database.conflict_update": [
    "peewee.MySQLDatabase",
    "peewee.PostgresqlDatabase",
    "peewee.SqliteDatabase"
  ],
  "peewee.Database.default_values_insert": [
    "peewee.MySQLDatabase"
  ],
  "peewee.Database.extract_date": [
    "peewee.MySQLDatabase",
    "peewee.PostgresqlDatabase",
    "peewee.SqliteDatabase"
  ],
  "peewee.Database.from_timestamp": [
    "peewee.MySQLDatabase",
    "peewee.PostgresqlDatabase",
    "peewee.SqliteDatabase"
  ],
  "peewee.Database.get_columns": [
    "peewee.MySQLDatabase",
    "peewee.PostgresqlDatabase",
    "peewee.SqliteDatabase"
  ],
  "peewee.Database.get_foreign_keys": [
    "peewee.MySQLDatabase",
    "peewee.PostgresqlDatabase",
    "peewee.SqliteDatabase"
  ],
  "peewee.Database.get_indexes": [
    "peewee.MySQLDatabase",
    "peewee.PostgresqlDatabase",
    "peewee.SqliteDatabase"
  ],
  "peewee.Database.get_noop_select": [
    "peewee.MySQLDatabase",
    "peewee.PostgresqlDatabase"
  ],
  "peewee.Database.get_primary_keys": [
    "peewee.MySQLDatabase",
    "peewee.PostgresqlDatabase",
    "peewee.SqliteDatabase"
  ],
  "peewee.Database.get_tables": [
    "peewee.MySQLDatabase",
    "peewee.PostgresqlDatabase",
    "peewee.SqliteDatabase"
  ],
  "peewee.Database.init": [
    "peewee.MySQLDatabase",
    "peewee.PostgresqlDatabase",
    "peewee.SqliteDatabase"
  ],
  "peewee.Database.is_connection_usable": [
    "peewee.MySQLDatabase",
    "peewee.PostgresqlDatabase"
  ],
  "peewee.Database.last_insert_id": [
    "peewee.PostgresqlDatabase",
    "peewee.SqliteDatabase"
  ],
  "peewee.Database.random": [
    "peewee.MySQLDatabase"
  ],
  "peewee.Database.rows_affected": [
    "peewee.PostgresqlDatabase",
    "peewee.SqliteDatabase"
  ],
  "peewee.Database.sequence_exists": [
    "peewee.PostgresqlDatabase"
  ],
  "peewee.Database.to_timestamp": [
    "peewee.MySQLDatabase",
    "peewee.PostgresqlDatabase",
    "peewee.SqliteDatabase"
  ],
  "peewee.Database.truncate_date": [
    "peewee.MySQLDatabase",
    "peewee.PostgresqlDatabase",
    "peewee.SqliteDatabase"
  ],
  "peewee.DictCursorWrapper.process_row": [
    "peewee.BaseModelCursorWrapper",
    "peewee.ObjectCursorWrapper"
  ],
  "peewee.Field.__init__": [
    "peewee.BareField",
    "peewee.DecimalField",
    "peewee.DeferredForeignKey",
    "peewee.FieldAlias",
    "peewee.ForeignKeyField",
    "peewee._BaseFormattedField"
  ],
  "peewee.Field.__sql__": [
    "peewee.CompositeKey",
    "peewee.FieldAlias"
  ],
  "peewee.Field.adapt": [
    "peewee.DateField",
    "peewee.DateTimeField",
    "peewee.FieldAlias",
    "peewee.FloatField",
    "peewee.ForeignKeyField",
    "peewee.IntegerField",
    "peewee.TimeField",
    "peewee._StringField"
  ],
  "peewee.Field.bind": [
    "peewee.BlobField",
    "peewee.CompositeKey",
    "peewee.ForeignKeyField",
    "peewee.ManyToManyField",
    "peewee.VirtualField"
  ],
  "peewee.Field.db_value": [
    "peewee.BlobField",
    "peewee.DecimalField",
    "peewee.FieldAlias",
    "peewee.ForeignKeyField",
    "peewee.IPField",
    "peewee.TimestampField",
    "peewee.UUIDField",
    "peewee.VirtualField"
  ],
  "peewee.Field.ddl_datatype": [
    "peewee.BareField"
  ],
  "peewee.Field.field_type": [
    "peewee.ForeignKeyField"
  ],
  "peewee.Field.get_modifiers": [
    "peewee.CharField",
    "peewee.DecimalField",
    "peewee.ForeignKeyField"
  ],
  "peewee.Field.python_value": [
    "peewee.BinaryUUIDField",
    "peewee.DecimalField",
    "peewee.FieldAlias",
    "peewee.FixedCharField",
    "peewee.ForeignKeyField",
    "peewee.IPField",
    "peewee.TimestampField",
    "peewee.UUIDField",
    "peewee.VirtualField"
  ],
  "peewee.FieldAccessor.__get__": [
    "peewee.BigBitFieldAccessor",
    "peewee.ForeignKeyAccessor",
    "peewee.ManyToManyFieldAccessor"
  ],
  "peewee.FieldAccessor.__init__": [
    "peewee.ForeignKeyAccessor",
    "peewee.ManyToManyFieldAccessor"
  ],
  "peewee.FieldAccessor.__set__": [
    "peewee.BigBitFieldAccessor",
    "peewee.ForeignKeyAccessor",
    "peewee.ManyToManyFieldAccessor"
  ],
  "peewee.Index.__init__": [
    "peewee.ModelIndex"
  ],
  "peewee.Insert.get_default_columns": [
    "peewee.ModelInsert"
  ],
  "peewee.Insert.get_default_data": [
    "peewee.ModelInsert"
  ],
  "peewee.Metadata.__init__": [
    "peewee.SubclassAwareMetadata"
  ],
  "peewee.ModelDictCursorWrapper.process_row": [
    "peewee.ModelObjectCursorWrapper",
    "peewee.ModelTupleCursorWrapper"
  ],
  "peewee.ModelSelect.__init__": [
    "peewee.ManyToManyQuery"
  ],
  "peewee.Node.__sql__": [
    "peewee.Alias",
    "peewee.BaseQuery",
    "peewee.BindTo",
    "peewee.BitwiseNegated",
    "peewee.CTE",
    "peewee.Cast",
    "peewee.Column",
    "peewee.Entity",
    "peewee.Expression",
    "peewee.Field",
    "peewee.ForUpdate",
    "peewee.Function",
    "peewee.Index",
    "peewee.Join",
    "peewee.ModelAlias",
    "peewee.NamespaceAttribute",
    "peewee.Negated",
    "peewee.NodeList",
    "peewee.Ordering",
    "peewee.QualifiedNames",
    "peewee.SQL",
    "peewee.Table",
    "peewee.Value",
    "peewee.ValueLiterals",
    "peewee.ValuesList",
    "peewee.Window",
    "peewee.WindowAlias"
  ],
  "peewee.Node.clone": [
    "peewee.BaseQuery",
    "peewee.DQ",
    "peewee.FieldAlias",
    "peewee.Table"
  ],
  "peewee.Node.is_alias": [
    "peewee.WrappedNode"
  ],
  "peewee.Node.unwrap": [
    "peewee.WrappedNode"
  ],
  "peewee.Query.__init__": [
    "peewee._WriteQuery"
  ],
  "peewee.Query.__sql__": [
    "peewee.CompoundSelectQuery",
    "peewee.Select",
    "peewee._WriteQuery"
  ],
  "peewee.Query.where": [
    "peewee.Insert"
  ],
  "peewee.Select.__sql__": [
    "peewee.NoopModelSelect"
  ],
  "peewee.Select.__sql_selection__": [
    "peewee.ModelSelect"
  ],
  "peewee.Select.clone": [
    "peewee.ModelSelect"
  ],
  "peewee.Select.join": [
    "peewee.ModelSelect"
  ],
  "peewee.Select.left_outer_join": [
    "peewee.ModelSelect"
  ],
  "peewee.Select.select": [
    "peewee.ModelSelect"
  ],
  "peewee.Select.select_extend": [
    "peewee.ModelSelect"
  ],
  "peewee.SelectBase.exists": [
    "peewee.CompoundSelectQuery"
  ],
  "peewee.Source.join": [
    "peewee.Select"
  ],
  "peewee.Source.left_outer_join": [
    "peewee.Select"
  ],
  "peewee.Source.select": [
    "peewee.Table"
  ],
  "peewee.WrappedNode.__init__": [
    "peewee.Alias",
    "peewee.BindTo",
    "peewee.Cast",
    "peewee.Ordering"
  ],
  "peewee.WrappedNode.is_alias": [
    "peewee.Alias"
  ],
  "peewee._HashableSource.__init__": [
    "peewee.CTE",
    "peewee.Table",
    "peewee.ValuesList"
  ],
  "peewee._ModelQueryHelper.__init__": [
    "peewee.ModelRaw",
    "peewee._ModelWriteQueryHelper"
  ],
  "peewee._ModelWriteQueryHelper.__init__": [
    "peewee.ModelInsert"
  ],
  "peewee._ModelWriteQueryHelper.returning": [
    "peewee.ModelInsert"
  ],
  "peewee._WriteQuery.__init__": [
    "peewee.Insert",
    "peewee.Update"
  ],
  "peewee._WriteQuery.__sql__": [
    "peewee.Delete",
    "peewee.Insert",
    "peewee.Update"
  ],
  "peewee._WriteQuery.handle_result": [
    "peewee.Insert"
  ],
  "pickle.Pickler.__init__": [
    "multiprocessing.reduction.ForkingPickler",
    "typeshed.typeshed.stdlib.multiprocessing.reduction.ForkingPickler"
  ],
  "pika.adapters.base_connection.BaseConnection.__init__": [
    "pika.adapters.asyncio_connection.AsyncioConnection",
    "pika.adapters.gevent_connection.GeventConnection",
    "pika.adapters.select_connection.SelectConnection",
    "pika.adapters.tornado_connection.TornadoConnection",
    "typeshed.typeshed.stubs.pika.pika.adapters.asyncio_connection.AsyncioConnection",
    "typeshed.typeshed.stubs.pika.pika.adapters.gevent_connection.GeventConnection",
    "typeshed.typeshed.stubs.pika.pika.adapters.select_connection.SelectConnection",
    "typeshed.typeshed.stubs.pika.pika.adapters.tornado_connection.TornadoConnection"
  ],
  "pika.adapters.base_connection.BaseConnection.create_connection": [
    "pika.adapters.asyncio_connection.AsyncioConnection",
    "pika.adapters.gevent_connection.GeventConnection",
    "pika.adapters.select_connection.SelectConnection",
    "pika.adapters.tornado_connection.TornadoConnection",
    "typeshed.typeshed.stubs.pika.pika.adapters.asyncio_connection.AsyncioConnection",
    "typeshed.typeshed.stubs.pika.pika.adapters.gevent_connection.GeventConnection",
    "typeshed.typeshed.stubs.pika.pika.adapters.select_connection.SelectConnection",
    "typeshed.typeshed.stubs.pika.pika.adapters.tornado_connection.TornadoConnection"
  ],
  "pika.adapters.select_connection._PollerBase.__init__": [
    "pika.adapters.select_connection.KQueuePoller",
    "pika.adapters.select_connection.PollPoller",
    "typeshed.typeshed.stubs.pika.pika.adapters.select_connection.KQueuePoller",
    "typeshed.typeshed.stubs.pika.pika.adapters.select_connection.PollPoller"
  ],
  "pika.adapters.select_connection._PollerBase.poll": [
    "pika.adapters.select_connection.KQueuePoller",
    "pika.adapters.select_connection.PollPoller",
    "pika.adapters.select_connection.SelectPoller",
    "typeshed.typeshed.stubs.pika.pika.adapters.select_connection.KQueuePoller",
    "typeshed.typeshed.stubs.pika.pika.adapters.select_connection.PollPoller",
    "typeshed.typeshed.stubs.pika.pika.adapters.select_connection.SelectPoller"
  ],
  "pika.adapters.utils.connection_workflow.AbstractAMQPConnectionWorkflow.abort": [
    "pika.adapters.utils.connection_workflow.AMQPConnectionWorkflow",
    "typeshed.typeshed.stubs.pika.pika.adapters.utils.connection_workflow.AMQPConnectionWorkflow"
  ],
  "pika.adapters.utils.connection_workflow.AbstractAMQPConnectionWorkflow.start": [
    "pika.adapters.utils.connection_workflow.AMQPConnectionWorkflow",
    "typeshed.typeshed.stubs.pika.pika.adapters.utils.connection_workflow.AMQPConnectionWorkflow"
  ],
  "pika.adapters.utils.io_services_utils._AsyncTransportBase.__init__": [
    "pika.adapters.utils.io_services_utils._AsyncPlaintextTransport",
    "pika.adapters.utils.io_services_utils._AsyncSSLTransport",
    "typeshed.typeshed.stubs.pika.pika.adapters.utils.io_services_utils._AsyncPlaintextTransport",
    "typeshed.typeshed.stubs.pika.pika.adapters.utils.io_services_utils._AsyncSSLTransport"
  ],
  "pika.adapters.utils.nbio_interface.AbstractFileDescriptorServices.remove_reader": [
    "pika.adapters.asyncio_connection._AsyncioIOServicesAdapter",
    "pika.adapters.utils.selector_ioloop_adapter.SelectorIOServicesAdapter",
    "typeshed.typeshed.stubs.pika.pika.adapters.asyncio_connection._AsyncioIOServicesAdapter",
    "typeshed.typeshed.stubs.pika.pika.adapters.utils.selector_ioloop_adapter.SelectorIOServicesAdapter"
  ],
  "pika.adapters.utils.nbio_interface.AbstractFileDescriptorServices.remove_writer": [
    "pika.adapters.asyncio_connection._AsyncioIOServicesAdapter",
    "pika.adapters.utils.selector_ioloop_adapter.SelectorIOServicesAdapter",
    "typeshed.typeshed.stubs.pika.pika.adapters.asyncio_connection._AsyncioIOServicesAdapter",
    "typeshed.typeshed.stubs.pika.pika.adapters.utils.selector_ioloop_adapter.SelectorIOServicesAdapter"
  ],
  "pika.adapters.utils.nbio_interface.AbstractFileDescriptorServices.set_reader": [
    "pika.adapters.asyncio_connection._AsyncioIOServicesAdapter",
    "pika.adapters.utils.selector_ioloop_adapter.SelectorIOServicesAdapter",
    "typeshed.typeshed.stubs.pika.pika.adapters.asyncio_connection._AsyncioIOServicesAdapter",
    "typeshed.typeshed.stubs.pika.pika.adapters.utils.selector_ioloop_adapter.SelectorIOServicesAdapter"
  ],
  "pika.adapters.utils.nbio_interface.AbstractFileDescriptorServices.set_writer": [
    "pika.adapters.asyncio_connection._AsyncioIOServicesAdapter",
    "pika.adapters.utils.selector_ioloop_adapter.SelectorIOServicesAdapter",
    "typeshed.typeshed.stubs.pika.pika.adapters.asyncio_connection._AsyncioIOServicesAdapter",
    "typeshed.typeshed.stubs.pika.pika.adapters.utils.selector_ioloop_adapter.SelectorIOServicesAdapter"
  ],
  "pika.adapters.utils.nbio_interface.AbstractIOReference.cancel": [
    "pika.adapters.asyncio_connection._AsyncioIOReference",
    "pika.adapters.gevent_connection._GeventIOLoopIOHandle",
    "pika.adapters.utils.io_services_utils._AsyncServiceAsyncHandle",
    "pika.adapters.utils.selector_ioloop_adapter._SelectorIOLoopIOHandle",
    "typeshed.typeshed.stubs.pika.pika.adapters.asyncio_connection._AsyncioIOReference",
    "typeshed.typeshed.stubs.pika.pika.adapters.gevent_connection._GeventIOLoopIOHandle",
    "typeshed.typeshed.stubs.pika.pika.adapters.utils.io_services_utils._AsyncServiceAsyncHandle",
    "typeshed.typeshed.stubs.pika.pika.adapters.utils.selector_ioloop_adapter._SelectorIOLoopIOHandle"
  ],
  "pika.adapters.utils.nbio_interface.AbstractIOServices.add_callback_threadsafe": [
    "pika.adapters.asyncio_connection._AsyncioIOServicesAdapter",
    "pika.adapters.utils.selector_ioloop_adapter.SelectorIOServicesAdapter",
    "typeshed.typeshed.stubs.pika.pika.adapters.asyncio_connection._AsyncioIOServicesAdapter",
    "typeshed.typeshed.stubs.pika.pika.adapters.utils.selector_ioloop_adapter.SelectorIOServicesAdapter"
  ],
  "pika.adapters.utils.nbio_interface.AbstractIOServices.call_later": [
    "pika.adapters.asyncio_connection._AsyncioIOServicesAdapter",
    "pika.adapters.utils.selector_ioloop_adapter.SelectorIOServicesAdapter",
    "typeshed.typeshed.stubs.pika.pika.adapters.asyncio_connection._AsyncioIOServicesAdapter",
    "typeshed.typeshed.stubs.pika.pika.adapters.utils.selector_ioloop_adapter.SelectorIOServicesAdapter"
  ],
  "pika.adapters.utils.nbio_interface.AbstractIOServices.close": [
    "pika.adapters.asyncio_connection._AsyncioIOServicesAdapter",
    "pika.adapters.utils.selector_ioloop_adapter.SelectorIOServicesAdapter",
    "typeshed.typeshed.stubs.pika.pika.adapters.asyncio_connection._AsyncioIOServicesAdapter",
    "typeshed.typeshed.stubs.pika.pika.adapters.utils.selector_ioloop_adapter.SelectorIOServicesAdapter"
  ],
  "pika.adapters.utils.nbio_interface.AbstractIOServices.get_native_ioloop": [
    "pika.adapters.asyncio_connection._AsyncioIOServicesAdapter",
    "pika.adapters.utils.selector_ioloop_adapter.SelectorIOServicesAdapter",
    "typeshed.typeshed.stubs.pika.pika.adapters.asyncio_connection._AsyncioIOServicesAdapter",
    "typeshed.typeshed.stubs.pika.pika.adapters.utils.selector_ioloop_adapter.SelectorIOServicesAdapter"
  ],
  "pika.adapters.utils.nbio_interface.AbstractIOServices.getaddrinfo": [
    "pika.adapters.asyncio_connection._AsyncioIOServicesAdapter",
    "pika.adapters.utils.selector_ioloop_adapter.SelectorIOServicesAdapter",
    "typeshed.typeshed.stubs.pika.pika.adapters.asyncio_connection._AsyncioIOServicesAdapter",
    "typeshed.typeshed.stubs.pika.pika.adapters.utils.selector_ioloop_adapter.SelectorIOServicesAdapter"
  ],
  "pika.adapters.utils.nbio_interface.AbstractIOServices.run": [
    "pika.adapters.asyncio_connection._AsyncioIOServicesAdapter",
    "pika.adapters.utils.selector_ioloop_adapter.SelectorIOServicesAdapter",
    "typeshed.typeshed.stubs.pika.pika.adapters.asyncio_connection._AsyncioIOServicesAdapter",
    "typeshed.typeshed.stubs.pika.pika.adapters.utils.selector_ioloop_adapter.SelectorIOServicesAdapter"
  ],
  "pika.adapters.utils.nbio_interface.AbstractIOServices.stop": [
    "pika.adapters.asyncio_connection._AsyncioIOServicesAdapter",
    "pika.adapters.utils.selector_ioloop_adapter.SelectorIOServicesAdapter",
    "typeshed.typeshed.stubs.pika.pika.adapters.asyncio_connection._AsyncioIOServicesAdapter",
    "typeshed.typeshed.stubs.pika.pika.adapters.utils.selector_ioloop_adapter.SelectorIOServicesAdapter"
  ],
  "pika.adapters.utils.nbio_interface.AbstractStreamTransport.abort": [
    "pika.adapters.utils.io_services_utils._AsyncTransportBase",
    "typeshed.typeshed.stubs.pika.pika.adapters.utils.io_services_utils._AsyncTransportBase"
  ],
  "pika.adapters.utils.nbio_interface.AbstractStreamTransport.get_protocol": [
    "pika.adapters.utils.io_services_utils._AsyncTransportBase",
    "typeshed.typeshed.stubs.pika.pika.adapters.utils.io_services_utils._AsyncTransportBase"
  ],
  "pika.adapters.utils.nbio_interface.AbstractStreamTransport.get_write_buffer_size": [
    "pika.adapters.utils.io_services_utils._AsyncTransportBase",
    "typeshed.typeshed.stubs.pika.pika.adapters.utils.io_services_utils._AsyncTransportBase"
  ],
  "pika.adapters.utils.nbio_interface.AbstractStreamTransport.write": [
    "pika.adapters.utils.io_services_utils._AsyncPlaintextTransport",
    "pika.adapters.utils.io_services_utils._AsyncSSLTransport",
    "typeshed.typeshed.stubs.pika.pika.adapters.utils.io_services_utils._AsyncPlaintextTransport",
    "typeshed.typeshed.stubs.pika.pika.adapters.utils.io_services_utils._AsyncSSLTransport"
  ],
  "pika.adapters.utils.nbio_interface.AbstractTimerReference.cancel": [
    "pika.adapters.asyncio_connection._TimerHandle",
    "pika.adapters.twisted_connection._TimerHandle",
    "pika.adapters.utils.selector_ioloop_adapter._TimerHandle",
    "typeshed.typeshed.stubs.pika.pika.adapters.asyncio_connection._TimerHandle",
    "typeshed.typeshed.stubs.pika.pika.adapters.twisted_connection._TimerHandle",
    "typeshed.typeshed.stubs.pika.pika.adapters.utils.selector_ioloop_adapter._TimerHandle"
  ],
  "pika.adapters.utils.selector_ioloop_adapter.AbstractSelectorIOLoop.add_callback": [
    "pika.adapters.gevent_connection._GeventSelectorIOLoop",
    "typeshed.typeshed.stubs.pika.pika.adapters.gevent_connection._GeventSelectorIOLoop"
  ],
  "pika.adapters.utils.selector_ioloop_adapter.AbstractSelectorIOLoop.add_handler": [
    "pika.adapters.gevent_connection._GeventSelectorIOLoop",
    "pika.adapters.select_connection.IOLoop",
    "typeshed.typeshed.stubs.pika.pika.adapters.gevent_connection._GeventSelectorIOLoop",
    "typeshed.typeshed.stubs.pika.pika.adapters.select_connection.IOLoop"
  ],
  "pika.adapters.utils.selector_ioloop_adapter.AbstractSelectorIOLoop.call_later": [
    "pika.adapters.gevent_connection._GeventSelectorIOLoop",
    "pika.adapters.select_connection.IOLoop",
    "typeshed.typeshed.stubs.pika.pika.adapters.gevent_connection._GeventSelectorIOLoop",
    "typeshed.typeshed.stubs.pika.pika.adapters.select_connection.IOLoop"
  ],
  "pika.adapters.utils.selector_ioloop_adapter.AbstractSelectorIOLoop.close": [
    "pika.adapters.gevent_connection._GeventSelectorIOLoop",
    "pika.adapters.select_connection.IOLoop",
    "typeshed.typeshed.stubs.pika.pika.adapters.gevent_connection._GeventSelectorIOLoop",
    "typeshed.typeshed.stubs.pika.pika.adapters.select_connection.IOLoop"
  ],
  "pika.adapters.utils.selector_ioloop_adapter.AbstractSelectorIOLoop.remove_handler": [
    "pika.adapters.gevent_connection._GeventSelectorIOLoop",
    "pika.adapters.select_connection.IOLoop",
    "typeshed.typeshed.stubs.pika.pika.adapters.gevent_connection._GeventSelectorIOLoop",
    "typeshed.typeshed.stubs.pika.pika.adapters.select_connection.IOLoop"
  ],
  "pika.adapters.utils.selector_ioloop_adapter.AbstractSelectorIOLoop.remove_timeout": [
    "pika.adapters.gevent_connection._GeventSelectorIOLoop",
    "pika.adapters.select_connection.IOLoop",
    "typeshed.typeshed.stubs.pika.pika.adapters.gevent_connection._GeventSelectorIOLoop",
    "typeshed.typeshed.stubs.pika.pika.adapters.select_connection.IOLoop"
  ],
  "pika.adapters.utils.selector_ioloop_adapter.AbstractSelectorIOLoop.start": [
    "pika.adapters.gevent_connection._GeventSelectorIOLoop",
    "pika.adapters.select_connection.IOLoop",
    "typeshed.typeshed.stubs.pika.pika.adapters.gevent_connection._GeventSelectorIOLoop",
    "typeshed.typeshed.stubs.pika.pika.adapters.select_connection.IOLoop"
  ],
  "pika.adapters.utils.selector_ioloop_adapter.AbstractSelectorIOLoop.stop": [
    "pika.adapters.gevent_connection._GeventSelectorIOLoop",
    "pika.adapters.select_connection.IOLoop",
    "typeshed.typeshed.stubs.pika.pika.adapters.gevent_connection._GeventSelectorIOLoop",
    "typeshed.typeshed.stubs.pika.pika.adapters.select_connection.IOLoop"
  ],
  "pika.adapters.utils.selector_ioloop_adapter.AbstractSelectorIOLoop.update_handler": [
    "pika.adapters.gevent_connection._GeventSelectorIOLoop",
    "pika.adapters.select_connection.IOLoop",
    "typeshed.typeshed.stubs.pika.pika.adapters.gevent_connection._GeventSelectorIOLoop",
    "typeshed.typeshed.stubs.pika.pika.adapters.select_connection.IOLoop"
  ],
  "pika.adapters.utils.selector_ioloop_adapter.SelectorIOServicesAdapter.getaddrinfo": [
    "pika.adapters.gevent_connection._GeventSelectorIOServicesAdapter",
    "typeshed.typeshed.stubs.pika.pika.adapters.gevent_connection._GeventSelectorIOServicesAdapter"
  ],
  "pika.amqp_object.Method.synchronous": [
    "pika.spec.Access.Request",
    "pika.spec.Access.RequestOk",
    "pika.spec.Basic.Ack",
    "pika.spec.Basic.Cancel",
    "pika.spec.Basic.CancelOk",
    "pika.spec.Basic.Consume",
    "pika.spec.Basic.ConsumeOk",
    "pika.spec.Basic.Deliver",
    "pika.spec.Basic.Get",
    "pika.spec.Basic.GetEmpty",
    "pika.spec.Basic.GetOk",
    "pika.spec.Basic.Nack",
    "pika.spec.Basic.Publish",
    "pika.spec.Basic.Qos",
    "pika.spec.Basic.QosOk",
    "pika.spec.Basic.Recover",
    "pika.spec.Basic.RecoverAsync",
    "pika.spec.Basic.RecoverOk",
    "pika.spec.Basic.Reject",
    "pika.spec.Basic.Return",
    "pika.spec.Channel.Close",
    "pika.spec.Channel.CloseOk",
    "pika.spec.Channel.Flow",
    "pika.spec.Channel.FlowOk",
    "pika.spec.Channel.Open",
    "pika.spec.Channel.OpenOk",
    "pika.spec.Confirm.Select",
    "pika.spec.Confirm.SelectOk",
    "pika.spec.Connection.Blocked",
    "pika.spec.Connection.Close",
    "pika.spec.Connection.CloseOk",
    "pika.spec.Connection.Open",
    "pika.spec.Connection.OpenOk",
    "pika.spec.Connection.Secure",
    "pika.spec.Connection.SecureOk",
    "pika.spec.Connection.Start",
    "pika.spec.Connection.StartOk",
    "pika.spec.Connection.Tune",
    "pika.spec.Connection.TuneOk",
    "pika.spec.Connection.Unblocked",
    "pika.spec.Connection.UpdateSecret",
    "pika.spec.Connection.UpdateSecretOk",
    "pika.spec.Exchange.Bind",
    "pika.spec.Exchange.BindOk",
    "pika.spec.Exchange.Declare",
    "pika.spec.Exchange.DeclareOk",
    "pika.spec.Exchange.Delete",
    "pika.spec.Exchange.DeleteOk",
    "pika.spec.Exchange.Unbind",
    "pika.spec.Exchange.UnbindOk",
    "pika.spec.Queue.Bind",
    "pika.spec.Queue.BindOk",
    "pika.spec.Queue.Declare",
    "pika.spec.Queue.DeclareOk",
    "pika.spec.Queue.Delete",
    "pika.spec.Queue.DeleteOk",
    "pika.spec.Queue.Purge",
    "pika.spec.Queue.PurgeOk",
    "pika.spec.Queue.Unbind",
    "pika.spec.Queue.UnbindOk",
    "pika.spec.Tx.Commit",
    "pika.spec.Tx.CommitOk",
    "pika.spec.Tx.Rollback",
    "pika.spec.Tx.RollbackOk",
    "pika.spec.Tx.Select",
    "pika.spec.Tx.SelectOk"
  ],
  "pika.connection.Connection.__init__": [
    "pika.adapters.base_connection.BaseConnection",
    "pika.adapters.twisted_connection._TwistedConnectionAdapter",
    "typeshed.typeshed.stubs.pika.pika.adapters.twisted_connection._TwistedConnectionAdapter"
  ],
  "pika.connection.Parameters.__init__": [
    "pika.connection.ConnectionParameters",
    "pika.connection.URLParameters"
  ],
  "pika.frame.Frame.__init__": [
    "pika.frame.Body",
    "pika.frame.Header",
    "pika.frame.Heartbeat",
    "pika.frame.Method"
  ],
  "pika.frame.Frame.marshal": [
    "pika.frame.Body",
    "pika.frame.Header",
    "pika.frame.Heartbeat",
    "pika.frame.Method"
  ],
  "pip._internal.build_env.BuildEnvironment.__enter__": [
    "pip._internal.build_env.NoOpBuildEnvironment"
  ],
  "pip._internal.build_env.BuildEnvironment.__exit__": [
    "pip._internal.build_env.NoOpBuildEnvironment"
  ],
  "pip._internal.build_env.BuildEnvironment.__init__": [
    "pip._internal.build_env.NoOpBuildEnvironment"
  ],
  "pip._internal.build_env.BuildEnvironment.install_requirements": [
    "pip._internal.build_env.NoOpBuildEnvironment"
  ],
  "pip._internal.cache.Cache.__init__": [
    "pip._internal.cache.SimpleWheelCache",
    "pip._internal.cache.WheelCache"
  ],
  "pip._internal.cache.Cache.get": [
    "pip._internal.cache.SimpleWheelCache",
    "pip._internal.cache.WheelCache"
  ],
  "pip._internal.cache.Cache.get_path_for_link": [
    "pip._internal.cache.SimpleWheelCache",
    "pip._internal.cache.WheelCache"
  ],
  "pip._internal.cache.SimpleWheelCache.__init__": [
    "pip._internal.cache.EphemWheelCache"
  ],
  "pip._internal.cli.base_command.Command.add_options": [
    "pip._internal.commands.cache.CacheCommand",
    "pip._internal.commands.completion.CompletionCommand",
    "pip._internal.commands.configuration.ConfigurationCommand",
    "pip._internal.commands.debug.DebugCommand",
    "pip._internal.commands.download.DownloadCommand",
    "pip._internal.commands.freeze.FreezeCommand",
    "pip._internal.commands.hash.HashCommand",
    "pip._internal.commands.index.IndexCommand",
    "pip._internal.commands.inspect.InspectCommand",
    "pip._internal.commands.install.InstallCommand",
    "pip._internal.commands.list.ListCommand",
    "pip._internal.commands.search.SearchCommand",
    "pip._internal.commands.show.ShowCommand",
    "pip._internal.commands.uninstall.UninstallCommand",
    "pip._internal.commands.wheel.WheelCommand"
  ],
  "pip._internal.cli.base_command.Command.handle_pip_version_check": [
    "pip._internal.cli.req_command.IndexGroupCommand"
  ],
  "pip._internal.cli.base_command.Command.run": [
    "pip._internal.commands.cache.CacheCommand",
    "pip._internal.commands.check.CheckCommand",
    "pip._internal.commands.completion.CompletionCommand",
    "pip._internal.commands.configuration.ConfigurationCommand",
    "pip._internal.commands.debug.DebugCommand",
    "pip._internal.commands.download.DownloadCommand",
    "pip._internal.commands.freeze.FreezeCommand",
    "pip._internal.commands.hash.HashCommand",
    "pip._internal.commands.help.HelpCommand",
    "pip._internal.commands.index.IndexCommand",
    "pip._internal.commands.inspect.InspectCommand",
    "pip._internal.commands.install.InstallCommand",
    "pip._internal.commands.list.ListCommand",
    "pip._internal.commands.search.SearchCommand",
    "pip._internal.commands.show.ShowCommand",
    "pip._internal.commands.uninstall.UninstallCommand",
    "pip._internal.commands.wheel.WheelCommand"
  ],
  "pip._internal.cli.command_context.CommandContextMixIn.__init__": [
    "pip._internal.cli.base_command.Command",
    "pip._internal.cli.req_command.SessionCommandMixin"
  ],
  "pip._internal.cli.spinners.SpinnerInterface.finish": [
    "pip._internal.cli.spinners.InteractiveSpinner",
    "pip._internal.cli.spinners.NonInteractiveSpinner"
  ],
  "pip._internal.cli.spinners.SpinnerInterface.spin": [
    "pip._internal.cli.spinners.InteractiveSpinner",
    "pip._internal.cli.spinners.NonInteractiveSpinner"
  ],
  "pip._internal.distributions.base.AbstractDistribution.build_tracker_id": [
    "pip._internal.distributions.installed.InstalledDistribution",
    "pip._internal.distributions.sdist.SourceDistribution",
    "pip._internal.distributions.wheel.WheelDistribution"
  ],
  "pip._internal.distributions.base.AbstractDistribution.get_metadata_distribution": [
    "pip._internal.distributions.installed.InstalledDistribution",
    "pip._internal.distributions.sdist.SourceDistribution",
    "pip._internal.distributions.wheel.WheelDistribution"
  ],
  "pip._internal.distributions.base.AbstractDistribution.prepare_distribution_metadata": [
    "pip._internal.distributions.installed.InstalledDistribution",
    "pip._internal.distributions.sdist.SourceDistribution",
    "pip._internal.distributions.wheel.WheelDistribution"
  ],
  "pip._internal.exceptions.DiagnosticPipError.__init__": [
    "pip._internal.exceptions.ExternallyManagedEnvironment",
    "pip._internal.exceptions.InstallationSubprocessError",
    "pip._internal.exceptions.InvalidPyProjectBuildRequires",
    "pip._internal.exceptions.MissingPyProjectBuildRequires"
  ],
  "pip._internal.exceptions.HashError.body": [
    "pip._internal.exceptions.HashMismatch",
    "pip._internal.exceptions.HashMissing"
  ],
  "pip._internal.exceptions.InstallationSubprocessError.__init__": [
    "pip._internal.exceptions.MetadataGenerationFailed"
  ],
  "pip._internal.exceptions.InstallationSubprocessError.__str__": [
    "pip._internal.exceptions.MetadataGenerationFailed"
  ],
  "pip._internal.index.sources.LinkSource.file_links": [
    "pip._internal.index.sources._FlatDirectorySource",
    "pip._internal.index.sources._IndexDirectorySource",
    "pip._internal.index.sources._LocalFileSource",
    "pip._internal.index.sources._RemoteFileSource"
  ],
  "pip._internal.index.sources.LinkSource.link": [
    "pip._internal.index.sources._FlatDirectorySource",
    "pip._internal.index.sources._IndexDirectorySource",
    "pip._internal.index.sources._LocalFileSource",
    "pip._internal.index.sources._RemoteFileSource"
  ],
  "pip._internal.index.sources.LinkSource.page_candidates": [
    "pip._internal.index.sources._FlatDirectorySource",
    "pip._internal.index.sources._IndexDirectorySource",
    "pip._internal.index.sources._LocalFileSource",
    "pip._internal.index.sources._RemoteFileSource"
  ],
  "pip._internal.metadata.base.BaseDistribution._metadata_impl": [
    "pip._internal.metadata.importlib._dists.Distribution",
    "pip._internal.metadata.pkg_resources.Distribution"
  ],
  "pip._internal.metadata.base.BaseDistribution.canonical_name": [
    "pip._internal.metadata.importlib._dists.Distribution",
    "pip._internal.metadata.pkg_resources.Distribution"
  ],
  "pip._internal.metadata.base.BaseDistribution.from_directory": [
    "pip._internal.metadata.importlib._dists.Distribution",
    "pip._internal.metadata.pkg_resources.Distribution"
  ],
  "pip._internal.metadata.base.BaseDistribution.from_metadata_file_contents": [
    "pip._internal.metadata.importlib._dists.Distribution",
    "pip._internal.metadata.pkg_resources.Distribution"
  ],
  "pip._internal.metadata.base.BaseDistribution.from_wheel": [
    "pip._internal.metadata.importlib._dists.Distribution",
    "pip._internal.metadata.pkg_resources.Distribution"
  ],
  "pip._internal.metadata.base.BaseDistribution.info_location": [
    "pip._internal.metadata.importlib._dists.Distribution",
    "pip._internal.metadata.pkg_resources.Distribution"
  ],
  "pip._internal.metadata.base.BaseDistribution.installed_by_distutils": [
    "pip._internal.metadata.pkg_resources.Distribution"
  ],
  "pip._internal.metadata.base.BaseDistribution.installed_location": [
    "pip._internal.metadata.importlib._dists.Distribution",
    "pip._internal.metadata.pkg_resources.Distribution"
  ],
  "pip._internal.metadata.base.BaseDistribution.is_extra_provided": [
    "pip._internal.metadata.importlib._dists.Distribution",
    "pip._internal.metadata.pkg_resources.Distribution"
  ],
  "pip._internal.metadata.base.BaseDistribution.is_file": [
    "pip._internal.metadata.importlib._dists.Distribution",
    "pip._internal.metadata.pkg_resources.Distribution"
  ],
  "pip._internal.metadata.base.BaseDistribution.iter_dependencies": [
    "pip._internal.metadata.importlib._dists.Distribution",
    "pip._internal.metadata.pkg_resources.Distribution"
  ],
  "pip._internal.metadata.base.BaseDistribution.iter_distutils_script_names": [
    "pip._internal.metadata.importlib._dists.Distribution",
    "pip._internal.metadata.pkg_resources.Distribution"
  ],
  "pip._internal.metadata.base.BaseDistribution.iter_entry_points": [
    "pip._internal.metadata.importlib._dists.Distribution",
    "pip._internal.metadata.pkg_resources.Distribution"
  ],
  "pip._internal.metadata.base.BaseDistribution.iter_provided_extras": [
    "pip._internal.metadata.importlib._dists.Distribution",
    "pip._internal.metadata.pkg_resources.Distribution"
  ],
  "pip._internal.metadata.base.BaseDistribution.location": [
    "pip._internal.metadata.importlib._dists.Distribution",
    "pip._internal.metadata.pkg_resources.Distribution"
  ],
  "pip._internal.metadata.base.BaseDistribution.read_text": [
    "pip._internal.metadata.importlib._dists.Distribution",
    "pip._internal.metadata.pkg_resources.Distribution"
  ],
  "pip._internal.metadata.base.BaseDistribution.version": [
    "pip._internal.metadata.importlib._dists.Distribution",
    "pip._internal.metadata.pkg_resources.Distribution"
  ],
  "pip._internal.metadata.base.BaseEnvironment._iter_distributions": [
    "pip._internal.metadata.importlib._envs.Environment",
    "pip._internal.metadata.pkg_resources.Environment"
  ],
  "pip._internal.metadata.base.BaseEnvironment.default": [
    "pip._internal.metadata.importlib._envs.Environment",
    "pip._internal.metadata.pkg_resources.Environment"
  ],
  "pip._internal.metadata.base.BaseEnvironment.from_paths": [
    "pip._internal.metadata.importlib._envs.Environment",
    "pip._internal.metadata.pkg_resources.Environment"
  ],
  "pip._internal.metadata.base.BaseEnvironment.get_distribution": [
    "pip._internal.metadata.importlib._envs.Environment",
    "pip._internal.metadata.pkg_resources.Environment"
  ],
  "pip._internal.metadata.base.Wheel.as_zipfile": [
    "pip._internal.metadata.base.FilesystemWheel",
    "pip._internal.metadata.base.MemoryWheel"
  ],
  "pip._internal.network.auth.KeyRingBaseProvider.get_auth_info": [
    "pip._internal.network.auth.KeyRingCliProvider",
    "pip._internal.network.auth.KeyRingNullProvider",
    "pip._internal.network.auth.KeyRingPythonProvider"
  ],
  "pip._internal.network.auth.KeyRingBaseProvider.save_auth_info": [
    "pip._internal.network.auth.KeyRingCliProvider",
    "pip._internal.network.auth.KeyRingNullProvider",
    "pip._internal.network.auth.KeyRingPythonProvider"
  ],
  "pip._internal.resolution.base.BaseResolver.get_installation_order": [
    "pip._internal.resolution.legacy.resolver.Resolver",
    "pip._internal.resolution.resolvelib.resolver.Resolver"
  ],
  "pip._internal.resolution.base.BaseResolver.resolve": [
    "pip._internal.resolution.legacy.resolver.Resolver",
    "pip._internal.resolution.resolvelib.resolver.Resolver"
  ],
  "pip._internal.resolution.resolvelib.base.Candidate.format_for_error": [
    "pip._internal.resolution.resolvelib.candidates.AlreadyInstalledCandidate",
    "pip._internal.resolution.resolvelib.candidates.ExtrasCandidate",
    "pip._internal.resolution.resolvelib.candidates.RequiresPythonCandidate",
    "pip._internal.resolution.resolvelib.candidates._InstallRequirementBackedCandidate"
  ],
  "pip._internal.resolution.resolvelib.base.Candidate.get_install_requirement": [
    "pip._internal.resolution.resolvelib.candidates.AlreadyInstalledCandidate",
    "pip._internal.resolution.resolvelib.candidates.ExtrasCandidate",
    "pip._internal.resolution.resolvelib.candidates.RequiresPythonCandidate",
    "pip._internal.resolution.resolvelib.candidates._InstallRequirementBackedCandidate"
  ],
  "pip._internal.resolution.resolvelib.base.Candidate.is_editable": [
    "pip._internal.resolution.resolvelib.candidates.AlreadyInstalledCandidate",
    "pip._internal.resolution.resolvelib.candidates.ExtrasCandidate"
  ],
  "pip._internal.resolution.resolvelib.base.Candidate.is_installed": [
    "pip._internal.resolution.resolvelib.candidates.ExtrasCandidate"
  ],
  "pip._internal.resolution.resolvelib.base.Candidate.iter_dependencies": [
    "pip._internal.resolution.resolvelib.candidates.AlreadyInstalledCandidate",
    "pip._internal.resolution.resolvelib.candidates.ExtrasCandidate",
    "pip._internal.resolution.resolvelib.candidates.RequiresPythonCandidate",
    "pip._internal.resolution.resolvelib.candidates._InstallRequirementBackedCandidate"
  ],
  "pip._internal.resolution.resolvelib.base.Candidate.name": [
    "pip._internal.resolution.resolvelib.candidates.AlreadyInstalledCandidate",
    "pip._internal.resolution.resolvelib.candidates.ExtrasCandidate",
    "pip._internal.resolution.resolvelib.candidates.RequiresPythonCandidate",
    "pip._internal.resolution.resolvelib.candidates._InstallRequirementBackedCandidate"
  ],
  "pip._internal.resolution.resolvelib.base.Candidate.project_name": [
    "pip._internal.resolution.resolvelib.candidates.AlreadyInstalledCandidate",
    "pip._internal.resolution.resolvelib.candidates.ExtrasCandidate",
    "pip._internal.resolution.resolvelib.candidates.RequiresPythonCandidate",
    "pip._internal.resolution.resolvelib.candidates._InstallRequirementBackedCandidate"
  ],
  "pip._internal.resolution.resolvelib.base.Candidate.source_link": [
    "pip._internal.resolution.resolvelib.candidates.ExtrasCandidate",
    "pip._internal.resolution.resolvelib.candidates._InstallRequirementBackedCandidate"
  ],
  "pip._internal.resolution.resolvelib.base.Candidate.version": [
    "pip._internal.resolution.resolvelib.candidates.AlreadyInstalledCandidate",
    "pip._internal.resolution.resolvelib.candidates.ExtrasCandidate",
    "pip._internal.resolution.resolvelib.candidates.RequiresPythonCandidate",
    "pip._internal.resolution.resolvelib.candidates._InstallRequirementBackedCandidate"
  ],
  "pip._internal.resolution.resolvelib.base.Requirement.format_for_error": [
    "pip._internal.resolution.resolvelib.requirements.ExplicitRequirement",
    "pip._internal.resolution.resolvelib.requirements.RequiresPythonRequirement",
    "pip._internal.resolution.resolvelib.requirements.SpecifierRequirement",
    "pip._internal.resolution.resolvelib.requirements.UnsatisfiableRequirement"
  ],
  "pip._internal.resolution.resolvelib.base.Requirement.get_candidate_lookup": [
    "pip._internal.resolution.resolvelib.requirements.ExplicitRequirement",
    "pip._internal.resolution.resolvelib.requirements.RequiresPythonRequirement",
    "pip._internal.resolution.resolvelib.requirements.SpecifierRequirement",
    "pip._internal.resolution.resolvelib.requirements.UnsatisfiableRequirement"
  ],
  "pip._internal.resolution.resolvelib.base.Requirement.is_satisfied_by": [
    "pip._internal.resolution.resolvelib.requirements.ExplicitRequirement",
    "pip._internal.resolution.resolvelib.requirements.RequiresPythonRequirement",
    "pip._internal.resolution.resolvelib.requirements.SpecifierRequirement",
    "pip._internal.resolution.resolvelib.requirements.UnsatisfiableRequirement"
  ],
  "pip._internal.resolution.resolvelib.base.Requirement.name": [
    "pip._internal.resolution.resolvelib.requirements.ExplicitRequirement",
    "pip._internal.resolution.resolvelib.requirements.RequiresPythonRequirement",
    "pip._internal.resolution.resolvelib.requirements.SpecifierRequirement",
    "pip._internal.resolution.resolvelib.requirements.UnsatisfiableRequirement"
  ],
  "pip._internal.resolution.resolvelib.base.Requirement.project_name": [
    "pip._internal.resolution.resolvelib.requirements.ExplicitRequirement",
    "pip._internal.resolution.resolvelib.requirements.RequiresPythonRequirement",
    "pip._internal.resolution.resolvelib.requirements.SpecifierRequirement",
    "pip._internal.resolution.resolvelib.requirements.UnsatisfiableRequirement"
  ],
  "pip._internal.resolution.resolvelib.candidates._InstallRequirementBackedCandidate.__init__": [
    "pip._internal.resolution.resolvelib.candidates.EditableCandidate",
    "pip._internal.resolution.resolvelib.candidates.LinkCandidate"
  ],
  "pip._internal.resolution.resolvelib.candidates._InstallRequirementBackedCandidate._prepare_distribution": [
    "pip._internal.resolution.resolvelib.candidates.EditableCandidate",
    "pip._internal.resolution.resolvelib.candidates.LinkCandidate"
  ],
  "pip._internal.resolution.resolvelib.requirements.SpecifierRequirement.__init__": [
    "pip._internal.resolution.resolvelib.requirements.SpecifierWithoutExtrasRequirement"
  ],
  "pip._internal.utils.hashes.Hashes.__init__": [
    "pip._internal.utils.hashes.MissingHashes"
  ],
  "pip._internal.utils.hashes.Hashes._raise": [
    "pip._internal.utils.hashes.MissingHashes"
  ],
  "pip._internal.utils.models.KeyBasedCompareMixin.__init__": [
    "pip._internal.models.candidate.InstallationCandidate",
    "pip._internal.models.link.Link"
  ],
  "pip._internal.utils.temp_dir.TempDirectory.__init__": [
    "pip._internal.utils.temp_dir.AdjacentTempDirectory"
  ],
  "pip._internal.utils.temp_dir.TempDirectory._create": [
    "pip._internal.utils.temp_dir.AdjacentTempDirectory"
  ],
  "pip._internal.vcs.versioncontrol.VersionControl.fetch_new": [
    "pip._internal.vcs.bazaar.Bazaar",
    "pip._internal.vcs.git.Git",
    "pip._internal.vcs.mercurial.Mercurial",
    "pip._internal.vcs.subversion.Subversion"
  ],
  "pip._internal.vcs.versioncontrol.VersionControl.get_base_rev_args": [
    "pip._internal.vcs.bazaar.Bazaar",
    "pip._internal.vcs.git.Git",
    "pip._internal.vcs.mercurial.Mercurial",
    "pip._internal.vcs.subversion.Subversion"
  ],
  "pip._internal.vcs.versioncontrol.VersionControl.get_netloc_and_auth": [
    "pip._internal.vcs.subversion.Subversion"
  ],
  "pip._internal.vcs.versioncontrol.VersionControl.get_remote_url": [
    "pip._internal.vcs.bazaar.Bazaar",
    "pip._internal.vcs.git.Git",
    "pip._internal.vcs.mercurial.Mercurial",
    "pip._internal.vcs.subversion.Subversion"
  ],
  "pip._internal.vcs.versioncontrol.VersionControl.get_repository_root": [
    "pip._internal.vcs.git.Git",
    "pip._internal.vcs.mercurial.Mercurial"
  ],
  "pip._internal.vcs.versioncontrol.VersionControl.get_requirement_revision": [
    "pip._internal.vcs.mercurial.Mercurial"
  ],
  "pip._internal.vcs.versioncontrol.VersionControl.get_revision": [
    "pip._internal.vcs.bazaar.Bazaar",
    "pip._internal.vcs.git.Git",
    "pip._internal.vcs.mercurial.Mercurial",
    "pip._internal.vcs.subversion.Subversion"
  ],
  "pip._internal.vcs.versioncontrol.VersionControl.get_subdirectory": [
    "pip._internal.vcs.git.Git",
    "pip._internal.vcs.mercurial.Mercurial"
  ],
  "pip._internal.vcs.versioncontrol.VersionControl.get_url_rev_and_auth": [
    "pip._internal.vcs.bazaar.Bazaar",
    "pip._internal.vcs.git.Git",
    "pip._internal.vcs.subversion.Subversion"
  ],
  "pip._internal.vcs.versioncontrol.VersionControl.is_commit_id_equal": [
    "pip._internal.vcs.bazaar.Bazaar",
    "pip._internal.vcs.git.Git",
    "pip._internal.vcs.mercurial.Mercurial",
    "pip._internal.vcs.subversion.Subversion"
  ],
  "pip._internal.vcs.versioncontrol.VersionControl.is_immutable_rev_checkout": [
    "pip._internal.vcs.git.Git"
  ],
  "pip._internal.vcs.versioncontrol.VersionControl.make_rev_args": [
    "pip._internal.vcs.subversion.Subversion"
  ],
  "pip._internal.vcs.versioncontrol.VersionControl.should_add_vcs_url_prefix": [
    "pip._internal.vcs.git.Git",
    "pip._internal.vcs.subversion.Subversion"
  ],
  "pip._internal.vcs.versioncontrol.VersionControl.switch": [
    "pip._internal.vcs.bazaar.Bazaar",
    "pip._internal.vcs.git.Git",
    "pip._internal.vcs.mercurial.Mercurial",
    "pip._internal.vcs.subversion.Subversion"
  ],
  "pip._internal.vcs.versioncontrol.VersionControl.update": [
    "pip._internal.vcs.bazaar.Bazaar",
    "pip._internal.vcs.git.Git",
    "pip._internal.vcs.mercurial.Mercurial",
    "pip._internal.vcs.subversion.Subversion"
  ],
  "pip._vendor.cachecontrol.cache.BaseCache.close": [
    "pip._vendor.cachecontrol.caches.redis_cache.RedisCache"
  ],
  "pip._vendor.cachecontrol.cache.BaseCache.delete": [
    "pip._internal.network.cache.SafeFileCache",
    "pip._vendor.cachecontrol.cache.DictCache",
    "pip._vendor.cachecontrol.caches.file_cache.FileCache",
    "pip._vendor.cachecontrol.caches.file_cache.SeparateBodyFileCache",
    "pip._vendor.cachecontrol.caches.redis_cache.RedisCache"
  ],
  "pip._vendor.cachecontrol.cache.BaseCache.get": [
    "pip._internal.network.cache.SafeFileCache",
    "pip._vendor.cachecontrol.cache.DictCache",
    "pip._vendor.cachecontrol.caches.redis_cache.RedisCache"
  ],
  "pip._vendor.cachecontrol.cache.BaseCache.set": [
    "pip._internal.network.cache.SafeFileCache",
    "pip._vendor.cachecontrol.cache.DictCache",
    "pip._vendor.cachecontrol.caches.redis_cache.RedisCache"
  ],
  "pip._vendor.cachecontrol.cache.SeparateBodyBaseCache.get_body": [
    "pip._internal.network.cache.SafeFileCache",
    "pip._vendor.cachecontrol.caches.file_cache.SeparateBodyFileCache"
  ],
  "pip._vendor.cachecontrol.cache.SeparateBodyBaseCache.set_body": [
    "pip._internal.network.cache.SafeFileCache",
    "pip._vendor.cachecontrol.caches.file_cache.SeparateBodyFileCache"
  ],
  "pip._vendor.cachecontrol.heuristics.BaseHeuristic.update_headers": [
    "pip._vendor.cachecontrol.heuristics.ExpiresAfter",
    "pip._vendor.cachecontrol.heuristics.LastModified",
    "pip._vendor.cachecontrol.heuristics.OneDayCache"
  ],
  "pip._vendor.cachecontrol.heuristics.BaseHeuristic.warning": [
    "pip._vendor.cachecontrol.heuristics.ExpiresAfter",
    "pip._vendor.cachecontrol.heuristics.LastModified"
  ],
  "pip._vendor.chardet.chardistribution.CharDistributionAnalysis.__init__": [
    "pip._vendor.chardet.chardistribution.Big5DistributionAnalysis",
    "pip._vendor.chardet.chardistribution.EUCJPDistributionAnalysis",
    "pip._vendor.chardet.chardistribution.EUCKRDistributionAnalysis",
    "pip._vendor.chardet.chardistribution.EUCTWDistributionAnalysis",
    "pip._vendor.chardet.chardistribution.GB2312DistributionAnalysis",
    "pip._vendor.chardet.chardistribution.JOHABDistributionAnalysis",
    "pip._vendor.chardet.chardistribution.SJISDistributionAnalysis"
  ],
  "pip._vendor.chardet.chardistribution.CharDistributionAnalysis.get_order": [
    "pip._vendor.chardet.chardistribution.Big5DistributionAnalysis",
    "pip._vendor.chardet.chardistribution.EUCJPDistributionAnalysis",
    "pip._vendor.chardet.chardistribution.EUCKRDistributionAnalysis",
    "pip._vendor.chardet.chardistribution.EUCTWDistributionAnalysis",
    "pip._vendor.chardet.chardistribution.GB2312DistributionAnalysis",
    "pip._vendor.chardet.chardistribution.JOHABDistributionAnalysis",
    "pip._vendor.chardet.chardistribution.SJISDistributionAnalysis"
  ],
  "pip._vendor.chardet.charsetgroupprober.CharSetGroupProber.__init__": [
    "pip._vendor.chardet.mbcsgroupprober.MBCSGroupProber",
    "pip._vendor.chardet.sbcsgroupprober.SBCSGroupProber"
  ],
  "pip._vendor.chardet.charsetprober.CharSetProber.__init__": [
    "pip._vendor.chardet.charsetgroupprober.CharSetGroupProber",
    "pip._vendor.chardet.escprober.EscCharSetProber",
    "pip._vendor.chardet.hebrewprober.HebrewProber",
    "pip._vendor.chardet.latin1prober.Latin1Prober",
    "pip._vendor.chardet.macromanprober.MacRomanProber",
    "pip._vendor.chardet.mbcharsetprober.MultiByteCharSetProber",
    "pip._vendor.chardet.sbcharsetprober.SingleByteCharSetProber",
    "pip._vendor.chardet.utf1632prober.UTF1632Prober",
    "pip._vendor.chardet.utf8prober.UTF8Prober"
  ],
  "pip._vendor.chardet.charsetprober.CharSetProber.charset_name": [
    "pip._vendor.chardet.big5prober.Big5Prober",
    "pip._vendor.chardet.charsetgroupprober.CharSetGroupProber",
    "pip._vendor.chardet.cp949prober.CP949Prober",
    "pip._vendor.chardet.escprober.EscCharSetProber",
    "pip._vendor.chardet.eucjpprober.EUCJPProber",
    "pip._vendor.chardet.euckrprober.EUCKRProber",
    "pip._vendor.chardet.euctwprober.EUCTWProber",
    "pip._vendor.chardet.gb2312prober.GB2312Prober",
    "pip._vendor.chardet.hebrewprober.HebrewProber",
    "pip._vendor.chardet.johabprober.JOHABProber",
    "pip._vendor.chardet.latin1prober.Latin1Prober",
    "pip._vendor.chardet.macromanprober.MacRomanProber",
    "pip._vendor.chardet.sbcharsetprober.SingleByteCharSetProber",
    "pip._vendor.chardet.sjisprober.SJISProber",
    "pip._vendor.chardet.utf1632prober.UTF1632Prober",
    "pip._vendor.chardet.utf8prober.UTF8Prober"
  ],
  "pip._vendor.chardet.charsetprober.CharSetProber.feed": [
    "pip._vendor.chardet.charsetgroupprober.CharSetGroupProber",
    "pip._vendor.chardet.escprober.EscCharSetProber",
    "pip._vendor.chardet.hebrewprober.HebrewProber",
    "pip._vendor.chardet.latin1prober.Latin1Prober",
    "pip._vendor.chardet.macromanprober.MacRomanProber",
    "pip._vendor.chardet.mbcharsetprober.MultiByteCharSetProber",
    "pip._vendor.chardet.sbcharsetprober.SingleByteCharSetProber",
    "pip._vendor.chardet.utf1632prober.UTF1632Prober",
    "pip._vendor.chardet.utf8prober.UTF8Prober"
  ],
  "pip._vendor.chardet.charsetprober.CharSetProber.get_confidence": [
    "pip._vendor.chardet.charsetgroupprober.CharSetGroupProber",
    "pip._vendor.chardet.escprober.EscCharSetProber",
    "pip._vendor.chardet.latin1prober.Latin1Prober",
    "pip._vendor.chardet.macromanprober.MacRomanProber",
    "pip._vendor.chardet.mbcharsetprober.MultiByteCharSetProber",
    "pip._vendor.chardet.sbcharsetprober.SingleByteCharSetProber",
    "pip._vendor.chardet.utf1632prober.UTF1632Prober",
    "pip._vendor.chardet.utf8prober.UTF8Prober"
  ],
  "pip._vendor.chardet.charsetprober.CharSetProber.language": [
    "pip._vendor.chardet.big5prober.Big5Prober",
    "pip._vendor.chardet.charsetgroupprober.CharSetGroupProber",
    "pip._vendor.chardet.cp949prober.CP949Prober",
    "pip._vendor.chardet.escprober.EscCharSetProber",
    "pip._vendor.chardet.eucjpprober.EUCJPProber",
    "pip._vendor.chardet.euckrprober.EUCKRProber",
    "pip._vendor.chardet.euctwprober.EUCTWProber",
    "pip._vendor.chardet.gb2312prober.GB2312Prober",
    "pip._vendor.chardet.hebrewprober.HebrewProber",
    "pip._vendor.chardet.johabprober.JOHABProber",
    "pip._vendor.chardet.latin1prober.Latin1Prober",
    "pip._vendor.chardet.macromanprober.MacRomanProber",
    "pip._vendor.chardet.sbcharsetprober.SingleByteCharSetProber",
    "pip._vendor.chardet.sjisprober.SJISProber",
    "pip._vendor.chardet.utf1632prober.UTF1632Prober",
    "pip._vendor.chardet.utf8prober.UTF8Prober"
  ],
  "pip._vendor.chardet.charsetprober.CharSetProber.reset": [
    "pip._vendor.chardet.charsetgroupprober.CharSetGroupProber",
    "pip._vendor.chardet.escprober.EscCharSetProber",
    "pip._vendor.chardet.hebrewprober.HebrewProber",
    "pip._vendor.chardet.latin1prober.Latin1Prober",
    "pip._vendor.chardet.macromanprober.MacRomanProber",
    "pip._vendor.chardet.mbcharsetprober.MultiByteCharSetProber",
    "pip._vendor.chardet.sbcharsetprober.SingleByteCharSetProber",
    "pip._vendor.chardet.utf1632prober.UTF1632Prober",
    "pip._vendor.chardet.utf8prober.UTF8Prober"
  ],
  "pip._vendor.chardet.charsetprober.CharSetProber.state": [
    "pip._vendor.chardet.hebrewprober.HebrewProber",
    "pip._vendor.chardet.utf1632prober.UTF1632Prober"
  ],
  "pip._vendor.chardet.jpcntx.JapaneseContextAnalysis.__init__": [
    "pip._vendor.chardet.jpcntx.SJISContextAnalysis"
  ],
  "pip._vendor.chardet.jpcntx.JapaneseContextAnalysis.get_order": [
    "pip._vendor.chardet.jpcntx.EUCJPContextAnalysis",
    "pip._vendor.chardet.jpcntx.SJISContextAnalysis"
  ],
  "pip._vendor.chardet.mbcharsetprober.MultiByteCharSetProber.__init__": [
    "pip._vendor.chardet.big5prober.Big5Prober",
    "pip._vendor.chardet.cp949prober.CP949Prober",
    "pip._vendor.chardet.eucjpprober.EUCJPProber",
    "pip._vendor.chardet.euckrprober.EUCKRProber",
    "pip._vendor.chardet.euctwprober.EUCTWProber",
    "pip._vendor.chardet.gb2312prober.GB2312Prober",
    "pip._vendor.chardet.johabprober.JOHABProber",
    "pip._vendor.chardet.sjisprober.SJISProber"
  ],
  "pip._vendor.chardet.mbcharsetprober.MultiByteCharSetProber.feed": [
    "pip._vendor.chardet.eucjpprober.EUCJPProber",
    "pip._vendor.chardet.sjisprober.SJISProber"
  ],
  "pip._vendor.chardet.mbcharsetprober.MultiByteCharSetProber.get_confidence": [
    "pip._vendor.chardet.eucjpprober.EUCJPProber",
    "pip._vendor.chardet.sjisprober.SJISProber"
  ],
  "pip._vendor.chardet.mbcharsetprober.MultiByteCharSetProber.reset": [
    "pip._vendor.chardet.eucjpprober.EUCJPProber",
    "pip._vendor.chardet.sjisprober.SJISProber"
  ],
  "pip._vendor.distlib.compat.BaseConfigurator.__init__": [
    "pip._vendor.distlib.util.Configurator"
  ],
  "pip._vendor.distlib.compat.BaseConfigurator.configure_custom": [
    "pip._vendor.distlib.util.Configurator"
  ],
  "pip._vendor.distlib.database.BaseInstalledDistribution.__init__": [
    "pip._vendor.distlib.database.EggInfoDistribution",
    "pip._vendor.distlib.database.InstalledDistribution"
  ],
  "pip._vendor.distlib.database.Distribution.__init__": [
    "pip._vendor.distlib.database.BaseInstalledDistribution"
  ],
  "pip._vendor.distlib.locators.Locator.__init__": [
    "pip._vendor.distlib.locators.AggregatingLocator",
    "pip._vendor.distlib.locators.DirectoryLocator",
    "pip._vendor.distlib.locators.DistPathLocator",
    "pip._vendor.distlib.locators.PyPIJSONLocator",
    "pip._vendor.distlib.locators.PyPIRPCLocator",
    "pip._vendor.distlib.locators.SimpleScrapingLocator"
  ],
  "pip._vendor.distlib.locators.Locator._get_project": [
    "pip._vendor.distlib.locators.AggregatingLocator",
    "pip._vendor.distlib.locators.DirectoryLocator",
    "pip._vendor.distlib.locators.DistPathLocator",
    "pip._vendor.distlib.locators.JSONLocator",
    "pip._vendor.distlib.locators.PyPIJSONLocator",
    "pip._vendor.distlib.locators.PyPIRPCLocator",
    "pip._vendor.distlib.locators.SimpleScrapingLocator"
  ],
  "pip._vendor.distlib.locators.Locator._set_scheme": [
    "pip._vendor.distlib.locators.AggregatingLocator"
  ],
  "pip._vendor.distlib.locators.Locator.clear_cache": [
    "pip._vendor.distlib.locators.AggregatingLocator"
  ],
  "pip._vendor.distlib.locators.Locator.get_distribution_names": [
    "pip._vendor.distlib.locators.AggregatingLocator",
    "pip._vendor.distlib.locators.DirectoryLocator",
    "pip._vendor.distlib.locators.JSONLocator",
    "pip._vendor.distlib.locators.PyPIJSONLocator",
    "pip._vendor.distlib.locators.PyPIRPCLocator",
    "pip._vendor.distlib.locators.SimpleScrapingLocator"
  ],
  "pip._vendor.distlib.resources.ResourceFinder.__init__": [
    "pip._vendor.distlib.resources.ZipResourceFinder"
  ],
  "pip._vendor.distlib.resources.ResourceFinder._adjust_path": [
    "pip._vendor.distlib.resources.ZipResourceFinder"
  ],
  "pip._vendor.distlib.resources.ResourceFinder._find": [
    "pip._vendor.distlib.resources.ZipResourceFinder"
  ],
  "pip._vendor.distlib.resources.ResourceFinder._is_directory": [
    "pip._vendor.distlib.resources.ZipResourceFinder"
  ],
  "pip._vendor.distlib.resources.ResourceFinder.get_bytes": [
    "pip._vendor.distlib.resources.ZipResourceFinder"
  ],
  "pip._vendor.distlib.resources.ResourceFinder.get_cache_info": [
    "pip._vendor.distlib.resources.ZipResourceFinder"
  ],
  "pip._vendor.distlib.resources.ResourceFinder.get_resources": [
    "pip._vendor.distlib.resources.ZipResourceFinder"
  ],
  "pip._vendor.distlib.resources.ResourceFinder.get_size": [
    "pip._vendor.distlib.resources.ZipResourceFinder"
  ],
  "pip._vendor.distlib.resources.ResourceFinder.get_stream": [
    "pip._vendor.distlib.resources.ZipResourceFinder"
  ],
  "pip._vendor.distlib.scripts.ScriptMaker.make": [
    "pip._internal.operations.install.wheel.PipScriptMaker"
  ],
  "pip._vendor.distlib.util.Cache.__init__": [
    "pip._vendor.distlib.resources.ResourceCache"
  ],
  "pip._vendor.distlib.version.Version.is_prerelease": [
    "pip._vendor.distlib.version.LegacyVersion",
    "pip._vendor.distlib.version.NormalizedVersion",
    "pip._vendor.distlib.version.SemanticVersion"
  ],
  "pip._vendor.distlib.version.Version.parse": [
    "pip._vendor.distlib.version.LegacyVersion",
    "pip._vendor.distlib.version.NormalizedVersion",
    "pip._vendor.distlib.version.SemanticVersion"
  ],
  "pip._vendor.packaging.markers.Node.serialize": [
    "pip._vendor.packaging.markers.Op",
    "pip._vendor.packaging.markers.Value",
    "pip._vendor.packaging.markers.Variable"
  ],
  "pip._vendor.packaging.requirements.Requirement.__init__": [
    "pip._vendor.pkg_resources.Requirement"
  ],
  "pip._vendor.packaging.requirements.Requirement.__repr__": [
    "pip._vendor.pkg_resources.Requirement"
  ],
  "pip._vendor.packaging.specifiers.BaseSpecifier.__eq__": [
    "pip._vendor.packaging.specifiers.SpecifierSet",
    "pip._vendor.packaging.specifiers._IndividualSpecifier"
  ],
  "pip._vendor.packaging.specifiers.BaseSpecifier.__hash__": [
    "pip._vendor.packaging.specifiers.SpecifierSet",
    "pip._vendor.packaging.specifiers._IndividualSpecifier"
  ],
  "pip._vendor.packaging.specifiers.BaseSpecifier.__str__": [
    "pip._vendor.packaging.specifiers.SpecifierSet",
    "pip._vendor.packaging.specifiers._IndividualSpecifier"
  ],
  "pip._vendor.packaging.specifiers.BaseSpecifier.contains": [
    "pip._vendor.packaging.specifiers.SpecifierSet",
    "pip._vendor.packaging.specifiers._IndividualSpecifier"
  ],
  "pip._vendor.packaging.specifiers.BaseSpecifier.filter": [
    "pip._vendor.packaging.specifiers.SpecifierSet",
    "pip._vendor.packaging.specifiers._IndividualSpecifier"
  ],
  "pip._vendor.packaging.specifiers.BaseSpecifier.prereleases": [
    "pip._vendor.packaging.specifiers.SpecifierSet",
    "pip._vendor.packaging.specifiers._IndividualSpecifier"
  ],
  "pip._vendor.packaging.specifiers.BaseSpecifier.prereleases@setter": [
    "pip._vendor.packaging.specifiers.SpecifierSet",
    "pip._vendor.packaging.specifiers._IndividualSpecifier"
  ],
  "pip._vendor.packaging.specifiers._IndividualSpecifier.__init__": [
    "pip._vendor.packaging.specifiers.LegacySpecifier"
  ],
  "pip._vendor.packaging.specifiers._IndividualSpecifier._coerce_version": [
    "pip._vendor.packaging.specifiers.LegacySpecifier"
  ],
  "pip._vendor.packaging.specifiers._IndividualSpecifier.prereleases": [
    "pip._vendor.packaging.specifiers.Specifier"
  ],
  "pip._vendor.packaging.specifiers._IndividualSpecifier.prereleases@setter": [
    "pip._vendor.packaging.specifiers.Specifier"
  ],
  "pip._vendor.pkg_resources.Distribution._dep_map": [
    "pip._vendor.pkg_resources.DistInfoDistribution"
  ],
  "pip._vendor.pkg_resources.Distribution._reload_version": [
    "pip._vendor.pkg_resources.EggInfoDistribution"
  ],
  "pip._vendor.pkg_resources.EggProvider.__init__": [
    "pip._vendor.pkg_resources.ZipProvider"
  ],
  "pip._vendor.pkg_resources.EmptyProvider.__init__": [
    "pip._vendor.pkg_resources.FileMetadata"
  ],
  "pip._vendor.pkg_resources.NullProvider.__init__": [
    "pip._vendor.pkg_resources.EggProvider",
    "pip._vendor.pkg_resources.EmptyProvider"
  ],
  "pip._vendor.pkg_resources.NullProvider._get": [
    "pip._vendor.pkg_resources.DefaultProvider",
    "pip._vendor.pkg_resources.EmptyProvider"
  ],
  "pip._vendor.pkg_resources.NullProvider._get_metadata_path": [
    "pip._vendor.pkg_resources.FileMetadata"
  ],
  "pip._vendor.pkg_resources.NullProvider._has": [
    "pip._vendor.pkg_resources.DefaultProvider",
    "pip._vendor.pkg_resources.ZipProvider"
  ],
  "pip._vendor.pkg_resources.NullProvider._isdir": [
    "pip._vendor.pkg_resources.DefaultProvider",
    "pip._vendor.pkg_resources.ZipProvider"
  ],
  "pip._vendor.pkg_resources.NullProvider._listdir": [
    "pip._vendor.pkg_resources.DefaultProvider",
    "pip._vendor.pkg_resources.EmptyProvider",
    "pip._vendor.pkg_resources.ZipProvider"
  ],
  "pip._vendor.pkg_resources.NullProvider.get_metadata": [
    "pip._vendor.pkg_resources.FileMetadata"
  ],
  "pip._vendor.pkg_resources.NullProvider.get_metadata_lines": [
    "pip._vendor.pkg_resources.FileMetadata"
  ],
  "pip._vendor.pkg_resources.NullProvider.get_resource_filename": [
    "pip._vendor.pkg_resources.ZipProvider"
  ],
  "pip._vendor.pkg_resources.NullProvider.get_resource_stream": [
    "pip._vendor.pkg_resources.DefaultProvider"
  ],
  "pip._vendor.pkg_resources.NullProvider.has_metadata": [
    "pip._vendor.pkg_resources.FileMetadata"
  ],
  "pip._vendor.pkg_resources.ZipManifests.load": [
    "pip._vendor.pkg_resources.MemoizedZipManifests"
  ],
  "pip._vendor.pkg_resources.ZipProvider.__init__": [
    "pip._vendor.pkg_resources.EggMetadata"
  ],
  "pip._vendor.platformdirs.api.PlatformDirsABC.site_cache_dir": [
    "pip._vendor.platformdirs.android.Android",
    "pip._vendor.platformdirs.macos.MacOS",
    "pip._vendor.platformdirs.unix.Unix",
    "pip._vendor.platformdirs.windows.Windows"
  ],
  "pip._vendor.platformdirs.api.PlatformDirsABC.site_cache_path": [
    "pip._vendor.platformdirs.unix.Unix"
  ],
  "pip._vendor.platformdirs.api.PlatformDirsABC.site_config_dir": [
    "pip._vendor.platformdirs.android.Android",
    "pip._vendor.platformdirs.macos.MacOS",
    "pip._vendor.platformdirs.unix.Unix",
    "pip._vendor.platformdirs.windows.Windows"
  ],
  "pip._vendor.platformdirs.api.PlatformDirsABC.site_config_path": [
    "pip._vendor.platformdirs.unix.Unix"
  ],
  "pip._vendor.platformdirs.api.PlatformDirsABC.site_data_dir": [
    "pip._vendor.platformdirs.android.Android",
    "pip._vendor.platformdirs.macos.MacOS",
    "pip._vendor.platformdirs.unix.Unix",
    "pip._vendor.platformdirs.windows.Windows"
  ],
  "pip._vendor.platformdirs.api.PlatformDirsABC.site_data_path": [
    "pip._vendor.platformdirs.unix.Unix"
  ],
  "pip._vendor.platformdirs.api.PlatformDirsABC.user_cache_dir": [
    "pip._vendor.platformdirs.android.Android",
    "pip._vendor.platformdirs.macos.MacOS",
    "pip._vendor.platformdirs.unix.Unix",
    "pip._vendor.platformdirs.windows.Windows"
  ],
  "pip._vendor.platformdirs.api.PlatformDirsABC.user_config_dir": [
    "pip._vendor.platformdirs.android.Android",
    "pip._vendor.platformdirs.macos.MacOS",
    "pip._vendor.platformdirs.unix.Unix",
    "pip._vendor.platformdirs.windows.Windows"
  ],
  "pip._vendor.platformdirs.api.PlatformDirsABC.user_data_dir": [
    "pip._vendor.platformdirs.android.Android",
    "pip._vendor.platformdirs.macos.MacOS",
    "pip._vendor.platformdirs.unix.Unix",
    "pip._vendor.platformdirs.windows.Windows"
  ],
  "pip._vendor.platformdirs.api.PlatformDirsABC.user_documents_dir": [
    "pip._vendor.platformdirs.android.Android",
    "pip._vendor.platformdirs.macos.MacOS",
    "pip._vendor.platformdirs.unix.Unix",
    "pip._vendor.platformdirs.windows.Windows"
  ],
  "pip._vendor.platformdirs.api.PlatformDirsABC.user_downloads_dir": [
    "pip._vendor.platformdirs.android.Android",
    "pip._vendor.platformdirs.macos.MacOS",
    "pip._vendor.platformdirs.unix.Unix",
    "pip._vendor.platformdirs.windows.Windows"
  ],
  "pip._vendor.platformdirs.api.PlatformDirsABC.user_log_dir": [
    "pip._vendor.platformdirs.android.Android",
    "pip._vendor.platformdirs.macos.MacOS",
    "pip._vendor.platformdirs.unix.Unix",
    "pip._vendor.platformdirs.windows.Windows"
  ],
  "pip._vendor.platformdirs.api.PlatformDirsABC.user_music_dir": [
    "pip._vendor.platformdirs.android.Android",
    "pip._vendor.platformdirs.macos.MacOS",
    "pip._vendor.platformdirs.unix.Unix",
    "pip._vendor.platformdirs.windows.Windows"
  ],
  "pip._vendor.platformdirs.api.PlatformDirsABC.user_pictures_dir": [
    "pip._vendor.platformdirs.android.Android",
    "pip._vendor.platformdirs.macos.MacOS",
    "pip._vendor.platformdirs.unix.Unix",
    "pip._vendor.platformdirs.windows.Windows"
  ],
  "pip._vendor.platformdirs.api.PlatformDirsABC.user_runtime_dir": [
    "pip._vendor.platformdirs.android.Android",
    "pip._vendor.platformdirs.macos.MacOS",
    "pip._vendor.platformdirs.unix.Unix",
    "pip._vendor.platformdirs.windows.Windows"
  ],
  "pip._vendor.platformdirs.api.PlatformDirsABC.user_state_dir": [
    "pip._vendor.platformdirs.android.Android",
    "pip._vendor.platformdirs.macos.MacOS",
    "pip._vendor.platformdirs.unix.Unix",
    "pip._vendor.platformdirs.windows.Windows"
  ],
  "pip._vendor.platformdirs.api.PlatformDirsABC.user_videos_dir": [
    "pip._vendor.platformdirs.android.Android",
    "pip._vendor.platformdirs.macos.MacOS",
    "pip._vendor.platformdirs.unix.Unix",
    "pip._vendor.platformdirs.windows.Windows"
  ],
  "pip._vendor.pygments.filter.Filter.__init__": [
    "pip._vendor.pygments.filter.FunctionFilter",
    "pip._vendor.pygments.filters.CodeTagFilter",
    "pip._vendor.pygments.filters.GobbleFilter",
    "pip._vendor.pygments.filters.KeywordCaseFilter",
    "pip._vendor.pygments.filters.NameHighlightFilter",
    "pip._vendor.pygments.filters.RaiseOnErrorTokenFilter",
    "pip._vendor.pygments.filters.SymbolFilter",
    "pip._vendor.pygments.filters.TokenMergeFilter",
    "pip._vendor.pygments.filters.VisibleWhitespaceFilter"
  ],
  "pip._vendor.pygments.filter.Filter.filter": [
    "pip._vendor.pygments.filter.FunctionFilter",
    "pip._vendor.pygments.filters.CodeTagFilter",
    "pip._vendor.pygments.filters.GobbleFilter",
    "pip._vendor.pygments.filters.KeywordCaseFilter",
    "pip._vendor.pygments.filters.NameHighlightFilter",
    "pip._vendor.pygments.filters.RaiseOnErrorTokenFilter",
    "pip._vendor.pygments.filters.SymbolFilter",
    "pip._vendor.pygments.filters.TokenMergeFilter",
    "pip._vendor.pygments.filters.VisibleWhitespaceFilter"
  ],
  "pip._vendor.pygments.formatter.Formatter.__init__": [
    "pip._vendor.pygments.formatters.bbcode.BBCodeFormatter",
    "pip._vendor.pygments.formatters.groff.GroffFormatter",
    "pip._vendor.pygments.formatters.html.HtmlFormatter",
    "pip._vendor.pygments.formatters.img.ImageFormatter",
    "pip._vendor.pygments.formatters.irc.IRCFormatter",
    "pip._vendor.pygments.formatters.latex.LatexFormatter",
    "pip._vendor.pygments.formatters.other.RawTokenFormatter",
    "pip._vendor.pygments.formatters.other.TestcaseFormatter",
    "pip._vendor.pygments.formatters.pangomarkup.PangoMarkupFormatter",
    "pip._vendor.pygments.formatters.rtf.RtfFormatter",
    "pip._vendor.pygments.formatters.svg.SvgFormatter",
    "pip._vendor.pygments.formatters.terminal.TerminalFormatter",
    "pip._vendor.pygments.formatters.terminal256.Terminal256Formatter"
  ],
  "pip._vendor.pygments.formatter.Formatter.format": [
    "pip._vendor.pygments.formatters.img.ImageFormatter",
    "pip._vendor.pygments.formatters.other.NullFormatter",
    "pip._vendor.pygments.formatters.other.RawTokenFormatter",
    "pip._vendor.pygments.formatters.other.TestcaseFormatter",
    "pip._vendor.pygments.formatters.terminal.TerminalFormatter",
    "pip._vendor.pygments.formatters.terminal256.Terminal256Formatter"
  ],
  "pip._vendor.pygments.formatter.Formatter.get_style_defs": [
    "pip._vendor.pygments.formatters.html.HtmlFormatter",
    "pip._vendor.pygments.formatters.img.ImageFormatter",
    "pip._vendor.pygments.formatters.latex.LatexFormatter"
  ],
  "pip._vendor.pygments.formatters.terminal256.Terminal256Formatter._build_color_table": [
    "pip._vendor.pygments.formatters.terminal256.TerminalTrueColorFormatter"
  ],
  "pip._vendor.pygments.formatters.terminal256.Terminal256Formatter._setup_styles": [
    "pip._vendor.pygments.formatters.terminal256.TerminalTrueColorFormatter"
  ],
  "pip._vendor.pygments.lexer.DelegatingLexer.__init__": [
    "pip._vendor.pygments.lexers.python.PythonConsoleLexer",
    "pip._vendor.pygments.lexers.python.PythonConsoleLexer.__init__._ReplaceInnerCode"
  ],
  "pip._vendor.pygments.lexer.Lexer.__init__": [
    "pip._vendor.pygments.formatters.latex.LatexEmbeddedLexer",
    "pip._vendor.pygments.lexer.DelegatingLexer"
  ],
  "pip._vendor.pygments.lexer.Lexer.analyse_text": [
    "pip._vendor.pygments.lexers.python.Python2Lexer",
    "pip._vendor.pygments.lexers.python.PythonLexer"
  ],
  "pip._vendor.pygments.lexer.Lexer.get_tokens_unprocessed": [
    "pip._vendor.pygments.formatters.latex.LatexEmbeddedLexer",
    "pip._vendor.pygments.lexer.DelegatingLexer",
    "pip._vendor.pygments.lexer.RegexLexer"
  ],
  "pip._vendor.pygments.lexer.RegexLexer.get_tokens_unprocessed": [
    "pip._vendor.pygments.lexer.ExtendedRegexLexer",
    "pip._vendor.pygments.lexer.ProfilingRegexLexer",
    "pip._vendor.pygments.lexers.python.NumPyLexer"
  ],
  "pip._vendor.pygments.lexer.RegexLexerMeta._process_regex": [
    "pip._vendor.pygments.lexer.ProfilingRegexLexerMeta"
  ],
  "pip._vendor.pygments.lexers.python.PythonLexer.analyse_text": [
    "pip._vendor.pygments.lexers.python.NumPyLexer"
  ],
  "pip._vendor.pygments.util.Future.get": [
    "pip._vendor.pygments.lexer.words"
  ],
  "pip._vendor.pyparsing.core.Empty.__init__": [
    "pip._vendor.pyparsing.core.And._ErrorStop",
    "pip._vendor.pyparsing.core.IndentedBlock._Indent",
    "pip._vendor.pyparsing.core.IndentedBlock._IndentGreater"
  ],
  "pip._vendor.pyparsing.core.Empty._generateDefaultName": [
    "pip._vendor.pyparsing.core.And._ErrorStop"
  ],
  "pip._vendor.pyparsing.core.FollowedBy.parseImpl": [
    "pip._vendor.pyparsing.helpers.infix_notation._FB"
  ],
  "pip._vendor.pyparsing.core.Keyword.__init__": [
    "pip._vendor.pyparsing.core.CaselessKeyword"
  ],
  "pip._vendor.pyparsing.core.Literal.__init__": [
    "pip._vendor.pyparsing.core.CaselessLiteral",
    "pip._vendor.pyparsing.core.Empty"
  ],
  "pip._vendor.pyparsing.core.Literal._generateDefaultName": [
    "pip._vendor.pyparsing.core.Empty"
  ],
  "pip._vendor.pyparsing.core.Literal.parseImpl": [
    "pip._vendor.pyparsing.core.CaselessLiteral",
    "pip._vendor.pyparsing.core.Empty",
    "pip._vendor.pyparsing.core._SingleCharLiteral"
  ],
  "pip._vendor.pyparsing.core.ParseElementEnhance.__init__": [
    "pip._vendor.pyparsing.core.AtLineStart",
    "pip._vendor.pyparsing.core.AtStringStart",
    "pip._vendor.pyparsing.core.DelimitedList",
    "pip._vendor.pyparsing.core.FollowedBy",
    "pip._vendor.pyparsing.core.Forward",
    "pip._vendor.pyparsing.core.IndentedBlock",
    "pip._vendor.pyparsing.core.NotAny",
    "pip._vendor.pyparsing.core.Opt",
    "pip._vendor.pyparsing.core.PrecededBy",
    "pip._vendor.pyparsing.core.SkipTo",
    "pip._vendor.pyparsing.core.TokenConverter",
    "pip._vendor.pyparsing.core._MultipleMatch"
  ],
  "pip._vendor.pyparsing.core.ParseElementEnhance._generateDefaultName": [
    "pip._vendor.pyparsing.core.DelimitedList",
    "pip._vendor.pyparsing.core.Forward",
    "pip._vendor.pyparsing.core.NotAny",
    "pip._vendor.pyparsing.core.OneOrMore",
    "pip._vendor.pyparsing.core.Opt",
    "pip._vendor.pyparsing.core.ZeroOrMore"
  ],
  "pip._vendor.pyparsing.core.ParseElementEnhance.ignore": [
    "pip._vendor.pyparsing.core.Combine"
  ],
  "pip._vendor.pyparsing.core.ParseElementEnhance.ignoreWhitespace": [
    "pip._vendor.pyparsing.core.Forward"
  ],
  "pip._vendor.pyparsing.core.ParseElementEnhance.ignore_whitespace": [
    "pip._vendor.pyparsing.core.Forward"
  ],
  "pip._vendor.pyparsing.core.ParseElementEnhance.leaveWhitespace": [
    "pip._vendor.pyparsing.core.Forward"
  ],
  "pip._vendor.pyparsing.core.ParseElementEnhance.leave_whitespace": [
    "pip._vendor.pyparsing.core.Forward"
  ],
  "pip._vendor.pyparsing.core.ParseElementEnhance.parseImpl": [
    "pip._vendor.pyparsing.core.AtLineStart",
    "pip._vendor.pyparsing.core.AtStringStart",
    "pip._vendor.pyparsing.core.FollowedBy",
    "pip._vendor.pyparsing.core.Forward",
    "pip._vendor.pyparsing.core.IndentedBlock",
    "pip._vendor.pyparsing.core.Located",
    "pip._vendor.pyparsing.core.NotAny",
    "pip._vendor.pyparsing.core.Opt",
    "pip._vendor.pyparsing.core.PrecededBy",
    "pip._vendor.pyparsing.core.SkipTo",
    "pip._vendor.pyparsing.core._MultipleMatch"
  ],
  "pip._vendor.pyparsing.core.ParseElementEnhance.streamline": [
    "pip._vendor.pyparsing.core.Forward"
  ],
  "pip._vendor.pyparsing.core.ParseElementEnhance.validate": [
    "pip._vendor.pyparsing.core.Forward"
  ],
  "pip._vendor.pyparsing.core.ParseExpression.__init__": [
    "pip._vendor.pyparsing.core.And",
    "pip._vendor.pyparsing.core.Each",
    "pip._vendor.pyparsing.core.MatchFirst",
    "pip._vendor.pyparsing.core.Or"
  ],
  "pip._vendor.pyparsing.core.ParseExpression._generateDefaultName": [
    "pip._vendor.pyparsing.core.And",
    "pip._vendor.pyparsing.core.Each",
    "pip._vendor.pyparsing.core.MatchFirst",
    "pip._vendor.pyparsing.core.Or"
  ],
  "pip._vendor.pyparsing.core.ParseExpression._setResultsName": [
    "pip._vendor.pyparsing.core.MatchFirst",
    "pip._vendor.pyparsing.core.Or"
  ],
  "pip._vendor.pyparsing.core.ParseExpression.streamline": [
    "pip._vendor.pyparsing.core.And",
    "pip._vendor.pyparsing.core.Each",
    "pip._vendor.pyparsing.core.MatchFirst",
    "pip._vendor.pyparsing.core.Or"
  ],
  "pip._vendor.pyparsing.core.ParserElement.__add__": [
    "pip._vendor.pyparsing.core.Suppress",
    "pip._vendor.pyparsing.core._PendingSkip"
  ],
  "pip._vendor.pyparsing.core.ParserElement.__init__": [
    "pip._vendor.pyparsing.core.ParseElementEnhance",
    "pip._vendor.pyparsing.core.ParseExpression",
    "pip._vendor.pyparsing.core.Token",
    "pip._vendor.pyparsing.core._PendingSkip"
  ],
  "pip._vendor.pyparsing.core.ParserElement.__or__": [
    "pip._vendor.pyparsing.core.Forward"
  ],
  "pip._vendor.pyparsing.core.ParserElement.__repr__": [
    "pip._vendor.pyparsing.core._PendingSkip"
  ],
  "pip._vendor.pyparsing.core.ParserElement.__sub__": [
    "pip._vendor.pyparsing.core.Suppress"
  ],
  "pip._vendor.pyparsing.core.ParserElement._checkRecursion": [
    "pip._vendor.pyparsing.core.And",
    "pip._vendor.pyparsing.core.ParseElementEnhance"
  ],
  "pip._vendor.pyparsing.core.ParserElement._generateDefaultName": [
    "pip._vendor.pyparsing.core.ParseElementEnhance",
    "pip._vendor.pyparsing.core.ParseExpression",
    "pip._vendor.pyparsing.core.Token",
    "pip._vendor.pyparsing.core._PendingSkip"
  ],
  "pip._vendor.pyparsing.core.ParserElement._setResultsName": [
    "pip._vendor.pyparsing.core.Forward",
    "pip._vendor.pyparsing.core.ParseExpression",
    "pip._vendor.pyparsing.core._MultipleMatch"
  ],
  "pip._vendor.pyparsing.core.ParserElement.copy": [
    "pip._vendor.pyparsing.core.Forward",
    "pip._vendor.pyparsing.core.ParseExpression"
  ],
  "pip._vendor.pyparsing.core.ParserElement.ignore": [
    "pip._vendor.pyparsing.core.ParseElementEnhance",
    "pip._vendor.pyparsing.core.ParseExpression"
  ],
  "pip._vendor.pyparsing.core.ParserElement.ignoreWhitespace": [
    "pip._vendor.pyparsing.core.ParseElementEnhance",
    "pip._vendor.pyparsing.core.ParseExpression"
  ],
  "pip._vendor.pyparsing.core.ParserElement.ignore_whitespace": [
    "pip._vendor.pyparsing.core.ParseElementEnhance",
    "pip._vendor.pyparsing.core.ParseExpression"
  ],
  "pip._vendor.pyparsing.core.ParserElement.leaveWhitespace": [
    "pip._vendor.pyparsing.core.ParseElementEnhance",
    "pip._vendor.pyparsing.core.ParseExpression"
  ],
  "pip._vendor.pyparsing.core.ParserElement.leave_whitespace": [
    "pip._vendor.pyparsing.core.ParseElementEnhance",
    "pip._vendor.pyparsing.core.ParseExpression"
  ],
  "pip._vendor.pyparsing.core.ParserElement.mayReturnEmpty": [
    "pip._vendor.pyparsing.core.Regex"
  ],
  "pip._vendor.pyparsing.core.ParserElement.parseImpl": [
    "pip._vendor.pyparsing.core.And",
    "pip._vendor.pyparsing.core.CharsNotIn",
    "pip._vendor.pyparsing.core.CloseMatch",
    "pip._vendor.pyparsing.core.Each",
    "pip._vendor.pyparsing.core.GoToColumn",
    "pip._vendor.pyparsing.core.Keyword",
    "pip._vendor.pyparsing.core.LineEnd",
    "pip._vendor.pyparsing.core.LineStart",
    "pip._vendor.pyparsing.core.Literal",
    "pip._vendor.pyparsing.core.MatchFirst",
    "pip._vendor.pyparsing.core.NoMatch",
    "pip._vendor.pyparsing.core.Or",
    "pip._vendor.pyparsing.core.ParseElementEnhance",
    "pip._vendor.pyparsing.core.QuotedString",
    "pip._vendor.pyparsing.core.Regex",
    "pip._vendor.pyparsing.core.StringEnd",
    "pip._vendor.pyparsing.core.StringStart",
    "pip._vendor.pyparsing.core.White",
    "pip._vendor.pyparsing.core.Word",
    "pip._vendor.pyparsing.core.WordEnd",
    "pip._vendor.pyparsing.core.WordStart",
    "pip._vendor.pyparsing.core._PendingSkip"
  ],
  "pip._vendor.pyparsing.core.ParserElement.postParse": [
    "pip._vendor.pyparsing.core.Combine",
    "pip._vendor.pyparsing.core.Dict",
    "pip._vendor.pyparsing.core.Group",
    "pip._vendor.pyparsing.core.Suppress"
  ],
  "pip._vendor.pyparsing.core.ParserElement.preParse": [
    "pip._vendor.pyparsing.core.GoToColumn",
    "pip._vendor.pyparsing.core.LineStart"
  ],
  "pip._vendor.pyparsing.core.ParserElement.recurse": [
    "pip._vendor.pyparsing.core.ParseElementEnhance",
    "pip._vendor.pyparsing.core.ParseExpression"
  ],
  "pip._vendor.pyparsing.core.ParserElement.streamline": [
    "pip._vendor.pyparsing.core.ParseElementEnhance",
    "pip._vendor.pyparsing.core.ParseExpression"
  ],
  "pip._vendor.pyparsing.core.ParserElement.suppress": [
    "pip._vendor.pyparsing.core.Suppress"
  ],
  "pip._vendor.pyparsing.core.ParserElement.validate": [
    "pip._vendor.pyparsing.core.ParseElementEnhance",
    "pip._vendor.pyparsing.core.ParseExpression"
  ],
  "pip._vendor.pyparsing.core.PositionToken.__init__": [
    "pip._vendor.pyparsing.core.GoToColumn",
    "pip._vendor.pyparsing.core.LineEnd",
    "pip._vendor.pyparsing.core.LineStart",
    "pip._vendor.pyparsing.core.StringEnd",
    "pip._vendor.pyparsing.core.StringStart",
    "pip._vendor.pyparsing.core.WordEnd",
    "pip._vendor.pyparsing.core.WordStart"
  ],
  "pip._vendor.pyparsing.core.Token.__init__": [
    "pip._vendor.pyparsing.core.CharsNotIn",
    "pip._vendor.pyparsing.core.CloseMatch",
    "pip._vendor.pyparsing.core.Keyword",
    "pip._vendor.pyparsing.core.Literal",
    "pip._vendor.pyparsing.core.NoMatch",
    "pip._vendor.pyparsing.core.PositionToken",
    "pip._vendor.pyparsing.core.QuotedString",
    "pip._vendor.pyparsing.core.Regex",
    "pip._vendor.pyparsing.core.White",
    "pip._vendor.pyparsing.core.Word"
  ],
  "pip._vendor.pyparsing.core.Token._generateDefaultName": [
    "pip._vendor.pyparsing.core.CharsNotIn",
    "pip._vendor.pyparsing.core.CloseMatch",
    "pip._vendor.pyparsing.core.Keyword",
    "pip._vendor.pyparsing.core.Literal",
    "pip._vendor.pyparsing.core.QuotedString",
    "pip._vendor.pyparsing.core.Regex",
    "pip._vendor.pyparsing.core.White",
    "pip._vendor.pyparsing.core.Word"
  ],
  "pip._vendor.pyparsing.core.TokenConverter.__init__": [
    "pip._vendor.pyparsing.core.Combine",
    "pip._vendor.pyparsing.core.Dict",
    "pip._vendor.pyparsing.core.Group",
    "pip._vendor.pyparsing.core.Suppress"
  ],
  "pip._vendor.pyparsing.core.Word.__init__": [
    "pip._vendor.pyparsing.core.Char"
  ],
  "pip._vendor.pyparsing.core._MultipleMatch.__init__": [
    "pip._vendor.pyparsing.core.ZeroOrMore"
  ],
  "pip._vendor.pyparsing.core._MultipleMatch.parseImpl": [
    "pip._vendor.pyparsing.core.ZeroOrMore"
  ],
  "pip._vendor.pyproject_hooks._impl.BuildBackendHookCaller.__init__": [
    "pip._internal.utils.misc.ConfiguredBuildBackendHookCaller"
  ],
  "pip._vendor.pyproject_hooks._impl.BuildBackendHookCaller.build_editable": [
    "pip._internal.utils.misc.ConfiguredBuildBackendHookCaller"
  ],
  "pip._vendor.pyproject_hooks._impl.BuildBackendHookCaller.build_sdist": [
    "pip._internal.utils.misc.ConfiguredBuildBackendHookCaller"
  ],
  "pip._vendor.pyproject_hooks._impl.BuildBackendHookCaller.build_wheel": [
    "pip._internal.utils.misc.ConfiguredBuildBackendHookCaller"
  ],
  "pip._vendor.pyproject_hooks._impl.BuildBackendHookCaller.get_requires_for_build_editable": [
    "pip._internal.utils.misc.ConfiguredBuildBackendHookCaller"
  ],
  "pip._vendor.pyproject_hooks._impl.BuildBackendHookCaller.get_requires_for_build_sdist": [
    "pip._internal.utils.misc.ConfiguredBuildBackendHookCaller"
  ],
  "pip._vendor.pyproject_hooks._impl.BuildBackendHookCaller.get_requires_for_build_wheel": [
    "pip._internal.utils.misc.ConfiguredBuildBackendHookCaller"
  ],
  "pip._vendor.pyproject_hooks._impl.BuildBackendHookCaller.prepare_metadata_for_build_editable": [
    "pip._internal.utils.misc.ConfiguredBuildBackendHookCaller"
  ],
  "pip._vendor.pyproject_hooks._impl.BuildBackendHookCaller.prepare_metadata_for_build_wheel": [
    "pip._internal.utils.misc.ConfiguredBuildBackendHookCaller"
  ],
  "pip._vendor.requests.adapters.BaseAdapter.__init__": [
    "pip._vendor.requests.adapters.HTTPAdapter"
  ],
  "pip._vendor.requests.adapters.BaseAdapter.close": [
    "pip._internal.network.session.LocalFSAdapter",
    "pip._vendor.requests.adapters.HTTPAdapter"
  ],
  "pip._vendor.requests.adapters.BaseAdapter.send": [
    "pip._internal.network.session.LocalFSAdapter",
    "pip._vendor.requests.adapters.HTTPAdapter"
  ],
  "pip._vendor.requests.adapters.HTTPAdapter.__init__": [
    "pip._vendor.cachecontrol.adapter.CacheControlAdapter"
  ],
  "pip._vendor.requests.adapters.HTTPAdapter.build_response": [
    "pip._vendor.cachecontrol.adapter.CacheControlAdapter"
  ],
  "pip._vendor.requests.adapters.HTTPAdapter.cert_verify": [
    "pip._internal.network.session.InsecureCacheControlAdapter",
    "pip._internal.network.session.InsecureHTTPAdapter"
  ],
  "pip._vendor.requests.adapters.HTTPAdapter.close": [
    "pip._vendor.cachecontrol.adapter.CacheControlAdapter"
  ],
  "pip._vendor.requests.adapters.HTTPAdapter.send": [
    "pip._vendor.cachecontrol.adapter.CacheControlAdapter"
  ],
  "pip._vendor.requests.auth.AuthBase.__call__": [
    "pip._internal.network.auth.MultiDomainBasicAuth",
    "pip._vendor.requests.auth.HTTPBasicAuth",
    "pip._vendor.requests.auth.HTTPDigestAuth"
  ],
  "pip._vendor.requests.auth.HTTPBasicAuth.__call__": [
    "pip._vendor.requests.auth.HTTPProxyAuth"
  ],
  "pip._vendor.requests.sessions.Session.__init__": [
    "pip._internal.network.session.PipSession"
  ],
  "pip._vendor.requests.sessions.Session.request": [
    "pip._internal.network.session.PipSession"
  ],
  "pip._vendor.resolvelib.providers.AbstractProvider.find_matches": [
    "pip._internal.resolution.resolvelib.provider.PipProvider"
  ],
  "pip._vendor.resolvelib.providers.AbstractProvider.get_dependencies": [
    "pip._internal.resolution.resolvelib.provider.PipProvider"
  ],
  "pip._vendor.resolvelib.providers.AbstractProvider.get_preference": [
    "pip._internal.resolution.resolvelib.provider.PipProvider"
  ],
  "pip._vendor.resolvelib.providers.AbstractProvider.identify": [
    "pip._internal.resolution.resolvelib.provider.PipProvider"
  ],
  "pip._vendor.resolvelib.providers.AbstractProvider.is_satisfied_by": [
    "pip._internal.resolution.resolvelib.provider.PipProvider"
  ],
  "pip._vendor.resolvelib.providers.AbstractResolver.resolve": [
    "pip._vendor.resolvelib.resolvers.Resolver"
  ],
  "pip._vendor.resolvelib.reporters.BaseReporter.adding_requirement": [
    "pip._internal.resolution.resolvelib.reporter.PipDebuggingReporter"
  ],
  "pip._vendor.resolvelib.reporters.BaseReporter.ending": [
    "pip._internal.resolution.resolvelib.reporter.PipDebuggingReporter"
  ],
  "pip._vendor.resolvelib.reporters.BaseReporter.ending_round": [
    "pip._internal.resolution.resolvelib.reporter.PipDebuggingReporter"
  ],
  "pip._vendor.resolvelib.reporters.BaseReporter.pinning": [
    "pip._internal.resolution.resolvelib.reporter.PipDebuggingReporter"
  ],
  "pip._vendor.resolvelib.reporters.BaseReporter.rejecting_candidate": [
    "pip._internal.resolution.resolvelib.reporter.PipDebuggingReporter",
    "pip._internal.resolution.resolvelib.reporter.PipReporter"
  ],
  "pip._vendor.resolvelib.reporters.BaseReporter.starting": [
    "pip._internal.resolution.resolvelib.reporter.PipDebuggingReporter"
  ],
  "pip._vendor.resolvelib.reporters.BaseReporter.starting_round": [
    "pip._internal.resolution.resolvelib.reporter.PipDebuggingReporter"
  ],
  "pip._vendor.rich.console.RenderHook.process_renderables": [
    "pip._vendor.rich.live.Live"
  ],
  "pip._vendor.rich.highlighter.Highlighter.highlight": [
    "pip._vendor.rich.highlighter.NullHighlighter",
    "pip._vendor.rich.highlighter.RegexHighlighter"
  ],
  "pip._vendor.rich.highlighter.RegexHighlighter.highlight": [
    "pip._vendor.rich.highlighter.JSONHighlighter"
  ],
  "pip._vendor.rich.layout.Splitter.divide": [
    "pip._vendor.rich.layout.ColumnSplitter",
    "pip._vendor.rich.layout.RowSplitter"
  ],
  "pip._vendor.rich.layout.Splitter.get_tree_icon": [
    "pip._vendor.rich.layout.ColumnSplitter",
    "pip._vendor.rich.layout.RowSplitter"
  ],
  "pip._vendor.rich.logging.RichHandler.__init__": [
    "pip._internal.utils.logging.RichPipStreamHandler"
  ],
  "pip._vendor.rich.logging.RichHandler.emit": [
    "pip._internal.utils.logging.RichPipStreamHandler"
  ],
  "pip._vendor.rich.pager.Pager.show": [
    "pip._vendor.rich.pager.SystemPager"
  ],
  "pip._vendor.rich.progress.ProgressColumn.__init__": [
    "pip._vendor.rich.progress.BarColumn",
    "pip._vendor.rich.progress.DownloadColumn",
    "pip._vendor.rich.progress.MofNCompleteColumn",
    "pip._vendor.rich.progress.RenderableColumn",
    "pip._vendor.rich.progress.SpinnerColumn",
    "pip._vendor.rich.progress.TextColumn",
    "pip._vendor.rich.progress.TimeRemainingColumn"
  ],
  "pip._vendor.rich.progress.ProgressColumn.render": [
    "pip._vendor.rich.progress.BarColumn",
    "pip._vendor.rich.progress.DownloadColumn",
    "pip._vendor.rich.progress.FileSizeColumn",
    "pip._vendor.rich.progress.MofNCompleteColumn",
    "pip._vendor.rich.progress.RenderableColumn",
    "pip._vendor.rich.progress.SpinnerColumn",
    "pip._vendor.rich.progress.TextColumn",
    "pip._vendor.rich.progress.TimeElapsedColumn",
    "pip._vendor.rich.progress.TimeRemainingColumn",
    "pip._vendor.rich.progress.TotalFileSizeColumn",
    "pip._vendor.rich.progress.TransferSpeedColumn"
  ],
  "pip._vendor.rich.progress.TextColumn.__init__": [
    "pip._vendor.rich.progress.TaskProgressColumn"
  ],
  "pip._vendor.rich.progress.TextColumn.render": [
    "pip._vendor.rich.progress.TaskProgressColumn"
  ],
  "pip._vendor.rich.prompt.PromptBase.process_response": [
    "pip._vendor.rich.prompt.Confirm"
  ],
  "pip._vendor.rich.prompt.PromptBase.render_default": [
    "pip._vendor.rich.prompt.Confirm"
  ],
  "pip._vendor.rich.syntax.SyntaxTheme.get_background_style": [
    "pip._vendor.rich.syntax.ANSISyntaxTheme",
    "pip._vendor.rich.syntax.PygmentsSyntaxTheme"
  ],
  "pip._vendor.rich.syntax.SyntaxTheme.get_style_for_token": [
    "pip._vendor.rich.syntax.ANSISyntaxTheme",
    "pip._vendor.rich.syntax.PygmentsSyntaxTheme"
  ],
  "pip._vendor.six._LazyDescr.__init__": [
    "pip._vendor.six.MovedAttribute",
    "pip._vendor.six.MovedModule"
  ],
  "pip._vendor.tenacity.BaseRetrying.__call__": [
    "pip._vendor.tenacity.Retrying",
    "pip._vendor.tenacity._asyncio.AsyncRetrying",
    "pip._vendor.tenacity.tornadoweb.TornadoRetrying"
  ],
  "pip._vendor.tenacity.BaseRetrying.__init__": [
    "pip._vendor.tenacity._asyncio.AsyncRetrying",
    "pip._vendor.tenacity.tornadoweb.TornadoRetrying"
  ],
  "pip._vendor.tenacity.BaseRetrying.__iter__": [
    "pip._vendor.tenacity._asyncio.AsyncRetrying"
  ],
  "pip._vendor.tenacity.BaseRetrying.wraps": [
    "pip._vendor.tenacity._asyncio.AsyncRetrying"
  ],
  "pip._vendor.tenacity.retry.retry_base.__call__": [
    "pip._vendor.tenacity.retry._retry_always",
    "pip._vendor.tenacity.retry._retry_never",
    "pip._vendor.tenacity.retry.retry_all",
    "pip._vendor.tenacity.retry.retry_any",
    "pip._vendor.tenacity.retry.retry_if_exception",
    "pip._vendor.tenacity.retry.retry_if_exception_cause_type",
    "pip._vendor.tenacity.retry.retry_if_not_result",
    "pip._vendor.tenacity.retry.retry_if_result"
  ],
  "pip._vendor.tenacity.retry.retry_if_exception.__call__": [
    "pip._vendor.tenacity.retry.retry_unless_exception_type"
  ],
  "pip._vendor.tenacity.retry.retry_if_exception.__init__": [
    "pip._vendor.tenacity.retry.retry_if_exception_message",
    "pip._vendor.tenacity.retry.retry_if_exception_type",
    "pip._vendor.tenacity.retry.retry_if_not_exception_type",
    "pip._vendor.tenacity.retry.retry_unless_exception_type"
  ],
  "pip._vendor.tenacity.retry.retry_if_exception_message.__init__": [
    "pip._vendor.tenacity.retry.retry_if_not_exception_message"
  ],
  "pip._vendor.tenacity.stop.stop_base.__call__": [
    "pip._vendor.tenacity.stop._stop_never",
    "pip._vendor.tenacity.stop.stop_after_attempt",
    "pip._vendor.tenacity.stop.stop_after_delay",
    "pip._vendor.tenacity.stop.stop_all",
    "pip._vendor.tenacity.stop.stop_any",
    "pip._vendor.tenacity.stop.stop_when_event_set"
  ],
  "pip._vendor.tenacity.wait.wait_base.__call__": [
    "pip._vendor.tenacity.wait.wait_chain",
    "pip._vendor.tenacity.wait.wait_combine",
    "pip._vendor.tenacity.wait.wait_exponential",
    "pip._vendor.tenacity.wait.wait_exponential_jitter",
    "pip._vendor.tenacity.wait.wait_fixed",
    "pip._vendor.tenacity.wait.wait_incrementing",
    "pip._vendor.tenacity.wait.wait_random"
  ],
  "pip._vendor.tenacity.wait.wait_exponential.__call__": [
    "pip._vendor.tenacity.wait.wait_random_exponential"
  ],
  "pip._vendor.tenacity.wait.wait_fixed.__init__": [
    "pip._vendor.tenacity.wait.wait_none"
  ],
  "pip._vendor.typing_extensions._DefaultMixin.__init__": [
    "pip._vendor.typing_extensions.TypeVarTuple"
  ],
  "pip._vendor.urllib3.connection.HTTPConnection.__init__": [
    "pip._vendor.urllib3.connection.HTTPSConnection",
    "pip._vendor.urllib3.contrib.socks.SOCKSConnection"
  ],
  "pip._vendor.urllib3.connection.HTTPConnection._new_conn": [
    "pip._vendor.urllib3.contrib.socks.SOCKSConnection"
  ],
  "pip._vendor.urllib3.connection.HTTPConnection.connect": [
    "pip._vendor.urllib3.connection.HTTPSConnection"
  ],
  "pip._vendor.urllib3.connectionpool.ConnectionPool.__init__": [
    "pip._vendor.urllib3.connectionpool.HTTPConnectionPool"
  ],
  "pip._vendor.urllib3.connectionpool.ConnectionPool.close": [
    "pip._vendor.urllib3.connectionpool.HTTPConnectionPool"
  ],
  "pip._vendor.urllib3.connectionpool.HTTPConnectionPool.__init__": [
    "pip._vendor.urllib3.connectionpool.HTTPSConnectionPool"
  ],
  "pip._vendor.urllib3.connectionpool.HTTPConnectionPool._new_conn": [
    "pip._vendor.urllib3.connectionpool.HTTPSConnectionPool"
  ],
  "pip._vendor.urllib3.connectionpool.HTTPConnectionPool._prepare_proxy": [
    "pip._vendor.urllib3.connectionpool.HTTPSConnectionPool"
  ],
  "pip._vendor.urllib3.connectionpool.HTTPConnectionPool._validate_conn": [
    "pip._vendor.urllib3.connectionpool.HTTPSConnectionPool"
  ],
  "pip._vendor.urllib3.connectionpool.HTTPConnectionPool.urlopen": [
    "pip._vendor.urllib3.contrib.ntlmpool.NTLMConnectionPool"
  ],
  "pip._vendor.urllib3.connectionpool.HTTPSConnectionPool.__init__": [
    "pip._vendor.urllib3.contrib.ntlmpool.NTLMConnectionPool"
  ],
  "pip._vendor.urllib3.connectionpool.HTTPSConnectionPool._new_conn": [
    "pip._vendor.urllib3.contrib.ntlmpool.NTLMConnectionPool"
  ],
  "pip._vendor.urllib3.exceptions.PoolError.__init__": [
    "pip._vendor.urllib3.exceptions.RequestError"
  ],
  "pip._vendor.urllib3.exceptions.PoolError.__reduce__": [
    "pip._vendor.urllib3.exceptions.RequestError"
  ],
  "pip._vendor.urllib3.exceptions.RequestError.__init__": [
    "pip._vendor.urllib3.exceptions.HostChangedError",
    "pip._vendor.urllib3.exceptions.MaxRetryError"
  ],
  "pip._vendor.urllib3.packages.six._LazyDescr.__init__": [
    "pip._vendor.urllib3.packages.six.MovedAttribute",
    "pip._vendor.urllib3.packages.six.MovedModule"
  ],
  "pip._vendor.urllib3.poolmanager.PoolManager.__init__": [
    "pip._vendor.urllib3.contrib.socks.SOCKSProxyManager",
    "pip._vendor.urllib3.poolmanager.ProxyManager"
  ],
  "pip._vendor.urllib3.poolmanager.PoolManager.connection_from_host": [
    "pip._vendor.urllib3.poolmanager.ProxyManager"
  ],
  "pip._vendor.urllib3.poolmanager.PoolManager.urlopen": [
    "pip._vendor.urllib3.poolmanager.ProxyManager"
  ],
  "pip._vendor.urllib3.request.RequestMethods.__init__": [
    "pip._vendor.urllib3.contrib.appengine.AppEngineManager",
    "pip._vendor.urllib3.poolmanager.PoolManager"
  ],
  "pip._vendor.urllib3.request.RequestMethods.urlopen": [
    "pip._vendor.urllib3.connectionpool.HTTPConnectionPool",
    "pip._vendor.urllib3.contrib.appengine.AppEngineManager",
    "pip._vendor.urllib3.poolmanager.PoolManager"
  ],
  "pkg_resources.Environment.__init__": [
    "setuptools.command.easy_install.PthDistributions",
    "setuptools.package_index.PackageIndex",
    "typeshed.typeshed.stubs.setuptools.setuptools.command.easy_install.PthDistributions",
    "typeshed.typeshed.stubs.setuptools.setuptools.package_index.PackageIndex"
  ],
  "pkg_resources.Environment.add": [
    "setuptools.command.easy_install.PthDistributions",
    "typeshed.typeshed.stubs.setuptools.setuptools.command.easy_install.PthDistributions"
  ],
  "pkg_resources.Environment.obtain": [
    "setuptools.package_index.PackageIndex",
    "typeshed.typeshed.stubs.setuptools.setuptools.package_index.PackageIndex"
  ],
  "pkg_resources.Environment.remove": [
    "setuptools.command.easy_install.PthDistributions",
    "typeshed.typeshed.stubs.setuptools.setuptools.command.easy_install.PthDistributions"
  ],
  "polib._BaseEntry.__eq__": [
    "polib.POEntry"
  ],
  "polib._BaseEntry.__init__": [
    "polib.MOEntry",
    "polib.POEntry"
  ],
  "polib._BaseEntry.__unicode__": [
    "polib.POEntry"
  ],
  "polib._BaseEntry.msgid_with_context": [
    "polib.POEntry"
  ],
  "polib._BaseFile.__init__": [
    "polib.MOFile"
  ],
  "polib._BaseFile.__unicode__": [
    "polib.POFile"
  ],
  "polib._BaseFile.save": [
    "polib.MOFile"
  ],
  "poplib.POP3.__init__": [
    "poplib.POP3_SSL"
  ],
  "poplib.POP3.stls": [
    "poplib.POP3_SSL"
  ],
  "prettytable.prettytable.PrettyTable.__init__": [
    "prettytable.colortable.ColorTable"
  ],
  "prettytable.prettytable.PrettyTable.get_string": [
    "prettytable.colortable.ColorTable"
  ],
  "promise.promise.Promise.fulfilled": [
    "graphql.execution.tests.test_resolve.CustomPromise"
  ],
  "promise.promise.Promise.rejected": [
    "graphql.execution.tests.test_resolve.CustomPromise"
  ],
  "prompt_toolkit.application.application.Application.__init__": [
    "prompt_toolkit.application.dummy.DummyApplication"
  ],
  "prompt_toolkit.application.application.Application.run": [
    "prompt_toolkit.application.dummy.DummyApplication"
  ],
  "prompt_toolkit.application.application.Application.run_async": [
    "prompt_toolkit.application.dummy.DummyApplication"
  ],
  "prompt_toolkit.application.application.Application.run_system_command": [
    "prompt_toolkit.application.dummy.DummyApplication"
  ],
  "prompt_toolkit.application.application.Application.suspend_to_background": [
    "prompt_toolkit.application.dummy.DummyApplication"
  ],
  "prompt_toolkit.auto_suggest.AutoSuggest.get_suggestion": [
    "prompt_toolkit.auto_suggest.AutoSuggestFromHistory",
    "prompt_toolkit.auto_suggest.ConditionalAutoSuggest",
    "prompt_toolkit.auto_suggest.DummyAutoSuggest",
    "prompt_toolkit.auto_suggest.DynamicAutoSuggest",
    "prompt_toolkit.auto_suggest.ThreadedAutoSuggest"
  ],
  "prompt_toolkit.auto_suggest.AutoSuggest.get_suggestion_async": [
    "prompt_toolkit.auto_suggest.DynamicAutoSuggest",
    "prompt_toolkit.auto_suggest.ThreadedAutoSuggest"
  ],
  "prompt_toolkit.auto_suggest.AutoSuggestFromHistory.get_suggestion": [
    "IPython.terminal.shortcuts.auto_suggest.NavigableAutoSuggestFromHistory"
  ],
  "prompt_toolkit.clipboard.base.Clipboard.get_data": [
    "prompt_toolkit.clipboard.base.DummyClipboard",
    "prompt_toolkit.clipboard.base.DynamicClipboard",
    "prompt_toolkit.clipboard.in_memory.InMemoryClipboard",
    "prompt_toolkit.clipboard.pyperclip.PyperclipClipboard"
  ],
  "prompt_toolkit.clipboard.base.Clipboard.rotate": [
    "prompt_toolkit.clipboard.base.DummyClipboard",
    "prompt_toolkit.clipboard.base.DynamicClipboard",
    "prompt_toolkit.clipboard.in_memory.InMemoryClipboard"
  ],
  "prompt_toolkit.clipboard.base.Clipboard.set_data": [
    "prompt_toolkit.clipboard.base.DummyClipboard",
    "prompt_toolkit.clipboard.base.DynamicClipboard",
    "prompt_toolkit.clipboard.in_memory.InMemoryClipboard",
    "prompt_toolkit.clipboard.pyperclip.PyperclipClipboard"
  ],
  "prompt_toolkit.clipboard.base.Clipboard.set_text": [
    "prompt_toolkit.clipboard.base.DummyClipboard",
    "prompt_toolkit.clipboard.base.DynamicClipboard"
  ],
  "prompt_toolkit.completion.base.Completer.get_completions": [
    "IPython.terminal.ptutils.IPythonPTCompleter",
    "prompt_toolkit.completion.base.ConditionalCompleter",
    "prompt_toolkit.completion.base.DummyCompleter",
    "prompt_toolkit.completion.base.DynamicCompleter",
    "prompt_toolkit.completion.base.ThreadedCompleter",
    "prompt_toolkit.completion.base._MergedCompleter",
    "prompt_toolkit.completion.deduplicate.DeduplicateCompleter",
    "prompt_toolkit.completion.filesystem.PathCompleter",
    "prompt_toolkit.completion.fuzzy_completer.FuzzyCompleter",
    "prompt_toolkit.completion.fuzzy_completer.FuzzyWordCompleter",
    "prompt_toolkit.completion.nested.NestedCompleter",
    "prompt_toolkit.completion.word_completer.WordCompleter",
    "prompt_toolkit.contrib.regular_languages.completion.GrammarCompleter"
  ],
  "prompt_toolkit.completion.base.Completer.get_completions_async": [
    "prompt_toolkit.completion.base.ConditionalCompleter",
    "prompt_toolkit.completion.base.DynamicCompleter",
    "prompt_toolkit.completion.base.ThreadedCompleter",
    "prompt_toolkit.completion.base._MergedCompleter"
  ],
  "prompt_toolkit.completion.filesystem.PathCompleter.__init__": [
    "prompt_toolkit.completion.filesystem.ExecutableCompleter"
  ],
  "prompt_toolkit.contrib.regular_languages.completion.GrammarCompleter.__init__": [
    "prompt_toolkit.contrib.completers.system.SystemCompleter"
  ],
  "prompt_toolkit.contrib.regular_languages.regex_parser.Node.__add__": [
    "prompt_toolkit.contrib.regular_languages.regex_parser.NodeSequence"
  ],
  "prompt_toolkit.contrib.regular_languages.regex_parser.Node.__or__": [
    "prompt_toolkit.contrib.regular_languages.regex_parser.AnyNode"
  ],
  "prompt_toolkit.cursor_shapes.CursorShapeConfig.get_cursor_shape": [
    "prompt_toolkit.cursor_shapes.DynamicCursorShapeConfig",
    "prompt_toolkit.cursor_shapes.ModalCursorShapeConfig",
    "prompt_toolkit.cursor_shapes.SimpleCursorShapeConfig"
  ],
  "prompt_toolkit.filters.base.Filter.__and__": [
    "prompt_toolkit.filters.base.Never"
  ],
  "prompt_toolkit.filters.base.Filter.__call__": [
    "IPython.terminal.shortcuts.filters.PassThrough",
    "prompt_toolkit.filters.base.Always",
    "prompt_toolkit.filters.base.Condition",
    "prompt_toolkit.filters.base.Never",
    "prompt_toolkit.filters.base._AndList",
    "prompt_toolkit.filters.base._Invert",
    "prompt_toolkit.filters.base._OrList"
  ],
  "prompt_toolkit.filters.base.Filter.__init__": [
    "IPython.terminal.shortcuts.filters.PassThrough",
    "prompt_toolkit.filters.base.Condition",
    "prompt_toolkit.filters.base._AndList",
    "prompt_toolkit.filters.base._Invert",
    "prompt_toolkit.filters.base._OrList"
  ],
  "prompt_toolkit.filters.base.Filter.__invert__": [
    "prompt_toolkit.filters.base.Always",
    "prompt_toolkit.filters.base.Never"
  ],
  "prompt_toolkit.filters.base.Filter.__or__": [
    "prompt_toolkit.filters.base.Always"
  ],
  "prompt_toolkit.history.History.__init__": [
    "IPython.terminal.interactiveshell.PtkHistoryAdapter",
    "prompt_toolkit.history.FileHistory",
    "prompt_toolkit.history.InMemoryHistory",
    "prompt_toolkit.history.ThreadedHistory"
  ],
  "prompt_toolkit.history.History.append_string": [
    "IPython.terminal.interactiveshell.PtkHistoryAdapter",
    "prompt_toolkit.history.DummyHistory",
    "prompt_toolkit.history.ThreadedHistory"
  ],
  "prompt_toolkit.history.History.load": [
    "prompt_toolkit.history.ThreadedHistory"
  ],
  "prompt_toolkit.history.History.load_history_strings": [
    "IPython.terminal.interactiveshell.PtkHistoryAdapter",
    "prompt_toolkit.history.DummyHistory",
    "prompt_toolkit.history.FileHistory",
    "prompt_toolkit.history.InMemoryHistory",
    "prompt_toolkit.history.ThreadedHistory"
  ],
  "prompt_toolkit.history.History.store_string": [
    "IPython.terminal.interactiveshell.PtkHistoryAdapter",
    "prompt_toolkit.history.DummyHistory",
    "prompt_toolkit.history.FileHistory",
    "prompt_toolkit.history.InMemoryHistory",
    "prompt_toolkit.history.ThreadedHistory"
  ],
  "prompt_toolkit.input.base.Input.attach": [
    "prompt_toolkit.input.base.DummyInput",
    "prompt_toolkit.input.vt100.Vt100Input",
    "prompt_toolkit.input.win32.Win32Input",
    "prompt_toolkit.input.win32_pipe.Win32PipeInput"
  ],
  "prompt_toolkit.input.base.Input.close": [
    "prompt_toolkit.input.posix_pipe.PosixPipeInput",
    "prompt_toolkit.input.win32.Win32Input",
    "prompt_toolkit.input.win32_pipe.Win32PipeInput"
  ],
  "prompt_toolkit.input.base.Input.closed": [
    "prompt_toolkit.input.base.DummyInput",
    "prompt_toolkit.input.vt100.Vt100Input",
    "prompt_toolkit.input.win32.Win32Input",
    "prompt_toolkit.input.win32_pipe.Win32PipeInput"
  ],
  "prompt_toolkit.input.base.Input.cooked_mode": [
    "prompt_toolkit.input.base.DummyInput",
    "prompt_toolkit.input.vt100.Vt100Input",
    "prompt_toolkit.input.win32.Win32Input",
    "prompt_toolkit.input.win32_pipe.Win32PipeInput"
  ],
  "prompt_toolkit.input.base.Input.detach": [
    "prompt_toolkit.input.base.DummyInput",
    "prompt_toolkit.input.vt100.Vt100Input",
    "prompt_toolkit.input.win32.Win32Input",
    "prompt_toolkit.input.win32_pipe.Win32PipeInput"
  ],
  "prompt_toolkit.input.base.Input.fileno": [
    "prompt_toolkit.input.base.DummyInput",
    "prompt_toolkit.input.vt100.Vt100Input",
    "prompt_toolkit.input.win32.Win32Input",
    "prompt_toolkit.input.win32_pipe.Win32PipeInput"
  ],
  "prompt_toolkit.input.base.Input.flush": [
    "prompt_toolkit.input.win32.Win32Input"
  ],
  "prompt_toolkit.input.base.Input.flush_keys": [
    "prompt_toolkit.input.vt100.Vt100Input",
    "prompt_toolkit.input.win32_pipe.Win32PipeInput"
  ],
  "prompt_toolkit.input.base.Input.raw_mode": [
    "prompt_toolkit.input.base.DummyInput",
    "prompt_toolkit.input.vt100.Vt100Input",
    "prompt_toolkit.input.win32.Win32Input",
    "prompt_toolkit.input.win32_pipe.Win32PipeInput"
  ],
  "prompt_toolkit.input.base.Input.read_keys": [
    "prompt_toolkit.input.base.DummyInput",
    "prompt_toolkit.input.vt100.Vt100Input",
    "prompt_toolkit.input.win32.Win32Input",
    "prompt_toolkit.input.win32_pipe.Win32PipeInput"
  ],
  "prompt_toolkit.input.base.Input.typeahead_hash": [
    "prompt_toolkit.input.base.DummyInput",
    "prompt_toolkit.input.vt100.Vt100Input",
    "prompt_toolkit.input.win32.Win32Input",
    "prompt_toolkit.input.win32_pipe.Win32PipeInput"
  ],
  "prompt_toolkit.input.base.PipeInput.send_bytes": [
    "prompt_toolkit.input.posix_pipe.PosixPipeInput",
    "prompt_toolkit.input.win32_pipe.Win32PipeInput"
  ],
  "prompt_toolkit.input.base.PipeInput.send_text": [
    "prompt_toolkit.input.posix_pipe.PosixPipeInput",
    "prompt_toolkit.input.win32_pipe.Win32PipeInput"
  ],
  "prompt_toolkit.input.vt100.Vt100Input.__init__": [
    "prompt_toolkit.input.posix_pipe.PosixPipeInput"
  ],
  "prompt_toolkit.input.vt100.Vt100Input.cooked_mode": [
    "prompt_toolkit.input.posix_pipe.PosixPipeInput"
  ],
  "prompt_toolkit.input.vt100.Vt100Input.raw_mode": [
    "prompt_toolkit.input.posix_pipe.PosixPipeInput"
  ],
  "prompt_toolkit.input.vt100.Vt100Input.typeahead_hash": [
    "prompt_toolkit.input.posix_pipe.PosixPipeInput"
  ],
  "prompt_toolkit.input.vt100.raw_mode._patch_iflag": [
    "prompt_toolkit.input.vt100.cooked_mode"
  ],
  "prompt_toolkit.input.vt100.raw_mode._patch_lflag": [
    "prompt_toolkit.input.vt100.cooked_mode"
  ],
  "prompt_toolkit.input.win32._Win32InputBase.__init__": [
    "prompt_toolkit.input.win32.Win32Input",
    "prompt_toolkit.input.win32_pipe.Win32PipeInput"
  ],
  "prompt_toolkit.input.win32._Win32InputBase.handle": [
    "prompt_toolkit.input.win32.Win32Input",
    "prompt_toolkit.input.win32_pipe.Win32PipeInput"
  ],
  "prompt_toolkit.input.win32.raw_mode._patch": [
    "prompt_toolkit.input.win32.cooked_mode"
  ],
  "prompt_toolkit.key_binding.key_bindings.KeyBindingsBase._version": [
    "prompt_toolkit.application.application._CombinedRegistry",
    "prompt_toolkit.key_binding.key_bindings.KeyBindings",
    "prompt_toolkit.key_binding.key_bindings._Proxy"
  ],
  "prompt_toolkit.key_binding.key_bindings.KeyBindingsBase.bindings": [
    "prompt_toolkit.application.application._CombinedRegistry",
    "prompt_toolkit.key_binding.key_bindings.KeyBindings",
    "prompt_toolkit.key_binding.key_bindings._Proxy"
  ],
  "prompt_toolkit.key_binding.key_bindings.KeyBindingsBase.get_bindings_for_keys": [
    "prompt_toolkit.application.application._CombinedRegistry",
    "prompt_toolkit.key_binding.key_bindings.KeyBindings",
    "prompt_toolkit.key_binding.key_bindings._Proxy"
  ],
  "prompt_toolkit.key_binding.key_bindings.KeyBindingsBase.get_bindings_starting_with_keys": [
    "prompt_toolkit.application.application._CombinedRegistry",
    "prompt_toolkit.key_binding.key_bindings.KeyBindings",
    "prompt_toolkit.key_binding.key_bindings._Proxy"
  ],
  "prompt_toolkit.key_binding.key_bindings._Proxy.__init__": [
    "prompt_toolkit.key_binding.key_bindings.ConditionalKeyBindings",
    "prompt_toolkit.key_binding.key_bindings.DynamicKeyBindings",
    "prompt_toolkit.key_binding.key_bindings.GlobalOnlyKeyBindings",
    "prompt_toolkit.key_binding.key_bindings._MergedKeyBindings"
  ],
  "prompt_toolkit.key_binding.key_bindings._Proxy._update_cache": [
    "prompt_toolkit.key_binding.key_bindings.ConditionalKeyBindings",
    "prompt_toolkit.key_binding.key_bindings.DynamicKeyBindings",
    "prompt_toolkit.key_binding.key_bindings.GlobalOnlyKeyBindings",
    "prompt_toolkit.key_binding.key_bindings._MergedKeyBindings"
  ],
  "prompt_toolkit.layout.containers.ConditionalContainer.__init__": [
    "prompt_toolkit.layout.menus.CompletionsMenu"
  ],
  "prompt_toolkit.layout.containers.Container.get_children": [
    "prompt_toolkit.layout.containers.ConditionalContainer",
    "prompt_toolkit.layout.containers.DynamicContainer",
    "prompt_toolkit.layout.containers.FloatContainer",
    "prompt_toolkit.layout.containers.Window",
    "prompt_toolkit.layout.containers._Split",
    "prompt_toolkit.layout.scrollable_pane.ScrollablePane"
  ],
  "prompt_toolkit.layout.containers.Container.get_key_bindings": [
    "prompt_toolkit.layout.containers.DynamicContainer",
    "prompt_toolkit.layout.containers.FloatContainer",
    "prompt_toolkit.layout.containers.Window",
    "prompt_toolkit.layout.containers._Split",
    "prompt_toolkit.layout.scrollable_pane.ScrollablePane"
  ],
  "prompt_toolkit.layout.containers.Container.is_modal": [
    "prompt_toolkit.layout.containers.DynamicContainer",
    "prompt_toolkit.layout.containers.FloatContainer",
    "prompt_toolkit.layout.containers._Split",
    "prompt_toolkit.layout.scrollable_pane.ScrollablePane"
  ],
  "prompt_toolkit.layout.containers.Container.preferred_height": [
    "prompt_toolkit.layout.containers.ConditionalContainer",
    "prompt_toolkit.layout.containers.DynamicContainer",
    "prompt_toolkit.layout.containers.FloatContainer",
    "prompt_toolkit.layout.containers.HSplit",
    "prompt_toolkit.layout.containers.VSplit",
    "prompt_toolkit.layout.containers.Window",
    "prompt_toolkit.layout.scrollable_pane.ScrollablePane"
  ],
  "prompt_toolkit.layout.containers.Container.preferred_width": [
    "prompt_toolkit.layout.containers.ConditionalContainer",
    "prompt_toolkit.layout.containers.DynamicContainer",
    "prompt_toolkit.layout.containers.FloatContainer",
    "prompt_toolkit.layout.containers.HSplit",
    "prompt_toolkit.layout.containers.VSplit",
    "prompt_toolkit.layout.containers.Window",
    "prompt_toolkit.layout.scrollable_pane.ScrollablePane"
  ],
  "prompt_toolkit.layout.containers.Container.reset": [
    "prompt_toolkit.layout.containers.ConditionalContainer",
    "prompt_toolkit.layout.containers.DynamicContainer",
    "prompt_toolkit.layout.containers.FloatContainer",
    "prompt_toolkit.layout.containers.HSplit",
    "prompt_toolkit.layout.containers.VSplit",
    "prompt_toolkit.layout.containers.Window",
    "prompt_toolkit.layout.scrollable_pane.ScrollablePane"
  ],
  "prompt_toolkit.layout.containers.Container.write_to_screen": [
    "prompt_toolkit.layout.containers.ConditionalContainer",
    "prompt_toolkit.layout.containers.DynamicContainer",
    "prompt_toolkit.layout.containers.FloatContainer",
    "prompt_toolkit.layout.containers.HSplit",
    "prompt_toolkit.layout.containers.VSplit",
    "prompt_toolkit.layout.containers.Window",
    "prompt_toolkit.layout.scrollable_pane.ScrollablePane"
  ],
  "prompt_toolkit.layout.containers.HSplit.__init__": [
    "prompt_toolkit.layout.menus.MultiColumnCompletionsMenu"
  ],
  "prompt_toolkit.layout.containers.Window.__init__": [
    "prompt_toolkit.shortcuts.prompt._RPrompt",
    "prompt_toolkit.widgets.toolbars.FormattedTextToolbar"
  ],
  "prompt_toolkit.layout.containers._Split.__init__": [
    "prompt_toolkit.layout.containers.HSplit",
    "prompt_toolkit.layout.containers.VSplit"
  ],
  "prompt_toolkit.layout.controls.BufferControl.__init__": [
    "prompt_toolkit.layout.controls.SearchBufferControl"
  ],
  "prompt_toolkit.layout.controls.UIControl.create_content": [
    "prompt_toolkit.layout.controls.BufferControl",
    "prompt_toolkit.layout.controls.DummyControl",
    "prompt_toolkit.layout.controls.FormattedTextControl",
    "prompt_toolkit.layout.menus.CompletionsMenuControl",
    "prompt_toolkit.layout.menus.MultiColumnCompletionMenuControl",
    "prompt_toolkit.layout.menus._SelectedCompletionMetaControl",
    "prompt_toolkit.shortcuts.progress_bar.base._ProgressControl",
    "prompt_toolkit.widgets.toolbars._CompletionsToolbarControl"
  ],
  "prompt_toolkit.layout.controls.UIControl.get_invalidate_events": [
    "prompt_toolkit.layout.controls.BufferControl"
  ],
  "prompt_toolkit.layout.controls.UIControl.get_key_bindings": [
    "prompt_toolkit.layout.controls.BufferControl",
    "prompt_toolkit.layout.controls.FormattedTextControl",
    "prompt_toolkit.layout.menus.MultiColumnCompletionMenuControl",
    "prompt_toolkit.shortcuts.progress_bar.base._ProgressControl"
  ],
  "prompt_toolkit.layout.controls.UIControl.is_focusable": [
    "prompt_toolkit.layout.controls.BufferControl",
    "prompt_toolkit.layout.controls.DummyControl",
    "prompt_toolkit.layout.controls.FormattedTextControl",
    "prompt_toolkit.shortcuts.progress_bar.base._ProgressControl"
  ],
  "prompt_toolkit.layout.controls.UIControl.mouse_handler": [
    "prompt_toolkit.layout.controls.BufferControl",
    "prompt_toolkit.layout.controls.FormattedTextControl",
    "prompt_toolkit.layout.menus.CompletionsMenuControl",
    "prompt_toolkit.layout.menus.MultiColumnCompletionMenuControl"
  ],
  "prompt_toolkit.layout.controls.UIControl.move_cursor_down": [
    "prompt_toolkit.layout.controls.BufferControl"
  ],
  "prompt_toolkit.layout.controls.UIControl.move_cursor_up": [
    "prompt_toolkit.layout.controls.BufferControl"
  ],
  "prompt_toolkit.layout.controls.UIControl.preferred_height": [
    "prompt_toolkit.layout.controls.BufferControl",
    "prompt_toolkit.layout.controls.FormattedTextControl",
    "prompt_toolkit.layout.menus.CompletionsMenuControl",
    "prompt_toolkit.layout.menus.MultiColumnCompletionMenuControl",
    "prompt_toolkit.layout.menus._SelectedCompletionMetaControl"
  ],
  "prompt_toolkit.layout.controls.UIControl.preferred_width": [
    "prompt_toolkit.layout.controls.BufferControl",
    "prompt_toolkit.layout.controls.FormattedTextControl",
    "prompt_toolkit.layout.menus.CompletionsMenuControl",
    "prompt_toolkit.layout.menus.MultiColumnCompletionMenuControl",
    "prompt_toolkit.layout.menus._SelectedCompletionMetaControl"
  ],
  "prompt_toolkit.layout.controls.UIControl.reset": [
    "prompt_toolkit.layout.controls.FormattedTextControl",
    "prompt_toolkit.layout.menus.MultiColumnCompletionMenuControl"
  ],
  "prompt_toolkit.layout.margins.Margin.create_margin": [
    "prompt_toolkit.layout.margins.ConditionalMargin",
    "prompt_toolkit.layout.margins.NumberedMargin",
    "prompt_toolkit.layout.margins.PromptMargin",
    "prompt_toolkit.layout.margins.ScrollbarMargin"
  ],
  "prompt_toolkit.layout.margins.Margin.get_width": [
    "prompt_toolkit.layout.margins.ConditionalMargin",
    "prompt_toolkit.layout.margins.NumberedMargin",
    "prompt_toolkit.layout.margins.PromptMargin",
    "prompt_toolkit.layout.margins.ScrollbarMargin"
  ],
  "prompt_toolkit.layout.processors.BeforeInput.__init__": [
    "prompt_toolkit.layout.processors.ShowArg"
  ],
  "prompt_toolkit.layout.processors.BeforeInput.__repr__": [
    "prompt_toolkit.layout.processors.ShowArg"
  ],
  "prompt_toolkit.layout.processors.HighlightSearchProcessor._get_search_text": [
    "prompt_toolkit.layout.processors.HighlightIncrementalSearchProcessor"
  ],
  "prompt_toolkit.layout.processors.Processor.apply_transformation": [
    "IPython.terminal.shortcuts.auto_suggest.AppendAutoSuggestionInAnyLine",
    "prompt_toolkit.layout.processors.AfterInput",
    "prompt_toolkit.layout.processors.AppendAutoSuggestion",
    "prompt_toolkit.layout.processors.BeforeInput",
    "prompt_toolkit.layout.processors.ConditionalProcessor",
    "prompt_toolkit.layout.processors.DisplayMultipleCursors",
    "prompt_toolkit.layout.processors.DummyProcessor",
    "prompt_toolkit.layout.processors.DynamicProcessor",
    "prompt_toolkit.layout.processors.HighlightMatchingBracketProcessor",
    "prompt_toolkit.layout.processors.HighlightSearchProcessor",
    "prompt_toolkit.layout.processors.HighlightSelectionProcessor",
    "prompt_toolkit.layout.processors.PasswordProcessor",
    "prompt_toolkit.layout.processors.ReverseSearchProcessor",
    "prompt_toolkit.layout.processors.ShowLeadingWhiteSpaceProcessor",
    "prompt_toolkit.layout.processors.ShowTrailingWhiteSpaceProcessor",
    "prompt_toolkit.layout.processors.TabsProcessor",
    "prompt_toolkit.layout.processors._MergedProcessor"
  ],
  "prompt_toolkit.lexers.base.Lexer.invalidation_hash": [
    "prompt_toolkit.lexers.base.DynamicLexer"
  ],
  "prompt_toolkit.lexers.base.Lexer.lex_document": [
    "IPython.terminal.ptutils.IPythonPTLexer",
    "prompt_toolkit.contrib.regular_languages.lexer.GrammarLexer",
    "prompt_toolkit.lexers.base.DynamicLexer",
    "prompt_toolkit.lexers.base.SimpleLexer",
    "prompt_toolkit.lexers.pygments.PygmentsLexer"
  ],
  "prompt_toolkit.lexers.pygments.SyntaxSync.get_sync_start_position": [
    "prompt_toolkit.lexers.pygments.RegexSync",
    "prompt_toolkit.lexers.pygments.SyncFromStart"
  ],
  "prompt_toolkit.output.base.Output.ask_for_cpr": [
    "prompt_toolkit.output.base.DummyOutput",
    "prompt_toolkit.output.plain_text.PlainTextOutput",
    "prompt_toolkit.output.vt100.Vt100_Output"
  ],
  "prompt_toolkit.output.base.Output.bell": [
    "prompt_toolkit.output.base.DummyOutput",
    "prompt_toolkit.output.plain_text.PlainTextOutput",
    "prompt_toolkit.output.vt100.Vt100_Output"
  ],
  "prompt_toolkit.output.base.Output.clear_title": [
    "prompt_toolkit.output.base.DummyOutput",
    "prompt_toolkit.output.plain_text.PlainTextOutput",
    "prompt_toolkit.output.vt100.Vt100_Output",
    "prompt_toolkit.output.win32.Win32Output"
  ],
  "prompt_toolkit.output.base.Output.cursor_backward": [
    "prompt_toolkit.output.base.DummyOutput",
    "prompt_toolkit.output.plain_text.PlainTextOutput",
    "prompt_toolkit.output.vt100.Vt100_Output",
    "prompt_toolkit.output.win32.Win32Output"
  ],
  "prompt_toolkit.output.base.Output.cursor_down": [
    "prompt_toolkit.output.base.DummyOutput",
    "prompt_toolkit.output.plain_text.PlainTextOutput",
    "prompt_toolkit.output.vt100.Vt100_Output",
    "prompt_toolkit.output.win32.Win32Output"
  ],
  "prompt_toolkit.output.base.Output.cursor_forward": [
    "prompt_toolkit.output.base.DummyOutput",
    "prompt_toolkit.output.plain_text.PlainTextOutput",
    "prompt_toolkit.output.vt100.Vt100_Output",
    "prompt_toolkit.output.win32.Win32Output"
  ],
  "prompt_toolkit.output.base.Output.cursor_goto": [
    "prompt_toolkit.output.base.DummyOutput",
    "prompt_toolkit.output.plain_text.PlainTextOutput",
    "prompt_toolkit.output.vt100.Vt100_Output",
    "prompt_toolkit.output.win32.Win32Output"
  ],
  "prompt_toolkit.output.base.Output.cursor_up": [
    "prompt_toolkit.output.base.DummyOutput",
    "prompt_toolkit.output.plain_text.PlainTextOutput",
    "prompt_toolkit.output.vt100.Vt100_Output",
    "prompt_toolkit.output.win32.Win32Output"
  ],
  "prompt_toolkit.output.base.Output.disable_autowrap": [
    "prompt_toolkit.output.base.DummyOutput",
    "prompt_toolkit.output.plain_text.PlainTextOutput",
    "prompt_toolkit.output.vt100.Vt100_Output",
    "prompt_toolkit.output.win32.Win32Output"
  ],
  "prompt_toolkit.output.base.Output.disable_bracketed_paste": [
    "prompt_toolkit.output.base.DummyOutput",
    "prompt_toolkit.output.plain_text.PlainTextOutput",
    "prompt_toolkit.output.vt100.Vt100_Output"
  ],
  "prompt_toolkit.output.base.Output.disable_mouse_support": [
    "prompt_toolkit.output.base.DummyOutput",
    "prompt_toolkit.output.plain_text.PlainTextOutput",
    "prompt_toolkit.output.vt100.Vt100_Output",
    "prompt_toolkit.output.win32.Win32Output"
  ],
  "prompt_toolkit.output.base.Output.enable_autowrap": [
    "prompt_toolkit.output.base.DummyOutput",
    "prompt_toolkit.output.plain_text.PlainTextOutput",
    "prompt_toolkit.output.vt100.Vt100_Output",
    "prompt_toolkit.output.win32.Win32Output"
  ],
  "prompt_toolkit.output.base.Output.enable_bracketed_paste": [
    "prompt_toolkit.output.base.DummyOutput",
    "prompt_toolkit.output.plain_text.PlainTextOutput",
    "prompt_toolkit.output.vt100.Vt100_Output"
  ],
  "prompt_toolkit.output.base.Output.enable_mouse_support": [
    "prompt_toolkit.output.base.DummyOutput",
    "prompt_toolkit.output.plain_text.PlainTextOutput",
    "prompt_toolkit.output.vt100.Vt100_Output",
    "prompt_toolkit.output.win32.Win32Output"
  ],
  "prompt_toolkit.output.base.Output.encoding": [
    "prompt_toolkit.output.base.DummyOutput",
    "prompt_toolkit.output.plain_text.PlainTextOutput",
    "prompt_toolkit.output.vt100.Vt100_Output",
    "prompt_toolkit.output.win32.Win32Output"
  ],
  "prompt_toolkit.output.base.Output.enter_alternate_screen": [
    "prompt_toolkit.output.base.DummyOutput",
    "prompt_toolkit.output.plain_text.PlainTextOutput",
    "prompt_toolkit.output.vt100.Vt100_Output",
    "prompt_toolkit.output.win32.Win32Output"
  ],
  "prompt_toolkit.output.base.Output.erase_down": [
    "prompt_toolkit.output.base.DummyOutput",
    "prompt_toolkit.output.plain_text.PlainTextOutput",
    "prompt_toolkit.output.vt100.Vt100_Output",
    "prompt_toolkit.output.win32.Win32Output"
  ],
  "prompt_toolkit.output.base.Output.erase_end_of_line": [
    "prompt_toolkit.output.base.DummyOutput",
    "prompt_toolkit.output.plain_text.PlainTextOutput",
    "prompt_toolkit.output.vt100.Vt100_Output",
    "prompt_toolkit.output.win32.Win32Output"
  ],
  "prompt_toolkit.output.base.Output.erase_screen": [
    "prompt_toolkit.output.base.DummyOutput",
    "prompt_toolkit.output.plain_text.PlainTextOutput",
    "prompt_toolkit.output.vt100.Vt100_Output",
    "prompt_toolkit.output.win32.Win32Output"
  ],
  "prompt_toolkit.output.base.Output.fileno": [
    "prompt_toolkit.output.base.DummyOutput",
    "prompt_toolkit.output.plain_text.PlainTextOutput",
    "prompt_toolkit.output.vt100.Vt100_Output",
    "prompt_toolkit.output.win32.Win32Output"
  ],
  "prompt_toolkit.output.base.Output.flush": [
    "prompt_toolkit.output.base.DummyOutput",
    "prompt_toolkit.output.plain_text.PlainTextOutput",
    "prompt_toolkit.output.vt100.Vt100_Output",
    "prompt_toolkit.output.win32.Win32Output"
  ],
  "prompt_toolkit.output.base.Output.get_default_color_depth": [
    "prompt_toolkit.output.base.DummyOutput",
    "prompt_toolkit.output.plain_text.PlainTextOutput",
    "prompt_toolkit.output.vt100.Vt100_Output",
    "prompt_toolkit.output.win32.Win32Output"
  ],
  "prompt_toolkit.output.base.Output.get_rows_below_cursor_position": [
    "prompt_toolkit.output.base.DummyOutput",
    "prompt_toolkit.output.plain_text.PlainTextOutput",
    "prompt_toolkit.output.win32.Win32Output"
  ],
  "prompt_toolkit.output.base.Output.get_size": [
    "prompt_toolkit.output.base.DummyOutput",
    "prompt_toolkit.output.plain_text.PlainTextOutput",
    "prompt_toolkit.output.vt100.Vt100_Output",
    "prompt_toolkit.output.win32.Win32Output"
  ],
  "prompt_toolkit.output.base.Output.hide_cursor": [
    "prompt_toolkit.output.base.DummyOutput",
    "prompt_toolkit.output.plain_text.PlainTextOutput",
    "prompt_toolkit.output.vt100.Vt100_Output",
    "prompt_toolkit.output.win32.Win32Output"
  ],
  "prompt_toolkit.output.base.Output.quit_alternate_screen": [
    "prompt_toolkit.output.base.DummyOutput",
    "prompt_toolkit.output.plain_text.PlainTextOutput",
    "prompt_toolkit.output.vt100.Vt100_Output",
    "prompt_toolkit.output.win32.Win32Output"
  ],
  "prompt_toolkit.output.base.Output.reset_attributes": [
    "prompt_toolkit.output.base.DummyOutput",
    "prompt_toolkit.output.plain_text.PlainTextOutput",
    "prompt_toolkit.output.vt100.Vt100_Output",
    "prompt_toolkit.output.win32.Win32Output"
  ],
  "prompt_toolkit.output.base.Output.reset_cursor_key_mode": [
    "prompt_toolkit.output.vt100.Vt100_Output"
  ],
  "prompt_toolkit.output.base.Output.reset_cursor_shape": [
    "prompt_toolkit.output.base.DummyOutput",
    "prompt_toolkit.output.plain_text.PlainTextOutput",
    "prompt_toolkit.output.vt100.Vt100_Output",
    "prompt_toolkit.output.win32.Win32Output"
  ],
  "prompt_toolkit.output.base.Output.responds_to_cpr": [
    "prompt_toolkit.output.vt100.Vt100_Output"
  ],
  "prompt_toolkit.output.base.Output.scroll_buffer_to_prompt": [
    "prompt_toolkit.output.base.DummyOutput",
    "prompt_toolkit.output.plain_text.PlainTextOutput",
    "prompt_toolkit.output.win32.Win32Output"
  ],
  "prompt_toolkit.output.base.Output.set_attributes": [
    "prompt_toolkit.output.base.DummyOutput",
    "prompt_toolkit.output.plain_text.PlainTextOutput",
    "prompt_toolkit.output.vt100.Vt100_Output",
    "prompt_toolkit.output.win32.Win32Output"
  ],
  "prompt_toolkit.output.base.Output.set_cursor_shape": [
    "prompt_toolkit.output.base.DummyOutput",
    "prompt_toolkit.output.plain_text.PlainTextOutput",
    "prompt_toolkit.output.vt100.Vt100_Output",
    "prompt_toolkit.output.win32.Win32Output"
  ],
  "prompt_toolkit.output.base.Output.set_title": [
    "prompt_toolkit.output.base.DummyOutput",
    "prompt_toolkit.output.plain_text.PlainTextOutput",
    "prompt_toolkit.output.vt100.Vt100_Output",
    "prompt_toolkit.output.win32.Win32Output"
  ],
  "prompt_toolkit.output.base.Output.show_cursor": [
    "prompt_toolkit.output.base.DummyOutput",
    "prompt_toolkit.output.plain_text.PlainTextOutput",
    "prompt_toolkit.output.vt100.Vt100_Output",
    "prompt_toolkit.output.win32.Win32Output"
  ],
  "prompt_toolkit.output.base.Output.write": [
    "prompt_toolkit.output.base.DummyOutput",
    "prompt_toolkit.output.plain_text.PlainTextOutput",
    "prompt_toolkit.output.vt100.Vt100_Output",
    "prompt_toolkit.output.win32.Win32Output"
  ],
  "prompt_toolkit.output.base.Output.write_raw": [
    "prompt_toolkit.output.base.DummyOutput",
    "prompt_toolkit.output.plain_text.PlainTextOutput",
    "prompt_toolkit.output.vt100.Vt100_Output",
    "prompt_toolkit.output.win32.Win32Output"
  ],
  "prompt_toolkit.shortcuts.progress_bar.formatters.Formatter.format": [
    "prompt_toolkit.shortcuts.progress_bar.formatters.Bar",
    "prompt_toolkit.shortcuts.progress_bar.formatters.IterationsPerSecond",
    "prompt_toolkit.shortcuts.progress_bar.formatters.Label",
    "prompt_toolkit.shortcuts.progress_bar.formatters.Percentage",
    "prompt_toolkit.shortcuts.progress_bar.formatters.Progress",
    "prompt_toolkit.shortcuts.progress_bar.formatters.Rainbow",
    "prompt_toolkit.shortcuts.progress_bar.formatters.SpinningWheel",
    "prompt_toolkit.shortcuts.progress_bar.formatters.Text",
    "prompt_toolkit.shortcuts.progress_bar.formatters.TimeElapsed",
    "prompt_toolkit.shortcuts.progress_bar.formatters.TimeLeft"
  ],
  "prompt_toolkit.shortcuts.progress_bar.formatters.Formatter.get_width": [
    "prompt_toolkit.shortcuts.progress_bar.formatters.Bar",
    "prompt_toolkit.shortcuts.progress_bar.formatters.IterationsPerSecond",
    "prompt_toolkit.shortcuts.progress_bar.formatters.Label",
    "prompt_toolkit.shortcuts.progress_bar.formatters.Percentage",
    "prompt_toolkit.shortcuts.progress_bar.formatters.Progress",
    "prompt_toolkit.shortcuts.progress_bar.formatters.Rainbow",
    "prompt_toolkit.shortcuts.progress_bar.formatters.SpinningWheel",
    "prompt_toolkit.shortcuts.progress_bar.formatters.Text",
    "prompt_toolkit.shortcuts.progress_bar.formatters.TimeElapsed",
    "prompt_toolkit.shortcuts.progress_bar.formatters.TimeLeft"
  ],
  "prompt_toolkit.styles.base.BaseStyle.get_attrs_for_style_str": [
    "prompt_toolkit.styles.base.DummyStyle",
    "prompt_toolkit.styles.base.DynamicStyle",
    "prompt_toolkit.styles.style.Style",
    "prompt_toolkit.styles.style._MergedStyle"
  ],
  "prompt_toolkit.styles.base.BaseStyle.invalidation_hash": [
    "prompt_toolkit.styles.base.DummyStyle",
    "prompt_toolkit.styles.base.DynamicStyle",
    "prompt_toolkit.styles.style.Style",
    "prompt_toolkit.styles.style._MergedStyle"
  ],
  "prompt_toolkit.styles.base.BaseStyle.style_rules": [
    "prompt_toolkit.styles.base.DummyStyle",
    "prompt_toolkit.styles.base.DynamicStyle",
    "prompt_toolkit.styles.style.Style",
    "prompt_toolkit.styles.style._MergedStyle"
  ],
  "prompt_toolkit.styles.style_transformation.StyleTransformation.invalidation_hash": [
    "prompt_toolkit.styles.style_transformation.AdjustBrightnessStyleTransformation",
    "prompt_toolkit.styles.style_transformation.ConditionalStyleTransformation",
    "prompt_toolkit.styles.style_transformation.DummyStyleTransformation",
    "prompt_toolkit.styles.style_transformation.DynamicStyleTransformation",
    "prompt_toolkit.styles.style_transformation.SetDefaultColorStyleTransformation",
    "prompt_toolkit.styles.style_transformation._MergedStyleTransformation"
  ],
  "prompt_toolkit.styles.style_transformation.StyleTransformation.transform_attrs": [
    "prompt_toolkit.styles.style_transformation.AdjustBrightnessStyleTransformation",
    "prompt_toolkit.styles.style_transformation.ConditionalStyleTransformation",
    "prompt_toolkit.styles.style_transformation.DummyStyleTransformation",
    "prompt_toolkit.styles.style_transformation.DynamicStyleTransformation",
    "prompt_toolkit.styles.style_transformation.ReverseStyleTransformation",
    "prompt_toolkit.styles.style_transformation.SetDefaultColorStyleTransformation",
    "prompt_toolkit.styles.style_transformation.SwapLightAndDarkStyleTransformation",
    "prompt_toolkit.styles.style_transformation._MergedStyleTransformation"
  ],
  "prompt_toolkit.validation.Validator.validate": [
    "prompt_toolkit.contrib.regular_languages.validation.GrammarValidator",
    "prompt_toolkit.validation.ConditionalValidator",
    "prompt_toolkit.validation.DummyValidator",
    "prompt_toolkit.validation.DynamicValidator",
    "prompt_toolkit.validation.ThreadedValidator",
    "prompt_toolkit.validation._ValidatorFromCallable"
  ],
  "prompt_toolkit.validation.Validator.validate_async": [
    "prompt_toolkit.validation.DynamicValidator",
    "prompt_toolkit.validation.ThreadedValidator"
  ],
  "prompt_toolkit.widgets.base._DialogList.__init__": [
    "prompt_toolkit.widgets.base.RadioList"
  ],
  "property.__delete__": [
    "werkzeug.utils.cached_property"
  ],
  "property.__get__": [
    "sqlalchemy.orm.decl_api.declared_attr",
    "sqlalchemy.util.langhelpers.classproperty",
    "werkzeug.utils.cached_property"
  ],
  "property.__init__": [
    "sqlalchemy.util.langhelpers.classproperty",
    "werkzeug.utils.cached_property"
  ],
  "property.__set__": [
    "werkzeug.utils.cached_property"
  ],
  "psutil.Process.__init__": [
    "psutil.Popen"
  ],
  "psutil._common.Error.__init__": [
    "psutil._common.AccessDenied",
    "psutil._common.NoSuchProcess",
    "psutil._common.TimeoutExpired"
  ],
  "psutil._common.NoSuchProcess.__init__": [
    "psutil._common.ZombieProcess"
  ],
  "psycopg2._psycopg.ReplicationConnection.__init__": [
    "psycopg2.extras.LogicalReplicationConnection",
    "psycopg2.extras.PhysicalReplicationConnection",
    "typeshed.typeshed.stubs.psycopg2.psycopg2.extras.LogicalReplicationConnection",
    "typeshed.typeshed.stubs.psycopg2.psycopg2.extras.PhysicalReplicationConnection"
  ],
  "psycopg2._psycopg.connection.__init__": [
    "psycopg2._psycopg.ReplicationConnection"
  ],
  "psycopg2._psycopg.connection.cursor": [
    "psycopg2.extras.DictConnection",
    "psycopg2.extras.LoggingConnection",
    "psycopg2.extras.NamedTupleConnection",
    "psycopg2.extras.RealDictConnection",
    "typeshed.typeshed.stubs.psycopg2.psycopg2.extras.DictConnection",
    "typeshed.typeshed.stubs.psycopg2.psycopg2.extras.LoggingConnection",
    "typeshed.typeshed.stubs.psycopg2.psycopg2.extras.NamedTupleConnection",
    "typeshed.typeshed.stubs.psycopg2.psycopg2.extras.RealDictConnection"
  ],
  "psycopg2._psycopg.cursor.__init__": [
    "psycopg2._psycopg.ReplicationCursor",
    "psycopg2.extras.DictCursorBase",
    "typeshed.typeshed.stubs.psycopg2.psycopg2.extras.DictCursorBase"
  ],
  "psycopg2._psycopg.cursor.__next__": [
    "psycopg2.extras.DictCursor",
    "psycopg2.extras.NamedTupleCursor",
    "psycopg2.extras.RealDictCursor",
    "typeshed.typeshed.stubs.psycopg2.psycopg2.extras.DictCursor",
    "typeshed.typeshed.stubs.psycopg2.psycopg2.extras.NamedTupleCursor",
    "typeshed.typeshed.stubs.psycopg2.psycopg2.extras.RealDictCursor"
  ],
  "psycopg2._psycopg.cursor.callproc": [
    "psycopg2.extras.DictCursor",
    "psycopg2.extras.LoggingCursor",
    "psycopg2.extras.NamedTupleCursor",
    "psycopg2.extras.RealDictCursor",
    "typeshed.typeshed.stubs.psycopg2.psycopg2.extras.DictCursor",
    "typeshed.typeshed.stubs.psycopg2.psycopg2.extras.LoggingCursor",
    "typeshed.typeshed.stubs.psycopg2.psycopg2.extras.NamedTupleCursor",
    "typeshed.typeshed.stubs.psycopg2.psycopg2.extras.RealDictCursor"
  ],
  "psycopg2._psycopg.cursor.execute": [
    "psycopg2.extras.DictCursor",
    "psycopg2.extras.LoggingCursor",
    "psycopg2.extras.NamedTupleCursor",
    "psycopg2.extras.RealDictCursor",
    "typeshed.typeshed.stubs.psycopg2.psycopg2.extras.DictCursor",
    "typeshed.typeshed.stubs.psycopg2.psycopg2.extras.LoggingCursor",
    "typeshed.typeshed.stubs.psycopg2.psycopg2.extras.NamedTupleCursor",
    "typeshed.typeshed.stubs.psycopg2.psycopg2.extras.RealDictCursor"
  ],
  "psycopg2._psycopg.cursor.executemany": [
    "psycopg2.extras.NamedTupleCursor",
    "typeshed.typeshed.stubs.psycopg2.psycopg2.extras.NamedTupleCursor"
  ],
  "psycopg2._psycopg.cursor.fetchall": [
    "psycopg2.extras.DictCursor",
    "psycopg2.extras.NamedTupleCursor",
    "psycopg2.extras.RealDictCursor",
    "typeshed.typeshed.stubs.psycopg2.psycopg2.extras.DictCursor",
    "typeshed.typeshed.stubs.psycopg2.psycopg2.extras.NamedTupleCursor",
    "typeshed.typeshed.stubs.psycopg2.psycopg2.extras.RealDictCursor"
  ],
  "psycopg2._psycopg.cursor.fetchmany": [
    "psycopg2.extras.DictCursor",
    "psycopg2.extras.NamedTupleCursor",
    "psycopg2.extras.RealDictCursor",
    "typeshed.typeshed.stubs.psycopg2.psycopg2.extras.DictCursor",
    "typeshed.typeshed.stubs.psycopg2.psycopg2.extras.NamedTupleCursor",
    "typeshed.typeshed.stubs.psycopg2.psycopg2.extras.RealDictCursor"
  ],
  "psycopg2._psycopg.cursor.fetchone": [
    "psycopg2.extras.DictCursor",
    "psycopg2.extras.NamedTupleCursor",
    "psycopg2.extras.RealDictCursor",
    "typeshed.typeshed.stubs.psycopg2.psycopg2.extras.DictCursor",
    "typeshed.typeshed.stubs.psycopg2.psycopg2.extras.NamedTupleCursor",
    "typeshed.typeshed.stubs.psycopg2.psycopg2.extras.RealDictCursor"
  ],
  "psycopg2._range.RangeAdapter.getquoted": [
    "psycopg2._range.NumberRangeAdapter"
  ],
  "psycopg2.extras.DictCursorBase.__init__": [
    "psycopg2.extras.DictCursor",
    "psycopg2.extras.RealDictCursor"
  ],
  "psycopg2.extras.LoggingConnection.cursor": [
    "psycopg2.extras.MinTimeLoggingConnection"
  ],
  "psycopg2.extras.LoggingConnection.filter": [
    "psycopg2.extras.MinTimeLoggingConnection"
  ],
  "psycopg2.extras.LoggingConnection.initialize": [
    "psycopg2.extras.MinTimeLoggingConnection"
  ],
  "psycopg2.extras.LoggingCursor.callproc": [
    "psycopg2.extras.MinTimeLoggingCursor"
  ],
  "psycopg2.extras.LoggingCursor.execute": [
    "psycopg2.extras.MinTimeLoggingCursor"
  ],
  "psycopg2.pool.AbstractConnectionPool.putconn": [
    "psycopg2.pool.ThreadedConnectionPool"
  ],
  "psycopg2.sql.Composable.__add__": [
    "psycopg2.sql.Composed"
  ],
  "psycopg2.sql.Composable.__init__": [
    "psycopg2.sql.Composed",
    "psycopg2.sql.Identifier",
    "psycopg2.sql.Placeholder",
    "psycopg2.sql.SQL"
  ],
  "psycopg2.sql.Composable.as_string": [
    "psycopg2.sql.Composed",
    "psycopg2.sql.Identifier",
    "psycopg2.sql.Literal",
    "psycopg2.sql.Placeholder",
    "psycopg2.sql.SQL"
  ],
  "pyasn1.codec.ber.decoder.AbstractDecoder.indefLenValueDecoder": [
    "pyasn1.codec.ber.decoder.AnyDecoder",
    "pyasn1.codec.ber.decoder.BitStringDecoder",
    "pyasn1.codec.ber.decoder.ChoiceDecoder",
    "pyasn1.codec.ber.decoder.ExplicitTagDecoder",
    "pyasn1.codec.ber.decoder.OctetStringDecoder",
    "pyasn1.codec.ber.decoder.UniversalConstructedTypeDecoder"
  ],
  "pyasn1.codec.ber.decoder.AbstractDecoder.valueDecoder": [
    "pyasn1.codec.ber.decoder.AnyDecoder",
    "pyasn1.codec.ber.decoder.BitStringDecoder",
    "pyasn1.codec.ber.decoder.ChoiceDecoder",
    "pyasn1.codec.ber.decoder.ExplicitTagDecoder",
    "pyasn1.codec.ber.decoder.IntegerDecoder",
    "pyasn1.codec.ber.decoder.NullDecoder",
    "pyasn1.codec.ber.decoder.ObjectIdentifierDecoder",
    "pyasn1.codec.ber.decoder.OctetStringDecoder",
    "pyasn1.codec.ber.decoder.RealDecoder",
    "pyasn1.codec.ber.decoder.UniversalConstructedTypeDecoder",
    "pyasn1.codec.cer.decoder.BooleanDecoder"
  ],
  "pyasn1.codec.ber.encoder.AbstractItemEncoder.encodeValue": [
    "ldap3.utils.asn1.LDAPBooleanEncoder",
    "pyasn1.codec.ber.encoder.BitStringEncoder",
    "pyasn1.codec.ber.encoder.BooleanEncoder",
    "pyasn1.codec.ber.encoder.ChoiceEncoder",
    "pyasn1.codec.ber.encoder.EndOfOctetsEncoder",
    "pyasn1.codec.ber.encoder.IntegerEncoder",
    "pyasn1.codec.ber.encoder.NullEncoder",
    "pyasn1.codec.ber.encoder.ObjectIdentifierEncoder",
    "pyasn1.codec.ber.encoder.OctetStringEncoder",
    "pyasn1.codec.ber.encoder.RealEncoder",
    "pyasn1.codec.ber.encoder.SequenceEncoder",
    "pyasn1.codec.ber.encoder.SequenceOfEncoder",
    "typeshed.typeshed.stubs.ldap3.ldap3.utils.asn1.LDAPBooleanEncoder"
  ],
  "pyasn1.codec.ber.encoder.IntegerEncoder.encodeValue": [
    "pyasn1.codec.cer.encoder.BooleanEncoder",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.codec.cer.encoder.BooleanEncoder"
  ],
  "pyasn1.codec.ber.encoder.OctetStringEncoder.encodeValue": [
    "pyasn1.codec.ber.encoder.AnyEncoder"
  ],
  "pyasn1.codec.ber.encoder.SequenceEncoder.encodeValue": [
    "pyasn1.codec.cer.encoder.SetEncoder",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.codec.cer.encoder.SetEncoder"
  ],
  "pyasn1.codec.ber.encoder.SequenceOfEncoder.encodeValue": [
    "pyasn1.codec.cer.encoder.SequenceOfEncoder",
    "pyasn1.codec.cer.encoder.SetOfEncoder",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.codec.cer.encoder.SequenceOfEncoder",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.codec.cer.encoder.SetOfEncoder"
  ],
  "pyasn1.codec.native.decoder.AbstractScalarDecoder.__call__": [
    "pyasn1.codec.native.decoder.BitStringDecoder"
  ],
  "pyasn1.codec.native.encoder.AbstractItemEncoder.encode": [
    "pyasn1.codec.native.encoder.AnyEncoder",
    "pyasn1.codec.native.encoder.BitStringEncoder",
    "pyasn1.codec.native.encoder.BooleanEncoder",
    "pyasn1.codec.native.encoder.IntegerEncoder",
    "pyasn1.codec.native.encoder.NullEncoder",
    "pyasn1.codec.native.encoder.ObjectIdentifierEncoder",
    "pyasn1.codec.native.encoder.OctetStringEncoder",
    "pyasn1.codec.native.encoder.RealEncoder",
    "pyasn1.codec.native.encoder.SequenceOfEncoder",
    "pyasn1.codec.native.encoder.SetEncoder",
    "pyasn1.codec.native.encoder.TextStringEncoder"
  ],
  "pyasn1.type.base.Asn1Type.__init__": [
    "pyasn1.type.base.ConstructedAsn1Type",
    "pyasn1.type.base.SimpleAsn1Type"
  ],
  "pyasn1.type.base.Asn1Type.effectiveTagSet": [
    "pyasn1.type.univ.Choice",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.univ.Choice"
  ],
  "pyasn1.type.base.Asn1Type.prettyPrint": [
    "pyasn1.type.base.SimpleAsn1Type",
    "pyasn1.type.univ.SequenceAndSetBase",
    "pyasn1.type.univ.SequenceOfAndSetOfBase",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.univ.SequenceAndSetBase",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.univ.SequenceOfAndSetOfBase"
  ],
  "pyasn1.type.base.Asn1Type.tagMap": [
    "pyasn1.type.univ.Any",
    "pyasn1.type.univ.Choice",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.univ.Any",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.univ.Choice"
  ],
  "pyasn1.type.base.ConstructedAsn1Type.__bool__": [
    "pyasn1.type.univ.Choice",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.univ.Choice"
  ],
  "pyasn1.type.base.ConstructedAsn1Type.__ge__": [
    "pyasn1.type.univ.Choice",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.univ.Choice"
  ],
  "pyasn1.type.base.ConstructedAsn1Type.__gt__": [
    "pyasn1.type.univ.Choice",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.univ.Choice"
  ],
  "pyasn1.type.base.ConstructedAsn1Type.__init__": [
    "pyasn1.type.univ.SequenceAndSetBase",
    "pyasn1.type.univ.SequenceOfAndSetOfBase",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.univ.SequenceAndSetBase",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.univ.SequenceOfAndSetOfBase"
  ],
  "pyasn1.type.base.ConstructedAsn1Type.__le__": [
    "pyasn1.type.univ.Choice",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.univ.Choice"
  ],
  "pyasn1.type.base.ConstructedAsn1Type.__lt__": [
    "pyasn1.type.univ.Choice",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.univ.Choice"
  ],
  "pyasn1.type.base.ConstructedAsn1Type.components": [
    "pyasn1.type.univ.SequenceAndSetBase",
    "pyasn1.type.univ.SequenceOfAndSetOfBase",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.univ.SequenceAndSetBase",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.univ.SequenceOfAndSetOfBase"
  ],
  "pyasn1.type.base.ConstructedAsn1Type.getComponentByPosition": [
    "pyasn1.type.univ.SequenceAndSetBase",
    "pyasn1.type.univ.SequenceOfAndSetOfBase",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.univ.SequenceAndSetBase",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.univ.SequenceOfAndSetOfBase"
  ],
  "pyasn1.type.base.ConstructedAsn1Type.getComponentType": [
    "pyasn1.type.univ.SequenceAndSetBase",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.univ.SequenceAndSetBase"
  ],
  "pyasn1.type.base.ConstructedAsn1Type.setComponentByPosition": [
    "pyasn1.type.univ.SequenceAndSetBase",
    "pyasn1.type.univ.SequenceOfAndSetOfBase",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.univ.SequenceAndSetBase",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.univ.SequenceOfAndSetOfBase"
  ],
  "pyasn1.type.base.ConstructedAsn1Type.setDefaultComponents": [
    "pyasn1.type.univ.SequenceAndSetBase",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.univ.SequenceAndSetBase"
  ],
  "pyasn1.type.base.SimpleAsn1Type.__bool__": [
    "pyasn1.type.univ.Real",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.univ.Real"
  ],
  "pyasn1.type.base.SimpleAsn1Type.__eq__": [
    "pyasn1.type.univ.BitString",
    "pyasn1.type.univ.Integer",
    "pyasn1.type.univ.Real",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.univ.BitString",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.univ.Integer",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.univ.Real"
  ],
  "pyasn1.type.base.SimpleAsn1Type.__ge__": [
    "pyasn1.type.univ.BitString",
    "pyasn1.type.univ.Integer",
    "pyasn1.type.univ.Real",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.univ.BitString",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.univ.Integer",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.univ.Real"
  ],
  "pyasn1.type.base.SimpleAsn1Type.__gt__": [
    "pyasn1.type.univ.BitString",
    "pyasn1.type.univ.Integer",
    "pyasn1.type.univ.Real",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.univ.BitString",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.univ.Integer",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.univ.Real"
  ],
  "pyasn1.type.base.SimpleAsn1Type.__init__": [
    "pyasn1.type.univ.BitString",
    "pyasn1.type.univ.Integer",
    "pyasn1.type.univ.OctetString",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.univ.BitString",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.univ.Integer",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.univ.OctetString"
  ],
  "pyasn1.type.base.SimpleAsn1Type.__le__": [
    "pyasn1.type.univ.BitString",
    "pyasn1.type.univ.Integer",
    "pyasn1.type.univ.Real",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.univ.BitString",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.univ.Integer",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.univ.Real"
  ],
  "pyasn1.type.base.SimpleAsn1Type.__lt__": [
    "pyasn1.type.univ.BitString",
    "pyasn1.type.univ.Integer",
    "pyasn1.type.univ.Real",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.univ.BitString",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.univ.Integer",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.univ.Real"
  ],
  "pyasn1.type.base.SimpleAsn1Type.__ne__": [
    "pyasn1.type.univ.BitString",
    "pyasn1.type.univ.Integer",
    "pyasn1.type.univ.Real",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.univ.BitString",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.univ.Integer",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.univ.Real"
  ],
  "pyasn1.type.base.SimpleAsn1Type.prettyIn": [
    "pyasn1.type.univ.BitString",
    "pyasn1.type.univ.Integer",
    "pyasn1.type.univ.ObjectIdentifier",
    "pyasn1.type.univ.OctetString",
    "pyasn1.type.univ.Real",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.univ.BitString",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.univ.Integer",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.univ.ObjectIdentifier",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.univ.OctetString",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.univ.Real"
  ],
  "pyasn1.type.base.SimpleAsn1Type.prettyOut": [
    "pyasn1.type.univ.Integer",
    "pyasn1.type.univ.ObjectIdentifier",
    "pyasn1.type.univ.OctetString",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.univ.Integer",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.univ.ObjectIdentifier",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.univ.OctetString"
  ],
  "pyasn1.type.base.SimpleAsn1Type.prettyPrint": [
    "pyasn1.type.univ.OctetString",
    "pyasn1.type.univ.Real",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.univ.OctetString",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.univ.Real"
  ],
  "pyasn1.type.univ.OctetString.__bytes__": [
    "pyasn1.type.char.AbstractCharacterString",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.char.AbstractCharacterString"
  ],
  "pyasn1.type.univ.OctetString.__reversed__": [
    "pyasn1.type.char.AbstractCharacterString",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.char.AbstractCharacterString"
  ],
  "pyasn1.type.univ.OctetString.asNumbers": [
    "pyasn1.type.char.AbstractCharacterString",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.char.AbstractCharacterString"
  ],
  "pyasn1.type.univ.OctetString.asOctets": [
    "pyasn1.type.char.AbstractCharacterString",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.char.AbstractCharacterString"
  ],
  "pyasn1.type.univ.OctetString.prettyIn": [
    "pyasn1.type.char.AbstractCharacterString",
    "pyasn1.type.univ.Null",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.char.AbstractCharacterString"
  ],
  "pyasn1.type.univ.OctetString.prettyOut": [
    "pyasn1.type.char.AbstractCharacterString",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.char.AbstractCharacterString"
  ],
  "pyasn1.type.univ.OctetString.prettyPrint": [
    "pyasn1.type.char.AbstractCharacterString",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.char.AbstractCharacterString"
  ],
  "pyasn1.type.univ.SequenceAndSetBase.__contains__": [
    "pyasn1.type.univ.Choice"
  ],
  "pyasn1.type.univ.SequenceAndSetBase.__iter__": [
    "pyasn1.type.univ.Choice"
  ],
  "pyasn1.type.univ.SequenceAndSetBase.__len__": [
    "pyasn1.type.univ.Choice"
  ],
  "pyasn1.type.univ.SequenceAndSetBase.clear": [
    "pyasn1.type.univ.Choice"
  ],
  "pyasn1.type.univ.SequenceAndSetBase.getComponentByPosition": [
    "pyasn1.type.univ.Choice"
  ],
  "pyasn1.type.univ.SequenceAndSetBase.isValue": [
    "pyasn1.type.univ.Choice"
  ],
  "pyasn1.type.univ.SequenceAndSetBase.items": [
    "pyasn1.type.univ.Choice"
  ],
  "pyasn1.type.univ.SequenceAndSetBase.keys": [
    "pyasn1.type.univ.Choice"
  ],
  "pyasn1.type.univ.SequenceAndSetBase.setComponentByPosition": [
    "pyasn1.type.univ.Choice"
  ],
  "pyasn1.type.univ.SequenceAndSetBase.values": [
    "pyasn1.type.univ.Choice"
  ],
  "pyasn1.type.univ.Set.getComponent": [
    "pyasn1.type.univ.Choice"
  ],
  "pydoc.Doc.docclass": [
    "pydoc.HTMLDoc",
    "pydoc.TextDoc"
  ],
  "pydoc.Doc.docdata": [
    "pydoc.HTMLDoc",
    "pydoc.TextDoc"
  ],
  "pydoc.Doc.docmodule": [
    "pydoc.HTMLDoc",
    "pydoc.TextDoc"
  ],
  "pydoc.Doc.docother": [
    "pydoc.HTMLDoc",
    "pydoc.TextDoc"
  ],
  "pydoc.Doc.docproperty": [
    "pydoc.HTMLDoc",
    "pydoc.TextDoc"
  ],
  "pydoc.Doc.docroutine": [
    "pydoc.HTMLDoc",
    "pydoc.TextDoc"
  ],
  "pydoc.HTMLDoc.docroutine": [
    "typeshed.typeshed.stdlib.xmlrpc.server.ServerHTMLDoc",
    "xmlrpc.server.ServerHTMLDoc"
  ],
  "pyflakes.checker.Binding.__init__": [
    "pyflakes.checker.ExportBinding"
  ],
  "pyflakes.checker.Binding.redefines": [
    "pyflakes.checker.Annotation"
  ],
  "pyflakes.checker.Importation.__init__": [
    "pyflakes.checker.ImportationFrom",
    "pyflakes.checker.StarImportation",
    "pyflakes.checker.SubmoduleImportation"
  ],
  "pyflakes.checker.ImportationFrom.__init__": [
    "pyflakes.checker.FutureImportation"
  ],
  "pyflakes.messages.Message.__init__": [
    "pyflakes.messages.DoctestSyntaxError",
    "pyflakes.messages.DuplicateArgument",
    "pyflakes.messages.ForwardAnnotationSyntaxError",
    "pyflakes.messages.FutureFeatureNotDefined",
    "pyflakes.messages.ImportShadowedByLoopVar",
    "pyflakes.messages.ImportStarNotPermitted",
    "pyflakes.messages.ImportStarUsage",
    "pyflakes.messages.ImportStarUsed",
    "pyflakes.messages.LateFutureImport",
    "pyflakes.messages.MultiValueRepeatedKeyLiteral",
    "pyflakes.messages.MultiValueRepeatedKeyVariable",
    "pyflakes.messages.PercentFormatExtraNamedArguments",
    "pyflakes.messages.PercentFormatInvalidFormat",
    "pyflakes.messages.PercentFormatMissingArgument",
    "pyflakes.messages.PercentFormatPositionalCountMismatch",
    "pyflakes.messages.PercentFormatUnsupportedFormatCharacter",
    "pyflakes.messages.RedefinedWhileUnused",
    "pyflakes.messages.StringDotFormatExtraNamedArguments",
    "pyflakes.messages.StringDotFormatExtraPositionalArguments",
    "pyflakes.messages.StringDotFormatInvalidFormat",
    "pyflakes.messages.StringDotFormatMissingArgument",
    "pyflakes.messages.UndefinedExport",
    "pyflakes.messages.UndefinedLocal",
    "pyflakes.messages.UndefinedName",
    "pyflakes.messages.UnusedAnnotation",
    "pyflakes.messages.UnusedImport",
    "pyflakes.messages.UnusedVariable"
  ],
  "pygments.filter.Filter.__init__": [
    "pygments.filter.FunctionFilter",
    "pygments.filters.CodeTagFilter",
    "pygments.filters.GobbleFilter",
    "pygments.filters.KeywordCaseFilter",
    "pygments.filters.NameHighlightFilter",
    "pygments.filters.RaiseOnErrorTokenFilter",
    "pygments.filters.SymbolFilter",
    "pygments.filters.TokenMergeFilter",
    "pygments.filters.VisibleWhitespaceFilter",
    "typeshed.typeshed.stubs.Pygments.pygments.filters.CodeTagFilter",
    "typeshed.typeshed.stubs.Pygments.pygments.filters.GobbleFilter",
    "typeshed.typeshed.stubs.Pygments.pygments.filters.KeywordCaseFilter",
    "typeshed.typeshed.stubs.Pygments.pygments.filters.NameHighlightFilter",
    "typeshed.typeshed.stubs.Pygments.pygments.filters.RaiseOnErrorTokenFilter",
    "typeshed.typeshed.stubs.Pygments.pygments.filters.SymbolFilter",
    "typeshed.typeshed.stubs.Pygments.pygments.filters.TokenMergeFilter",
    "typeshed.typeshed.stubs.Pygments.pygments.filters.VisibleWhitespaceFilter"
  ],
  "pygments.filter.Filter.filter": [
    "pygments.filter.FunctionFilter",
    "pygments.filters.CodeTagFilter",
    "pygments.filters.GobbleFilter",
    "pygments.filters.KeywordCaseFilter",
    "pygments.filters.NameHighlightFilter",
    "pygments.filters.RaiseOnErrorTokenFilter",
    "pygments.filters.SymbolFilter",
    "pygments.filters.TokenMergeFilter",
    "pygments.filters.VisibleWhitespaceFilter",
    "typeshed.typeshed.stubs.Pygments.pygments.filters.CodeTagFilter",
    "typeshed.typeshed.stubs.Pygments.pygments.filters.GobbleFilter",
    "typeshed.typeshed.stubs.Pygments.pygments.filters.KeywordCaseFilter",
    "typeshed.typeshed.stubs.Pygments.pygments.filters.NameHighlightFilter",
    "typeshed.typeshed.stubs.Pygments.pygments.filters.RaiseOnErrorTokenFilter",
    "typeshed.typeshed.stubs.Pygments.pygments.filters.SymbolFilter",
    "typeshed.typeshed.stubs.Pygments.pygments.filters.TokenMergeFilter",
    "typeshed.typeshed.stubs.Pygments.pygments.filters.VisibleWhitespaceFilter"
  ],
  "pygments.formatter.Formatter.format": [
    "pygments.formatters.img.ImageFormatter",
    "pygments.formatters.other.NullFormatter",
    "pygments.formatters.other.RawTokenFormatter",
    "pygments.formatters.other.TestcaseFormatter",
    "pygments.formatters.terminal.TerminalFormatter",
    "pygments.formatters.terminal256.Terminal256Formatter",
    "typeshed.typeshed.stubs.Pygments.pygments.formatters.img.ImageFormatter",
    "typeshed.typeshed.stubs.Pygments.pygments.formatters.other.NullFormatter",
    "typeshed.typeshed.stubs.Pygments.pygments.formatters.other.RawTokenFormatter",
    "typeshed.typeshed.stubs.Pygments.pygments.formatters.other.TestcaseFormatter",
    "typeshed.typeshed.stubs.Pygments.pygments.formatters.terminal.TerminalFormatter",
    "typeshed.typeshed.stubs.Pygments.pygments.formatters.terminal256.Terminal256Formatter"
  ],
  "pygments.formatter.Formatter.get_style_defs": [
    "pygments.formatters.html.HtmlFormatter",
    "pygments.formatters.img.ImageFormatter",
    "pygments.formatters.latex.LatexFormatter",
    "typeshed.typeshed.stubs.Pygments.pygments.formatters.html.HtmlFormatter",
    "typeshed.typeshed.stubs.Pygments.pygments.formatters.img.ImageFormatter",
    "typeshed.typeshed.stubs.Pygments.pygments.formatters.latex.LatexFormatter"
  ],
  "pygments.lexer.DelegatingLexer.__init__": [
    "IPython.lib.lexers.IPythonTracebackLexer"
  ],
  "pygments.lexer.Lexer.__init__": [
    "IPython.lib.lexers.IPyLexer",
    "IPython.lib.lexers.IPythonConsoleLexer",
    "pygments.formatters.latex.LatexEmbeddedLexer",
    "pygments.lexer.DelegatingLexer",
    "typeshed.typeshed.stubs.Pygments.pygments.formatters.latex.LatexEmbeddedLexer"
  ],
  "pygments.lexer.Lexer.get_tokens_unprocessed": [
    "IPython.lib.lexers.IPyLexer",
    "IPython.lib.lexers.IPythonConsoleLexer",
    "pygments.formatters.latex.LatexEmbeddedLexer",
    "pygments.lexer.DelegatingLexer",
    "pygments.lexer.RegexLexer",
    "typeshed.typeshed.stubs.Pygments.pygments.formatters.latex.LatexEmbeddedLexer"
  ],
  "pygments.lexer.RegexLexer.get_tokens_unprocessed": [
    "pygments.lexer.ExtendedRegexLexer",
    "pygments.lexer.ProfilingRegexLexer"
  ],
  "pygments.util.Future.get": [
    "pygments.lexer.words",
    "typeshed.typeshed.stubs.Pygments.pygments.lexer.words"
  ],
  "pymysql.connections.MysqlPacket.__init__": [
    "pymysql.connections.FieldDescriptorPacket"
  ],
  "pymysql.cursors.Cursor.fetchall": [
    "pymysql.cursors.SSCursor"
  ],
  "pymysql.cursors.Cursor.scroll": [
    "pymysql.cursors.SSCursor"
  ],
  "pymysql.cursors.SSCursor.fetchall_unbuffered": [
    "pymysql.cursors.SSDictCursor"
  ],
  "pynput._util.AbstractListener.__init__": [
    "pynput.keyboard._base.Listener",
    "pynput.mouse._base.Listener",
    "typeshed.typeshed.stubs.pynput.pynput.keyboard._base.Listener",
    "typeshed.typeshed.stubs.pynput.pynput.mouse._base.Listener"
  ],
  "pynput._util.Events.__init__": [
    "pynput.keyboard.Events",
    "pynput.mouse.Events",
    "typeshed.typeshed.stubs.pynput.pynput.keyboard.Events",
    "typeshed.typeshed.stubs.pynput.pynput.mouse.Events"
  ],
  "pynput._util.Events.__next__": [
    "pynput.keyboard.Events",
    "pynput.mouse.Events",
    "typeshed.typeshed.stubs.pynput.pynput.keyboard.Events",
    "typeshed.typeshed.stubs.pynput.pynput.mouse.Events"
  ],
  "pynput._util.Events.get": [
    "pynput.keyboard.Events",
    "pynput.mouse.Events",
    "typeshed.typeshed.stubs.pynput.pynput.keyboard.Events",
    "typeshed.typeshed.stubs.pynput.pynput.mouse.Events"
  ],
  "pynput.keyboard._base.Listener.__init__": [
    "pynput.keyboard.GlobalHotKeys"
  ],
  "pytz.tzinfo.BaseTzInfo.dst": [
    "pytz._UTCclass",
    "pytz.tzinfo.DstTzInfo",
    "pytz.tzinfo.StaticTzInfo"
  ],
  "pytz.tzinfo.BaseTzInfo.localize": [
    "pytz._UTCclass",
    "pytz.tzinfo.DstTzInfo",
    "pytz.tzinfo.StaticTzInfo"
  ],
  "pytz.tzinfo.BaseTzInfo.normalize": [
    "pytz._UTCclass",
    "pytz.tzinfo.DstTzInfo",
    "pytz.tzinfo.StaticTzInfo"
  ],
  "pytz.tzinfo.BaseTzInfo.tzname": [
    "pytz._UTCclass",
    "pytz.tzinfo.DstTzInfo",
    "pytz.tzinfo.StaticTzInfo"
  ],
  "pytz.tzinfo.BaseTzInfo.utcoffset": [
    "pytz._UTCclass",
    "pytz.tzinfo.DstTzInfo",
    "pytz.tzinfo.StaticTzInfo"
  ],
  "queue.Queue.__init__": [
    "multiprocessing.queues.Queue"
  ],
  "queue.Queue.get": [
    "multiprocessing.queues.Queue"
  ],
  "queue.Queue.get_nowait": [
    "multiprocessing.queues.Queue"
  ],
  "queue.Queue.put": [
    "multiprocessing.queues.Queue"
  ],
  "queue.Queue.put_nowait": [
    "multiprocessing.queues.Queue"
  ],
  "random.Random.getstate": [
    "random.SystemRandom"
  ],
  "random.Random.setstate": [
    "random.SystemRandom"
  ],
  "redis.asyncio.client.Redis.__aenter__": [
    "redis.asyncio.client.Pipeline"
  ],
  "redis.asyncio.client.Redis.__aexit__": [
    "redis.asyncio.client.Pipeline"
  ],
  "redis.asyncio.client.Redis.__await__": [
    "redis.asyncio.client.Pipeline"
  ],
  "redis.asyncio.client.Redis.__init__": [
    "redis.asyncio.client.Pipeline"
  ],
  "redis.asyncio.client.Redis.execute_command": [
    "redis.asyncio.client.Pipeline"
  ],
  "redis.asyncio.client.Redis.parse_response": [
    "redis.asyncio.client.Pipeline"
  ],
  "redis.asyncio.connection.BaseParser.__init__": [
    "redis.asyncio.connection.HiredisParser",
    "redis.asyncio.connection.PythonParser"
  ],
  "redis.asyncio.connection.BaseParser.on_connect": [
    "redis.asyncio.connection.HiredisParser",
    "redis.asyncio.connection.PythonParser"
  ],
  "redis.asyncio.connection.BaseParser.on_disconnect": [
    "redis.asyncio.connection.HiredisParser",
    "redis.asyncio.connection.PythonParser"
  ],
  "redis.asyncio.connection.BaseParser.read_response": [
    "redis.asyncio.connection.HiredisParser",
    "redis.asyncio.connection.PythonParser"
  ],
  "redis.asyncio.connection.Connection.__init__": [
    "redis.asyncio.connection.SSLConnection",
    "redis.asyncio.connection.UnixDomainSocketConnection",
    "redis.asyncio.sentinel.SentinelManagedConnection",
    "typeshed.typeshed.stubs.redis.redis.asyncio.sentinel.SentinelManagedConnection"
  ],
  "redis.asyncio.connection.Connection.connect": [
    "redis.asyncio.sentinel.SentinelManagedConnection",
    "typeshed.typeshed.stubs.redis.redis.asyncio.sentinel.SentinelManagedConnection"
  ],
  "redis.asyncio.connection.Connection.read_response": [
    "redis.asyncio.sentinel.SentinelManagedConnection",
    "typeshed.typeshed.stubs.redis.redis.asyncio.sentinel.SentinelManagedConnection"
  ],
  "redis.asyncio.connection.Connection.repr_pieces": [
    "redis.asyncio.connection.UnixDomainSocketConnection"
  ],
  "redis.asyncio.connection.ConnectionPool.__init__": [
    "redis.asyncio.connection.BlockingConnectionPool",
    "redis.asyncio.sentinel.SentinelConnectionPool",
    "typeshed.typeshed.stubs.redis.redis.asyncio.sentinel.SentinelConnectionPool"
  ],
  "redis.asyncio.connection.ConnectionPool.disconnect": [
    "redis.asyncio.connection.BlockingConnectionPool"
  ],
  "redis.asyncio.connection.ConnectionPool.get_connection": [
    "redis.asyncio.connection.BlockingConnectionPool"
  ],
  "redis.asyncio.connection.ConnectionPool.make_connection": [
    "redis.asyncio.connection.BlockingConnectionPool"
  ],
  "redis.asyncio.connection.ConnectionPool.owns_connection": [
    "redis.asyncio.sentinel.SentinelConnectionPool",
    "typeshed.typeshed.stubs.redis.redis.asyncio.sentinel.SentinelConnectionPool"
  ],
  "redis.asyncio.connection.ConnectionPool.release": [
    "redis.asyncio.connection.BlockingConnectionPool"
  ],
  "redis.asyncio.connection.ConnectionPool.reset": [
    "redis.asyncio.connection.BlockingConnectionPool",
    "redis.asyncio.sentinel.SentinelConnectionPool",
    "typeshed.typeshed.stubs.redis.redis.asyncio.sentinel.SentinelConnectionPool"
  ],
  "redis.backoff.AbstractBackoff.compute": [
    "redis.backoff.ConstantBackoff",
    "redis.backoff.DecorrelatedJitterBackoff",
    "redis.backoff.EqualJitterBackoff",
    "redis.backoff.ExponentialBackoff",
    "redis.backoff.FullJitterBackoff"
  ],
  "redis.backoff.ConstantBackoff.__init__": [
    "redis.backoff.NoBackoff"
  ],
  "redis.client.PubSub.__init__": [
    "redis.cluster.ClusterPubSub",
    "typeshed.typeshed.stubs.redis.redis.cluster.ClusterPubSub"
  ],
  "redis.client.PubSub.execute_command": [
    "redis.cluster.ClusterPubSub",
    "typeshed.typeshed.stubs.redis.redis.cluster.ClusterPubSub"
  ],
  "redis.client.Redis.__del__": [
    "redis.client.Pipeline"
  ],
  "redis.client.Redis.__enter__": [
    "redis.client.Pipeline"
  ],
  "redis.client.Redis.__exit__": [
    "redis.client.Pipeline"
  ],
  "redis.client.Redis.__init__": [
    "redis.client.Pipeline"
  ],
  "redis.client.Redis.client": [
    "redis.client.Pipeline"
  ],
  "redis.client.Redis.execute_command": [
    "redis.client.Pipeline"
  ],
  "redis.client.Redis.monitor": [
    "redis.client.Pipeline"
  ],
  "redis.client.Redis.parse_response": [
    "redis.client.Pipeline"
  ],
  "redis.client.Redis.pipeline": [
    "redis.client.Pipeline"
  ],
  "redis.client.Redis.set_response_callback": [
    "redis.client.Pipeline"
  ],
  "redis.cluster.RedisCluster.__init__": [
    "redis.cluster.ClusterPipeline"
  ],
  "redis.cluster.RedisCluster.execute_command": [
    "redis.cluster.ClusterPipeline"
  ],
  "redis.commands.cluster.ClusterMultiKeyCommands.delete": [
    "redis.cluster.ClusterPipeline",
    "typeshed.typeshed.stubs.redis.redis.cluster.ClusterPipeline"
  ],
  "redis.commands.core.ACLCommands.acl_cat": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.ACLCommands.acl_deluser": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.ACLCommands.acl_genpass": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.ACLCommands.acl_getuser": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.ACLCommands.acl_list": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.ACLCommands.acl_load": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.ACLCommands.acl_setuser": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.ACLCommands.acl_users": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.ACLCommands.acl_whoami": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.AsyncACLCommands.acl_cat": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncACLCommands.acl_deluser": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncACLCommands.acl_genpass": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncACLCommands.acl_getuser": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncACLCommands.acl_help": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncACLCommands.acl_list": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncACLCommands.acl_load": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncACLCommands.acl_log": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncACLCommands.acl_log_reset": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncACLCommands.acl_save": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncACLCommands.acl_setuser": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncACLCommands.acl_users": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncACLCommands.acl_whoami": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncBasicKeyCommands.append": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncBasicKeyCommands.bitcount": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncBasicKeyCommands.bitfield": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncBasicKeyCommands.bitop": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncBasicKeyCommands.bitpos": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncBasicKeyCommands.blmove": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncBasicKeyCommands.copy": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncBasicKeyCommands.decr": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncBasicKeyCommands.decrby": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncBasicKeyCommands.delete": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncBasicKeyCommands.dump": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncBasicKeyCommands.exists": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncBasicKeyCommands.expire": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncBasicKeyCommands.expireat": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncBasicKeyCommands.get": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncBasicKeyCommands.getbit": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncBasicKeyCommands.getdel": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncBasicKeyCommands.getex": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncBasicKeyCommands.getrange": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncBasicKeyCommands.getset": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncBasicKeyCommands.hrandfield": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncBasicKeyCommands.incr": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncBasicKeyCommands.incrby": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncBasicKeyCommands.incrbyfloat": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncBasicKeyCommands.keys": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncBasicKeyCommands.lmove": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncBasicKeyCommands.mget": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncBasicKeyCommands.move": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncBasicKeyCommands.mset": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncBasicKeyCommands.msetnx": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncBasicKeyCommands.persist": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncBasicKeyCommands.pexpire": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncBasicKeyCommands.pexpireat": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncBasicKeyCommands.psetex": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncBasicKeyCommands.pttl": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncBasicKeyCommands.randomkey": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncBasicKeyCommands.rename": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncBasicKeyCommands.renamenx": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncBasicKeyCommands.restore": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncBasicKeyCommands.set": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncBasicKeyCommands.setbit": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncBasicKeyCommands.setex": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncBasicKeyCommands.setnx": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncBasicKeyCommands.setrange": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncBasicKeyCommands.stralgo": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncBasicKeyCommands.strlen": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncBasicKeyCommands.substr": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncBasicKeyCommands.touch": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncBasicKeyCommands.ttl": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncBasicKeyCommands.type": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncBasicKeyCommands.unlink": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncBasicKeyCommands.unwatch": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncBasicKeyCommands.watch": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncClusterCommands.cluster": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncClusterCommands.readonly": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncClusterCommands.readwrite": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncGeoCommands.geoadd": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncGeoCommands.geodist": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncGeoCommands.geohash": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncGeoCommands.geopos": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncGeoCommands.georadius": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncGeoCommands.georadiusbymember": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncGeoCommands.geosearch": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncGeoCommands.geosearchstore": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncHashCommands.hdel": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncHashCommands.hexists": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncHashCommands.hget": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncHashCommands.hgetall": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncHashCommands.hincrby": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncHashCommands.hincrbyfloat": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncHashCommands.hkeys": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncHashCommands.hlen": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncHashCommands.hmget": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncHashCommands.hmset": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncHashCommands.hset": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncHashCommands.hsetnx": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncHashCommands.hstrlen": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncHashCommands.hvals": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncHyperlogCommands.pfadd": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncHyperlogCommands.pfcount": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncHyperlogCommands.pfmerge": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncListCommands.blpop": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncListCommands.brpop": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncListCommands.brpoplpush": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncListCommands.lindex": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncListCommands.linsert": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncListCommands.llen": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncListCommands.lpop": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncListCommands.lpos": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncListCommands.lpush": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncListCommands.lpushx": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncListCommands.lrange": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncListCommands.lrem": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncListCommands.lset": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncListCommands.ltrim": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncListCommands.rpop": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncListCommands.rpoplpush": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncListCommands.rpush": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncListCommands.rpushx": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncListCommands.sort": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncManagementCommands.bgrewriteaof": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncManagementCommands.bgsave": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncManagementCommands.client_getname": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncManagementCommands.client_getredir": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncManagementCommands.client_id": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncManagementCommands.client_info": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncManagementCommands.client_kill": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncManagementCommands.client_kill_filter": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncManagementCommands.client_list": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncManagementCommands.client_pause": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncManagementCommands.client_reply": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncManagementCommands.client_setname": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncManagementCommands.client_tracking": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncManagementCommands.client_tracking_off": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncManagementCommands.client_tracking_on": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncManagementCommands.client_trackinginfo": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncManagementCommands.client_unblock": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncManagementCommands.client_unpause": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncManagementCommands.command": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncManagementCommands.command_count": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncManagementCommands.command_info": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncManagementCommands.config_get": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncManagementCommands.config_resetstat": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncManagementCommands.config_rewrite": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncManagementCommands.config_set": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncManagementCommands.dbsize": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncManagementCommands.debug_object": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncManagementCommands.debug_segfault": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncManagementCommands.echo": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncManagementCommands.flushall": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncManagementCommands.flushdb": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncManagementCommands.info": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncManagementCommands.lastsave": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncManagementCommands.lolwut": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncManagementCommands.memory_doctor": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncManagementCommands.memory_help": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncManagementCommands.memory_malloc_stats": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncManagementCommands.memory_purge": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncManagementCommands.memory_stats": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncManagementCommands.memory_usage": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncManagementCommands.migrate": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncManagementCommands.object": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncManagementCommands.ping": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncManagementCommands.psync": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncManagementCommands.quit": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncManagementCommands.replicaof": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncManagementCommands.reset": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncManagementCommands.role": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncManagementCommands.save": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncManagementCommands.select": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncManagementCommands.shutdown": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncManagementCommands.slaveof": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncManagementCommands.slowlog_get": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncManagementCommands.slowlog_len": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncManagementCommands.slowlog_reset": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncManagementCommands.swapdb": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncManagementCommands.sync": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncManagementCommands.time": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncManagementCommands.wait": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncPubSubCommands.publish": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncPubSubCommands.pubsub_channels": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncPubSubCommands.pubsub_numpat": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncPubSubCommands.pubsub_numsub": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncScanCommands.hscan": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncScanCommands.scan": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncScanCommands.sscan": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncScanCommands.zscan": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncScriptCommands.eval": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncScriptCommands.evalsha": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncScriptCommands.register_script": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncScriptCommands.script_debug": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncScriptCommands.script_exists": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncScriptCommands.script_flush": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncScriptCommands.script_kill": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncScriptCommands.script_load": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncSetCommands.sadd": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncSetCommands.scard": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncSetCommands.sdiff": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncSetCommands.sdiffstore": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncSetCommands.sinter": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncSetCommands.sinterstore": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncSetCommands.sismember": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncSetCommands.smembers": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncSetCommands.smismember": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncSetCommands.smove": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncSetCommands.spop": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncSetCommands.srandmember": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncSetCommands.srem": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncSetCommands.sunion": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncSetCommands.sunionstore": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncSortedSetCommands.bzpopmax": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncSortedSetCommands.bzpopmin": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncSortedSetCommands.zadd": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncSortedSetCommands.zcard": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncSortedSetCommands.zcount": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncSortedSetCommands.zdiff": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncSortedSetCommands.zdiffstore": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncSortedSetCommands.zincrby": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncSortedSetCommands.zinter": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncSortedSetCommands.zinterstore": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncSortedSetCommands.zlexcount": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncSortedSetCommands.zmscore": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncSortedSetCommands.zpopmax": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncSortedSetCommands.zpopmin": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncSortedSetCommands.zrandmember": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncSortedSetCommands.zrange": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncSortedSetCommands.zrangebylex": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncSortedSetCommands.zrangebyscore": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncSortedSetCommands.zrangestore": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncSortedSetCommands.zrank": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncSortedSetCommands.zrem": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncSortedSetCommands.zremrangebylex": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncSortedSetCommands.zremrangebyrank": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncSortedSetCommands.zremrangebyscore": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncSortedSetCommands.zrevrange": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncSortedSetCommands.zrevrangebylex": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncSortedSetCommands.zrevrangebyscore": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncSortedSetCommands.zrevrank": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncSortedSetCommands.zscore": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncSortedSetCommands.zunion": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncSortedSetCommands.zunionstore": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncStreamCommands.xack": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncStreamCommands.xadd": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncStreamCommands.xautoclaim": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncStreamCommands.xclaim": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncStreamCommands.xdel": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncStreamCommands.xgroup_create": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncStreamCommands.xgroup_createconsumer": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncStreamCommands.xgroup_delconsumer": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncStreamCommands.xgroup_destroy": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncStreamCommands.xgroup_setid": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncStreamCommands.xinfo_consumers": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncStreamCommands.xinfo_groups": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncStreamCommands.xinfo_stream": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncStreamCommands.xlen": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncStreamCommands.xpending": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncStreamCommands.xpending_range": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncStreamCommands.xrange": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncStreamCommands.xread": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncStreamCommands.xreadgroup": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncStreamCommands.xrevrange": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.AsyncStreamCommands.xtrim": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.BasicKeyCommands.__contains__": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.BasicKeyCommands.__delitem__": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.BasicKeyCommands.__getitem__": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.BasicKeyCommands.__setitem__": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.BasicKeyCommands.append": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.BasicKeyCommands.bitcount": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.BasicKeyCommands.bitop": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.BasicKeyCommands.bitpos": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.BasicKeyCommands.blmove": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.BasicKeyCommands.decr": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.BasicKeyCommands.delete": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.BasicKeyCommands.dump": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.BasicKeyCommands.exists": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.BasicKeyCommands.expire": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.BasicKeyCommands.expireat": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.BasicKeyCommands.get": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.BasicKeyCommands.getbit": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.BasicKeyCommands.getrange": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.BasicKeyCommands.getset": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.BasicKeyCommands.incr": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.BasicKeyCommands.incrby": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.BasicKeyCommands.incrbyfloat": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.BasicKeyCommands.keys": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.BasicKeyCommands.lmove": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.BasicKeyCommands.mget": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.BasicKeyCommands.move": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.BasicKeyCommands.mset": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.BasicKeyCommands.msetnx": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.BasicKeyCommands.persist": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.BasicKeyCommands.pexpire": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.BasicKeyCommands.pexpireat": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.BasicKeyCommands.psetex": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.BasicKeyCommands.pttl": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.BasicKeyCommands.randomkey": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.BasicKeyCommands.rename": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.BasicKeyCommands.renamenx": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.BasicKeyCommands.restore": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.BasicKeyCommands.set": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.BasicKeyCommands.setbit": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.BasicKeyCommands.setex": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.BasicKeyCommands.setnx": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.BasicKeyCommands.setrange": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.BasicKeyCommands.stralgo": [
    "redis.commands.cluster.ClusterDataAccessCommands"
  ],
  "redis.commands.core.BasicKeyCommands.strlen": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.BasicKeyCommands.substr": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.BasicKeyCommands.ttl": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.BasicKeyCommands.type": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.BasicKeyCommands.unlink": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.BasicKeyCommands.unwatch": [
    "redis.client.Pipeline",
    "redis.cluster.ClusterPipeline",
    "typeshed.typeshed.stubs.redis.redis.cluster.ClusterPipeline"
  ],
  "redis.commands.core.BasicKeyCommands.watch": [
    "redis.client.Pipeline",
    "redis.cluster.ClusterPipeline",
    "typeshed.typeshed.stubs.redis.redis.cluster.ClusterPipeline"
  ],
  "redis.commands.core.ClusterCommands.cluster": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.ClusterCommands.readonly": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.ClusterCommands.readwrite": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.HashCommands.hdel": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.HashCommands.hexists": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.HashCommands.hget": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.HashCommands.hgetall": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.HashCommands.hincrby": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.HashCommands.hincrbyfloat": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.HashCommands.hkeys": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.HashCommands.hlen": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.HashCommands.hmget": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.HashCommands.hmset": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.HashCommands.hset": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.HashCommands.hsetnx": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.HashCommands.hvals": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.HyperlogCommands.pfadd": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.HyperlogCommands.pfcount": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.HyperlogCommands.pfmerge": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.ListCommands.blpop": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.ListCommands.brpop": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.ListCommands.brpoplpush": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.ListCommands.lindex": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.ListCommands.linsert": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.ListCommands.llen": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.ListCommands.lpop": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.ListCommands.lpush": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.ListCommands.lpushx": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.ListCommands.lrange": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.ListCommands.lrem": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.ListCommands.lset": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.ListCommands.ltrim": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.ListCommands.rpop": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.ListCommands.rpoplpush": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.ListCommands.rpush": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.ListCommands.rpushx": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.ListCommands.sort": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.ManagementCommands.bgrewriteaof": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.ManagementCommands.bgsave": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.ManagementCommands.client_getname": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.ManagementCommands.client_id": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.ManagementCommands.client_kill": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.ManagementCommands.client_list": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.ManagementCommands.client_setname": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.ManagementCommands.config_get": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.ManagementCommands.config_resetstat": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.ManagementCommands.config_rewrite": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.ManagementCommands.config_set": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.ManagementCommands.dbsize": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.ManagementCommands.debug_object": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.ManagementCommands.echo": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.ManagementCommands.flushall": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.ManagementCommands.flushdb": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.ManagementCommands.info": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.ManagementCommands.lastsave": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.ManagementCommands.object": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.ManagementCommands.ping": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.ManagementCommands.replicaof": [
    "redis.commands.cluster.ClusterManagementCommands"
  ],
  "redis.commands.core.ManagementCommands.reset": [
    "redis.client.Pipeline",
    "redis.cluster.ClusterPipeline",
    "typeshed.typeshed.stubs.redis.redis.cluster.ClusterPipeline"
  ],
  "redis.commands.core.ManagementCommands.save": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.ManagementCommands.slaveof": [
    "redis.client.Pipeline",
    "redis.commands.cluster.ClusterManagementCommands"
  ],
  "redis.commands.core.ManagementCommands.slowlog_get": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.ManagementCommands.slowlog_len": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.ManagementCommands.slowlog_reset": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.ManagementCommands.swapdb": [
    "redis.commands.cluster.ClusterManagementCommands"
  ],
  "redis.commands.core.ManagementCommands.time": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.ModuleCommands.command_getkeys": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.ModuleCommands.command_info": [
    "redis.commands.core.AsyncModuleCommands"
  ],
  "redis.commands.core.ModuleCommands.module_list": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.ModuleCommands.module_load": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.ModuleCommands.module_unload": [
    "redis.asyncio.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "redis.commands.core.PubSubCommands.publish": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.PubSubCommands.pubsub_channels": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.PubSubCommands.pubsub_numpat": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.PubSubCommands.pubsub_numsub": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.ScanCommands.hscan": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.ScanCommands.hscan_iter": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.ScanCommands.scan": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.ScanCommands.scan_iter": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.ScanCommands.sscan": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.ScanCommands.sscan_iter": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.ScanCommands.zscan_iter": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.ScriptCommands.eval": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.ScriptCommands.evalsha": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.ScriptCommands.script_exists": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.ScriptCommands.script_flush": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.ScriptCommands.script_kill": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.ScriptCommands.script_load": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.SetCommands.sadd": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.SetCommands.scard": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.SetCommands.sdiff": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.SetCommands.sdiffstore": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.SetCommands.sinter": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.SetCommands.sinterstore": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.SetCommands.sismember": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.SetCommands.smembers": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.SetCommands.smove": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.SetCommands.spop": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.SetCommands.srandmember": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.SetCommands.srem": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.SetCommands.sunion": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.SetCommands.sunionstore": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.SortedSetCommands.bzpopmax": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.SortedSetCommands.bzpopmin": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.SortedSetCommands.zadd": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.SortedSetCommands.zcard": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.SortedSetCommands.zcount": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.SortedSetCommands.zincrby": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.SortedSetCommands.zinterstore": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.SortedSetCommands.zlexcount": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.SortedSetCommands.zpopmax": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.SortedSetCommands.zpopmin": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.SortedSetCommands.zrange": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.SortedSetCommands.zrangebylex": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.SortedSetCommands.zrangebyscore": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.SortedSetCommands.zrank": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.SortedSetCommands.zrem": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.SortedSetCommands.zremrangebylex": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.SortedSetCommands.zremrangebyrank": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.SortedSetCommands.zremrangebyscore": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.SortedSetCommands.zrevrange": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.SortedSetCommands.zrevrangebylex": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.SortedSetCommands.zrevrangebyscore": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.SortedSetCommands.zrevrank": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.SortedSetCommands.zscore": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.SortedSetCommands.zunionstore": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.StreamCommands.xack": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.StreamCommands.xadd": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.StreamCommands.xclaim": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.StreamCommands.xdel": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.StreamCommands.xgroup_create": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.StreamCommands.xgroup_delconsumer": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.StreamCommands.xgroup_destroy": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.StreamCommands.xgroup_setid": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.StreamCommands.xinfo_consumers": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.StreamCommands.xinfo_groups": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.StreamCommands.xinfo_stream": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.StreamCommands.xlen": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.StreamCommands.xpending": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.StreamCommands.xpending_range": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.StreamCommands.xrange": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.StreamCommands.xread": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.StreamCommands.xreadgroup": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.StreamCommands.xrevrange": [
    "redis.client.Pipeline"
  ],
  "redis.commands.core.StreamCommands.xtrim": [
    "redis.client.Pipeline"
  ],
  "redis.commands.search.query.Filter.__init__": [
    "redis.commands.search.query.GeoFilter",
    "redis.commands.search.query.NumericFilter"
  ],
  "redis.commands.sentinel.SentinelCommands.sentinel": [
    "redis.commands.sentinel.AsyncSentinelCommands"
  ],
  "redis.commands.sentinel.SentinelCommands.sentinel_get_master_addr_by_name": [
    "redis.client.Pipeline"
  ],
  "redis.commands.sentinel.SentinelCommands.sentinel_master": [
    "redis.client.Pipeline"
  ],
  "redis.commands.sentinel.SentinelCommands.sentinel_masters": [
    "redis.client.Pipeline"
  ],
  "redis.commands.sentinel.SentinelCommands.sentinel_monitor": [
    "redis.client.Pipeline"
  ],
  "redis.commands.sentinel.SentinelCommands.sentinel_remove": [
    "redis.client.Pipeline"
  ],
  "redis.commands.sentinel.SentinelCommands.sentinel_sentinels": [
    "redis.client.Pipeline"
  ],
  "redis.commands.sentinel.SentinelCommands.sentinel_set": [
    "redis.client.Pipeline"
  ],
  "redis.commands.sentinel.SentinelCommands.sentinel_slaves": [
    "redis.client.Pipeline"
  ],
  "redis.connection.Connection.__init__": [
    "redis.connection.SSLConnection",
    "redis.connection.UnixDomainSocketConnection",
    "redis.sentinel.SentinelManagedConnection",
    "typeshed.typeshed.stubs.redis.redis.sentinel.SentinelManagedConnection"
  ],
  "redis.connection.Connection.connect": [
    "redis.sentinel.SentinelManagedConnection",
    "typeshed.typeshed.stubs.redis.redis.sentinel.SentinelManagedConnection"
  ],
  "redis.connection.Connection.read_response": [
    "redis.sentinel.SentinelManagedConnection",
    "typeshed.typeshed.stubs.redis.redis.sentinel.SentinelManagedConnection"
  ],
  "redis.connection.ConnectionPool.__init__": [
    "redis.connection.BlockingConnectionPool",
    "redis.sentinel.SentinelConnectionPool",
    "typeshed.typeshed.stubs.redis.redis.sentinel.SentinelConnectionPool"
  ],
  "redis.connection.ConnectionPool.disconnect": [
    "redis.connection.BlockingConnectionPool"
  ],
  "redis.connection.ConnectionPool.owns_connection": [
    "redis.sentinel.SentinelConnectionPool",
    "typeshed.typeshed.stubs.redis.redis.sentinel.SentinelConnectionPool"
  ],
  "redis.connection.ConnectionPool.reset": [
    "redis.sentinel.SentinelConnectionPool",
    "typeshed.typeshed.stubs.redis.redis.sentinel.SentinelConnectionPool"
  ],
  "redis.credentials.CredentialProvider.get_credentials": [
    "redis.credentials.UsernamePasswordCredentialProvider"
  ],
  "reprlib.Repr.repr": [
    "pydoc.HTMLRepr",
    "typeshed.typeshed.stdlib.pydoc.HTMLRepr"
  ],
  "reprlib.Repr.repr1": [
    "pydoc.HTMLRepr",
    "pydoc.TextRepr",
    "typeshed.typeshed.stdlib.pydoc.HTMLRepr",
    "typeshed.typeshed.stdlib.pydoc.TextRepr"
  ],
  "reprlib.Repr.repr_instance": [
    "pydoc.HTMLRepr",
    "pydoc.TextRepr",
    "typeshed.typeshed.stdlib.pydoc.HTMLRepr",
    "typeshed.typeshed.stdlib.pydoc.TextRepr"
  ],
  "reprlib.Repr.repr_str": [
    "pydoc.HTMLRepr",
    "pydoc.TextRepr",
    "typeshed.typeshed.stdlib.pydoc.HTMLRepr",
    "typeshed.typeshed.stdlib.pydoc.TextRepr"
  ],
  "requests.adapters.BaseAdapter.__init__": [
    "requests.adapters.HTTPAdapter"
  ],
  "requests.adapters.BaseAdapter.close": [
    "requests.adapters.HTTPAdapter"
  ],
  "requests.adapters.BaseAdapter.send": [
    "requests.adapters.HTTPAdapter"
  ],
  "requests.auth.AuthBase.__call__": [
    "caldav.requests.HTTPBearerAuth",
    "requests.auth.HTTPBasicAuth",
    "requests.auth.HTTPDigestAuth",
    "typeshed.typeshed.stubs.caldav.caldav.requests.HTTPBearerAuth"
  ],
  "requests.auth.HTTPBasicAuth.__call__": [
    "requests.auth.HTTPProxyAuth"
  ],
  "requests.sessions.Session.__init__": [
    "typeshed.typeshed.stubs.requests-oauthlib.requests_oauthlib.oauth1_session.OAuth1Session",
    "typeshed.typeshed.stubs.requests-oauthlib.requests_oauthlib.oauth2_session.OAuth2Session"
  ],
  "requests.sessions.Session.request": [
    "typeshed.typeshed.stubs.requests-oauthlib.requests_oauthlib.oauth2_session.OAuth2Session"
  ],
  "requests.sessions.SessionRedirectMixin.rebuild_auth": [
    "typeshed.typeshed.stubs.requests-oauthlib.requests_oauthlib.oauth1_session.OAuth1Session"
  ],
  "selectors.BaseSelector.close": [
    "prompt_toolkit.eventloop.inputhook.InputHookSelector"
  ],
  "selectors.BaseSelector.get_map": [
    "prompt_toolkit.eventloop.inputhook.InputHookSelector",
    "selectors.DefaultSelector",
    "selectors.DevpollSelector",
    "selectors.EpollSelector",
    "selectors.KqueueSelector",
    "selectors.PollSelector",
    "selectors.SelectSelector"
  ],
  "selectors.BaseSelector.modify": [
    "prompt_toolkit.eventloop.inputhook.InputHookSelector"
  ],
  "selectors.BaseSelector.register": [
    "prompt_toolkit.eventloop.inputhook.InputHookSelector",
    "selectors.DefaultSelector",
    "selectors.DevpollSelector",
    "selectors.EpollSelector",
    "selectors.KqueueSelector",
    "selectors.PollSelector",
    "selectors.SelectSelector"
  ],
  "selectors.BaseSelector.select": [
    "prompt_toolkit.eventloop.inputhook.InputHookSelector",
    "selectors.DefaultSelector",
    "selectors.DevpollSelector",
    "selectors.EpollSelector",
    "selectors.KqueueSelector",
    "selectors.PollSelector",
    "selectors.SelectSelector"
  ],
  "selectors.BaseSelector.unregister": [
    "prompt_toolkit.eventloop.inputhook.InputHookSelector",
    "selectors.DefaultSelector",
    "selectors.DevpollSelector",
    "selectors.EpollSelector",
    "selectors.KqueueSelector",
    "selectors.PollSelector",
    "selectors.SelectSelector"
  ],
  "serial.serialposix.Serial.cancel_read": [
    "serial.serialposix.VTIMESerial"
  ],
  "serial.serialutil.SerialBase.read": [
    "typeshed.typeshed.stubs.pyserial.serial.rfc2217.Serial",
    "typeshed.typeshed.stubs.pyserial.serial.serialcli.Serial",
    "typeshed.typeshed.stubs.pyserial.serial.serialjava.Serial",
    "typeshed.typeshed.stubs.pyserial.serial.serialposix.Serial",
    "typeshed.typeshed.stubs.pyserial.serial.serialwin32.Serial",
    "typeshed.typeshed.stubs.pyserial.serial.urlhandler.protocol_cp2110.Serial",
    "typeshed.typeshed.stubs.pyserial.serial.urlhandler.protocol_loop.Serial",
    "typeshed.typeshed.stubs.pyserial.serial.urlhandler.protocol_socket.Serial"
  ],
  "serial.serialutil.SerialBase.send_break": [
    "serial.serialposix.Serial",
    "typeshed.typeshed.stubs.pyserial.serial.serialposix.Serial"
  ],
  "serial.tools.list_ports_common.ListPortInfo.__init__": [
    "serial.tools.list_ports_linux.SysFS",
    "typeshed.typeshed.stubs.pyserial.serial.tools.list_ports_linux.SysFS"
  ],
  "set.__contains__": [
    "werkzeug.datastructures.structures.HeaderSet"
  ],
  "set.__iand__": [
    "sqlalchemy.ext.mutable.MutableSet"
  ],
  "set.__init__": [
    "sqlalchemy.util._collections.OrderedSet",
    "werkzeug.datastructures.structures.HeaderSet"
  ],
  "set.__ior__": [
    "sqlalchemy.ext.mutable.MutableSet"
  ],
  "set.__isub__": [
    "sqlalchemy.ext.mutable.MutableSet"
  ],
  "set.__iter__": [
    "sqlalchemy.testing.util.RandomSet",
    "sqlalchemy.util._collections.OrderedSet",
    "werkzeug.datastructures.structures.HeaderSet"
  ],
  "set.__ixor__": [
    "sqlalchemy.ext.mutable.MutableSet"
  ],
  "set.__len__": [
    "werkzeug.datastructures.structures.HeaderSet"
  ],
  "set.add": [
    "sqlalchemy.ext.mutable.MutableSet",
    "sqlalchemy.util._collections.OrderedSet",
    "werkzeug.datastructures.structures.HeaderSet"
  ],
  "set.copy": [
    "sqlalchemy.testing.util.RandomSet"
  ],
  "set.difference": [
    "sqlalchemy.testing.util.RandomSet",
    "sqlalchemy.util._collections.OrderedSet"
  ],
  "set.difference_update": [
    "sqlalchemy.ext.mutable.MutableSet",
    "sqlalchemy.util._collections.OrderedSet"
  ],
  "set.discard": [
    "sqlalchemy.ext.mutable.MutableSet",
    "sqlalchemy.util._collections.OrderedSet",
    "werkzeug.datastructures.structures.HeaderSet"
  ],
  "set.intersection": [
    "sqlalchemy.testing.util.RandomSet",
    "sqlalchemy.util._collections.OrderedSet"
  ],
  "set.intersection_update": [
    "sqlalchemy.ext.mutable.MutableSet",
    "sqlalchemy.util._collections.OrderedSet"
  ],
  "set.remove": [
    "sqlalchemy.ext.mutable.MutableSet",
    "sqlalchemy.util._collections.OrderedSet",
    "werkzeug.datastructures.structures.HeaderSet"
  ],
  "set.symmetric_difference": [
    "sqlalchemy.util._collections.OrderedSet"
  ],
  "set.symmetric_difference_update": [
    "sqlalchemy.ext.mutable.MutableSet",
    "sqlalchemy.util._collections.OrderedSet"
  ],
  "set.union": [
    "sqlalchemy.testing.util.RandomSet",
    "sqlalchemy.util._collections.OrderedSet"
  ],
  "set.update": [
    "sqlalchemy.ext.mutable.MutableSet",
    "sqlalchemy.util._collections.OrderedSet",
    "werkzeug.datastructures.structures.HeaderSet"
  ],
  "setuptools.Command.finalize_options": [
    "setuptools.command.easy_install.easy_install",
    "setuptools.command.egg_info.egg_info",
    "setuptools.command.install_egg_info.install_egg_info",
    "setuptools.command.rotate.rotate",
    "setuptools.command.setopt.option_base",
    "setuptools.command.test.test",
    "typeshed.typeshed.stubs.libsass.sassutils.distutils.build_sass"
  ],
  "setuptools.Command.initialize_options": [
    "setuptools.command.easy_install.easy_install",
    "setuptools.command.egg_info.egg_info",
    "setuptools.command.install_egg_info.install_egg_info",
    "setuptools.command.rotate.rotate",
    "setuptools.command.setopt.option_base",
    "setuptools.command.test.test",
    "typeshed.typeshed.stubs.libsass.sassutils.distutils.build_sass"
  ],
  "setuptools.Command.run": [
    "setuptools.command.easy_install.easy_install",
    "setuptools.command.egg_info.egg_info",
    "setuptools.command.install_egg_info.install_egg_info",
    "setuptools.command.rotate.rotate",
    "setuptools.command.setopt.option_base",
    "setuptools.command.test.test",
    "typeshed.typeshed.stubs.libsass.sassutils.distutils.build_sass"
  ],
  "setuptools._distutils.cmd.Command.__init__": [
    "setuptools.Command"
  ],
  "setuptools._distutils.cmd.Command.copy_tree": [
    "setuptools.command.install_lib.install_lib"
  ],
  "setuptools._distutils.cmd.Command.ensure_string_list": [
    "setuptools.Command"
  ],
  "setuptools._distutils.cmd.Command.finalize_options": [
    "setuptools.Command",
    "setuptools._distutils.command.build_clib.build_clib",
    "setuptools._distutils.command.build_ext.build_ext",
    "setuptools._distutils.command.build_py.build_py",
    "setuptools._distutils.command.install.install",
    "setuptools._distutils.command.install_lib.install_lib",
    "setuptools._distutils.command.install_scripts.install_scripts",
    "setuptools._distutils.command.sdist.sdist",
    "setuptools._distutils.config.PyPIRCCommand",
    "setuptools.command.dist_info.dist_info"
  ],
  "setuptools._distutils.cmd.Command.initialize_options": [
    "setuptools.Command",
    "setuptools._distutils.command.build_clib.build_clib",
    "setuptools._distutils.command.build_ext.build_ext",
    "setuptools._distutils.command.build_py.build_py",
    "setuptools._distutils.command.install.install",
    "setuptools._distutils.command.install_lib.install_lib",
    "setuptools._distutils.command.install_scripts.install_scripts",
    "setuptools._distutils.command.sdist.sdist",
    "setuptools._distutils.config.PyPIRCCommand",
    "setuptools.command.dist_info.dist_info"
  ],
  "setuptools._distutils.cmd.Command.reinitialize_command": [
    "setuptools.Command"
  ],
  "setuptools._distutils.cmd.Command.run": [
    "setuptools.Command",
    "setuptools._distutils.command.build_clib.build_clib",
    "setuptools._distutils.command.build_ext.build_ext",
    "setuptools._distutils.command.build_py.build_py",
    "setuptools._distutils.command.install.install",
    "setuptools._distutils.command.install_lib.install_lib",
    "setuptools._distutils.command.install_scripts.install_scripts",
    "setuptools._distutils.command.sdist.sdist",
    "setuptools._distutils.config.PyPIRCCommand",
    "setuptools.command.dist_info.dist_info"
  ],
  "setuptools._distutils.cmd.Command.warn": [
    "setuptools.command.egg_info.manifest_maker"
  ],
  "setuptools._distutils.command.build_clib.build_clib.build_libraries": [
    "setuptools.command.build_clib.build_clib"
  ],
  "setuptools._distutils.command.build_ext.build_ext.build_extension": [
    "setuptools.command.build_ext.build_ext"
  ],
  "setuptools._distutils.command.build_ext.build_ext.finalize_options": [
    "setuptools.command.build_ext.build_ext"
  ],
  "setuptools._distutils.command.build_ext.build_ext.get_export_symbols": [
    "setuptools.command.build_ext.build_ext"
  ],
  "setuptools._distutils.command.build_ext.build_ext.get_ext_filename": [
    "setuptools.command.build_ext.build_ext"
  ],
  "setuptools._distutils.command.build_ext.build_ext.get_outputs": [
    "setuptools.command.build_ext.build_ext"
  ],
  "setuptools._distutils.command.build_ext.build_ext.initialize_options": [
    "setuptools.command.build_ext.build_ext"
  ],
  "setuptools._distutils.command.build_ext.build_ext.run": [
    "setuptools.command.build_ext.build_ext"
  ],
  "setuptools._distutils.command.build_py.build_py.build_module": [
    "setuptools.command.build_py.build_py"
  ],
  "setuptools._distutils.command.build_py.build_py.build_package_data": [
    "setuptools.command.build_py.build_py"
  ],
  "setuptools._distutils.command.build_py.build_py.check_package": [
    "setuptools.command.build_py.build_py"
  ],
  "setuptools._distutils.command.build_py.build_py.finalize_options": [
    "setuptools.command.build_py.build_py"
  ],
  "setuptools._distutils.command.build_py.build_py.find_data_files": [
    "setuptools.command.build_py.build_py"
  ],
  "setuptools._distutils.command.build_py.build_py.get_data_files": [
    "setuptools.command.build_py.build_py"
  ],
  "setuptools._distutils.command.build_py.build_py.get_package_dir": [
    "setuptools.command.build_py.build_py"
  ],
  "setuptools._distutils.command.build_py.build_py.initialize_options": [
    "setuptools.command.build_py.build_py"
  ],
  "setuptools._distutils.command.build_py.build_py.run": [
    "setuptools.command.build_py.build_py"
  ],
  "setuptools._distutils.command.install.install.finalize_options": [
    "setuptools.command.install.install"
  ],
  "setuptools._distutils.command.install.install.handle_extra_path": [
    "setuptools.command.install.install"
  ],
  "setuptools._distutils.command.install.install.initialize_options": [
    "setuptools.command.install.install"
  ],
  "setuptools._distutils.command.install.install.run": [
    "setuptools.command.install.install"
  ],
  "setuptools._distutils.command.install_lib.install_lib.get_outputs": [
    "setuptools.command.install_lib.install_lib"
  ],
  "setuptools._distutils.command.install_lib.install_lib.run": [
    "setuptools.command.install_lib.install_lib"
  ],
  "setuptools._distutils.command.install_scripts.install_scripts.initialize_options": [
    "setuptools.command.install_scripts.install_scripts"
  ],
  "setuptools._distutils.command.install_scripts.install_scripts.run": [
    "setuptools.command.install_scripts.install_scripts"
  ],
  "setuptools._distutils.command.register.register.run": [
    "setuptools.command.register.register"
  ],
  "setuptools._distutils.command.sdist.sdist.add_defaults": [
    "setuptools.command.egg_info.manifest_maker"
  ],
  "setuptools._distutils.command.sdist.sdist.finalize_options": [
    "setuptools.command.egg_info.manifest_maker"
  ],
  "setuptools._distutils.command.sdist.sdist.initialize_options": [
    "setuptools.command.sdist.sdist"
  ],
  "setuptools._distutils.command.sdist.sdist.make_distribution": [
    "setuptools.command.sdist.sdist"
  ],
  "setuptools._distutils.command.sdist.sdist.make_release_tree": [
    "setuptools.command.sdist.sdist"
  ],
  "setuptools._distutils.command.sdist.sdist.prune_file_list": [
    "setuptools.command.egg_info.manifest_maker"
  ],
  "setuptools._distutils.command.sdist.sdist.read_manifest": [
    "setuptools.command.sdist.sdist"
  ],
  "setuptools._distutils.command.sdist.sdist.run": [
    "setuptools.command.sdist.sdist"
  ],
  "setuptools._distutils.command.sdist.sdist.write_manifest": [
    "setuptools.command.egg_info.manifest_maker"
  ],
  "setuptools._distutils.command.upload.upload.finalize_options": [
    "setuptools.command.upload_docs.upload_docs"
  ],
  "setuptools._distutils.command.upload.upload.initialize_options": [
    "setuptools.command.upload_docs.upload_docs"
  ],
  "setuptools._distutils.command.upload.upload.run": [
    "setuptools.command.upload.upload"
  ],
  "setuptools._distutils.command.upload.upload.upload_file": [
    "setuptools.command.upload_docs.upload_docs"
  ],
  "setuptools._distutils.config.PyPIRCCommand.finalize_options": [
    "setuptools._distutils.command.register.register",
    "setuptools._distutils.command.upload.upload"
  ],
  "setuptools._distutils.config.PyPIRCCommand.initialize_options": [
    "setuptools._distutils.command.register.register",
    "setuptools._distutils.command.upload.upload"
  ],
  "setuptools._distutils.config.PyPIRCCommand.run": [
    "setuptools._distutils.command.register.register",
    "setuptools._distutils.command.upload.upload"
  ],
  "setuptools._distutils.dist.Distribution.__init__": [
    "setuptools.dist.Distribution"
  ],
  "setuptools._distutils.dist.Distribution.parse_config_files": [
    "setuptools.dist.Distribution"
  ],
  "setuptools._distutils.extension.Extension.__init__": [
    "setuptools.extension.Extension"
  ],
  "setuptools._distutils.filelist.FileList.__init__": [
    "setuptools.command.egg_info.FileList"
  ],
  "setuptools._distutils.filelist.FileList.append": [
    "setuptools.command.egg_info.FileList"
  ],
  "setuptools._distutils.filelist.FileList.extend": [
    "setuptools.command.egg_info.FileList"
  ],
  "setuptools._distutils.filelist.FileList.process_template_line": [
    "setuptools.command.egg_info.FileList"
  ],
  "setuptools.build_meta._BuildMetaBackend.run_setup": [
    "setuptools.build_meta._BuildMetaLegacyBackend"
  ],
  "setuptools.command.easy_install.ScriptWriter.best": [
    "setuptools.command.easy_install.WindowsScriptWriter"
  ],
  "setuptools.command.easy_install.ScriptWriter.get_writer": [
    "setuptools.command.easy_install.WindowsScriptWriter"
  ],
  "setuptools.command.easy_install.easy_install.finalize_options": [
    "setuptools.command.develop.develop"
  ],
  "setuptools.command.easy_install.easy_install.initialize_options": [
    "setuptools.command.develop.develop"
  ],
  "setuptools.command.easy_install.easy_install.install_egg_scripts": [
    "setuptools.command.develop.develop"
  ],
  "setuptools.command.easy_install.easy_install.install_wrapper_scripts": [
    "setuptools.command.develop.develop"
  ],
  "setuptools.command.easy_install.easy_install.run": [
    "setuptools.command.develop.develop"
  ],
  "setuptools.command.sdist.sdist.initialize_options": [
    "setuptools.command.egg_info.manifest_maker"
  ],
  "setuptools.command.sdist.sdist.run": [
    "setuptools.command.egg_info.manifest_maker"
  ],
  "setuptools.command.setopt.option_base.finalize_options": [
    "setuptools.command.alias.alias",
    "setuptools.command.setopt.setopt"
  ],
  "setuptools.command.setopt.option_base.initialize_options": [
    "setuptools.command.alias.alias",
    "setuptools.command.setopt.setopt"
  ],
  "setuptools.command.setopt.option_base.run": [
    "setuptools.command.alias.alias",
    "setuptools.command.saveopts.saveopts",
    "setuptools.command.setopt.setopt"
  ],
  "setuptools.command.upload.upload.run": [
    "setuptools.command.upload_docs.upload_docs"
  ],
  "setuptools.dist.Distribution.fetch_build_eggs": [
    "setuptools.build_meta.Distribution"
  ],
  "setuptools.package_index.ContentChecker.feed": [
    "setuptools.package_index.HashChecker"
  ],
  "setuptools.package_index.ContentChecker.is_valid": [
    "setuptools.package_index.HashChecker"
  ],
  "setuptools.package_index.ContentChecker.report": [
    "setuptools.package_index.HashChecker"
  ],
  "shelve.Shelf.__init__": [
    "shelve.DbfilenameShelf"
  ],
  "six._LazyDescr.__init__": [
    "six.MovedAttribute",
    "six.MovedModule"
  ],
  "smtpd.PureProxy.process_message": [
    "smtpd.MailmanProxy"
  ],
  "smtpd.SMTPServer.process_message": [
    "smtpd.PureProxy"
  ],
  "smtplib.SMTP.__init__": [
    "smtplib.LMTP",
    "smtplib.SMTP_SSL"
  ],
  "smtplib.SMTPResponseException.__init__": [
    "smtplib.SMTPSenderRefused"
  ],
  "socket.socket.__init__": [
    "httplib2.socks.socksocket",
    "ssl.SSLSocket",
    "typeshed.typeshed.stdlib.ssl.SSLSocket",
    "typeshed.typeshed.stubs.httplib2.httplib2.socks.socksocket"
  ],
  "socket.socket.accept": [
    "ssl.SSLSocket",
    "typeshed.typeshed.stdlib.ssl.SSLSocket"
  ],
  "socketserver.BaseRequestHandler.handle": [
    "django.core.servers.basehttp.WSGIRequestHandler",
    "werkzeug.serving.WSGIRequestHandler"
  ],
  "socketserver.BaseServer.__init__": [
    "socketserver.TCPServer",
    "socketserver.UnixDatagramServer",
    "socketserver.UnixStreamServer"
  ],
  "socketserver.BaseServer.get_request": [
    "socketserver.TCPServer"
  ],
  "socketserver.BaseServer.handle_error": [
    "django.core.servers.basehttp.WSGIServer",
    "werkzeug.serving.BaseWSGIServer"
  ],
  "socketserver.BaseServer.serve_forever": [
    "werkzeug.serving.BaseWSGIServer"
  ],
  "socketserver.TCPServer.__init__": [
    "typeshed.typeshed.stdlib.xmlrpc.server.SimpleXMLRPCServer",
    "xmlrpc.server.SimpleXMLRPCServer"
  ],
  "socketserver.TCPServer.get_request": [
    "socketserver.UDPServer"
  ],
  "sqlalchemy.connectors.pyodbc.PyODBCConnector.__init__": [
    "sqlalchemy.dialects.mssql.pyodbc.MSDialect_pyodbc"
  ],
  "sqlalchemy.connectors.pyodbc.PyODBCConnector.dbapi": [
    "sqlalchemy.dialects.sybase.pyodbc.SybaseDialect_pyodbc"
  ],
  "sqlalchemy.connectors.pyodbc.PyODBCConnector.is_disconnect": [
    "sqlalchemy.dialects.mssql.pyodbc.MSDialect_pyodbc"
  ],
  "sqlalchemy.cresultproxy.BaseRow.__iter__": [
    "sqlalchemy.engine.row.RowMapping"
  ],
  "sqlalchemy.cresultproxy.BaseRow.__len__": [
    "sqlalchemy.engine.row.RowMapping"
  ],
  "sqlalchemy.dialects.firebird.base.FBDialect.__init__": [
    "sqlalchemy.dialects.firebird.kinterbasdb.FBDialect_kinterbasdb"
  ],
  "sqlalchemy.dialects.firebird.base._StringType.__init__": [
    "sqlalchemy.dialects.firebird.base.CHAR",
    "sqlalchemy.dialects.firebird.base.VARCHAR"
  ],
  "sqlalchemy.dialects.firebird.kinterbasdb.FBDialect_kinterbasdb.__init__": [
    "sqlalchemy.dialects.firebird.fdb.FBDialect_fdb"
  ],
  "sqlalchemy.dialects.firebird.kinterbasdb.FBDialect_kinterbasdb.create_connect_args": [
    "sqlalchemy.dialects.firebird.fdb.FBDialect_fdb"
  ],
  "sqlalchemy.dialects.firebird.kinterbasdb.FBDialect_kinterbasdb.dbapi": [
    "sqlalchemy.dialects.firebird.fdb.FBDialect_fdb"
  ],
  "sqlalchemy.dialects.mssql.base.MSDialect.on_connect": [
    "sqlalchemy.dialects.mssql.pyodbc.MSDialect_pyodbc"
  ],
  "sqlalchemy.dialects.mssql.base.MSDialect.set_isolation_level": [
    "sqlalchemy.dialects.mssql.pymssql.MSDialect_pymssql"
  ],
  "sqlalchemy.dialects.mssql.base.MSExecutionContext.post_exec": [
    "sqlalchemy.dialects.mssql.pyodbc.MSExecutionContext_pyodbc"
  ],
  "sqlalchemy.dialects.mssql.base.MSExecutionContext.pre_exec": [
    "sqlalchemy.dialects.mssql.pyodbc.MSExecutionContext_pyodbc"
  ],
  "sqlalchemy.dialects.mssql.base.MSIdentifierPreparer.__init__": [
    "sqlalchemy.dialects.mssql.pymssql.MSIdentifierPreparer_pymssql"
  ],
  "sqlalchemy.dialects.mssql.base.TIME.bind_processor": [
    "sqlalchemy.dialects.mssql.mxodbc._MSTime_mxodbc"
  ],
  "sqlalchemy.dialects.mssql.base._MSDate.bind_processor": [
    "sqlalchemy.dialects.mssql.mxodbc._MSDate_mxodbc"
  ],
  "sqlalchemy.dialects.mysql.aiomysql.AsyncAdapt_aiomysql_cursor.__init__": [
    "sqlalchemy.dialects.mysql.aiomysql.AsyncAdapt_aiomysql_ss_cursor"
  ],
  "sqlalchemy.dialects.mysql.aiomysql.AsyncAdapt_aiomysql_cursor.close": [
    "sqlalchemy.dialects.mysql.aiomysql.AsyncAdapt_aiomysql_ss_cursor"
  ],
  "sqlalchemy.dialects.mysql.aiomysql.AsyncAdapt_aiomysql_cursor.fetchall": [
    "sqlalchemy.dialects.mysql.aiomysql.AsyncAdapt_aiomysql_ss_cursor"
  ],
  "sqlalchemy.dialects.mysql.aiomysql.AsyncAdapt_aiomysql_cursor.fetchmany": [
    "sqlalchemy.dialects.mysql.aiomysql.AsyncAdapt_aiomysql_ss_cursor"
  ],
  "sqlalchemy.dialects.mysql.aiomysql.AsyncAdapt_aiomysql_cursor.fetchone": [
    "sqlalchemy.dialects.mysql.aiomysql.AsyncAdapt_aiomysql_ss_cursor"
  ],
  "sqlalchemy.dialects.mysql.asyncmy.AsyncAdapt_asyncmy_cursor.__init__": [
    "sqlalchemy.dialects.mysql.asyncmy.AsyncAdapt_asyncmy_ss_cursor"
  ],
  "sqlalchemy.dialects.mysql.asyncmy.AsyncAdapt_asyncmy_cursor.close": [
    "sqlalchemy.dialects.mysql.asyncmy.AsyncAdapt_asyncmy_ss_cursor"
  ],
  "sqlalchemy.dialects.mysql.asyncmy.AsyncAdapt_asyncmy_cursor.fetchall": [
    "sqlalchemy.dialects.mysql.asyncmy.AsyncAdapt_asyncmy_ss_cursor"
  ],
  "sqlalchemy.dialects.mysql.asyncmy.AsyncAdapt_asyncmy_cursor.fetchmany": [
    "sqlalchemy.dialects.mysql.asyncmy.AsyncAdapt_asyncmy_ss_cursor"
  ],
  "sqlalchemy.dialects.mysql.asyncmy.AsyncAdapt_asyncmy_cursor.fetchone": [
    "sqlalchemy.dialects.mysql.asyncmy.AsyncAdapt_asyncmy_ss_cursor"
  ],
  "sqlalchemy.dialects.mysql.base.MySQLDialect.__init__": [
    "sqlalchemy.dialects.mysql.mariadbconnector.MySQLDialect_mariadbconnector",
    "sqlalchemy.dialects.mysql.mysqlconnector.MySQLDialect_mysqlconnector",
    "sqlalchemy.dialects.mysql.mysqldb.MySQLDialect_mysqldb"
  ],
  "sqlalchemy.dialects.mysql.base.MySQLDialect.do_begin_twophase": [
    "sqlalchemy.dialects.mysql.mariadbconnector.MySQLDialect_mariadbconnector",
    "sqlalchemy.dialects.mysql.oursql.MySQLDialect_oursql"
  ],
  "sqlalchemy.dialects.mysql.base.MySQLDialect.do_commit_twophase": [
    "sqlalchemy.dialects.mysql.mariadbconnector.MySQLDialect_mariadbconnector",
    "sqlalchemy.dialects.mysql.oursql.MySQLDialect_oursql"
  ],
  "sqlalchemy.dialects.mysql.base.MySQLDialect.do_prepare_twophase": [
    "sqlalchemy.dialects.mysql.mariadbconnector.MySQLDialect_mariadbconnector",
    "sqlalchemy.dialects.mysql.oursql.MySQLDialect_oursql"
  ],
  "sqlalchemy.dialects.mysql.base.MySQLDialect.do_rollback_twophase": [
    "sqlalchemy.dialects.mysql.mariadbconnector.MySQLDialect_mariadbconnector",
    "sqlalchemy.dialects.mysql.oursql.MySQLDialect_oursql"
  ],
  "sqlalchemy.dialects.mysql.base.MySQLDialect.get_columns": [
    "sqlalchemy.dialects.mysql.oursql.MySQLDialect_oursql"
  ],
  "sqlalchemy.dialects.mysql.base.MySQLDialect.get_schema_names": [
    "sqlalchemy.dialects.mysql.oursql.MySQLDialect_oursql"
  ],
  "sqlalchemy.dialects.mysql.base.MySQLDialect.get_table_names": [
    "sqlalchemy.dialects.mysql.oursql.MySQLDialect_oursql"
  ],
  "sqlalchemy.dialects.mysql.base.MySQLDialect.get_table_options": [
    "sqlalchemy.dialects.mysql.oursql.MySQLDialect_oursql"
  ],
  "sqlalchemy.dialects.mysql.base.MySQLDialect.get_view_names": [
    "sqlalchemy.dialects.mysql.oursql.MySQLDialect_oursql"
  ],
  "sqlalchemy.dialects.mysql.base.MySQLDialect.has_table": [
    "sqlalchemy.dialects.mysql.oursql.MySQLDialect_oursql"
  ],
  "sqlalchemy.dialects.mysql.base.MySQLDialect.initialize": [
    "sqlalchemy.dialects.mysql.oursql.MySQLDialect_oursql"
  ],
  "sqlalchemy.dialects.mysql.base.MySQLDialect.is_disconnect": [
    "sqlalchemy.dialects.mysql.cymysql.MySQLDialect_cymysql",
    "sqlalchemy.dialects.mysql.mariadbconnector.MySQLDialect_mariadbconnector",
    "sqlalchemy.dialects.mysql.mysqlconnector.MySQLDialect_mysqlconnector",
    "sqlalchemy.dialects.mysql.oursql.MySQLDialect_oursql",
    "sqlalchemy.dialects.mysql.pymysql.MySQLDialect_pymysql"
  ],
  "sqlalchemy.dialects.mysql.base.MySQLDialect.on_connect": [
    "sqlalchemy.dialects.mysql.mysqldb.MySQLDialect_mysqldb",
    "sqlalchemy.dialects.mysql.pyodbc.MySQLDialect_pyodbc"
  ],
  "sqlalchemy.dialects.mysql.base.MySQLExecutionContext.create_server_side_cursor": [
    "sqlalchemy.dialects.mysql.mariadbconnector.MySQLExecutionContext_mariadbconnector"
  ],
  "sqlalchemy.dialects.mysql.mysqldb.MySQLDialect_mysqldb.create_connect_args": [
    "sqlalchemy.dialects.mysql.pymysql.MySQLDialect_pymysql"
  ],
  "sqlalchemy.dialects.mysql.mysqldb.MySQLDialect_mysqldb.dbapi": [
    "sqlalchemy.dialects.mysql.cymysql.MySQLDialect_cymysql",
    "sqlalchemy.dialects.mysql.pymysql.MySQLDialect_pymysql"
  ],
  "sqlalchemy.dialects.mysql.mysqldb.MySQLDialect_mysqldb.supports_server_side_cursors": [
    "sqlalchemy.dialects.mysql.pymysql.MySQLDialect_pymysql"
  ],
  "sqlalchemy.dialects.mysql.pymysql.MySQLDialect_pymysql.create_connect_args": [
    "sqlalchemy.dialects.mysql.aiomysql.MySQLDialect_aiomysql",
    "sqlalchemy.dialects.mysql.asyncmy.MySQLDialect_asyncmy"
  ],
  "sqlalchemy.dialects.mysql.pymysql.MySQLDialect_pymysql.dbapi": [
    "sqlalchemy.dialects.mysql.aiomysql.MySQLDialect_aiomysql",
    "sqlalchemy.dialects.mysql.asyncmy.MySQLDialect_asyncmy"
  ],
  "sqlalchemy.dialects.mysql.pymysql.MySQLDialect_pymysql.is_disconnect": [
    "sqlalchemy.dialects.mysql.aiomysql.MySQLDialect_aiomysql",
    "sqlalchemy.dialects.mysql.asyncmy.MySQLDialect_asyncmy"
  ],
  "sqlalchemy.dialects.mysql.types.BIT.result_processor": [
    "sqlalchemy.dialects.mysql.cymysql._cymysqlBIT",
    "sqlalchemy.dialects.mysql.mysqlconnector._myconnpyBIT",
    "sqlalchemy.dialects.mysql.oursql._oursqlBIT"
  ],
  "sqlalchemy.dialects.mysql.types.TIME.result_processor": [
    "sqlalchemy.dialects.mysql.pyodbc._pyodbcTIME"
  ],
  "sqlalchemy.dialects.mysql.types._FloatType.__init__": [
    "sqlalchemy.dialects.mysql.types.DOUBLE",
    "sqlalchemy.dialects.mysql.types.FLOAT",
    "sqlalchemy.dialects.mysql.types.REAL"
  ],
  "sqlalchemy.dialects.mysql.types._IntegerType.__init__": [
    "sqlalchemy.dialects.mysql.types.BIGINT",
    "sqlalchemy.dialects.mysql.types.INTEGER",
    "sqlalchemy.dialects.mysql.types.MEDIUMINT",
    "sqlalchemy.dialects.mysql.types.SMALLINT",
    "sqlalchemy.dialects.mysql.types.TINYINT"
  ],
  "sqlalchemy.dialects.mysql.types._NumericType.__init__": [
    "sqlalchemy.dialects.mysql.types.DECIMAL",
    "sqlalchemy.dialects.mysql.types.NUMERIC",
    "sqlalchemy.dialects.mysql.types._FloatType",
    "sqlalchemy.dialects.mysql.types._IntegerType"
  ],
  "sqlalchemy.dialects.mysql.types._StringType.__init__": [
    "sqlalchemy.dialects.mysql.enumerated.SET",
    "sqlalchemy.dialects.mysql.types.CHAR",
    "sqlalchemy.dialects.mysql.types.LONGTEXT",
    "sqlalchemy.dialects.mysql.types.MEDIUMTEXT",
    "sqlalchemy.dialects.mysql.types.NCHAR",
    "sqlalchemy.dialects.mysql.types.NVARCHAR",
    "sqlalchemy.dialects.mysql.types.TEXT",
    "sqlalchemy.dialects.mysql.types.TINYTEXT",
    "sqlalchemy.dialects.mysql.types.VARCHAR"
  ],
  "sqlalchemy.dialects.oracle.base.OracleDialect.__init__": [
    "sqlalchemy.dialects.oracle.cx_oracle.OracleDialect_cx_oracle"
  ],
  "sqlalchemy.dialects.oracle.base.OracleDialect.get_isolation_level": [
    "sqlalchemy.dialects.oracle.cx_oracle.OracleDialect_cx_oracle"
  ],
  "sqlalchemy.dialects.oracle.base.OracleDialect.initialize": [
    "sqlalchemy.dialects.oracle.cx_oracle.OracleDialect_cx_oracle"
  ],
  "sqlalchemy.dialects.oracle.base.OracleDialect.set_isolation_level": [
    "sqlalchemy.dialects.oracle.cx_oracle.OracleDialect_cx_oracle"
  ],
  "sqlalchemy.dialects.postgresql.asyncpg.AsyncAdapt_asyncpg_cursor.__init__": [
    "sqlalchemy.dialects.postgresql.asyncpg.AsyncAdapt_asyncpg_ss_cursor"
  ],
  "sqlalchemy.dialects.postgresql.asyncpg.AsyncAdapt_asyncpg_cursor.close": [
    "sqlalchemy.dialects.postgresql.asyncpg.AsyncAdapt_asyncpg_ss_cursor"
  ],
  "sqlalchemy.dialects.postgresql.asyncpg.AsyncAdapt_asyncpg_cursor.executemany": [
    "sqlalchemy.dialects.postgresql.asyncpg.AsyncAdapt_asyncpg_ss_cursor"
  ],
  "sqlalchemy.dialects.postgresql.asyncpg.AsyncAdapt_asyncpg_cursor.fetchall": [
    "sqlalchemy.dialects.postgresql.asyncpg.AsyncAdapt_asyncpg_ss_cursor"
  ],
  "sqlalchemy.dialects.postgresql.asyncpg.AsyncAdapt_asyncpg_cursor.fetchmany": [
    "sqlalchemy.dialects.postgresql.asyncpg.AsyncAdapt_asyncpg_ss_cursor"
  ],
  "sqlalchemy.dialects.postgresql.asyncpg.AsyncAdapt_asyncpg_cursor.fetchone": [
    "sqlalchemy.dialects.postgresql.asyncpg.AsyncAdapt_asyncpg_ss_cursor"
  ],
  "sqlalchemy.dialects.postgresql.asyncpg.AsyncpgNumeric.get_dbapi_type": [
    "sqlalchemy.dialects.postgresql.asyncpg.AsyncpgFloat"
  ],
  "sqlalchemy.dialects.postgresql.base.INTERVAL.adapt_emulated_to_native": [
    "sqlalchemy.dialects.postgresql.asyncpg.AsyncPgInterval",
    "sqlalchemy.dialects.postgresql.pg8000._PGInterval"
  ],
  "sqlalchemy.dialects.postgresql.base.PGDialect.__init__": [
    "sqlalchemy.dialects.postgresql.pg8000.PGDialect_pg8000",
    "sqlalchemy.dialects.postgresql.psycopg2.PGDialect_psycopg2",
    "sqlalchemy.dialects.postgresql.pygresql.PGDialect_pygresql"
  ],
  "sqlalchemy.dialects.postgresql.base.PGDialect.do_begin_twophase": [
    "sqlalchemy.dialects.postgresql.pg8000.PGDialect_pg8000"
  ],
  "sqlalchemy.dialects.postgresql.base.PGDialect.do_commit_twophase": [
    "sqlalchemy.dialects.postgresql.pg8000.PGDialect_pg8000"
  ],
  "sqlalchemy.dialects.postgresql.base.PGDialect.do_prepare_twophase": [
    "sqlalchemy.dialects.postgresql.pg8000.PGDialect_pg8000"
  ],
  "sqlalchemy.dialects.postgresql.base.PGDialect.do_recover_twophase": [
    "sqlalchemy.dialects.postgresql.pg8000.PGDialect_pg8000"
  ],
  "sqlalchemy.dialects.postgresql.base.PGDialect.do_rollback_twophase": [
    "sqlalchemy.dialects.postgresql.pg8000.PGDialect_pg8000"
  ],
  "sqlalchemy.dialects.postgresql.base.PGDialect.get_deferrable": [
    "sqlalchemy.dialects.postgresql.asyncpg.PGDialect_asyncpg",
    "sqlalchemy.dialects.postgresql.pg8000.PGDialect_pg8000",
    "sqlalchemy.dialects.postgresql.psycopg2.PGDialect_psycopg2"
  ],
  "sqlalchemy.dialects.postgresql.base.PGDialect.get_readonly": [
    "sqlalchemy.dialects.postgresql.asyncpg.PGDialect_asyncpg",
    "sqlalchemy.dialects.postgresql.pg8000.PGDialect_pg8000",
    "sqlalchemy.dialects.postgresql.psycopg2.PGDialect_psycopg2"
  ],
  "sqlalchemy.dialects.postgresql.base.PGDialect.initialize": [
    "sqlalchemy.dialects.postgresql.psycopg2.PGDialect_psycopg2"
  ],
  "sqlalchemy.dialects.postgresql.base.PGDialect.on_connect": [
    "sqlalchemy.dialects.postgresql.asyncpg.PGDialect_asyncpg",
    "sqlalchemy.dialects.postgresql.pg8000.PGDialect_pg8000",
    "sqlalchemy.dialects.postgresql.psycopg2.PGDialect_psycopg2"
  ],
  "sqlalchemy.dialects.postgresql.base.PGDialect.set_deferrable": [
    "sqlalchemy.dialects.postgresql.asyncpg.PGDialect_asyncpg",
    "sqlalchemy.dialects.postgresql.pg8000.PGDialect_pg8000",
    "sqlalchemy.dialects.postgresql.psycopg2.PGDialect_psycopg2"
  ],
  "sqlalchemy.dialects.postgresql.base.PGDialect.set_isolation_level": [
    "sqlalchemy.dialects.postgresql.asyncpg.PGDialect_asyncpg",
    "sqlalchemy.dialects.postgresql.pg8000.PGDialect_pg8000",
    "sqlalchemy.dialects.postgresql.psycopg2.PGDialect_psycopg2"
  ],
  "sqlalchemy.dialects.postgresql.base.PGDialect.set_readonly": [
    "sqlalchemy.dialects.postgresql.asyncpg.PGDialect_asyncpg",
    "sqlalchemy.dialects.postgresql.pg8000.PGDialect_pg8000",
    "sqlalchemy.dialects.postgresql.psycopg2.PGDialect_psycopg2"
  ],
  "sqlalchemy.dialects.postgresql.base.UUID.bind_processor": [
    "sqlalchemy.dialects.postgresql.asyncpg.AsyncpgUUID",
    "sqlalchemy.dialects.postgresql.pg8000._PGUUID",
    "sqlalchemy.dialects.postgresql.psycopg2._PGUUID",
    "sqlalchemy.dialects.postgresql.pygresql._PGUUID"
  ],
  "sqlalchemy.dialects.postgresql.base.UUID.result_processor": [
    "sqlalchemy.dialects.postgresql.asyncpg.AsyncpgUUID",
    "sqlalchemy.dialects.postgresql.pg8000._PGUUID",
    "sqlalchemy.dialects.postgresql.psycopg2._PGUUID",
    "sqlalchemy.dialects.postgresql.pygresql._PGUUID"
  ],
  "sqlalchemy.dialects.postgresql.dml.OnConflictClause.__init__": [
    "sqlalchemy.dialects.postgresql.dml.OnConflictDoUpdate"
  ],
  "sqlalchemy.dialects.postgresql.json.JSONPathType.bind_processor": [
    "sqlalchemy.dialects.postgresql.asyncpg.AsyncpgJSONPathType"
  ],
  "sqlalchemy.dialects.postgresql.psycopg2.PGDialect_psycopg2.dbapi": [
    "sqlalchemy.dialects.postgresql.psycopg2cffi.PGDialect_psycopg2cffi"
  ],
  "sqlalchemy.dialects.sqlite.aiosqlite.AsyncAdapt_aiosqlite_cursor.__init__": [
    "sqlalchemy.dialects.sqlite.aiosqlite.AsyncAdapt_aiosqlite_ss_cursor"
  ],
  "sqlalchemy.dialects.sqlite.aiosqlite.AsyncAdapt_aiosqlite_cursor.close": [
    "sqlalchemy.dialects.sqlite.aiosqlite.AsyncAdapt_aiosqlite_ss_cursor"
  ],
  "sqlalchemy.dialects.sqlite.aiosqlite.AsyncAdapt_aiosqlite_cursor.fetchall": [
    "sqlalchemy.dialects.sqlite.aiosqlite.AsyncAdapt_aiosqlite_ss_cursor"
  ],
  "sqlalchemy.dialects.sqlite.aiosqlite.AsyncAdapt_aiosqlite_cursor.fetchmany": [
    "sqlalchemy.dialects.sqlite.aiosqlite.AsyncAdapt_aiosqlite_ss_cursor"
  ],
  "sqlalchemy.dialects.sqlite.aiosqlite.AsyncAdapt_aiosqlite_cursor.fetchone": [
    "sqlalchemy.dialects.sqlite.aiosqlite.AsyncAdapt_aiosqlite_ss_cursor"
  ],
  "sqlalchemy.dialects.sqlite.base.DATE.bind_processor": [
    "sqlalchemy.dialects.sqlite.pysqlite._SQLite_pysqliteDate"
  ],
  "sqlalchemy.dialects.sqlite.base.DATE.result_processor": [
    "sqlalchemy.dialects.sqlite.pysqlite._SQLite_pysqliteDate"
  ],
  "sqlalchemy.dialects.sqlite.base.DATETIME.bind_processor": [
    "sqlalchemy.dialects.sqlite.pysqlite._SQLite_pysqliteTimeStamp"
  ],
  "sqlalchemy.dialects.sqlite.base.DATETIME.result_processor": [
    "sqlalchemy.dialects.sqlite.pysqlite._SQLite_pysqliteTimeStamp"
  ],
  "sqlalchemy.dialects.sqlite.base.SQLiteDialect.on_connect": [
    "sqlalchemy.dialects.sqlite.pysqlite.SQLiteDialect_pysqlite"
  ],
  "sqlalchemy.dialects.sqlite.base.SQLiteDialect.set_isolation_level": [
    "sqlalchemy.dialects.sqlite.pysqlite.SQLiteDialect_pysqlite"
  ],
  "sqlalchemy.dialects.sqlite.base._DateTimeMixin.__init__": [
    "sqlalchemy.dialects.sqlite.base.DATETIME",
    "sqlalchemy.dialects.sqlite.base.TIME"
  ],
  "sqlalchemy.dialects.sqlite.dml.OnConflictClause.__init__": [
    "sqlalchemy.dialects.sqlite.dml.OnConflictDoUpdate"
  ],
  "sqlalchemy.dialects.sqlite.pysqlite.SQLiteDialect_pysqlite.create_connect_args": [
    "sqlalchemy.dialects.sqlite.pysqlcipher.SQLiteDialect_pysqlcipher"
  ],
  "sqlalchemy.dialects.sqlite.pysqlite.SQLiteDialect_pysqlite.dbapi": [
    "sqlalchemy.dialects.sqlite.aiosqlite.SQLiteDialect_aiosqlite",
    "sqlalchemy.dialects.sqlite.pysqlcipher.SQLiteDialect_pysqlcipher"
  ],
  "sqlalchemy.dialects.sqlite.pysqlite.SQLiteDialect_pysqlite.get_pool_class": [
    "sqlalchemy.dialects.sqlite.aiosqlite.SQLiteDialect_aiosqlite",
    "sqlalchemy.dialects.sqlite.pysqlcipher.SQLiteDialect_pysqlcipher"
  ],
  "sqlalchemy.dialects.sqlite.pysqlite.SQLiteDialect_pysqlite.is_disconnect": [
    "sqlalchemy.dialects.sqlite.aiosqlite.SQLiteDialect_aiosqlite"
  ],
  "sqlalchemy.dialects.sybase.base.SybaseExecutionContext.pre_exec": [
    "sqlalchemy.dialects.sybase.pysybase.SybaseExecutionContext_pysybase"
  ],
  "sqlalchemy.dialects.sybase.base.SybaseExecutionContext.set_ddl_autocommit": [
    "sqlalchemy.dialects.sybase.pyodbc.SybaseExecutionContext_pyodbc",
    "sqlalchemy.dialects.sybase.pysybase.SybaseExecutionContext_pysybase"
  ],
  "sqlalchemy.engine.base.Connection.begin": [
    "sqlalchemy.future.engine.Connection"
  ],
  "sqlalchemy.engine.base.Connection.begin_nested": [
    "sqlalchemy.future.engine.Connection"
  ],
  "sqlalchemy.engine.base.Connection.close": [
    "sqlalchemy.future.engine.Connection"
  ],
  "sqlalchemy.engine.base.Connection.execute": [
    "sqlalchemy.future.engine.Connection"
  ],
  "sqlalchemy.engine.base.Connection.scalar": [
    "sqlalchemy.future.engine.Connection"
  ],
  "sqlalchemy.engine.base.Engine.begin": [
    "sqlalchemy.future.engine.Engine"
  ],
  "sqlalchemy.engine.base.Engine.connect": [
    "sqlalchemy.future.engine.Engine"
  ],
  "sqlalchemy.engine.base.Transaction.is_active": [
    "sqlalchemy.engine.base.MarkerTransaction"
  ],
  "sqlalchemy.engine.characteristics.ConnectionCharacteristic.get_characteristic": [
    "sqlalchemy.dialects.postgresql.base.PGDeferrableConnectionCharacteristic",
    "sqlalchemy.dialects.postgresql.base.PGReadOnlyConnectionCharacteristic",
    "sqlalchemy.engine.characteristics.IsolationLevelCharacteristic"
  ],
  "sqlalchemy.engine.characteristics.ConnectionCharacteristic.reset_characteristic": [
    "sqlalchemy.dialects.postgresql.base.PGDeferrableConnectionCharacteristic",
    "sqlalchemy.dialects.postgresql.base.PGReadOnlyConnectionCharacteristic",
    "sqlalchemy.engine.characteristics.IsolationLevelCharacteristic"
  ],
  "sqlalchemy.engine.characteristics.ConnectionCharacteristic.set_characteristic": [
    "sqlalchemy.dialects.postgresql.base.PGDeferrableConnectionCharacteristic",
    "sqlalchemy.dialects.postgresql.base.PGReadOnlyConnectionCharacteristic",
    "sqlalchemy.engine.characteristics.IsolationLevelCharacteristic"
  ],
  "sqlalchemy.engine.cursor.CursorFetchStrategy.fetchall": [
    "sqlalchemy.engine.cursor.BufferedRowCursorFetchStrategy",
    "sqlalchemy.engine.cursor.FullyBufferedCursorFetchStrategy"
  ],
  "sqlalchemy.engine.cursor.CursorFetchStrategy.fetchmany": [
    "sqlalchemy.engine.cursor.BufferedRowCursorFetchStrategy",
    "sqlalchemy.engine.cursor.FullyBufferedCursorFetchStrategy"
  ],
  "sqlalchemy.engine.cursor.CursorFetchStrategy.fetchone": [
    "sqlalchemy.engine.cursor.BufferedRowCursorFetchStrategy",
    "sqlalchemy.engine.cursor.FullyBufferedCursorFetchStrategy"
  ],
  "sqlalchemy.engine.cursor.CursorFetchStrategy.hard_close": [
    "sqlalchemy.engine.cursor.BufferedRowCursorFetchStrategy",
    "sqlalchemy.engine.cursor.FullyBufferedCursorFetchStrategy"
  ],
  "sqlalchemy.engine.cursor.CursorFetchStrategy.soft_close": [
    "sqlalchemy.engine.cursor.BufferedRowCursorFetchStrategy",
    "sqlalchemy.engine.cursor.FullyBufferedCursorFetchStrategy"
  ],
  "sqlalchemy.engine.cursor.CursorFetchStrategy.yield_per": [
    "sqlalchemy.engine.cursor.BufferedRowCursorFetchStrategy",
    "sqlalchemy.engine.cursor.FullyBufferedCursorFetchStrategy"
  ],
  "sqlalchemy.engine.cursor.CursorResult.close": [
    "sqlalchemy.engine.cursor.LegacyCursorResult"
  ],
  "sqlalchemy.engine.cursor.ResultFetchStrategy.fetchall": [
    "sqlalchemy.engine.cursor.CursorFetchStrategy",
    "sqlalchemy.engine.cursor.NoCursorFetchStrategy"
  ],
  "sqlalchemy.engine.cursor.ResultFetchStrategy.fetchmany": [
    "sqlalchemy.engine.cursor.CursorFetchStrategy",
    "sqlalchemy.engine.cursor.NoCursorFetchStrategy"
  ],
  "sqlalchemy.engine.cursor.ResultFetchStrategy.fetchone": [
    "sqlalchemy.engine.cursor.CursorFetchStrategy",
    "sqlalchemy.engine.cursor.NoCursorFetchStrategy"
  ],
  "sqlalchemy.engine.cursor.ResultFetchStrategy.handle_exception": [
    "sqlalchemy.engine.cursor.CursorFetchStrategy"
  ],
  "sqlalchemy.engine.cursor.ResultFetchStrategy.hard_close": [
    "sqlalchemy.engine.cursor.CursorFetchStrategy",
    "sqlalchemy.engine.cursor.NoCursorFetchStrategy"
  ],
  "sqlalchemy.engine.cursor.ResultFetchStrategy.soft_close": [
    "sqlalchemy.engine.cursor.CursorFetchStrategy",
    "sqlalchemy.engine.cursor.NoCursorFetchStrategy"
  ],
  "sqlalchemy.engine.cursor.ResultFetchStrategy.yield_per": [
    "sqlalchemy.engine.cursor.CursorFetchStrategy"
  ],
  "sqlalchemy.engine.cursor._NoResultMetaData.keys": [
    "sqlalchemy.engine.cursor._LegacyNoResultMetaData"
  ],
  "sqlalchemy.engine.default.DefaultDialect.__init__": [
    "sqlalchemy.dialects.firebird.base.FBDialect",
    "sqlalchemy.dialects.mssql.base.MSDialect",
    "sqlalchemy.dialects.mysql.base.MySQLDialect",
    "sqlalchemy.dialects.oracle.base.OracleDialect",
    "sqlalchemy.dialects.postgresql.base.PGDialect",
    "sqlalchemy.dialects.sqlite.base.SQLiteDialect",
    "sqlalchemy.dialects.sybase.base.SybaseDialect"
  ],
  "sqlalchemy.engine.default.DefaultDialect.create_connect_args": [
    "sqlalchemy.dialects.firebird.kinterbasdb.FBDialect_kinterbasdb",
    "sqlalchemy.dialects.mssql.pymssql.MSDialect_pymssql",
    "sqlalchemy.dialects.mysql.mariadbconnector.MySQLDialect_mariadbconnector",
    "sqlalchemy.dialects.mysql.mysqlconnector.MySQLDialect_mysqlconnector",
    "sqlalchemy.dialects.mysql.mysqldb.MySQLDialect_mysqldb",
    "sqlalchemy.dialects.mysql.oursql.MySQLDialect_oursql",
    "sqlalchemy.dialects.oracle.cx_oracle.OracleDialect_cx_oracle",
    "sqlalchemy.dialects.postgresql.asyncpg.PGDialect_asyncpg",
    "sqlalchemy.dialects.postgresql.pg8000.PGDialect_pg8000",
    "sqlalchemy.dialects.postgresql.psycopg2.PGDialect_psycopg2",
    "sqlalchemy.dialects.postgresql.pygresql.PGDialect_pygresql",
    "sqlalchemy.dialects.postgresql.pypostgresql.PGDialect_pypostgresql",
    "sqlalchemy.dialects.sqlite.pysqlite.SQLiteDialect_pysqlite",
    "sqlalchemy.dialects.sybase.pysybase.SybaseDialect_pysybase"
  ],
  "sqlalchemy.engine.default.DefaultDialect.create_xid": [
    "sqlalchemy.dialects.oracle.cx_oracle.OracleDialect_cx_oracle"
  ],
  "sqlalchemy.engine.default.DefaultDialect.dbapi": [
    "sqlalchemy.dialects.firebird.kinterbasdb.FBDialect_kinterbasdb",
    "sqlalchemy.dialects.mssql.pymssql.MSDialect_pymssql",
    "sqlalchemy.dialects.mysql.mariadbconnector.MySQLDialect_mariadbconnector",
    "sqlalchemy.dialects.mysql.mysqlconnector.MySQLDialect_mysqlconnector",
    "sqlalchemy.dialects.mysql.mysqldb.MySQLDialect_mysqldb",
    "sqlalchemy.dialects.mysql.oursql.MySQLDialect_oursql",
    "sqlalchemy.dialects.oracle.cx_oracle.OracleDialect_cx_oracle",
    "sqlalchemy.dialects.postgresql.asyncpg.PGDialect_asyncpg",
    "sqlalchemy.dialects.postgresql.pg8000.PGDialect_pg8000",
    "sqlalchemy.dialects.postgresql.psycopg2.PGDialect_psycopg2",
    "sqlalchemy.dialects.postgresql.pygresql.PGDialect_pygresql",
    "sqlalchemy.dialects.postgresql.pypostgresql.PGDialect_pypostgresql",
    "sqlalchemy.dialects.sqlite.pysqlite.SQLiteDialect_pysqlite",
    "sqlalchemy.dialects.sybase.pysybase.SybaseDialect_pysybase"
  ],
  "sqlalchemy.engine.default.DefaultDialect.dbapi_exception_translation_map": [
    "sqlalchemy.dialects.postgresql.pypostgresql.PGDialect_pypostgresql"
  ],
  "sqlalchemy.engine.default.DefaultDialect.description_encoding": [
    "sqlalchemy.dialects.mysql.mysqlconnector.MySQLDialect_mysqlconnector"
  ],
  "sqlalchemy.engine.default.DefaultDialect.do_begin": [
    "sqlalchemy.dialects.mysql.oursql.MySQLDialect_oursql"
  ],
  "sqlalchemy.engine.default.DefaultDialect.do_commit": [
    "sqlalchemy.dialects.firebird.kinterbasdb.FBDialect_kinterbasdb"
  ],
  "sqlalchemy.engine.default.DefaultDialect.do_execute": [
    "sqlalchemy.dialects.firebird.kinterbasdb.FBDialect_kinterbasdb",
    "sqlalchemy.dialects.mysql.oursql.MySQLDialect_oursql"
  ],
  "sqlalchemy.engine.default.DefaultDialect.do_executemany": [
    "sqlalchemy.dialects.mssql.pyodbc.MSDialect_pyodbc",
    "sqlalchemy.dialects.mysql.mysqldb.MySQLDialect_mysqldb",
    "sqlalchemy.dialects.oracle.cx_oracle.OracleDialect_cx_oracle",
    "sqlalchemy.dialects.postgresql.psycopg2.PGDialect_psycopg2",
    "sqlalchemy.dialects.sybase.pysybase.SybaseDialect_pysybase"
  ],
  "sqlalchemy.engine.default.DefaultDialect.do_ping": [
    "sqlalchemy.dialects.mysql.mysqlconnector.MySQLDialect_mysqlconnector",
    "sqlalchemy.dialects.mysql.mysqldb.MySQLDialect_mysqldb",
    "sqlalchemy.dialects.postgresql.psycopg2.PGDialect_psycopg2"
  ],
  "sqlalchemy.engine.default.DefaultDialect.do_release_savepoint": [
    "sqlalchemy.dialects.mssql.base.MSDialect",
    "sqlalchemy.dialects.oracle.base.OracleDialect"
  ],
  "sqlalchemy.engine.default.DefaultDialect.do_rollback": [
    "sqlalchemy.dialects.firebird.kinterbasdb.FBDialect_kinterbasdb"
  ],
  "sqlalchemy.engine.default.DefaultDialect.do_savepoint": [
    "sqlalchemy.dialects.mssql.base.MSDialect"
  ],
  "sqlalchemy.engine.default.DefaultDialect.get_default_isolation_level": [
    "sqlalchemy.dialects.oracle.base.OracleDialect"
  ],
  "sqlalchemy.engine.default.DefaultDialect.get_driver_connection": [
    "sqlalchemy.dialects.mysql.aiomysql.MySQLDialect_aiomysql",
    "sqlalchemy.dialects.mysql.asyncmy.MySQLDialect_asyncmy",
    "sqlalchemy.dialects.postgresql.asyncpg.PGDialect_asyncpg",
    "sqlalchemy.dialects.sqlite.aiosqlite.SQLiteDialect_aiosqlite"
  ],
  "sqlalchemy.engine.default.DefaultDialect.get_pool_class": [
    "sqlalchemy.dialects.mysql.aiomysql.MySQLDialect_aiomysql",
    "sqlalchemy.dialects.mysql.asyncmy.MySQLDialect_asyncmy",
    "sqlalchemy.dialects.postgresql.asyncpg.PGDialect_asyncpg",
    "sqlalchemy.dialects.sqlite.pysqlite.SQLiteDialect_pysqlite"
  ],
  "sqlalchemy.engine.default.DefaultDialect.initialize": [
    "sqlalchemy.dialects.firebird.base.FBDialect",
    "sqlalchemy.dialects.mssql.base.MSDialect",
    "sqlalchemy.dialects.mysql.base.MySQLDialect",
    "sqlalchemy.dialects.oracle.base.OracleDialect",
    "sqlalchemy.dialects.postgresql.base.PGDialect",
    "sqlalchemy.dialects.sybase.base.SybaseDialect"
  ],
  "sqlalchemy.engine.default.DefaultDialect.is_disconnect": [
    "sqlalchemy.dialects.firebird.kinterbasdb.FBDialect_kinterbasdb",
    "sqlalchemy.dialects.mssql.pymssql.MSDialect_pymssql",
    "sqlalchemy.dialects.mysql.base.MySQLDialect",
    "sqlalchemy.dialects.oracle.cx_oracle.OracleDialect_cx_oracle",
    "sqlalchemy.dialects.postgresql.asyncpg.PGDialect_asyncpg",
    "sqlalchemy.dialects.postgresql.pg8000.PGDialect_pg8000",
    "sqlalchemy.dialects.postgresql.psycopg2.PGDialect_psycopg2",
    "sqlalchemy.dialects.postgresql.pygresql.PGDialect_pygresql",
    "sqlalchemy.dialects.postgresql.pypostgresql.PGDialect_pypostgresql",
    "sqlalchemy.dialects.sqlite.pysqlite.SQLiteDialect_pysqlite",
    "sqlalchemy.dialects.sybase.pysybase.SybaseDialect_pysybase"
  ],
  "sqlalchemy.engine.default.DefaultDialect.on_connect": [
    "sqlalchemy.dialects.mssql.base.MSDialect",
    "sqlalchemy.dialects.mysql.base.MySQLDialect",
    "sqlalchemy.dialects.oracle.cx_oracle.OracleDialect_cx_oracle",
    "sqlalchemy.dialects.postgresql.base.PGDialect",
    "sqlalchemy.dialects.sqlite.base.SQLiteDialect"
  ],
  "sqlalchemy.engine.default.DefaultDialect.supports_server_side_cursors": [
    "sqlalchemy.dialects.mysql.mysqldb.MySQLDialect_mysqldb"
  ],
  "sqlalchemy.engine.default.DefaultDialect.supports_unicode_statements": [
    "sqlalchemy.dialects.mysql.mysqlconnector.MySQLDialect_mysqlconnector"
  ],
  "sqlalchemy.engine.default.DefaultExecutionContext.create_cursor": [
    "sqlalchemy.dialects.oracle.cx_oracle.OracleExecutionContext_cx_oracle"
  ],
  "sqlalchemy.engine.default.DefaultExecutionContext.create_default_cursor": [
    "sqlalchemy.dialects.mysql.mariadbconnector.MySQLExecutionContext_mariadbconnector"
  ],
  "sqlalchemy.engine.default.DefaultExecutionContext.create_server_side_cursor": [
    "sqlalchemy.dialects.mysql.base.MySQLExecutionContext",
    "sqlalchemy.dialects.postgresql.asyncpg.PGExecutionContext_asyncpg",
    "sqlalchemy.dialects.postgresql.pg8000.PGExecutionContext_pg8000",
    "sqlalchemy.dialects.postgresql.psycopg2.PGExecutionContext_psycopg2",
    "sqlalchemy.dialects.sqlite.aiosqlite.SQLiteExecutionContext_aiosqlite"
  ],
  "sqlalchemy.engine.default.DefaultExecutionContext.get_insert_default": [
    "sqlalchemy.dialects.mssql.base.MSExecutionContext",
    "sqlalchemy.dialects.postgresql.base.PGExecutionContext"
  ],
  "sqlalchemy.engine.default.DefaultExecutionContext.get_lastrowid": [
    "sqlalchemy.dialects.mssql.base.MSExecutionContext",
    "sqlalchemy.dialects.mysql.pyodbc.MySQLExecutionContext_pyodbc",
    "sqlalchemy.dialects.sybase.base.SybaseExecutionContext"
  ],
  "sqlalchemy.engine.default.DefaultExecutionContext.get_out_parameter_values": [
    "sqlalchemy.dialects.oracle.cx_oracle.OracleExecutionContext_cx_oracle"
  ],
  "sqlalchemy.engine.default.DefaultExecutionContext.handle_dbapi_exception": [
    "sqlalchemy.dialects.mssql.base.MSExecutionContext",
    "sqlalchemy.dialects.postgresql.asyncpg.PGExecutionContext_asyncpg"
  ],
  "sqlalchemy.engine.default.DefaultExecutionContext.post_exec": [
    "sqlalchemy.dialects.mssql.base.MSExecutionContext",
    "sqlalchemy.dialects.oracle.cx_oracle.OracleExecutionContext_cx_oracle",
    "sqlalchemy.dialects.postgresql.psycopg2.PGExecutionContext_psycopg2",
    "sqlalchemy.dialects.sybase.base.SybaseExecutionContext"
  ],
  "sqlalchemy.engine.default.DefaultExecutionContext.pre_exec": [
    "sqlalchemy.dialects.mssql.base.MSExecutionContext",
    "sqlalchemy.dialects.oracle.cx_oracle.OracleExecutionContext_cx_oracle",
    "sqlalchemy.dialects.postgresql.asyncpg.PGExecutionContext_asyncpg",
    "sqlalchemy.dialects.postgresql.pg8000.PGExecutionContext_pg8000",
    "sqlalchemy.dialects.sybase.base.SybaseExecutionContext"
  ],
  "sqlalchemy.engine.default.DefaultExecutionContext.rowcount": [
    "sqlalchemy.dialects.firebird.kinterbasdb.FBExecutionContext_kinterbasdb",
    "sqlalchemy.dialects.mssql.base.MSExecutionContext",
    "sqlalchemy.dialects.mysql.mysqldb.MySQLExecutionContext_mysqldb"
  ],
  "sqlalchemy.engine.default.DefaultExecutionContext.should_autocommit_text": [
    "sqlalchemy.dialects.mysql.base.MySQLExecutionContext",
    "sqlalchemy.dialects.postgresql.base.PGExecutionContext"
  ],
  "sqlalchemy.engine.interfaces.Connectable.connect": [
    "sqlalchemy.engine.base.Connection",
    "sqlalchemy.engine.base.Engine",
    "sqlalchemy.engine.mock.MockConnection"
  ],
  "sqlalchemy.engine.interfaces.Connectable.engine": [
    "sqlalchemy.engine.base.Engine",
    "sqlalchemy.engine.mock.MockConnection"
  ],
  "sqlalchemy.engine.interfaces.Connectable.execute": [
    "sqlalchemy.engine.base.Connection",
    "sqlalchemy.engine.base.Engine",
    "sqlalchemy.engine.mock.MockConnection"
  ],
  "sqlalchemy.engine.interfaces.Connectable.scalar": [
    "sqlalchemy.engine.base.Connection",
    "sqlalchemy.engine.base.Engine"
  ],
  "sqlalchemy.engine.interfaces.Dialect.connect": [
    "sqlalchemy.engine.default.DefaultDialect"
  ],
  "sqlalchemy.engine.interfaces.Dialect.create_connect_args": [
    "sqlalchemy.engine.default.DefaultDialect"
  ],
  "sqlalchemy.engine.interfaces.Dialect.create_xid": [
    "sqlalchemy.engine.default.DefaultDialect"
  ],
  "sqlalchemy.engine.interfaces.Dialect.denormalize_name": [
    "sqlalchemy.engine.default.DefaultDialect"
  ],
  "sqlalchemy.engine.interfaces.Dialect.do_begin": [
    "sqlalchemy.engine.default.DefaultDialect"
  ],
  "sqlalchemy.engine.interfaces.Dialect.do_begin_twophase": [
    "sqlalchemy.dialects.mysql.base.MySQLDialect",
    "sqlalchemy.dialects.oracle.cx_oracle.OracleDialect_cx_oracle",
    "sqlalchemy.dialects.postgresql.base.PGDialect"
  ],
  "sqlalchemy.engine.interfaces.Dialect.do_close": [
    "sqlalchemy.engine.default.DefaultDialect"
  ],
  "sqlalchemy.engine.interfaces.Dialect.do_commit": [
    "sqlalchemy.engine.default.DefaultDialect"
  ],
  "sqlalchemy.engine.interfaces.Dialect.do_commit_twophase": [
    "sqlalchemy.dialects.mysql.base.MySQLDialect",
    "sqlalchemy.dialects.oracle.cx_oracle.OracleDialect_cx_oracle",
    "sqlalchemy.dialects.postgresql.base.PGDialect"
  ],
  "sqlalchemy.engine.interfaces.Dialect.do_execute": [
    "sqlalchemy.engine.default.DefaultDialect"
  ],
  "sqlalchemy.engine.interfaces.Dialect.do_execute_no_params": [
    "sqlalchemy.engine.default.DefaultDialect"
  ],
  "sqlalchemy.engine.interfaces.Dialect.do_executemany": [
    "sqlalchemy.engine.default.DefaultDialect"
  ],
  "sqlalchemy.engine.interfaces.Dialect.do_prepare_twophase": [
    "sqlalchemy.dialects.mysql.base.MySQLDialect",
    "sqlalchemy.dialects.oracle.cx_oracle.OracleDialect_cx_oracle",
    "sqlalchemy.dialects.postgresql.base.PGDialect"
  ],
  "sqlalchemy.engine.interfaces.Dialect.do_recover_twophase": [
    "sqlalchemy.dialects.mysql.base.MySQLDialect",
    "sqlalchemy.dialects.oracle.cx_oracle.OracleDialect_cx_oracle",
    "sqlalchemy.dialects.postgresql.base.PGDialect"
  ],
  "sqlalchemy.engine.interfaces.Dialect.do_release_savepoint": [
    "sqlalchemy.engine.default.DefaultDialect"
  ],
  "sqlalchemy.engine.interfaces.Dialect.do_rollback": [
    "sqlalchemy.engine.default.DefaultDialect"
  ],
  "sqlalchemy.engine.interfaces.Dialect.do_rollback_to_savepoint": [
    "sqlalchemy.engine.default.DefaultDialect"
  ],
  "sqlalchemy.engine.interfaces.Dialect.do_rollback_twophase": [
    "sqlalchemy.dialects.mysql.base.MySQLDialect",
    "sqlalchemy.dialects.oracle.cx_oracle.OracleDialect_cx_oracle",
    "sqlalchemy.dialects.postgresql.base.PGDialect"
  ],
  "sqlalchemy.engine.interfaces.Dialect.do_savepoint": [
    "sqlalchemy.engine.default.DefaultDialect"
  ],
  "sqlalchemy.engine.interfaces.Dialect.do_set_input_sizes": [
    "sqlalchemy.dialects.oracle.cx_oracle.OracleDialect_cx_oracle",
    "sqlalchemy.dialects.postgresql.asyncpg.PGDialect_asyncpg",
    "sqlalchemy.dialects.postgresql.pg8000.PGDialect_pg8000"
  ],
  "sqlalchemy.engine.interfaces.Dialect.get_check_constraints": [
    "sqlalchemy.dialects.mysql.base.MySQLDialect",
    "sqlalchemy.dialects.oracle.base.OracleDialect",
    "sqlalchemy.dialects.postgresql.base.PGDialect",
    "sqlalchemy.dialects.sqlite.base.SQLiteDialect"
  ],
  "sqlalchemy.engine.interfaces.Dialect.get_columns": [
    "sqlalchemy.dialects.firebird.base.FBDialect",
    "sqlalchemy.dialects.mssql.base.MSDialect",
    "sqlalchemy.dialects.mysql.base.MySQLDialect",
    "sqlalchemy.dialects.oracle.base.OracleDialect",
    "sqlalchemy.dialects.postgresql.base.PGDialect",
    "sqlalchemy.dialects.sqlite.base.SQLiteDialect",
    "sqlalchemy.dialects.sybase.base.SybaseDialect"
  ],
  "sqlalchemy.engine.interfaces.Dialect.get_default_isolation_level": [
    "sqlalchemy.engine.default.DefaultDialect"
  ],
  "sqlalchemy.engine.interfaces.Dialect.get_driver_connection": [
    "sqlalchemy.engine.default.DefaultDialect"
  ],
  "sqlalchemy.engine.interfaces.Dialect.get_foreign_keys": [
    "sqlalchemy.dialects.firebird.base.FBDialect",
    "sqlalchemy.dialects.mssql.base.MSDialect",
    "sqlalchemy.dialects.mysql.base.MySQLDialect",
    "sqlalchemy.dialects.oracle.base.OracleDialect",
    "sqlalchemy.dialects.postgresql.base.PGDialect",
    "sqlalchemy.dialects.sqlite.base.SQLiteDialect",
    "sqlalchemy.dialects.sybase.base.SybaseDialect"
  ],
  "sqlalchemy.engine.interfaces.Dialect.get_indexes": [
    "sqlalchemy.dialects.firebird.base.FBDialect",
    "sqlalchemy.dialects.mssql.base.MSDialect",
    "sqlalchemy.dialects.mysql.base.MySQLDialect",
    "sqlalchemy.dialects.oracle.base.OracleDialect",
    "sqlalchemy.dialects.postgresql.base.PGDialect",
    "sqlalchemy.dialects.sqlite.base.SQLiteDialect",
    "sqlalchemy.dialects.sybase.base.SybaseDialect"
  ],
  "sqlalchemy.engine.interfaces.Dialect.get_isolation_level": [
    "sqlalchemy.dialects.mssql.base.MSDialect",
    "sqlalchemy.dialects.mysql.base.MySQLDialect",
    "sqlalchemy.dialects.oracle.base.OracleDialect",
    "sqlalchemy.dialects.postgresql.base.PGDialect",
    "sqlalchemy.dialects.sqlite.base.SQLiteDialect"
  ],
  "sqlalchemy.engine.interfaces.Dialect.get_pk_constraint": [
    "sqlalchemy.dialects.firebird.base.FBDialect",
    "sqlalchemy.dialects.mssql.base.MSDialect",
    "sqlalchemy.dialects.mysql.base.MySQLDialect",
    "sqlalchemy.dialects.oracle.base.OracleDialect",
    "sqlalchemy.dialects.postgresql.base.PGDialect",
    "sqlalchemy.dialects.sqlite.base.SQLiteDialect",
    "sqlalchemy.dialects.sybase.base.SybaseDialect"
  ],
  "sqlalchemy.engine.interfaces.Dialect.get_sequence_names": [
    "sqlalchemy.dialects.mssql.base.MSDialect",
    "sqlalchemy.dialects.mysql.base.MySQLDialect",
    "sqlalchemy.dialects.oracle.base.OracleDialect",
    "sqlalchemy.dialects.postgresql.base.PGDialect"
  ],
  "sqlalchemy.engine.interfaces.Dialect.get_table_comment": [
    "sqlalchemy.dialects.mysql.base.MySQLDialect",
    "sqlalchemy.dialects.oracle.base.OracleDialect",
    "sqlalchemy.dialects.postgresql.base.PGDialect"
  ],
  "sqlalchemy.engine.interfaces.Dialect.get_table_names": [
    "sqlalchemy.dialects.firebird.base.FBDialect",
    "sqlalchemy.dialects.mssql.base.MSDialect",
    "sqlalchemy.dialects.mysql.base.MySQLDialect",
    "sqlalchemy.dialects.oracle.base.OracleDialect",
    "sqlalchemy.dialects.postgresql.base.PGDialect",
    "sqlalchemy.dialects.sqlite.base.SQLiteDialect",
    "sqlalchemy.dialects.sybase.base.SybaseDialect"
  ],
  "sqlalchemy.engine.interfaces.Dialect.get_temp_table_names": [
    "sqlalchemy.dialects.oracle.base.OracleDialect",
    "sqlalchemy.dialects.sqlite.base.SQLiteDialect"
  ],
  "sqlalchemy.engine.interfaces.Dialect.get_temp_view_names": [
    "sqlalchemy.dialects.sqlite.base.SQLiteDialect"
  ],
  "sqlalchemy.engine.interfaces.Dialect.get_unique_constraints": [
    "sqlalchemy.dialects.mysql.base.MySQLDialect",
    "sqlalchemy.dialects.oracle.base.OracleDialect",
    "sqlalchemy.dialects.postgresql.base.PGDialect",
    "sqlalchemy.dialects.sqlite.base.SQLiteDialect"
  ],
  "sqlalchemy.engine.interfaces.Dialect.get_view_definition": [
    "sqlalchemy.dialects.firebird.base.FBDialect",
    "sqlalchemy.dialects.mssql.base.MSDialect",
    "sqlalchemy.dialects.mysql.base.MySQLDialect",
    "sqlalchemy.dialects.oracle.base.OracleDialect",
    "sqlalchemy.dialects.postgresql.base.PGDialect",
    "sqlalchemy.dialects.sqlite.base.SQLiteDialect",
    "sqlalchemy.dialects.sybase.base.SybaseDialect"
  ],
  "sqlalchemy.engine.interfaces.Dialect.get_view_names": [
    "sqlalchemy.dialects.firebird.base.FBDialect",
    "sqlalchemy.dialects.mssql.base.MSDialect",
    "sqlalchemy.dialects.mysql.base.MySQLDialect",
    "sqlalchemy.dialects.oracle.base.OracleDialect",
    "sqlalchemy.dialects.postgresql.base.PGDialect",
    "sqlalchemy.dialects.sqlite.base.SQLiteDialect",
    "sqlalchemy.dialects.sybase.base.SybaseDialect"
  ],
  "sqlalchemy.engine.interfaces.Dialect.has_index": [
    "sqlalchemy.engine.default.DefaultDialect"
  ],
  "sqlalchemy.engine.interfaces.Dialect.has_sequence": [
    "sqlalchemy.dialects.firebird.base.FBDialect",
    "sqlalchemy.dialects.mssql.base.MSDialect",
    "sqlalchemy.dialects.mysql.base.MySQLDialect",
    "sqlalchemy.dialects.oracle.base.OracleDialect",
    "sqlalchemy.dialects.postgresql.base.PGDialect"
  ],
  "sqlalchemy.engine.interfaces.Dialect.has_table": [
    "sqlalchemy.dialects.firebird.base.FBDialect",
    "sqlalchemy.dialects.mssql.base.MSDialect",
    "sqlalchemy.dialects.mysql.base.MySQLDialect",
    "sqlalchemy.dialects.oracle.base.OracleDialect",
    "sqlalchemy.dialects.postgresql.base.PGDialect",
    "sqlalchemy.dialects.sqlite.base.SQLiteDialect",
    "sqlalchemy.dialects.sybase.base.SybaseDialect"
  ],
  "sqlalchemy.engine.interfaces.Dialect.initialize": [
    "sqlalchemy.engine.default.DefaultDialect"
  ],
  "sqlalchemy.engine.interfaces.Dialect.is_disconnect": [
    "sqlalchemy.engine.default.DefaultDialect"
  ],
  "sqlalchemy.engine.interfaces.Dialect.load_provisioning": [
    "sqlalchemy.engine.default.DefaultDialect"
  ],
  "sqlalchemy.engine.interfaces.Dialect.normalize_name": [
    "sqlalchemy.engine.default.DefaultDialect"
  ],
  "sqlalchemy.engine.interfaces.Dialect.on_connect": [
    "sqlalchemy.engine.default.DefaultDialect"
  ],
  "sqlalchemy.engine.interfaces.Dialect.on_connect_url": [
    "sqlalchemy.dialects.sqlite.pysqlcipher.SQLiteDialect_pysqlcipher"
  ],
  "sqlalchemy.engine.interfaces.Dialect.reset_isolation_level": [
    "sqlalchemy.engine.default.DefaultDialect"
  ],
  "sqlalchemy.engine.interfaces.Dialect.set_isolation_level": [
    "sqlalchemy.dialects.mssql.base.MSDialect",
    "sqlalchemy.dialects.mysql.base.MySQLDialect",
    "sqlalchemy.dialects.oracle.base.OracleDialect",
    "sqlalchemy.dialects.postgresql.base.PGDialect",
    "sqlalchemy.dialects.sqlite.base.SQLiteDialect"
  ],
  "sqlalchemy.engine.interfaces.Dialect.type_descriptor": [
    "sqlalchemy.engine.default.DefaultDialect"
  ],
  "sqlalchemy.engine.interfaces.ExecutionContext.create_cursor": [
    "sqlalchemy.engine.default.DefaultExecutionContext"
  ],
  "sqlalchemy.engine.interfaces.ExecutionContext.get_out_parameter_values": [
    "sqlalchemy.engine.default.DefaultExecutionContext"
  ],
  "sqlalchemy.engine.interfaces.ExecutionContext.get_result_cursor_strategy": [
    "sqlalchemy.dialects.mssql.base.MSExecutionContext"
  ],
  "sqlalchemy.engine.interfaces.ExecutionContext.handle_dbapi_exception": [
    "sqlalchemy.engine.default.DefaultExecutionContext"
  ],
  "sqlalchemy.engine.interfaces.ExecutionContext.lastrow_has_defaults": [
    "sqlalchemy.engine.default.DefaultExecutionContext"
  ],
  "sqlalchemy.engine.interfaces.ExecutionContext.post_exec": [
    "sqlalchemy.engine.default.DefaultExecutionContext"
  ],
  "sqlalchemy.engine.interfaces.ExecutionContext.pre_exec": [
    "sqlalchemy.engine.default.DefaultExecutionContext"
  ],
  "sqlalchemy.engine.interfaces.ExecutionContext.should_autocommit_text": [
    "sqlalchemy.engine.default.DefaultExecutionContext"
  ],
  "sqlalchemy.engine.reflection.Inspector.__init__": [
    "sqlalchemy.dialects.sybase.base.SybaseInspector"
  ],
  "sqlalchemy.engine.reflection.Inspector.get_view_names": [
    "sqlalchemy.dialects.postgresql.base.PGInspector"
  ],
  "sqlalchemy.engine.result.IteratorResult.__init__": [
    "sqlalchemy.engine.result.ChunkedIteratorResult",
    "sqlalchemy.engine.result.MergedResult"
  ],
  "sqlalchemy.engine.result.Result.__init__": [
    "sqlalchemy.engine.result.IteratorResult"
  ],
  "sqlalchemy.engine.result.Result.close": [
    "sqlalchemy.engine.cursor.CursorResult"
  ],
  "sqlalchemy.engine.result.Result.merge": [
    "sqlalchemy.engine.cursor.CursorResult"
  ],
  "sqlalchemy.engine.result.ResultMetaData.keys": [
    "sqlalchemy.engine.cursor._NoResultMetaData"
  ],
  "sqlalchemy.engine.row.Row.__contains__": [
    "sqlalchemy.engine.row.LegacyRow"
  ],
  "sqlalchemy.event.base.dispatcher.__get__": [
    "sqlalchemy.event.base.slots_dispatcher"
  ],
  "sqlalchemy.exc.StatementError.__init__": [
    "sqlalchemy.exc.DBAPIError"
  ],
  "sqlalchemy.exc.StatementError.__reduce__": [
    "sqlalchemy.exc.DBAPIError"
  ],
  "sqlalchemy.ext.associationproxy.AssociationProxyInstance.any": [
    "sqlalchemy.ext.associationproxy.AmbiguousAssociationProxyInstance"
  ],
  "sqlalchemy.ext.associationproxy.AssociationProxyInstance.get": [
    "sqlalchemy.ext.associationproxy.AmbiguousAssociationProxyInstance"
  ],
  "sqlalchemy.ext.associationproxy.AssociationProxyInstance.has": [
    "sqlalchemy.ext.associationproxy.AmbiguousAssociationProxyInstance"
  ],
  "sqlalchemy.ext.associationproxy._AssociationCollection.__bool__": [
    "sqlalchemy.ext.associationproxy._AssociationSet"
  ],
  "sqlalchemy.ext.associationproxy._AssociationCollection.__len__": [
    "sqlalchemy.ext.associationproxy._AssociationSet"
  ],
  "sqlalchemy.ext.associationproxy._AssociationCollection.__nonzero__": [
    "sqlalchemy.ext.associationproxy._AssociationSet"
  ],
  "sqlalchemy.ext.asyncio.base.StartableContext.__aexit__": [
    "sqlalchemy.ext.asyncio.engine.AsyncConnection",
    "sqlalchemy.ext.asyncio.engine.AsyncEngine._trans_ctx",
    "sqlalchemy.ext.asyncio.engine.AsyncTransaction",
    "sqlalchemy.ext.asyncio.session.AsyncSessionTransaction"
  ],
  "sqlalchemy.ext.asyncio.base.StartableContext.__await__": [
    "sqlalchemy.ext.asyncio.engine.AsyncConnection"
  ],
  "sqlalchemy.ext.asyncio.base.StartableContext.start": [
    "sqlalchemy.ext.asyncio.engine.AsyncConnection",
    "sqlalchemy.ext.asyncio.engine.AsyncEngine._trans_ctx",
    "sqlalchemy.ext.asyncio.engine.AsyncTransaction",
    "sqlalchemy.ext.asyncio.session.AsyncSessionTransaction"
  ],
  "sqlalchemy.ext.declarative.extensions.ConcreteBase.__declare_first__": [
    "sqlalchemy.ext.declarative.extensions.AbstractConcreteBase"
  ],
  "sqlalchemy.ext.hybrid.Comparator.__init__": [
    "sqlalchemy.ext.hybrid.ExprComparator"
  ],
  "sqlalchemy.ext.hybrid.Comparator.property": [
    "sqlalchemy.ext.hybrid.ExprComparator"
  ],
  "sqlalchemy.ext.hybrid.hybrid_property.__init__": [
    "sqlalchemy.ext.indexable.index_property"
  ],
  "sqlalchemy.ext.hybrid.hybrid_property.expr": [
    "sqlalchemy.ext.indexable.index_property"
  ],
  "sqlalchemy.ext.hybrid.hybrid_property.fdel": [
    "sqlalchemy.ext.indexable.index_property"
  ],
  "sqlalchemy.ext.hybrid.hybrid_property.fget": [
    "sqlalchemy.ext.indexable.index_property"
  ],
  "sqlalchemy.ext.hybrid.hybrid_property.fset": [
    "sqlalchemy.ext.indexable.index_property"
  ],
  "sqlalchemy.ext.mutable.MutableBase.coerce": [
    "sqlalchemy.ext.mutable.MutableDict",
    "sqlalchemy.ext.mutable.MutableList",
    "sqlalchemy.ext.mutable.MutableSet"
  ],
  "sqlalchemy.orm.attributes.AttributeImpl.__init__": [
    "sqlalchemy.orm.attributes.CollectionAttributeImpl",
    "sqlalchemy.orm.attributes.ScalarAttributeImpl",
    "sqlalchemy.orm.dynamic.DynamicAttributeImpl"
  ],
  "sqlalchemy.orm.attributes.AttributeImpl.append": [
    "sqlalchemy.orm.attributes.CollectionAttributeImpl",
    "sqlalchemy.orm.dynamic.DynamicAttributeImpl"
  ],
  "sqlalchemy.orm.attributes.AttributeImpl.get": [
    "sqlalchemy.orm.dynamic.DynamicAttributeImpl"
  ],
  "sqlalchemy.orm.attributes.AttributeImpl.get_all_pending": [
    "sqlalchemy.orm.attributes.CollectionAttributeImpl",
    "sqlalchemy.orm.attributes.ScalarObjectAttributeImpl",
    "sqlalchemy.orm.dynamic.DynamicAttributeImpl"
  ],
  "sqlalchemy.orm.attributes.AttributeImpl.get_history": [
    "sqlalchemy.orm.attributes.CollectionAttributeImpl",
    "sqlalchemy.orm.attributes.ScalarAttributeImpl",
    "sqlalchemy.orm.dynamic.DynamicAttributeImpl"
  ],
  "sqlalchemy.orm.attributes.AttributeImpl.pop": [
    "sqlalchemy.orm.attributes.CollectionAttributeImpl",
    "sqlalchemy.orm.dynamic.DynamicAttributeImpl"
  ],
  "sqlalchemy.orm.attributes.AttributeImpl.remove": [
    "sqlalchemy.orm.attributes.CollectionAttributeImpl",
    "sqlalchemy.orm.dynamic.DynamicAttributeImpl"
  ],
  "sqlalchemy.orm.attributes.AttributeImpl.set": [
    "sqlalchemy.orm.attributes.CollectionAttributeImpl",
    "sqlalchemy.orm.attributes.ScalarAttributeImpl",
    "sqlalchemy.orm.dynamic.DynamicAttributeImpl"
  ],
  "sqlalchemy.orm.attributes.AttributeImpl.set_committed_value": [
    "sqlalchemy.orm.attributes.CollectionAttributeImpl",
    "sqlalchemy.orm.dynamic.DynamicAttributeImpl"
  ],
  "sqlalchemy.orm.attributes.Mapped.__delete__": [
    "sqlalchemy.orm.attributes.InstrumentedAttribute"
  ],
  "sqlalchemy.orm.attributes.Mapped.__get__": [
    "sqlalchemy.orm.attributes.InstrumentedAttribute"
  ],
  "sqlalchemy.orm.attributes.Mapped.__set__": [
    "sqlalchemy.orm.attributes.InstrumentedAttribute"
  ],
  "sqlalchemy.orm.attributes.ScalarAttributeImpl.delete": [
    "sqlalchemy.orm.attributes.ScalarObjectAttributeImpl"
  ],
  "sqlalchemy.orm.attributes.ScalarAttributeImpl.fire_remove_event": [
    "sqlalchemy.orm.attributes.ScalarObjectAttributeImpl"
  ],
  "sqlalchemy.orm.attributes.ScalarAttributeImpl.fire_replace_event": [
    "sqlalchemy.orm.attributes.ScalarObjectAttributeImpl"
  ],
  "sqlalchemy.orm.attributes.ScalarAttributeImpl.get_history": [
    "sqlalchemy.orm.attributes.ScalarObjectAttributeImpl"
  ],
  "sqlalchemy.orm.attributes.ScalarAttributeImpl.set": [
    "sqlalchemy.orm.attributes.ScalarObjectAttributeImpl"
  ],
  "sqlalchemy.orm.collections._PlainColumnGetter.__init__": [
    "sqlalchemy.orm.collections._SerializableColumnGetterV2"
  ],
  "sqlalchemy.orm.collections._PlainColumnGetter.__reduce__": [
    "sqlalchemy.orm.collections._SerializableColumnGetterV2"
  ],
  "sqlalchemy.orm.context.ORMCompileState.create_for_statement": [
    "sqlalchemy.orm.context.ORMFromStatementCompileState",
    "sqlalchemy.orm.context.ORMSelectCompileState"
  ],
  "sqlalchemy.orm.context._ColumnEntity.row_processor": [
    "sqlalchemy.orm.context._IdentityTokenEntity"
  ],
  "sqlalchemy.orm.context._ORMColumnEntity.setup_compile_state": [
    "sqlalchemy.orm.context._IdentityTokenEntity"
  ],
  "sqlalchemy.orm.decl_api.declared_attr.__init__": [
    "sqlalchemy.orm.decl_api._stateful_declared_attr"
  ],
  "sqlalchemy.orm.decl_base._ClassScanMapperConfig.map": [
    "sqlalchemy.orm.decl_base._DeferredMapperConfig"
  ],
  "sqlalchemy.orm.decl_base._MapperConfig.__init__": [
    "sqlalchemy.orm.decl_base._ClassScanMapperConfig",
    "sqlalchemy.orm.decl_base._ImperativeMapperConfig"
  ],
  "sqlalchemy.orm.decl_base._MapperConfig.cls": [
    "sqlalchemy.orm.decl_base._DeferredMapperConfig"
  ],
  "sqlalchemy.orm.decl_base._MapperConfig.cls@setter": [
    "sqlalchemy.orm.decl_base._DeferredMapperConfig"
  ],
  "sqlalchemy.orm.dependency.DependencyProcessor.__init__": [
    "sqlalchemy.orm.dependency.ManyToOneDP"
  ],
  "sqlalchemy.orm.dependency.DependencyProcessor.per_property_flush_actions": [
    "sqlalchemy.orm.dependency.DetectKeySwitch"
  ],
  "sqlalchemy.orm.dependency.DependencyProcessor.per_property_preprocessors": [
    "sqlalchemy.orm.dependency.DetectKeySwitch"
  ],
  "sqlalchemy.orm.dependency.DependencyProcessor.per_state_flush_actions": [
    "sqlalchemy.orm.dependency.DetectKeySwitch"
  ],
  "sqlalchemy.orm.dependency.DependencyProcessor.presort_deletes": [
    "sqlalchemy.orm.dependency.DetectKeySwitch",
    "sqlalchemy.orm.dependency.ManyToManyDP",
    "sqlalchemy.orm.dependency.ManyToOneDP",
    "sqlalchemy.orm.dependency.OneToManyDP"
  ],
  "sqlalchemy.orm.dependency.DependencyProcessor.presort_saves": [
    "sqlalchemy.orm.dependency.DetectKeySwitch",
    "sqlalchemy.orm.dependency.ManyToManyDP",
    "sqlalchemy.orm.dependency.ManyToOneDP",
    "sqlalchemy.orm.dependency.OneToManyDP"
  ],
  "sqlalchemy.orm.dependency.DependencyProcessor.process_deletes": [
    "sqlalchemy.orm.dependency.DetectKeySwitch",
    "sqlalchemy.orm.dependency.ManyToManyDP",
    "sqlalchemy.orm.dependency.ManyToOneDP",
    "sqlalchemy.orm.dependency.OneToManyDP"
  ],
  "sqlalchemy.orm.dependency.DependencyProcessor.process_saves": [
    "sqlalchemy.orm.dependency.DetectKeySwitch",
    "sqlalchemy.orm.dependency.ManyToManyDP",
    "sqlalchemy.orm.dependency.ManyToOneDP",
    "sqlalchemy.orm.dependency.OneToManyDP"
  ],
  "sqlalchemy.orm.dependency.DependencyProcessor.prop_has_changes": [
    "sqlalchemy.orm.dependency.DetectKeySwitch"
  ],
  "sqlalchemy.orm.descriptor_props.DescriptorProperty.instrument_class": [
    "sqlalchemy.orm.descriptor_props.CompositeProperty"
  ],
  "sqlalchemy.orm.descriptor_props.DescriptorProperty.uses_objects": [
    "sqlalchemy.orm.descriptor_props.SynonymProperty"
  ],
  "sqlalchemy.orm.identity.IdentityMap.add": [
    "sqlalchemy.orm.identity.WeakInstanceDict"
  ],
  "sqlalchemy.orm.identity.IdentityMap.replace": [
    "sqlalchemy.orm.identity.WeakInstanceDict"
  ],
  "sqlalchemy.orm.instrumentation.ClassManager.__init__": [
    "sqlalchemy.ext.instrumentation._ClassInstrumentationAdapter"
  ],
  "sqlalchemy.orm.instrumentation.ClassManager.dict_getter": [
    "sqlalchemy.ext.instrumentation._ClassInstrumentationAdapter"
  ],
  "sqlalchemy.orm.instrumentation.ClassManager.has_state": [
    "sqlalchemy.ext.instrumentation._ClassInstrumentationAdapter"
  ],
  "sqlalchemy.orm.instrumentation.ClassManager.initialize_collection": [
    "sqlalchemy.ext.instrumentation._ClassInstrumentationAdapter"
  ],
  "sqlalchemy.orm.instrumentation.ClassManager.install_descriptor": [
    "sqlalchemy.ext.instrumentation._ClassInstrumentationAdapter"
  ],
  "sqlalchemy.orm.instrumentation.ClassManager.install_member": [
    "sqlalchemy.ext.instrumentation._ClassInstrumentationAdapter"
  ],
  "sqlalchemy.orm.instrumentation.ClassManager.instrument_attribute": [
    "sqlalchemy.ext.instrumentation._ClassInstrumentationAdapter"
  ],
  "sqlalchemy.orm.instrumentation.ClassManager.instrument_collection_class": [
    "sqlalchemy.ext.instrumentation._ClassInstrumentationAdapter"
  ],
  "sqlalchemy.orm.instrumentation.ClassManager.manage": [
    "sqlalchemy.ext.instrumentation._ClassInstrumentationAdapter"
  ],
  "sqlalchemy.orm.instrumentation.ClassManager.manager_getter": [
    "sqlalchemy.ext.instrumentation._ClassInstrumentationAdapter"
  ],
  "sqlalchemy.orm.instrumentation.ClassManager.new_instance": [
    "sqlalchemy.ext.instrumentation._ClassInstrumentationAdapter"
  ],
  "sqlalchemy.orm.instrumentation.ClassManager.post_configure_attribute": [
    "sqlalchemy.ext.instrumentation._ClassInstrumentationAdapter"
  ],
  "sqlalchemy.orm.instrumentation.ClassManager.setup_instance": [
    "sqlalchemy.ext.instrumentation._ClassInstrumentationAdapter"
  ],
  "sqlalchemy.orm.instrumentation.ClassManager.state_getter": [
    "sqlalchemy.ext.instrumentation._ClassInstrumentationAdapter"
  ],
  "sqlalchemy.orm.instrumentation.ClassManager.teardown_instance": [
    "sqlalchemy.ext.instrumentation._ClassInstrumentationAdapter"
  ],
  "sqlalchemy.orm.instrumentation.ClassManager.uninstall_descriptor": [
    "sqlalchemy.ext.instrumentation._ClassInstrumentationAdapter"
  ],
  "sqlalchemy.orm.instrumentation.ClassManager.uninstall_member": [
    "sqlalchemy.ext.instrumentation._ClassInstrumentationAdapter"
  ],
  "sqlalchemy.orm.instrumentation.ClassManager.unregister": [
    "sqlalchemy.ext.instrumentation._ClassInstrumentationAdapter"
  ],
  "sqlalchemy.orm.instrumentation.InstrumentationFactory.unregister": [
    "sqlalchemy.ext.instrumentation.ExtendedInstrumentationRegistry"
  ],
  "sqlalchemy.orm.interfaces.CompileStateOption.process_compile_state": [
    "sqlalchemy.orm.interfaces.CriteriaOption",
    "sqlalchemy.orm.interfaces.LoaderOption"
  ],
  "sqlalchemy.orm.interfaces.CompileStateOption.process_compile_state_replaced_entities": [
    "sqlalchemy.orm.interfaces.LoaderOption",
    "sqlalchemy.orm.util.LoaderCriteriaOption"
  ],
  "sqlalchemy.orm.interfaces.CriteriaOption.get_global_criteria": [
    "sqlalchemy.orm.util.LoaderCriteriaOption"
  ],
  "sqlalchemy.orm.interfaces.CriteriaOption.process_compile_state": [
    "sqlalchemy.orm.util.LoaderCriteriaOption"
  ],
  "sqlalchemy.orm.interfaces.LoaderOption.process_compile_state": [
    "sqlalchemy.orm.query.AliasOption",
    "sqlalchemy.orm.strategy_options.Load"
  ],
  "sqlalchemy.orm.interfaces.LoaderOption.process_compile_state_replaced_entities": [
    "sqlalchemy.orm.strategy_options.Load"
  ],
  "sqlalchemy.orm.interfaces.LoaderStrategy.__init__": [
    "sqlalchemy.orm.strategies.AbstractRelationshipLoader",
    "sqlalchemy.orm.strategies.ColumnLoader",
    "sqlalchemy.orm.strategies.DeferredColumnLoader",
    "sqlalchemy.orm.strategies.UninstrumentedColumnLoader"
  ],
  "sqlalchemy.orm.interfaces.LoaderStrategy.create_row_processor": [
    "sqlalchemy.orm.strategies.ColumnLoader",
    "sqlalchemy.orm.strategies.DeferredColumnLoader",
    "sqlalchemy.orm.strategies.ImmediateLoader",
    "sqlalchemy.orm.strategies.JoinedLoader",
    "sqlalchemy.orm.strategies.LazyLoader",
    "sqlalchemy.orm.strategies.NoLoader",
    "sqlalchemy.orm.strategies.SelectInLoader",
    "sqlalchemy.orm.strategies.SubqueryLoader",
    "sqlalchemy.orm.strategies.UninstrumentedColumnLoader"
  ],
  "sqlalchemy.orm.interfaces.LoaderStrategy.init_class_attribute": [
    "sqlalchemy.orm.dynamic.DynaLoader",
    "sqlalchemy.orm.strategies.ColumnLoader",
    "sqlalchemy.orm.strategies.DeferredColumnLoader",
    "sqlalchemy.orm.strategies.ImmediateLoader",
    "sqlalchemy.orm.strategies.JoinedLoader",
    "sqlalchemy.orm.strategies.LazyLoader",
    "sqlalchemy.orm.strategies.NoLoader",
    "sqlalchemy.orm.strategies.SelectInLoader",
    "sqlalchemy.orm.strategies.SubqueryLoader"
  ],
  "sqlalchemy.orm.interfaces.LoaderStrategy.setup_query": [
    "sqlalchemy.orm.strategies.ColumnLoader",
    "sqlalchemy.orm.strategies.DeferredColumnLoader",
    "sqlalchemy.orm.strategies.JoinedLoader",
    "sqlalchemy.orm.strategies.UninstrumentedColumnLoader"
  ],
  "sqlalchemy.orm.interfaces.MapperProperty.cascade": [
    "sqlalchemy.orm.relationships.RelationshipProperty"
  ],
  "sqlalchemy.orm.interfaces.MapperProperty.cascade@setter": [
    "sqlalchemy.orm.relationships.RelationshipProperty"
  ],
  "sqlalchemy.orm.interfaces.MapperProperty.cascade_iterator": [
    "sqlalchemy.orm.relationships.RelationshipProperty"
  ],
  "sqlalchemy.orm.interfaces.MapperProperty.create_row_processor": [
    "sqlalchemy.orm.interfaces.StrategizedProperty"
  ],
  "sqlalchemy.orm.interfaces.MapperProperty.do_init": [
    "sqlalchemy.orm.descriptor_props.CompositeProperty",
    "sqlalchemy.orm.interfaces.StrategizedProperty"
  ],
  "sqlalchemy.orm.interfaces.MapperProperty.instrument_class": [
    "sqlalchemy.orm.descriptor_props.DescriptorProperty",
    "sqlalchemy.orm.properties.ColumnProperty",
    "sqlalchemy.orm.relationships.RelationshipProperty"
  ],
  "sqlalchemy.orm.interfaces.MapperProperty.merge": [
    "sqlalchemy.orm.properties.ColumnProperty",
    "sqlalchemy.orm.relationships.RelationshipProperty"
  ],
  "sqlalchemy.orm.interfaces.MapperProperty.post_instrument_class": [
    "sqlalchemy.orm.interfaces.StrategizedProperty"
  ],
  "sqlalchemy.orm.interfaces.MapperProperty.set_parent": [
    "sqlalchemy.orm.descriptor_props.SynonymProperty"
  ],
  "sqlalchemy.orm.interfaces.MapperProperty.setup": [
    "sqlalchemy.orm.interfaces.StrategizedProperty"
  ],
  "sqlalchemy.orm.interfaces.PropComparator.__clause_element__": [
    "sqlalchemy.ext.hybrid.Comparator",
    "sqlalchemy.orm.attributes.QueryableAttribute",
    "sqlalchemy.orm.descriptor_props.CompositeProperty.Comparator",
    "sqlalchemy.orm.relationships.RelationshipProperty.Comparator"
  ],
  "sqlalchemy.orm.interfaces.PropComparator.__init__": [
    "sqlalchemy.ext.hybrid.Comparator",
    "sqlalchemy.orm.relationships.RelationshipProperty.Comparator"
  ],
  "sqlalchemy.orm.interfaces.PropComparator.adapt_to_entity": [
    "sqlalchemy.ext.hybrid.Comparator",
    "sqlalchemy.orm.attributes.QueryableAttribute",
    "sqlalchemy.orm.relationships.RelationshipProperty.Comparator"
  ],
  "sqlalchemy.orm.interfaces.PropComparator.and_": [
    "sqlalchemy.orm.attributes.QueryableAttribute",
    "sqlalchemy.orm.relationships.RelationshipProperty.Comparator"
  ],
  "sqlalchemy.orm.interfaces.PropComparator.any": [
    "sqlalchemy.orm.relationships.RelationshipProperty.Comparator"
  ],
  "sqlalchemy.orm.interfaces.PropComparator.has": [
    "sqlalchemy.orm.relationships.RelationshipProperty.Comparator"
  ],
  "sqlalchemy.orm.interfaces.PropComparator.info": [
    "sqlalchemy.ext.hybrid.ExprComparator",
    "sqlalchemy.orm.attributes.QueryableAttribute"
  ],
  "sqlalchemy.orm.interfaces.PropComparator.of_type": [
    "sqlalchemy.orm.attributes.QueryableAttribute",
    "sqlalchemy.orm.relationships.RelationshipProperty.Comparator"
  ],
  "sqlalchemy.orm.interfaces.PropComparator.property": [
    "sqlalchemy.orm.attributes.QueryableAttribute",
    "sqlalchemy.orm.relationships.RelationshipProperty.Comparator"
  ],
  "sqlalchemy.orm.interfaces.StrategizedProperty.do_init": [
    "sqlalchemy.orm.properties.ColumnProperty",
    "sqlalchemy.orm.relationships.RelationshipProperty"
  ],
  "sqlalchemy.orm.path_registry.AbstractEntityRegistry.__getitem__": [
    "sqlalchemy.orm.path_registry.CachingEntityRegistry"
  ],
  "sqlalchemy.orm.query.BulkUD.__init__": [
    "sqlalchemy.orm.query.BulkUpdate"
  ],
  "sqlalchemy.orm.query.Query.__init__": [
    "sqlalchemy.ext.horizontal_shard.ShardedQuery"
  ],
  "sqlalchemy.orm.session.Session.__init__": [
    "flask_sqlalchemy.SignallingSession",
    "sqlalchemy.ext.horizontal_shard.ShardedSession"
  ],
  "sqlalchemy.orm.session.Session.connection_callable": [
    "sqlalchemy.ext.horizontal_shard.ShardedSession"
  ],
  "sqlalchemy.orm.session.Session.get_bind": [
    "flask_sqlalchemy.SignallingSession",
    "sqlalchemy.ext.horizontal_shard.ShardedSession"
  ],
  "sqlalchemy.orm.strategies.AbstractRelationshipLoader.__init__": [
    "sqlalchemy.orm.strategies.JoinedLoader",
    "sqlalchemy.orm.strategies.LazyLoader"
  ],
  "sqlalchemy.orm.strategies.ColumnLoader.__init__": [
    "sqlalchemy.orm.strategies.ExpressionColumnLoader"
  ],
  "sqlalchemy.orm.strategies.ColumnLoader.create_row_processor": [
    "sqlalchemy.orm.strategies.ExpressionColumnLoader"
  ],
  "sqlalchemy.orm.strategies.ColumnLoader.init_class_attribute": [
    "sqlalchemy.orm.strategies.ExpressionColumnLoader"
  ],
  "sqlalchemy.orm.strategies.ColumnLoader.setup_query": [
    "sqlalchemy.orm.strategies.ExpressionColumnLoader"
  ],
  "sqlalchemy.orm.strategy_options.Load.__init__": [
    "sqlalchemy.orm.strategy_options._UnboundLoad"
  ],
  "sqlalchemy.orm.unitofwork.PostSortRec.__init__": [
    "sqlalchemy.orm.unitofwork.DeleteAll",
    "sqlalchemy.orm.unitofwork.DeleteState",
    "sqlalchemy.orm.unitofwork.PostUpdateAll",
    "sqlalchemy.orm.unitofwork.ProcessState",
    "sqlalchemy.orm.unitofwork.SaveUpdateAll",
    "sqlalchemy.orm.unitofwork.SaveUpdateState"
  ],
  "sqlalchemy.orm.unitofwork.PostSortRec.execute_aggregate": [
    "sqlalchemy.orm.unitofwork.DeleteState",
    "sqlalchemy.orm.unitofwork.ProcessState",
    "sqlalchemy.orm.unitofwork.SaveUpdateState"
  ],
  "sqlalchemy.orm.util.Bundle.__init__": [
    "sqlalchemy.orm.descriptor_props.CompositeProperty.CompositeBundle"
  ],
  "sqlalchemy.orm.util.Bundle.create_row_processor": [
    "sqlalchemy.orm.descriptor_props.CompositeProperty.CompositeBundle"
  ],
  "sqlalchemy.pool.base.Pool.__init__": [
    "sqlalchemy.pool.impl.AssertionPool",
    "sqlalchemy.pool.impl.QueuePool",
    "sqlalchemy.pool.impl.SingletonThreadPool"
  ],
  "sqlalchemy.pool.base.Pool.connect": [
    "sqlalchemy.pool.impl.SingletonThreadPool"
  ],
  "sqlalchemy.pool.base.Pool.dispose": [
    "sqlalchemy.pool.impl.AssertionPool",
    "sqlalchemy.pool.impl.NullPool",
    "sqlalchemy.pool.impl.QueuePool",
    "sqlalchemy.pool.impl.SingletonThreadPool",
    "sqlalchemy.pool.impl.StaticPool"
  ],
  "sqlalchemy.pool.base.Pool.recreate": [
    "sqlalchemy.pool.impl.AssertionPool",
    "sqlalchemy.pool.impl.NullPool",
    "sqlalchemy.pool.impl.QueuePool",
    "sqlalchemy.pool.impl.SingletonThreadPool",
    "sqlalchemy.pool.impl.StaticPool"
  ],
  "sqlalchemy.pool.base.Pool.status": [
    "sqlalchemy.pool.impl.AssertionPool",
    "sqlalchemy.pool.impl.NullPool",
    "sqlalchemy.pool.impl.QueuePool",
    "sqlalchemy.pool.impl.SingletonThreadPool",
    "sqlalchemy.pool.impl.StaticPool"
  ],
  "sqlalchemy.sql.annotation.Annotated.__init__": [
    "sqlalchemy.sql.elements.AnnotatedColumnElement",
    "sqlalchemy.sql.selectable.AnnotatedFromClause"
  ],
  "sqlalchemy.sql.base.ColumnCollection.add": [
    "sqlalchemy.sql.base.DedupeColumnCollection"
  ],
  "sqlalchemy.sql.base.ColumnCollection.remove": [
    "sqlalchemy.sql.base.DedupeColumnCollection"
  ],
  "sqlalchemy.sql.base.CompileState.__init__": [
    "sqlalchemy.orm.context.ORMCompileState",
    "sqlalchemy.sql.dml.DMLState"
  ],
  "sqlalchemy.sql.base.CompileState.create_for_statement": [
    "sqlalchemy.orm.context.ORMCompileState",
    "sqlalchemy.orm.persistence.BulkORMDelete",
    "sqlalchemy.orm.persistence.BulkORMUpdate"
  ],
  "sqlalchemy.sql.base.Executable.bind": [
    "sqlalchemy.sql.schema.DefaultGenerator",
    "sqlalchemy.sql.selectable.CompoundSelect",
    "sqlalchemy.sql.selectable.Select"
  ],
  "sqlalchemy.sql.base.Executable.bind@setter": [
    "sqlalchemy.sql.selectable.CompoundSelect",
    "sqlalchemy.sql.selectable.Select"
  ],
  "sqlalchemy.sql.base.Executable.execute": [
    "sqlalchemy.sql.ddl.DDLElement",
    "sqlalchemy.sql.functions.FunctionElement",
    "sqlalchemy.sql.schema.DefaultGenerator"
  ],
  "sqlalchemy.sql.base.Executable.execution_options": [
    "sqlalchemy.orm.query.Query"
  ],
  "sqlalchemy.sql.base.Executable.get_execution_options": [
    "sqlalchemy.orm.query.Query"
  ],
  "sqlalchemy.sql.base.Executable.options": [
    "sqlalchemy.orm.query.Query"
  ],
  "sqlalchemy.sql.base.Executable.scalar": [
    "sqlalchemy.orm.query.Query",
    "sqlalchemy.sql.functions.FunctionElement"
  ],
  "sqlalchemy.sql.compiler.Compiled.__init__": [
    "sqlalchemy.sql.compiler.SQLCompiler"
  ],
  "sqlalchemy.sql.compiler.Compiled.construct_params": [
    "sqlalchemy.sql.compiler.DDLCompiler",
    "sqlalchemy.sql.compiler.SQLCompiler"
  ],
  "sqlalchemy.sql.compiler.Compiled.params": [
    "sqlalchemy.sql.compiler.SQLCompiler"
  ],
  "sqlalchemy.sql.compiler.Compiled.sql_compiler": [
    "sqlalchemy.sql.compiler.DDLCompiler",
    "sqlalchemy.sql.compiler.SQLCompiler"
  ],
  "sqlalchemy.sql.compiler.Compiled.visit_unsupported_compilation": [
    "sqlalchemy.sql.compiler.StrSQLCompiler"
  ],
  "sqlalchemy.sql.compiler.DDLCompiler.define_constraint_cascades": [
    "sqlalchemy.dialects.oracle.base.OracleDDLCompiler"
  ],
  "sqlalchemy.sql.compiler.DDLCompiler.define_constraint_match": [
    "sqlalchemy.dialects.mysql.base.MySQLDDLCompiler"
  ],
  "sqlalchemy.sql.compiler.DDLCompiler.define_constraint_remote_table": [
    "sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler"
  ],
  "sqlalchemy.sql.compiler.DDLCompiler.get_column_specification": [
    "sqlalchemy.dialects.mssql.base.MSDDLCompiler",
    "sqlalchemy.dialects.mysql.base.MySQLDDLCompiler",
    "sqlalchemy.dialects.postgresql.base.PGDDLCompiler",
    "sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler",
    "sqlalchemy.dialects.sybase.base.SybaseDDLCompiler"
  ],
  "sqlalchemy.sql.compiler.DDLCompiler.get_identity_options": [
    "sqlalchemy.dialects.oracle.base.OracleDDLCompiler"
  ],
  "sqlalchemy.sql.compiler.DDLCompiler.post_create_table": [
    "sqlalchemy.dialects.mysql.base.MySQLDDLCompiler",
    "sqlalchemy.dialects.oracle.base.OracleDDLCompiler",
    "sqlalchemy.dialects.postgresql.base.PGDDLCompiler",
    "sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler"
  ],
  "sqlalchemy.sql.compiler.DDLCompiler.visit_check_constraint": [
    "sqlalchemy.dialects.postgresql.base.PGDDLCompiler",
    "sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler"
  ],
  "sqlalchemy.sql.compiler.DDLCompiler.visit_column_check_constraint": [
    "sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler"
  ],
  "sqlalchemy.sql.compiler.DDLCompiler.visit_computed_column": [
    "sqlalchemy.dialects.firebird.base.FBDDLCompiler",
    "sqlalchemy.dialects.mssql.base.MSDDLCompiler",
    "sqlalchemy.dialects.oracle.base.OracleDDLCompiler",
    "sqlalchemy.dialects.postgresql.base.PGDDLCompiler"
  ],
  "sqlalchemy.sql.compiler.DDLCompiler.visit_create_index": [
    "sqlalchemy.dialects.mssql.base.MSDDLCompiler",
    "sqlalchemy.dialects.mysql.base.MySQLDDLCompiler",
    "sqlalchemy.dialects.oracle.base.OracleDDLCompiler",
    "sqlalchemy.dialects.postgresql.base.PGDDLCompiler",
    "sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler"
  ],
  "sqlalchemy.sql.compiler.DDLCompiler.visit_create_sequence": [
    "sqlalchemy.dialects.firebird.base.FBDDLCompiler",
    "sqlalchemy.dialects.mssql.base.MSDDLCompiler",
    "sqlalchemy.dialects.postgresql.base.PGDDLCompiler"
  ],
  "sqlalchemy.sql.compiler.DDLCompiler.visit_drop_constraint": [
    "sqlalchemy.dialects.mysql.base.MySQLDDLCompiler"
  ],
  "sqlalchemy.sql.compiler.DDLCompiler.visit_drop_index": [
    "sqlalchemy.dialects.mssql.base.MSDDLCompiler",
    "sqlalchemy.dialects.mysql.base.MySQLDDLCompiler",
    "sqlalchemy.dialects.postgresql.base.PGDDLCompiler",
    "sqlalchemy.dialects.sybase.base.SybaseDDLCompiler"
  ],
  "sqlalchemy.sql.compiler.DDLCompiler.visit_drop_sequence": [
    "sqlalchemy.dialects.firebird.base.FBDDLCompiler"
  ],
  "sqlalchemy.sql.compiler.DDLCompiler.visit_drop_table_comment": [
    "sqlalchemy.dialects.mysql.base.MySQLDDLCompiler",
    "sqlalchemy.dialects.oracle.base.OracleDDLCompiler",
    "sqlalchemy.dialects.postgresql.base.PGDDLCompiler"
  ],
  "sqlalchemy.sql.compiler.DDLCompiler.visit_foreign_key_constraint": [
    "sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler"
  ],
  "sqlalchemy.sql.compiler.DDLCompiler.visit_identity_column": [
    "sqlalchemy.dialects.mssql.base.MSDDLCompiler",
    "sqlalchemy.dialects.oracle.base.OracleDDLCompiler"
  ],
  "sqlalchemy.sql.compiler.DDLCompiler.visit_primary_key_constraint": [
    "sqlalchemy.dialects.mssql.base.MSDDLCompiler",
    "sqlalchemy.dialects.mysql.base.MySQLDDLCompiler",
    "sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler"
  ],
  "sqlalchemy.sql.compiler.DDLCompiler.visit_set_column_comment": [
    "sqlalchemy.dialects.mysql.base.MySQLDDLCompiler"
  ],
  "sqlalchemy.sql.compiler.DDLCompiler.visit_set_table_comment": [
    "sqlalchemy.dialects.mysql.base.MySQLDDLCompiler"
  ],
  "sqlalchemy.sql.compiler.DDLCompiler.visit_unique_constraint": [
    "sqlalchemy.dialects.mssql.base.MSDDLCompiler",
    "sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler"
  ],
  "sqlalchemy.sql.compiler.GenericTypeCompiler.visit_BIGINT": [
    "sqlalchemy.dialects.mysql.base.MySQLTypeCompiler",
    "sqlalchemy.dialects.postgresql.base.PGTypeCompiler"
  ],
  "sqlalchemy.sql.compiler.GenericTypeCompiler.visit_BLOB": [
    "sqlalchemy.dialects.firebird.base.FBTypeCompiler",
    "sqlalchemy.dialects.mysql.base.MySQLTypeCompiler"
  ],
  "sqlalchemy.sql.compiler.GenericTypeCompiler.visit_BOOLEAN": [
    "sqlalchemy.dialects.mysql.base.MySQLTypeCompiler"
  ],
  "sqlalchemy.sql.compiler.GenericTypeCompiler.visit_CHAR": [
    "sqlalchemy.dialects.firebird.base.FBTypeCompiler",
    "sqlalchemy.dialects.mssql.base.MSTypeCompiler",
    "sqlalchemy.dialects.mysql.base.MySQLTypeCompiler"
  ],
  "sqlalchemy.sql.compiler.GenericTypeCompiler.visit_DATE": [
    "sqlalchemy.dialects.mysql.base.MySQLTypeCompiler",
    "sqlalchemy.dialects.sqlite.base.SQLiteTypeCompiler"
  ],
  "sqlalchemy.sql.compiler.GenericTypeCompiler.visit_DATETIME": [
    "sqlalchemy.dialects.mysql.base.MySQLTypeCompiler",
    "sqlalchemy.dialects.sqlite.base.SQLiteTypeCompiler"
  ],
  "sqlalchemy.sql.compiler.GenericTypeCompiler.visit_DECIMAL": [
    "sqlalchemy.dialects.mysql.base.MySQLTypeCompiler"
  ],
  "sqlalchemy.sql.compiler.GenericTypeCompiler.visit_FLOAT": [
    "sqlalchemy.dialects.mssql.base.MSTypeCompiler",
    "sqlalchemy.dialects.mysql.base.MySQLTypeCompiler",
    "sqlalchemy.dialects.oracle.base.OracleTypeCompiler",
    "sqlalchemy.dialects.postgresql.base.PGTypeCompiler"
  ],
  "sqlalchemy.sql.compiler.GenericTypeCompiler.visit_INTEGER": [
    "sqlalchemy.dialects.mysql.base.MySQLTypeCompiler"
  ],
  "sqlalchemy.sql.compiler.GenericTypeCompiler.visit_NCHAR": [
    "sqlalchemy.dialects.mssql.base.MSTypeCompiler",
    "sqlalchemy.dialects.mysql.base.MySQLTypeCompiler"
  ],
  "sqlalchemy.sql.compiler.GenericTypeCompiler.visit_NUMERIC": [
    "sqlalchemy.dialects.mysql.base.MySQLTypeCompiler"
  ],
  "sqlalchemy.sql.compiler.GenericTypeCompiler.visit_NVARCHAR": [
    "sqlalchemy.dialects.mssql.base.MSTypeCompiler",
    "sqlalchemy.dialects.mysql.base.MySQLTypeCompiler"
  ],
  "sqlalchemy.sql.compiler.GenericTypeCompiler.visit_REAL": [
    "sqlalchemy.dialects.mysql.base.MySQLTypeCompiler"
  ],
  "sqlalchemy.sql.compiler.GenericTypeCompiler.visit_SMALLINT": [
    "sqlalchemy.dialects.mysql.base.MySQLTypeCompiler"
  ],
  "sqlalchemy.sql.compiler.GenericTypeCompiler.visit_TEXT": [
    "sqlalchemy.dialects.firebird.base.FBTypeCompiler",
    "sqlalchemy.dialects.mssql.base.MSTypeCompiler",
    "sqlalchemy.dialects.mysql.base.MySQLTypeCompiler"
  ],
  "sqlalchemy.sql.compiler.GenericTypeCompiler.visit_TIME": [
    "sqlalchemy.dialects.mssql.base.MSTypeCompiler",
    "sqlalchemy.dialects.mysql.base.MySQLTypeCompiler",
    "sqlalchemy.dialects.postgresql.base.PGTypeCompiler",
    "sqlalchemy.dialects.sqlite.base.SQLiteTypeCompiler"
  ],
  "sqlalchemy.sql.compiler.GenericTypeCompiler.visit_TIMESTAMP": [
    "sqlalchemy.dialects.mssql.base.MSTypeCompiler",
    "sqlalchemy.dialects.mysql.base.MySQLTypeCompiler",
    "sqlalchemy.dialects.oracle.base.OracleTypeCompiler",
    "sqlalchemy.dialects.postgresql.base.PGTypeCompiler"
  ],
  "sqlalchemy.sql.compiler.GenericTypeCompiler.visit_VARBINARY": [
    "sqlalchemy.dialects.mssql.base.MSTypeCompiler",
    "sqlalchemy.dialects.mysql.base.MySQLTypeCompiler"
  ],
  "sqlalchemy.sql.compiler.GenericTypeCompiler.visit_VARCHAR": [
    "sqlalchemy.dialects.firebird.base.FBTypeCompiler",
    "sqlalchemy.dialects.mssql.base.MSTypeCompiler",
    "sqlalchemy.dialects.mysql.base.MySQLTypeCompiler",
    "sqlalchemy.dialects.oracle.base.OracleTypeCompiler"
  ],
  "sqlalchemy.sql.compiler.GenericTypeCompiler.visit_big_integer": [
    "sqlalchemy.dialects.oracle.base.OracleTypeCompiler"
  ],
  "sqlalchemy.sql.compiler.GenericTypeCompiler.visit_boolean": [
    "sqlalchemy.dialects.firebird.base.FBTypeCompiler",
    "sqlalchemy.dialects.mssql.base.MSTypeCompiler",
    "sqlalchemy.dialects.oracle.base.OracleTypeCompiler",
    "sqlalchemy.dialects.sybase.base.SybaseTypeCompiler"
  ],
  "sqlalchemy.sql.compiler.GenericTypeCompiler.visit_date": [
    "sqlalchemy.dialects.mssql.base.MSTypeCompiler"
  ],
  "sqlalchemy.sql.compiler.GenericTypeCompiler.visit_datetime": [
    "sqlalchemy.dialects.firebird.base.FBTypeCompiler",
    "sqlalchemy.dialects.mssql.base.MSTypeCompiler",
    "sqlalchemy.dialects.oracle.base.OracleTypeCompiler",
    "sqlalchemy.dialects.postgresql.base.PGTypeCompiler"
  ],
  "sqlalchemy.sql.compiler.GenericTypeCompiler.visit_enum": [
    "sqlalchemy.dialects.mysql.base.MySQLTypeCompiler",
    "sqlalchemy.dialects.postgresql.base.PGTypeCompiler"
  ],
  "sqlalchemy.sql.compiler.GenericTypeCompiler.visit_float": [
    "sqlalchemy.dialects.oracle.base.OracleTypeCompiler"
  ],
  "sqlalchemy.sql.compiler.GenericTypeCompiler.visit_large_binary": [
    "sqlalchemy.dialects.mssql.base.MSTypeCompiler",
    "sqlalchemy.dialects.mysql.base.MySQLTypeCompiler",
    "sqlalchemy.dialects.oracle.base.OracleTypeCompiler",
    "sqlalchemy.dialects.postgresql.base.PGTypeCompiler",
    "sqlalchemy.dialects.sqlite.base.SQLiteTypeCompiler",
    "sqlalchemy.dialects.sybase.base.SybaseTypeCompiler"
  ],
  "sqlalchemy.sql.compiler.GenericTypeCompiler.visit_null": [
    "sqlalchemy.sql.compiler.StrSQLTypeCompiler"
  ],
  "sqlalchemy.sql.compiler.GenericTypeCompiler.visit_string": [
    "sqlalchemy.dialects.oracle.base.OracleTypeCompiler"
  ],
  "sqlalchemy.sql.compiler.GenericTypeCompiler.visit_text": [
    "sqlalchemy.dialects.mssql.base.MSTypeCompiler",
    "sqlalchemy.dialects.oracle.base.OracleTypeCompiler"
  ],
  "sqlalchemy.sql.compiler.GenericTypeCompiler.visit_time": [
    "sqlalchemy.dialects.mssql.base.MSTypeCompiler"
  ],
  "sqlalchemy.sql.compiler.GenericTypeCompiler.visit_unicode": [
    "sqlalchemy.dialects.mssql.base.MSTypeCompiler",
    "sqlalchemy.dialects.oracle.base.OracleTypeCompiler",
    "sqlalchemy.dialects.sybase.base.SybaseTypeCompiler"
  ],
  "sqlalchemy.sql.compiler.GenericTypeCompiler.visit_unicode_text": [
    "sqlalchemy.dialects.mssql.base.MSTypeCompiler",
    "sqlalchemy.dialects.oracle.base.OracleTypeCompiler"
  ],
  "sqlalchemy.sql.compiler.GenericTypeCompiler.visit_user_defined": [
    "sqlalchemy.sql.compiler.StrSQLTypeCompiler"
  ],
  "sqlalchemy.sql.compiler.IdentifierPreparer.__init__": [
    "sqlalchemy.dialects.firebird.base.FBIdentifierPreparer",
    "sqlalchemy.dialects.mssql.base.MSIdentifierPreparer",
    "sqlalchemy.dialects.mysql.base.MySQLIdentifierPreparer"
  ],
  "sqlalchemy.sql.compiler.IdentifierPreparer.format_savepoint": [
    "sqlalchemy.dialects.oracle.base.OracleIdentifierPreparer"
  ],
  "sqlalchemy.sql.compiler.IdentifierPreparer.quote_schema": [
    "sqlalchemy.dialects.mssql.base.MSIdentifierPreparer"
  ],
  "sqlalchemy.sql.compiler.SQLCompiler.__init__": [
    "sqlalchemy.dialects.mssql.base.MSSQLCompiler",
    "sqlalchemy.dialects.oracle.base.OracleCompiler"
  ],
  "sqlalchemy.sql.compiler.SQLCompiler.bindparam_string": [
    "sqlalchemy.dialects.oracle.cx_oracle.OracleCompiler_cx_oracle",
    "sqlalchemy.dialects.sybase.pysybase.SybaseSQLCompiler_pysybase"
  ],
  "sqlalchemy.sql.compiler.SQLCompiler.default_from": [
    "sqlalchemy.dialects.firebird.base.FBCompiler",
    "sqlalchemy.dialects.mysql.base.MySQLCompiler",
    "sqlalchemy.dialects.oracle.base.OracleCompiler"
  ],
  "sqlalchemy.sql.compiler.SQLCompiler.delete_extra_from_clause": [
    "sqlalchemy.dialects.mssql.base.MSSQLCompiler",
    "sqlalchemy.dialects.mysql.base.MySQLCompiler",
    "sqlalchemy.dialects.postgresql.base.PGCompiler",
    "sqlalchemy.dialects.sybase.base.SybaseSQLCompiler",
    "sqlalchemy.sql.compiler.StrSQLCompiler"
  ],
  "sqlalchemy.sql.compiler.SQLCompiler.delete_table_clause": [
    "sqlalchemy.dialects.mssql.base.MSSQLCompiler",
    "sqlalchemy.dialects.mysql.base.MySQLCompiler",
    "sqlalchemy.dialects.sybase.base.SybaseSQLCompiler"
  ],
  "sqlalchemy.sql.compiler.SQLCompiler.escape_literal_column": [
    "sqlalchemy.dialects.mysql.mysqlconnector.MySQLCompiler_mysqlconnector"
  ],
  "sqlalchemy.sql.compiler.SQLCompiler.fetch_clause": [
    "sqlalchemy.dialects.mssql.base.MSSQLCompiler",
    "sqlalchemy.dialects.postgresql.base.PGCompiler"
  ],
  "sqlalchemy.sql.compiler.SQLCompiler.for_update_clause": [
    "sqlalchemy.dialects.mssql.base.MSSQLCompiler",
    "sqlalchemy.dialects.mysql.base.MySQLCompiler",
    "sqlalchemy.dialects.oracle.base.OracleCompiler",
    "sqlalchemy.dialects.postgresql.base.PGCompiler",
    "sqlalchemy.dialects.sqlite.base.SQLiteCompiler",
    "sqlalchemy.dialects.sybase.base.SybaseSQLCompiler"
  ],
  "sqlalchemy.sql.compiler.SQLCompiler.format_from_hint_text": [
    "sqlalchemy.dialects.postgresql.base.PGCompiler"
  ],
  "sqlalchemy.sql.compiler.SQLCompiler.function_argspec": [
    "sqlalchemy.dialects.firebird.base.FBCompiler",
    "sqlalchemy.dialects.oracle.base.OracleCompiler"
  ],
  "sqlalchemy.sql.compiler.SQLCompiler.get_crud_hint_text": [
    "sqlalchemy.dialects.mssql.base.MSSQLCompiler"
  ],
  "sqlalchemy.sql.compiler.SQLCompiler.get_cte_preamble": [
    "sqlalchemy.dialects.mssql.base.MSSQLCompiler",
    "sqlalchemy.dialects.oracle.base.OracleCompiler"
  ],
  "sqlalchemy.sql.compiler.SQLCompiler.get_from_hint_text": [
    "sqlalchemy.dialects.mssql.base.MSSQLCompiler",
    "sqlalchemy.dialects.mysql.base.MySQLCompiler",
    "sqlalchemy.dialects.sybase.base.SybaseSQLCompiler",
    "sqlalchemy.sql.compiler.StrSQLCompiler"
  ],
  "sqlalchemy.sql.compiler.SQLCompiler.get_render_as_alias_suffix": [
    "sqlalchemy.dialects.oracle.base.OracleCompiler"
  ],
  "sqlalchemy.sql.compiler.SQLCompiler.get_select_hint_text": [
    "sqlalchemy.dialects.oracle.base.OracleCompiler"
  ],
  "sqlalchemy.sql.compiler.SQLCompiler.get_select_precolumns": [
    "sqlalchemy.dialects.firebird.base.FBCompiler",
    "sqlalchemy.dialects.mssql.base.MSSQLCompiler",
    "sqlalchemy.dialects.mysql.base.MySQLCompiler",
    "sqlalchemy.dialects.postgresql.base.PGCompiler"
  ],
  "sqlalchemy.sql.compiler.SQLCompiler.limit_clause": [
    "sqlalchemy.dialects.firebird.base.FBCompiler",
    "sqlalchemy.dialects.mssql.base.MSSQLCompiler",
    "sqlalchemy.dialects.mysql.base.MySQLCompiler",
    "sqlalchemy.dialects.oracle.base.OracleCompiler",
    "sqlalchemy.dialects.postgresql.base.PGCompiler",
    "sqlalchemy.dialects.sqlite.base.SQLiteCompiler",
    "sqlalchemy.dialects.sybase.base.SybaseSQLCompiler"
  ],
  "sqlalchemy.sql.compiler.SQLCompiler.order_by_clause": [
    "sqlalchemy.dialects.mssql.base.MSSQLCompiler",
    "sqlalchemy.dialects.sybase.base.SybaseSQLCompiler"
  ],
  "sqlalchemy.sql.compiler.SQLCompiler.post_process_text": [
    "sqlalchemy.dialects.mysql.mysqlconnector.MySQLCompiler_mysqlconnector",
    "sqlalchemy.dialects.postgresql.pygresql._PGCompiler"
  ],
  "sqlalchemy.sql.compiler.SQLCompiler.render_literal_value": [
    "sqlalchemy.dialects.mssql.base.MSSQLStrictCompiler",
    "sqlalchemy.dialects.mysql.base.MySQLCompiler",
    "sqlalchemy.dialects.postgresql.base.PGCompiler"
  ],
  "sqlalchemy.sql.compiler.SQLCompiler.returning_clause": [
    "sqlalchemy.dialects.firebird.base.FBCompiler",
    "sqlalchemy.dialects.mssql.base.MSSQLCompiler",
    "sqlalchemy.dialects.oracle.base.OracleCompiler",
    "sqlalchemy.dialects.postgresql.base.PGCompiler",
    "sqlalchemy.sql.compiler.StrSQLCompiler"
  ],
  "sqlalchemy.sql.compiler.SQLCompiler.translate_select_structure": [
    "sqlalchemy.dialects.mssql.base.MSSQLCompiler",
    "sqlalchemy.dialects.oracle.base.OracleCompiler"
  ],
  "sqlalchemy.sql.compiler.SQLCompiler.update_from_clause": [
    "sqlalchemy.dialects.mssql.base.MSSQLCompiler",
    "sqlalchemy.dialects.mysql.base.MySQLCompiler",
    "sqlalchemy.dialects.postgresql.base.PGCompiler",
    "sqlalchemy.sql.compiler.StrSQLCompiler"
  ],
  "sqlalchemy.sql.compiler.SQLCompiler.update_limit_clause": [
    "sqlalchemy.dialects.mysql.base.MySQLCompiler"
  ],
  "sqlalchemy.sql.compiler.SQLCompiler.update_tables_clause": [
    "sqlalchemy.dialects.mysql.base.MySQLCompiler"
  ],
  "sqlalchemy.sql.compiler.SQLCompiler.visit_alias": [
    "sqlalchemy.dialects.firebird.base.FBCompiler",
    "sqlalchemy.dialects.mssql.base.MSSQLCompiler"
  ],
  "sqlalchemy.sql.compiler.SQLCompiler.visit_binary": [
    "sqlalchemy.dialects.mssql.base.MSSQLCompiler"
  ],
  "sqlalchemy.sql.compiler.SQLCompiler.visit_cast": [
    "sqlalchemy.dialects.mysql.base.MySQLCompiler",
    "sqlalchemy.dialects.sqlite.base.SQLiteCompiler"
  ],
  "sqlalchemy.sql.compiler.SQLCompiler.visit_column": [
    "sqlalchemy.dialects.mssql.base.MSSQLCompiler"
  ],
  "sqlalchemy.sql.compiler.SQLCompiler.visit_empty_set_expr": [
    "sqlalchemy.dialects.mssql.base.MSSQLCompiler",
    "sqlalchemy.dialects.mysql.base.MySQLCompiler",
    "sqlalchemy.dialects.oracle.base.OracleCompiler",
    "sqlalchemy.dialects.postgresql.base.PGCompiler",
    "sqlalchemy.dialects.sqlite.base.SQLiteCompiler",
    "sqlalchemy.sql.compiler.StrSQLCompiler"
  ],
  "sqlalchemy.sql.compiler.SQLCompiler.visit_empty_set_op_expr": [
    "sqlalchemy.dialects.sqlite.base.SQLiteCompiler"
  ],
  "sqlalchemy.sql.compiler.SQLCompiler.visit_extract": [
    "sqlalchemy.dialects.mssql.base.MSSQLCompiler",
    "sqlalchemy.dialects.sqlite.base.SQLiteCompiler",
    "sqlalchemy.dialects.sybase.base.SybaseSQLCompiler"
  ],
  "sqlalchemy.sql.compiler.SQLCompiler.visit_false": [
    "sqlalchemy.dialects.mssql.base.MSSQLCompiler",
    "sqlalchemy.dialects.mysql.base.MySQLCompiler",
    "sqlalchemy.dialects.oracle.base.OracleCompiler",
    "sqlalchemy.dialects.sqlite.base.SQLiteCompiler"
  ],
  "sqlalchemy.sql.compiler.SQLCompiler.visit_function": [
    "sqlalchemy.dialects.oracle.base.OracleCompiler"
  ],
  "sqlalchemy.sql.compiler.SQLCompiler.visit_ilike_op_binary": [
    "sqlalchemy.dialects.postgresql.base.PGCompiler"
  ],
  "sqlalchemy.sql.compiler.SQLCompiler.visit_join": [
    "sqlalchemy.dialects.mysql.base.MySQLCompiler",
    "sqlalchemy.dialects.oracle.base.OracleCompiler"
  ],
  "sqlalchemy.sql.compiler.SQLCompiler.visit_mod_binary": [
    "sqlalchemy.dialects.firebird.base.FBCompiler",
    "sqlalchemy.dialects.mysql.mysqlconnector.MySQLCompiler_mysqlconnector",
    "sqlalchemy.dialects.oracle.base.OracleCompiler",
    "sqlalchemy.dialects.postgresql.pg8000.PGCompiler_pg8000",
    "sqlalchemy.dialects.postgresql.pygresql._PGCompiler"
  ],
  "sqlalchemy.sql.compiler.SQLCompiler.visit_not_ilike_op_binary": [
    "sqlalchemy.dialects.postgresql.base.PGCompiler"
  ],
  "sqlalchemy.sql.compiler.SQLCompiler.visit_not_in_op_binary": [
    "sqlalchemy.dialects.mssql.base.MSSQLStrictCompiler"
  ],
  "sqlalchemy.sql.compiler.SQLCompiler.visit_not_regexp_match_op_binary": [
    "sqlalchemy.dialects.mysql.base.MySQLCompiler",
    "sqlalchemy.dialects.oracle.base.OracleCompiler",
    "sqlalchemy.dialects.postgresql.base.PGCompiler",
    "sqlalchemy.dialects.sqlite.base.SQLiteCompiler",
    "sqlalchemy.sql.compiler.StrSQLCompiler"
  ],
  "sqlalchemy.sql.compiler.SQLCompiler.visit_not_startswith_op_binary": [
    "sqlalchemy.dialects.firebird.base.FBCompiler"
  ],
  "sqlalchemy.sql.compiler.SQLCompiler.visit_regexp_match_op_binary": [
    "sqlalchemy.dialects.mysql.base.MySQLCompiler",
    "sqlalchemy.dialects.oracle.base.OracleCompiler",
    "sqlalchemy.dialects.postgresql.base.PGCompiler",
    "sqlalchemy.dialects.sqlite.base.SQLiteCompiler",
    "sqlalchemy.sql.compiler.StrSQLCompiler"
  ],
  "sqlalchemy.sql.compiler.SQLCompiler.visit_regexp_replace_op_binary": [
    "sqlalchemy.dialects.mysql.base.MySQLCompiler",
    "sqlalchemy.dialects.oracle.base.OracleCompiler",
    "sqlalchemy.dialects.postgresql.base.PGCompiler",
    "sqlalchemy.sql.compiler.StrSQLCompiler"
  ],
  "sqlalchemy.sql.compiler.SQLCompiler.visit_rollback_to_savepoint": [
    "sqlalchemy.dialects.mssql.base.MSSQLCompiler"
  ],
  "sqlalchemy.sql.compiler.SQLCompiler.visit_savepoint": [
    "sqlalchemy.dialects.mssql.base.MSSQLCompiler"
  ],
  "sqlalchemy.sql.compiler.SQLCompiler.visit_sequence": [
    "sqlalchemy.dialects.firebird.base.FBCompiler",
    "sqlalchemy.dialects.mssql.base.MSSQLCompiler",
    "sqlalchemy.dialects.mysql.base.MySQLCompiler",
    "sqlalchemy.dialects.oracle.base.OracleCompiler",
    "sqlalchemy.dialects.postgresql.base.PGCompiler",
    "sqlalchemy.sql.compiler.StrSQLCompiler"
  ],
  "sqlalchemy.sql.compiler.SQLCompiler.visit_startswith_op_binary": [
    "sqlalchemy.dialects.firebird.base.FBCompiler"
  ],
  "sqlalchemy.sql.compiler.SQLCompiler.visit_table": [
    "sqlalchemy.dialects.mssql.base.MSSQLCompiler"
  ],
  "sqlalchemy.sql.compiler.SQLCompiler.visit_table_valued_column": [
    "sqlalchemy.dialects.oracle.base.OracleCompiler"
  ],
  "sqlalchemy.sql.compiler.SQLCompiler.visit_true": [
    "sqlalchemy.dialects.mssql.base.MSSQLCompiler",
    "sqlalchemy.dialects.mysql.base.MySQLCompiler",
    "sqlalchemy.dialects.oracle.base.OracleCompiler",
    "sqlalchemy.dialects.sqlite.base.SQLiteCompiler"
  ],
  "sqlalchemy.sql.compiler.SQLCompiler.visit_typeclause": [
    "sqlalchemy.dialects.mysql.base.MySQLCompiler"
  ],
  "sqlalchemy.sql.compiler.TypeCompiler.process": [
    "sqlalchemy.sql.compiler.StrSQLTypeCompiler"
  ],
  "sqlalchemy.sql.ddl.DDLBase.__init__": [
    "sqlalchemy.dialects.postgresql.base.ENUM.EnumDropper",
    "sqlalchemy.dialects.postgresql.base.ENUM.EnumGenerator",
    "sqlalchemy.sql.ddl.SchemaDropper",
    "sqlalchemy.sql.ddl.SchemaGenerator"
  ],
  "sqlalchemy.sql.ddl._CreateDropBase.__init__": [
    "sqlalchemy.sql.ddl.AddConstraint",
    "sqlalchemy.sql.ddl.CreateIndex",
    "sqlalchemy.sql.ddl.CreateSchema",
    "sqlalchemy.sql.ddl.CreateTable",
    "sqlalchemy.sql.ddl.DropConstraint",
    "sqlalchemy.sql.ddl.DropIndex",
    "sqlalchemy.sql.ddl.DropSchema",
    "sqlalchemy.sql.ddl.DropTable"
  ],
  "sqlalchemy.sql.dml.DMLState.__init__": [
    "sqlalchemy.sql.dml.DeleteDMLState",
    "sqlalchemy.sql.dml.InsertDMLState",
    "sqlalchemy.sql.dml.UpdateDMLState"
  ],
  "sqlalchemy.sql.dml.ValuesBase.__init__": [
    "sqlalchemy.sql.dml.Insert"
  ],
  "sqlalchemy.sql.elements.BinaryExpression.__init__": [
    "sqlalchemy.sql.functions.FunctionAsBinary"
  ],
  "sqlalchemy.sql.elements.BinaryExpression.left": [
    "sqlalchemy.sql.functions.FunctionAsBinary"
  ],
  "sqlalchemy.sql.elements.BinaryExpression.left@setter": [
    "sqlalchemy.sql.functions.FunctionAsBinary"
  ],
  "sqlalchemy.sql.elements.BinaryExpression.right": [
    "sqlalchemy.sql.functions.FunctionAsBinary"
  ],
  "sqlalchemy.sql.elements.BinaryExpression.right@setter": [
    "sqlalchemy.sql.functions.FunctionAsBinary"
  ],
  "sqlalchemy.sql.elements.Cast.__init__": [
    "sqlalchemy.dialects.mssql.base.TryCast",
    "sqlalchemy.dialects.postgresql.base._ColonCast"
  ],
  "sqlalchemy.sql.elements.ClauseElement.__bool__": [
    "sqlalchemy.sql.elements.BinaryExpression"
  ],
  "sqlalchemy.sql.elements.ClauseElement.__nonzero__": [
    "sqlalchemy.sql.elements.BinaryExpression"
  ],
  "sqlalchemy.sql.elements.ClauseElement.bind": [
    "sqlalchemy.sql.schema.Table",
    "sqlalchemy.sql.selectable.AliasedReturnsRows",
    "sqlalchemy.sql.selectable.Join"
  ],
  "sqlalchemy.sql.elements.ClauseElement.compare": [
    "sqlalchemy.sql.crud._multiparam_column"
  ],
  "sqlalchemy.sql.elements.ClauseElement.description": [
    "sqlalchemy.sql.elements.NamedColumn"
  ],
  "sqlalchemy.sql.elements.ClauseElement.entity_namespace": [
    "sqlalchemy.sql.elements.ColumnClause",
    "sqlalchemy.sql.selectable.FromClause"
  ],
  "sqlalchemy.sql.elements.ClauseElement.params": [
    "sqlalchemy.sql.dml.UpdateBase"
  ],
  "sqlalchemy.sql.elements.ClauseElement.self_group": [
    "sqlalchemy.sql.elements.ClauseList",
    "sqlalchemy.sql.elements.ColumnElement",
    "sqlalchemy.sql.elements.GroupedElement",
    "sqlalchemy.sql.elements.TextClause",
    "sqlalchemy.sql.selectable.CompoundSelect",
    "sqlalchemy.sql.selectable.Join",
    "sqlalchemy.sql.selectable.Select"
  ],
  "sqlalchemy.sql.elements.ClauseElement.stringify_dialect": [
    "sqlalchemy.sql.ddl._CreateDropBase"
  ],
  "sqlalchemy.sql.elements.ClauseList.__init__": [
    "sqlalchemy.dialects.postgresql.array.array",
    "sqlalchemy.sql.elements.BooleanClauseList",
    "sqlalchemy.sql.elements.Tuple"
  ],
  "sqlalchemy.sql.elements.ClauseList.self_group": [
    "sqlalchemy.dialects.postgresql.array.array",
    "sqlalchemy.sql.elements.BooleanClauseList",
    "sqlalchemy.sql.elements.Tuple"
  ],
  "sqlalchemy.sql.elements.ColumnElement.__getattr__": [
    "sqlalchemy.sql.elements.Grouping"
  ],
  "sqlalchemy.sql.elements.ColumnElement.foreign_keys": [
    "sqlalchemy.sql.elements.Label"
  ],
  "sqlalchemy.sql.elements.ColumnElement.operate": [
    "sqlalchemy.sql.elements.CollectionAggregate"
  ],
  "sqlalchemy.sql.elements.ColumnElement.primary_key": [
    "sqlalchemy.sql.elements.Label"
  ],
  "sqlalchemy.sql.elements.ColumnElement.proxy_set": [
    "sqlalchemy.sql.compiler._CompileLabel"
  ],
  "sqlalchemy.sql.elements.ColumnElement.reverse_operate": [
    "sqlalchemy.sql.elements.CollectionAggregate"
  ],
  "sqlalchemy.sql.elements.ColumnElement.self_group": [
    "sqlalchemy.dialects.postgresql.ext.aggregate_order_by",
    "sqlalchemy.sql.compiler._CompileLabel",
    "sqlalchemy.sql.elements.BinaryExpression",
    "sqlalchemy.sql.elements.FunctionFilter",
    "sqlalchemy.sql.elements.Label",
    "sqlalchemy.sql.elements.Slice",
    "sqlalchemy.sql.elements.TypeCoerce",
    "sqlalchemy.sql.elements.UnaryExpression",
    "sqlalchemy.sql.functions.FunctionElement"
  ],
  "sqlalchemy.sql.elements.ColumnElement.type": [
    "sqlalchemy.sql.compiler._CompileLabel",
    "sqlalchemy.sql.elements.False_",
    "sqlalchemy.sql.elements.FunctionFilter",
    "sqlalchemy.sql.elements.Label",
    "sqlalchemy.sql.elements.Null",
    "sqlalchemy.sql.elements.Over",
    "sqlalchemy.sql.elements.True_",
    "sqlalchemy.sql.elements.WithinGroup"
  ],
  "sqlalchemy.sql.elements.GroupedElement.self_group": [
    "sqlalchemy.sql.selectable.ScalarSelect",
    "sqlalchemy.sql.selectable.SelectStatementGrouping"
  ],
  "sqlalchemy.sql.elements.UnaryExpression.__init__": [
    "sqlalchemy.sql.selectable.Exists"
  ],
  "sqlalchemy.sql.elements.UnaryExpression.self_group": [
    "sqlalchemy.sql.elements.AsBoolean"
  ],
  "sqlalchemy.sql.elements.WrapsColumnExpression.wrapped_column_expression": [
    "sqlalchemy.sql.elements.AsBoolean",
    "sqlalchemy.sql.elements.Cast",
    "sqlalchemy.sql.elements.TypeCoerce"
  ],
  "sqlalchemy.sql.elements._truncated_label.apply_map": [
    "sqlalchemy.sql.elements._anonymous_label"
  ],
  "sqlalchemy.sql.elements.quoted_name.__new__": [
    "sqlalchemy.sql.elements._truncated_label"
  ],
  "sqlalchemy.sql.elements.quoted_name.__reduce__": [
    "sqlalchemy.sql.elements._truncated_label"
  ],
  "sqlalchemy.sql.functions.FunctionElement.__init__": [
    "sqlalchemy.sql.functions.Function"
  ],
  "sqlalchemy.sql.functions.GenericFunction.__init__": [
    "sqlalchemy.sql.functions.AnsiFunction",
    "sqlalchemy.sql.functions.ReturnTypeFromArgs",
    "sqlalchemy.sql.functions.array_agg",
    "sqlalchemy.sql.functions.char_length",
    "sqlalchemy.sql.functions.count",
    "sqlalchemy.sql.functions.next_value"
  ],
  "sqlalchemy.sql.lambdas.LambdaElement.__init__": [
    "sqlalchemy.sql.lambdas.DeferredLambdaElement"
  ],
  "sqlalchemy.sql.operators.ColumnOperators.__add__": [
    "sqlalchemy.dialects.postgresql.ranges.RangeOperators.comparator_factory"
  ],
  "sqlalchemy.sql.operators.ColumnOperators.__eq__": [
    "sqlalchemy.ext.associationproxy.ColumnAssociationProxyInstance"
  ],
  "sqlalchemy.sql.operators.ColumnOperators.__getitem__": [
    "sqlalchemy.sql.lambdas.PyWrapper"
  ],
  "sqlalchemy.sql.operators.ColumnOperators.contains": [
    "sqlalchemy.dialects.postgresql.hstore.HSTORE.Comparator",
    "sqlalchemy.dialects.postgresql.json.JSONB.Comparator",
    "sqlalchemy.dialects.postgresql.ranges.RangeOperators.comparator_factory",
    "sqlalchemy.orm.relationships.RelationshipProperty.Comparator",
    "sqlalchemy.sql.sqltypes.ARRAY.Comparator"
  ],
  "sqlalchemy.sql.operators.ColumnOperators.in_": [
    "sqlalchemy.orm.relationships.RelationshipProperty.Comparator"
  ],
  "sqlalchemy.sql.operators.Operators.operate": [
    "sqlalchemy.ext.associationproxy.ColumnAssociationProxyInstance",
    "sqlalchemy.ext.hybrid.ExprComparator",
    "sqlalchemy.orm.attributes.QueryableAttribute",
    "sqlalchemy.orm.evaluator._NoObject",
    "sqlalchemy.orm.properties.ColumnProperty.Comparator",
    "sqlalchemy.sql.elements.ColumnElement",
    "sqlalchemy.sql.lambdas.PyWrapper",
    "sqlalchemy.sql.type_api.TypeEngine.Comparator"
  ],
  "sqlalchemy.sql.operators.Operators.reverse_operate": [
    "sqlalchemy.ext.hybrid.ExprComparator",
    "sqlalchemy.orm.attributes.QueryableAttribute",
    "sqlalchemy.orm.evaluator._NoObject",
    "sqlalchemy.orm.properties.ColumnProperty.Comparator",
    "sqlalchemy.sql.elements.ColumnElement",
    "sqlalchemy.sql.lambdas.PyWrapper",
    "sqlalchemy.sql.type_api.TypeEngine.Comparator"
  ],
  "sqlalchemy.sql.roles.SelectStatementRole.subquery": [
    "sqlalchemy.sql.selectable.SelectBase"
  ],
  "sqlalchemy.sql.roles.StrictFromClauseRole.description": [
    "sqlalchemy.sql.selectable.FromClause"
  ],
  "sqlalchemy.sql.schema.ColumnCollectionConstraint.__init__": [
    "sqlalchemy.dialects.postgresql.ext.ExcludeConstraint",
    "sqlalchemy.sql.schema.CheckConstraint",
    "sqlalchemy.sql.schema.ForeignKeyConstraint",
    "sqlalchemy.sql.schema.PrimaryKeyConstraint"
  ],
  "sqlalchemy.sql.schema.ColumnCollectionConstraint.copy": [
    "sqlalchemy.sql.schema.CheckConstraint",
    "sqlalchemy.sql.schema.ForeignKeyConstraint"
  ],
  "sqlalchemy.sql.schema.ColumnCollectionMixin.__init__": [
    "sqlalchemy.sql.schema.ColumnCollectionConstraint"
  ],
  "sqlalchemy.sql.schema.Constraint.copy": [
    "sqlalchemy.sql.schema.ColumnCollectionConstraint"
  ],
  "sqlalchemy.sql.schema.DefaultGenerator.__init__": [
    "sqlalchemy.sql.schema.ColumnDefault"
  ],
  "sqlalchemy.sql.schema.DefaultGenerator.bind": [
    "sqlalchemy.sql.schema.Sequence"
  ],
  "sqlalchemy.sql.schema.FetchedValue.__init__": [
    "sqlalchemy.sql.schema.Computed",
    "sqlalchemy.sql.schema.DefaultClause"
  ],
  "sqlalchemy.sql.schema.IdentityOptions.__init__": [
    "sqlalchemy.sql.schema.Identity",
    "sqlalchemy.sql.schema.Sequence"
  ],
  "sqlalchemy.sql.schema.MetaData.__init__": [
    "sqlalchemy.sql.schema.ThreadLocalMetaData"
  ],
  "sqlalchemy.sql.schema.MetaData.is_bound": [
    "sqlalchemy.sql.schema.ThreadLocalMetaData"
  ],
  "sqlalchemy.sql.selectable.FromClause.alias": [
    "sqlalchemy.sql.functions.FunctionElement",
    "sqlalchemy.sql.selectable.CTE",
    "sqlalchemy.sql.selectable.FromGrouping",
    "sqlalchemy.sql.selectable.Join",
    "sqlalchemy.sql.selectable.TableValuedAlias",
    "sqlalchemy.sql.selectable.Values"
  ],
  "sqlalchemy.sql.selectable.FromClause.columns": [
    "sqlalchemy.sql.functions.FunctionElement",
    "sqlalchemy.sql.selectable.FromGrouping"
  ],
  "sqlalchemy.sql.selectable.FromClause.description": [
    "sqlalchemy.sql.selectable.AliasedReturnsRows",
    "sqlalchemy.sql.selectable.Join",
    "sqlalchemy.sql.selectable.TableClause"
  ],
  "sqlalchemy.sql.selectable.FromClause.entity_namespace": [
    "sqlalchemy.sql.functions.FunctionElement"
  ],
  "sqlalchemy.sql.selectable.FromClause.exported_columns": [
    "sqlalchemy.sql.functions.FunctionElement"
  ],
  "sqlalchemy.sql.selectable.FromClause.foreign_keys": [
    "sqlalchemy.sql.selectable.FromGrouping"
  ],
  "sqlalchemy.sql.selectable.FromClause.is_derived_from": [
    "sqlalchemy.sql.selectable.AliasedReturnsRows",
    "sqlalchemy.sql.selectable.FromGrouping",
    "sqlalchemy.sql.selectable.Join"
  ],
  "sqlalchemy.sql.selectable.FromClause.join": [
    "sqlalchemy.orm.util._ORMJoin"
  ],
  "sqlalchemy.sql.selectable.FromClause.outerjoin": [
    "sqlalchemy.orm.util._ORMJoin"
  ],
  "sqlalchemy.sql.selectable.FromClause.primary_key": [
    "sqlalchemy.sql.selectable.FromGrouping"
  ],
  "sqlalchemy.sql.selectable.FromClause.select": [
    "sqlalchemy.sql.functions.FunctionElement",
    "sqlalchemy.sql.selectable.Join"
  ],
  "sqlalchemy.sql.selectable.FromClause.table_valued": [
    "sqlalchemy.sql.functions.FunctionElement"
  ],
  "sqlalchemy.sql.selectable.Join.__init__": [
    "sqlalchemy.orm.util._ORMJoin"
  ],
  "sqlalchemy.sql.selectable.ReturnsRows.exported_columns": [
    "sqlalchemy.sql.dml.UpdateBase",
    "sqlalchemy.sql.selectable.FromClause",
    "sqlalchemy.sql.selectable.SelectBase"
  ],
  "sqlalchemy.sql.selectable.SelectBase.selected_columns": [
    "sqlalchemy.sql.selectable.CompoundSelect",
    "sqlalchemy.sql.selectable.Select",
    "sqlalchemy.sql.selectable.SelectStatementGrouping",
    "sqlalchemy.sql.selectable.TextualSelect"
  ],
  "sqlalchemy.sql.selectable.SelectState.all_selected_columns": [
    "sqlalchemy.orm.context.ORMSelectCompileState"
  ],
  "sqlalchemy.sql.selectable.SelectState.determine_last_joined_entity": [
    "sqlalchemy.orm.context.ORMSelectCompileState"
  ],
  "sqlalchemy.sql.selectable.SelectState.from_statement": [
    "sqlalchemy.orm.context.ORMSelectCompileState"
  ],
  "sqlalchemy.sql.selectable.SelectState.get_columns_clause_froms": [
    "sqlalchemy.orm.context.ORMSelectCompileState"
  ],
  "sqlalchemy.sql.selectable.Selectable.lateral": [
    "sqlalchemy.sql.selectable.SelectBase",
    "sqlalchemy.sql.selectable.TableValuedAlias",
    "sqlalchemy.sql.selectable.Values"
  ],
  "sqlalchemy.sql.selectable.TableClause.append_column": [
    "sqlalchemy.sql.schema.Table"
  ],
  "sqlalchemy.sql.sqltypes.ARRAY.__init__": [
    "sqlalchemy.dialects.postgresql.array.ARRAY"
  ],
  "sqlalchemy.sql.sqltypes.ARRAY.compare_values": [
    "sqlalchemy.dialects.postgresql.array.ARRAY"
  ],
  "sqlalchemy.sql.sqltypes.ARRAY.hashable": [
    "sqlalchemy.dialects.postgresql.array.ARRAY"
  ],
  "sqlalchemy.sql.sqltypes.ARRAY.python_type": [
    "sqlalchemy.dialects.postgresql.array.ARRAY"
  ],
  "sqlalchemy.sql.sqltypes.ARRAY.Comparator.contains": [
    "sqlalchemy.dialects.postgresql.array.ARRAY.Comparator"
  ],
  "sqlalchemy.sql.sqltypes.Date.get_dbapi_type": [
    "sqlalchemy.dialects.postgresql.asyncpg.AsyncpgDate"
  ],
  "sqlalchemy.sql.sqltypes.DateTime.__init__": [
    "sqlalchemy.sql.sqltypes.TIMESTAMP"
  ],
  "sqlalchemy.sql.sqltypes.DateTime.get_dbapi_type": [
    "sqlalchemy.dialects.postgresql.asyncpg.AsyncpgDateTime",
    "sqlalchemy.dialects.postgresql.pg8000._PGTimeStamp",
    "sqlalchemy.sql.sqltypes.TIMESTAMP"
  ],
  "sqlalchemy.sql.sqltypes.Enum.bind_processor": [
    "sqlalchemy.dialects.oracle.cx_oracle._OracleEnum"
  ],
  "sqlalchemy.sql.sqltypes.Enum.result_processor": [
    "sqlalchemy.dialects.postgresql.psycopg2._PGEnum"
  ],
  "sqlalchemy.sql.sqltypes.Float.__init__": [
    "sqlalchemy.dialects.mysql.types._MatchType"
  ],
  "sqlalchemy.sql.sqltypes.Integer.get_dbapi_type": [
    "sqlalchemy.dialects.oracle.cx_oracle._OracleInteger",
    "sqlalchemy.dialects.postgresql.asyncpg.AsyncpgBigInteger",
    "sqlalchemy.dialects.postgresql.asyncpg.AsyncpgInteger",
    "sqlalchemy.dialects.postgresql.pg8000._PGBigInteger",
    "sqlalchemy.dialects.postgresql.pg8000._PGInteger",
    "sqlalchemy.dialects.postgresql.pg8000._PGSmallInteger"
  ],
  "sqlalchemy.sql.sqltypes.JSON.__init__": [
    "sqlalchemy.dialects.postgresql.json.JSON"
  ],
  "sqlalchemy.sql.sqltypes.JSON.bind_processor": [
    "sqlalchemy.dialects.postgresql.pygresql._PGJSON",
    "sqlalchemy.dialects.postgresql.pygresql._PGJSONB"
  ],
  "sqlalchemy.sql.sqltypes.JSON.result_processor": [
    "sqlalchemy.dialects.postgresql.asyncpg.AsyncpgJSON",
    "sqlalchemy.dialects.postgresql.asyncpg.AsyncpgJSONB",
    "sqlalchemy.dialects.postgresql.pg8000._PGJSON",
    "sqlalchemy.dialects.postgresql.pg8000._PGJSONB",
    "sqlalchemy.dialects.postgresql.psycopg2._PGJSON",
    "sqlalchemy.dialects.postgresql.psycopg2._PGJSONB",
    "sqlalchemy.dialects.postgresql.pygresql._PGJSON",
    "sqlalchemy.dialects.postgresql.pygresql._PGJSONB",
    "sqlalchemy.dialects.sqlite.base._SQliteJson"
  ],
  "sqlalchemy.sql.sqltypes.JSON.JSONElementType.bind_processor": [
    "sqlalchemy.dialects.postgresql.json.JSONPathType"
  ],
  "sqlalchemy.sql.sqltypes.JSON.JSONElementType.literal_processor": [
    "sqlalchemy.dialects.postgresql.json.JSONPathType"
  ],
  "sqlalchemy.sql.sqltypes.Numeric.__init__": [
    "sqlalchemy.dialects.oracle.base.NUMBER",
    "sqlalchemy.sql.sqltypes.Float"
  ],
  "sqlalchemy.sql.sqltypes.Numeric.bind_processor": [
    "sqlalchemy.dialects.mysql.types.FLOAT",
    "sqlalchemy.dialects.oracle.cx_oracle._OracleNumeric",
    "sqlalchemy.dialects.postgresql.asyncpg.AsyncpgNumeric",
    "sqlalchemy.dialects.postgresql.pg8000._PGNumericNoBind",
    "sqlalchemy.dialects.postgresql.psycopg2._PGNumeric",
    "sqlalchemy.dialects.postgresql.pygresql._PGNumeric",
    "sqlalchemy.dialects.postgresql.pypostgresql.PGNumeric",
    "sqlalchemy.dialects.sybase.pyodbc._SybNumeric_pyodbc"
  ],
  "sqlalchemy.sql.sqltypes.Numeric.get_dbapi_type": [
    "sqlalchemy.dialects.oracle.cx_oracle._OracleBinaryFloat",
    "sqlalchemy.dialects.postgresql.asyncpg.AsyncpgNumeric"
  ],
  "sqlalchemy.sql.sqltypes.Numeric.result_processor": [
    "sqlalchemy.dialects.mssql.pymssql._MSNumeric_pymssql",
    "sqlalchemy.dialects.oracle.cx_oracle._OracleNumeric",
    "sqlalchemy.dialects.postgresql.asyncpg.AsyncpgNumeric",
    "sqlalchemy.dialects.postgresql.pg8000._PGNumeric",
    "sqlalchemy.dialects.postgresql.psycopg2._PGNumeric",
    "sqlalchemy.dialects.postgresql.pygresql._PGNumeric",
    "sqlalchemy.dialects.postgresql.pypostgresql.PGNumeric",
    "sqlalchemy.dialects.sybase.pysybase._SybNumeric",
    "sqlalchemy.sql.sqltypes.Float"
  ],
  "sqlalchemy.sql.sqltypes.SchemaType.create": [
    "sqlalchemy.dialects.postgresql.base.ENUM"
  ],
  "sqlalchemy.sql.sqltypes.SchemaType.drop": [
    "sqlalchemy.dialects.postgresql.base.ENUM"
  ],
  "sqlalchemy.sql.sqltypes.String.__init__": [
    "sqlalchemy.dialects.firebird.base._StringType",
    "sqlalchemy.dialects.mysql.types._StringType",
    "sqlalchemy.sql.sqltypes.Unicode"
  ],
  "sqlalchemy.sql.sqltypes.String.bind_processor": [
    "sqlalchemy.dialects.mysql.enumerated.SET",
    "sqlalchemy.sql.sqltypes.Enum"
  ],
  "sqlalchemy.sql.sqltypes.String.get_dbapi_type": [
    "sqlalchemy.dialects.oracle.cx_oracle._OracleChar",
    "sqlalchemy.dialects.oracle.cx_oracle._OracleLong",
    "sqlalchemy.dialects.oracle.cx_oracle._OracleNChar",
    "sqlalchemy.dialects.oracle.cx_oracle._OracleText",
    "sqlalchemy.dialects.oracle.cx_oracle._OracleUnicodeStringCHAR",
    "sqlalchemy.dialects.oracle.cx_oracle._OracleUnicodeStringNCHAR",
    "sqlalchemy.dialects.oracle.cx_oracle._OracleUnicodeTextCLOB",
    "sqlalchemy.dialects.oracle.cx_oracle._OracleUnicodeTextNCLOB",
    "sqlalchemy.dialects.postgresql.asyncpg.AsyncPgEnum",
    "sqlalchemy.dialects.postgresql.pg8000._PGEnum"
  ],
  "sqlalchemy.sql.sqltypes.String.literal_processor": [
    "sqlalchemy.sql.sqltypes.Enum"
  ],
  "sqlalchemy.sql.sqltypes.String.python_type": [
    "sqlalchemy.sql.sqltypes.Enum"
  ],
  "sqlalchemy.sql.sqltypes.String.result_processor": [
    "sqlalchemy.dialects.mysql.enumerated.SET",
    "sqlalchemy.sql.sqltypes.Enum"
  ],
  "sqlalchemy.sql.sqltypes.TIMESTAMP.__init__": [
    "sqlalchemy.dialects.mysql.types.TIMESTAMP",
    "sqlalchemy.dialects.postgresql.base.TIMESTAMP"
  ],
  "sqlalchemy.sql.sqltypes.Time.get_dbapi_type": [
    "sqlalchemy.dialects.postgresql.asyncpg.AsyncpgTime",
    "sqlalchemy.dialects.postgresql.pg8000._PGTime"
  ],
  "sqlalchemy.sql.sqltypes._AbstractInterval.coerce_compared_value": [
    "sqlalchemy.dialects.oracle.base.INTERVAL",
    "sqlalchemy.dialects.postgresql.base.INTERVAL"
  ],
  "sqlalchemy.sql.sqltypes._Binary.__init__": [
    "sqlalchemy.dialects.mssql.base.TIMESTAMP",
    "sqlalchemy.sql.sqltypes.LargeBinary"
  ],
  "sqlalchemy.sql.sqltypes._Binary.bind_processor": [
    "sqlalchemy.dialects.mssql.mxodbc._VARBINARY_mxodbc",
    "sqlalchemy.dialects.oracle.cx_oracle._OracleBinary"
  ],
  "sqlalchemy.sql.sqltypes._Binary.get_dbapi_type": [
    "sqlalchemy.dialects.oracle.cx_oracle._OracleBinary"
  ],
  "sqlalchemy.sql.sqltypes._Binary.result_processor": [
    "sqlalchemy.dialects.mssql.base.TIMESTAMP",
    "sqlalchemy.dialects.oracle.cx_oracle._OracleBinary"
  ],
  "sqlalchemy.sql.type_api.Emulated.adapt": [
    "sqlalchemy.sql.sqltypes.Enum"
  ],
  "sqlalchemy.sql.type_api.Emulated.adapt_to_emulated": [
    "sqlalchemy.sql.sqltypes.Enum",
    "sqlalchemy.sql.sqltypes.Interval"
  ],
  "sqlalchemy.sql.type_api.NativeForEmulated.adapt_emulated_to_native": [
    "sqlalchemy.dialects.mysql.enumerated.ENUM",
    "sqlalchemy.dialects.postgresql.base.ENUM",
    "sqlalchemy.dialects.postgresql.base.INTERVAL"
  ],
  "sqlalchemy.sql.type_api.TypeDecorator.__init__": [
    "sqlalchemy.sql.sqltypes.PickleType",
    "sqlalchemy.sql.type_api.Variant"
  ],
  "sqlalchemy.sql.type_api.TypeDecorator.bind_expression": [
    "sqlalchemy.dialects.mssql.information_schema.CoerceUnicode"
  ],
  "sqlalchemy.sql.type_api.TypeDecorator.bind_processor": [
    "sqlalchemy.sql.sqltypes.Interval",
    "sqlalchemy.sql.sqltypes.PickleType"
  ],
  "sqlalchemy.sql.type_api.TypeDecorator.coerce_compared_value": [
    "sqlalchemy.sql.type_api.Variant"
  ],
  "sqlalchemy.sql.type_api.TypeDecorator.column_expression": [
    "sqlalchemy.dialects.mssql.information_schema.IdentitySqlVariant"
  ],
  "sqlalchemy.sql.type_api.TypeDecorator.comparator_factory": [
    "sqlalchemy.sql.type_api.Variant"
  ],
  "sqlalchemy.sql.type_api.TypeDecorator.compare_values": [
    "sqlalchemy.sql.sqltypes.PickleType"
  ],
  "sqlalchemy.sql.type_api.TypeDecorator.load_dialect_impl": [
    "sqlalchemy.sql.type_api.Variant"
  ],
  "sqlalchemy.sql.type_api.TypeDecorator.process_bind_param": [
    "sqlalchemy.dialects.mssql.information_schema.CoerceUnicode"
  ],
  "sqlalchemy.sql.type_api.TypeDecorator.result_processor": [
    "sqlalchemy.sql.sqltypes.Interval",
    "sqlalchemy.sql.sqltypes.PickleType"
  ],
  "sqlalchemy.sql.type_api.TypeEngine.adapt": [
    "sqlalchemy.dialects.mysql.enumerated.SET",
    "sqlalchemy.dialects.oracle.base.NUMBER"
  ],
  "sqlalchemy.sql.type_api.TypeEngine.as_generic": [
    "sqlalchemy.dialects.oracle.base.INTERVAL",
    "sqlalchemy.dialects.postgresql.base.INTERVAL",
    "sqlalchemy.sql.sqltypes.Enum"
  ],
  "sqlalchemy.sql.type_api.TypeEngine.bind_expression": [
    "sqlalchemy.dialects.postgresql.array.ARRAY",
    "sqlalchemy.sql.type_api.TypeDecorator"
  ],
  "sqlalchemy.sql.type_api.TypeEngine.bind_processor": [
    "sqlalchemy.dialects.firebird.base._FBDateTime",
    "sqlalchemy.dialects.mssql.base.TIME",
    "sqlalchemy.dialects.mssql.base._MSDate",
    "sqlalchemy.dialects.oracle.cx_oracle._OracleDate",
    "sqlalchemy.dialects.postgresql.array.ARRAY",
    "sqlalchemy.dialects.postgresql.base.UUID",
    "sqlalchemy.dialects.postgresql.hstore.HSTORE",
    "sqlalchemy.dialects.sqlite.base.DATE",
    "sqlalchemy.dialects.sqlite.base.DATETIME",
    "sqlalchemy.dialects.sqlite.base.TIME",
    "sqlalchemy.sql.sqltypes.Boolean",
    "sqlalchemy.sql.sqltypes.JSON",
    "sqlalchemy.sql.sqltypes.JSON.JSONElementType",
    "sqlalchemy.sql.sqltypes.Numeric",
    "sqlalchemy.sql.sqltypes.String",
    "sqlalchemy.sql.sqltypes._Binary",
    "sqlalchemy.sql.type_api.TypeDecorator"
  ],
  "sqlalchemy.sql.type_api.TypeEngine.coerce_compared_value": [
    "sqlalchemy.dialects.postgresql.base.UUID",
    "sqlalchemy.sql.sqltypes._AbstractInterval",
    "sqlalchemy.sql.sqltypes._Binary",
    "sqlalchemy.sql.type_api.TypeDecorator"
  ],
  "sqlalchemy.sql.type_api.TypeEngine.column_expression": [
    "sqlalchemy.dialects.mysql.enumerated.SET",
    "sqlalchemy.sql.type_api.TypeDecorator"
  ],
  "sqlalchemy.sql.type_api.TypeEngine.comparator_factory": [
    "sqlalchemy.sql.type_api.TypeDecorator"
  ],
  "sqlalchemy.sql.type_api.TypeEngine.compare_values": [
    "sqlalchemy.sql.sqltypes.ARRAY",
    "sqlalchemy.sql.type_api.TypeDecorator"
  ],
  "sqlalchemy.sql.type_api.TypeEngine.copy": [
    "sqlalchemy.sql.sqltypes.Enum",
    "sqlalchemy.sql.type_api.TypeDecorator"
  ],
  "sqlalchemy.sql.type_api.TypeEngine.get_dbapi_type": [
    "sqlalchemy.dialects.oracle.base._OracleBoolean",
    "sqlalchemy.dialects.oracle.cx_oracle._OracleInterval",
    "sqlalchemy.dialects.oracle.cx_oracle._OracleRowid",
    "sqlalchemy.dialects.postgresql.asyncpg.AsyncPgInterval",
    "sqlalchemy.dialects.postgresql.asyncpg.AsyncpgBoolean",
    "sqlalchemy.dialects.postgresql.asyncpg.AsyncpgJSON",
    "sqlalchemy.dialects.postgresql.asyncpg.AsyncpgJSONB",
    "sqlalchemy.dialects.postgresql.asyncpg.AsyncpgJSONIndexType",
    "sqlalchemy.dialects.postgresql.asyncpg.AsyncpgJSONIntIndexType",
    "sqlalchemy.dialects.postgresql.asyncpg.AsyncpgJSONStrIndexType",
    "sqlalchemy.dialects.postgresql.asyncpg.AsyncpgOID",
    "sqlalchemy.dialects.postgresql.asyncpg.AsyncpgREGCLASS",
    "sqlalchemy.dialects.postgresql.asyncpg.AsyncpgUUID",
    "sqlalchemy.dialects.postgresql.pg8000._PGBoolean",
    "sqlalchemy.dialects.postgresql.pg8000._PGInterval",
    "sqlalchemy.dialects.postgresql.pg8000._PGJSON",
    "sqlalchemy.dialects.postgresql.pg8000._PGJSONB",
    "sqlalchemy.dialects.postgresql.pg8000._PGJSONIndexType",
    "sqlalchemy.dialects.postgresql.pg8000._PGJSONIntIndexType",
    "sqlalchemy.dialects.postgresql.pg8000._PGJSONPathType",
    "sqlalchemy.dialects.postgresql.pg8000._PGJSONStrIndexType",
    "sqlalchemy.dialects.postgresql.pg8000._PGNullType",
    "sqlalchemy.sql.sqltypes.Date",
    "sqlalchemy.sql.sqltypes.DateTime",
    "sqlalchemy.sql.sqltypes.Integer",
    "sqlalchemy.sql.sqltypes.Numeric",
    "sqlalchemy.sql.sqltypes.String",
    "sqlalchemy.sql.sqltypes.Time",
    "sqlalchemy.sql.sqltypes._Binary",
    "sqlalchemy.sql.type_api.TypeDecorator"
  ],
  "sqlalchemy.sql.type_api.TypeEngine.hashable": [
    "sqlalchemy.sql.sqltypes.ARRAY"
  ],
  "sqlalchemy.sql.type_api.TypeEngine.literal_processor": [
    "sqlalchemy.sql.sqltypes.Boolean",
    "sqlalchemy.sql.sqltypes.Integer",
    "sqlalchemy.sql.sqltypes.JSON.JSONElementType",
    "sqlalchemy.sql.sqltypes.NullType",
    "sqlalchemy.sql.sqltypes.Numeric",
    "sqlalchemy.sql.sqltypes.String",
    "sqlalchemy.sql.sqltypes._Binary",
    "sqlalchemy.sql.type_api.TypeDecorator"
  ],
  "sqlalchemy.sql.type_api.TypeEngine.python_type": [
    "sqlalchemy.dialects.postgresql.base.INTERVAL",
    "sqlalchemy.sql.sqltypes.ARRAY",
    "sqlalchemy.sql.sqltypes.Boolean",
    "sqlalchemy.sql.sqltypes.Date",
    "sqlalchemy.sql.sqltypes.DateTime",
    "sqlalchemy.sql.sqltypes.Integer",
    "sqlalchemy.sql.sqltypes.Interval",
    "sqlalchemy.sql.sqltypes.JSON",
    "sqlalchemy.sql.sqltypes.Numeric",
    "sqlalchemy.sql.sqltypes.String",
    "sqlalchemy.sql.sqltypes.Time",
    "sqlalchemy.sql.sqltypes._Binary"
  ],
  "sqlalchemy.sql.type_api.TypeEngine.result_processor": [
    "sqlalchemy.dialects.mssql.base.TIME",
    "sqlalchemy.dialects.mssql.base._MSDate",
    "sqlalchemy.dialects.mysql.types.BIT",
    "sqlalchemy.dialects.mysql.types.TIME",
    "sqlalchemy.dialects.oracle.cx_oracle._OracleDate",
    "sqlalchemy.dialects.postgresql.array.ARRAY",
    "sqlalchemy.dialects.postgresql.base.UUID",
    "sqlalchemy.dialects.postgresql.hstore.HSTORE",
    "sqlalchemy.dialects.sqlite.base.DATE",
    "sqlalchemy.dialects.sqlite.base.DATETIME",
    "sqlalchemy.dialects.sqlite.base.TIME",
    "sqlalchemy.sql.sqltypes.Boolean",
    "sqlalchemy.sql.sqltypes.JSON",
    "sqlalchemy.sql.sqltypes.Numeric",
    "sqlalchemy.sql.sqltypes.String",
    "sqlalchemy.sql.sqltypes.TupleType",
    "sqlalchemy.sql.sqltypes._Binary",
    "sqlalchemy.sql.type_api.TypeDecorator"
  ],
  "sqlalchemy.sql.type_api.TypeEngine.should_evaluate_none": [
    "sqlalchemy.sql.sqltypes.JSON"
  ],
  "sqlalchemy.sql.type_api.TypeEngine.should_evaluate_none@setter": [
    "sqlalchemy.sql.sqltypes.JSON"
  ],
  "sqlalchemy.sql.type_api.TypeEngine.sort_key_function": [
    "sqlalchemy.sql.sqltypes.Enum",
    "sqlalchemy.sql.type_api.TypeDecorator"
  ],
  "sqlalchemy.sql.type_api.TypeEngine.with_variant": [
    "sqlalchemy.sql.type_api.Variant"
  ],
  "sqlalchemy.sql.type_api.TypeEngine.Comparator.operate": [
    "sqlalchemy.sql.type_api.TypeDecorator.Comparator"
  ],
  "sqlalchemy.sql.type_api.TypeEngine.Comparator.reverse_operate": [
    "sqlalchemy.sql.type_api.TypeDecorator.Comparator"
  ],
  "sqlalchemy.sql.util.ClauseAdapter.__init__": [
    "sqlalchemy.sql.util.ColumnAdapter"
  ],
  "sqlalchemy.sql.util.ColumnAdapter.__init__": [
    "sqlalchemy.orm.util.ORMAdapter"
  ],
  "sqlalchemy.sql.visitors.CloningExternalTraversal.traverse": [
    "sqlalchemy.sql.visitors.ReplacingExternalTraversal"
  ],
  "sqlalchemy.sql.visitors.ExternalTraversal.traverse": [
    "sqlalchemy.sql.visitors.CloningExternalTraversal"
  ],
  "sqlalchemy.sql.visitors.ReplacingExternalTraversal.replace": [
    "sqlalchemy.sql.util.ClauseAdapter"
  ],
  "sqlalchemy.sql.visitors.ReplacingExternalTraversal.traverse": [
    "sqlalchemy.sql.util.ColumnAdapter"
  ],
  "sqlalchemy.sql.visitors.Traversible.get_children": [
    "sqlalchemy.dialects.postgresql.ext.aggregate_order_by",
    "sqlalchemy.orm.query.FromStatement",
    "sqlalchemy.sql.elements.ColumnClause",
    "sqlalchemy.sql.selectable.Select"
  ],
  "sqlalchemy.sql.visitors.TraversibleType.__init__": [
    "sqlalchemy.sql.functions._GenericMeta"
  ],
  "sqlalchemy.testing.assertsql.AllOf.process_statement": [
    "sqlalchemy.testing.assertsql.Or"
  ],
  "sqlalchemy.testing.assertsql.AssertRule.no_more_statements": [
    "sqlalchemy.testing.assertsql.CountStatements",
    "sqlalchemy.testing.assertsql.EachOf"
  ],
  "sqlalchemy.testing.assertsql.AssertRule.process_statement": [
    "sqlalchemy.testing.assertsql.AllOf",
    "sqlalchemy.testing.assertsql.CompiledSQL",
    "sqlalchemy.testing.assertsql.CountStatements",
    "sqlalchemy.testing.assertsql.CursorSQL",
    "sqlalchemy.testing.assertsql.EachOf"
  ],
  "sqlalchemy.testing.assertsql.CompiledSQL.__init__": [
    "sqlalchemy.testing.assertsql.RegexSQL"
  ],
  "sqlalchemy.testing.assertsql.EachOf.__init__": [
    "sqlalchemy.testing.assertsql.Conditional"
  ],
  "sqlalchemy.testing.fixtures.TablesTest.define_tables": [
    "sqlalchemy.testing.fixtures.ComputedReflectionFixtureTest"
  ],
  "sqlalchemy.testing.plugin.plugin_base.FixtureFunctions.combinations": [
    "sqlalchemy.testing.plugin.pytestplugin.PytestFixtureFunctions"
  ],
  "sqlalchemy.testing.plugin.plugin_base.FixtureFunctions.fixture": [
    "sqlalchemy.testing.plugin.pytestplugin.PytestFixtureFunctions"
  ],
  "sqlalchemy.testing.plugin.plugin_base.FixtureFunctions.get_current_test_name": [
    "sqlalchemy.testing.plugin.pytestplugin.PytestFixtureFunctions"
  ],
  "sqlalchemy.testing.plugin.plugin_base.FixtureFunctions.mark_base_test_class": [
    "sqlalchemy.testing.plugin.pytestplugin.PytestFixtureFunctions"
  ],
  "sqlalchemy.testing.plugin.plugin_base.FixtureFunctions.param_ident": [
    "sqlalchemy.testing.plugin.pytestplugin.PytestFixtureFunctions"
  ],
  "sqlalchemy.testing.plugin.plugin_base.FixtureFunctions.skip_test_exception": [
    "sqlalchemy.testing.plugin.pytestplugin.PytestFixtureFunctions"
  ],
  "sqlalchemy.util._collections.IdentitySet.__init__": [
    "sqlalchemy.util._collections.OrderedIdentitySet"
  ],
  "sqlalchemy.util._collections.OrderedSet.__add__": [
    "sqlalchemy.sql.base.ColumnSet"
  ],
  "sqlalchemy.util._collections.Properties.__init__": [
    "sqlalchemy.util._collections.OrderedProperties"
  ],
  "sqlalchemy.util._collections.ScopedRegistry.__call__": [
    "sqlalchemy.util._collections.ThreadLocalRegistry"
  ],
  "sqlalchemy.util._collections.ScopedRegistry.__init__": [
    "sqlalchemy.util._collections.ThreadLocalRegistry"
  ],
  "sqlalchemy.util._collections.ScopedRegistry.clear": [
    "sqlalchemy.util._collections.ThreadLocalRegistry"
  ],
  "sqlalchemy.util._collections.ScopedRegistry.has": [
    "sqlalchemy.util._collections.ThreadLocalRegistry"
  ],
  "sqlalchemy.util._collections.ScopedRegistry.set": [
    "sqlalchemy.util._collections.ThreadLocalRegistry"
  ],
  "ssl.SSLObject.do_handshake": [
    "pip._vendor.truststore._api.SSLContext.__init__.TruststoreSSLObject"
  ],
  "ssl._ASN1ObjectBase.__new__": [
    "ssl._ASN1Object"
  ],
  "staticmethod.__init__": [
    "abc.abstractstaticmethod",
    "typeshed.typeshed.stdlib.abc.abstractstaticmethod"
  ],
  "str.__add__": [
    "django.utils.safestring.SafeString",
    "markupsafe.Markup",
    "sqlalchemy.sql.elements._anonymous_label"
  ],
  "str.__contains__": [
    "importlib_metadata._text.FoldedCase"
  ],
  "str.__eq__": [
    "humanfriendly.case.CaseInsensitiveKey",
    "importlib_metadata._text.FoldedCase",
    "sqlalchemy.util.langhelpers._hash_limit_string",
    "typeshed.typeshed.stubs.humanfriendly.humanfriendly.case.CaseInsensitiveKey"
  ],
  "str.__getnewargs__": [
    "bs4.element.NavigableString",
    "email._header_value_parser.Terminal",
    "typeshed.typeshed.stdlib.email._header_value_parser.Terminal",
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.element.NavigableString"
  ],
  "str.__gt__": [
    "importlib_metadata._text.FoldedCase"
  ],
  "str.__lt__": [
    "importlib_metadata._text.FoldedCase"
  ],
  "str.__mod__": [
    "markupsafe.Markup",
    "typeshed.typeshed.stubs.translationstring.translationstring.TranslationString"
  ],
  "str.__mul__": [
    "markupsafe.Markup"
  ],
  "str.__ne__": [
    "importlib_metadata._text.FoldedCase"
  ],
  "str.__new__": [
    "PIL.PngImagePlugin.iTXt",
    "bs4.element.NamespacedAttribute",
    "bs4.element.NavigableString",
    "django.conf.SettingsReference",
    "django.db.models.enums.TextChoices",
    "email._header_value_parser.Terminal",
    "email.headerregistry.BaseHeader",
    "humanfriendly.case.CaseInsensitiveKey",
    "markupsafe.Markup",
    "sqlalchemy.util.langhelpers._hash_limit_string",
    "typeshed.typeshed.stdlib.email._header_value_parser.Terminal",
    "typeshed.typeshed.stdlib.email.headerregistry.BaseHeader",
    "typeshed.typeshed.stubs.Pillow.PIL.PngImagePlugin.iTXt",
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.element.NamespacedAttribute",
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.element.NavigableString",
    "typeshed.typeshed.stubs.fpdf2.fpdf.syntax.PDFString",
    "typeshed.typeshed.stubs.humanfriendly.humanfriendly.case.CaseInsensitiveKey",
    "typeshed.typeshed.stubs.translationstring.translationstring.TranslationString"
  ],
  "str.encode": [
    "bs4.element.CharsetMetaAttributeValue",
    "bs4.element.ContentMetaAttributeValue",
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.element.CharsetMetaAttributeValue",
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.element.ContentMetaAttributeValue"
  ],
  "str.format": [
    "markupsafe.Markup"
  ],
  "str.format_map": [
    "markupsafe.Markup"
  ],
  "str.index": [
    "importlib_metadata._text.FoldedCase"
  ],
  "str.join": [
    "markupsafe.Markup"
  ],
  "str.lower": [
    "importlib_metadata._text.FoldedCase"
  ],
  "str.lstrip": [
    "docutils.nodes.Text",
    "typeshed.typeshed.stubs.docutils.docutils.nodes.Text"
  ],
  "str.partition": [
    "markupsafe.Markup"
  ],
  "str.rpartition": [
    "markupsafe.Markup"
  ],
  "str.rsplit": [
    "markupsafe.Markup"
  ],
  "str.rstrip": [
    "docutils.nodes.Text",
    "typeshed.typeshed.stubs.docutils.docutils.nodes.Text"
  ],
  "str.split": [
    "importlib_metadata._text.FoldedCase",
    "markupsafe.Markup"
  ],
  "str.splitlines": [
    "markupsafe.Markup"
  ],
  "string.Formatter.format_field": [
    "markupsafe.EscapeFormatter",
    "prompt_toolkit.formatted_text.ansi.ANSIFormatter",
    "prompt_toolkit.formatted_text.html.HTMLFormatter"
  ],
  "string.Formatter.get_field": [
    "IPython.utils.text.EvalFormatter",
    "jinja2.sandbox.SandboxedFormatter"
  ],
  "string.Formatter.parse": [
    "IPython.utils.text.DollarFormatter"
  ],
  "string.Formatter.vformat": [
    "IPython.utils.text.FullEvalFormatter"
  ],
  "stripe.api_resources.abstract.api_resource.APIResource.class_url": [
    "stripe.api_resources.abstract.singleton_api_resource.SingletonAPIResource",
    "stripe.api_resources.apple_pay_domain.ApplePayDomain",
    "stripe.api_resources.bitcoin_receiver.BitcoinReceiver",
    "stripe.api_resources.file.File",
    "stripe.api_resources.sigma.scheduled_query_run.ScheduledQueryRun",
    "stripe.api_resources.three_d_secure.ThreeDSecure",
    "typeshed.typeshed.stubs.stripe.stripe.api_resources.abstract.singleton_api_resource.SingletonAPIResource",
    "typeshed.typeshed.stubs.stripe.stripe.api_resources.apple_pay_domain.ApplePayDomain",
    "typeshed.typeshed.stubs.stripe.stripe.api_resources.bitcoin_receiver.BitcoinReceiver",
    "typeshed.typeshed.stubs.stripe.stripe.api_resources.file.File",
    "typeshed.typeshed.stubs.stripe.stripe.api_resources.sigma.scheduled_query_run.ScheduledQueryRun",
    "typeshed.typeshed.stubs.stripe.stripe.api_resources.three_d_secure.ThreeDSecure"
  ],
  "stripe.api_resources.abstract.api_resource.APIResource.instance_url": [
    "stripe.api_resources.abstract.singleton_api_resource.SingletonAPIResource",
    "stripe.api_resources.account.Account",
    "stripe.api_resources.alipay_account.AlipayAccount",
    "stripe.api_resources.application_fee_refund.ApplicationFeeRefund",
    "stripe.api_resources.bank_account.BankAccount",
    "stripe.api_resources.bitcoin_receiver.BitcoinReceiver",
    "stripe.api_resources.capability.Capability",
    "stripe.api_resources.card.Card",
    "stripe.api_resources.customer_balance_transaction.CustomerBalanceTransaction",
    "stripe.api_resources.person.Person",
    "stripe.api_resources.reversal.Reversal",
    "stripe.api_resources.tax_id.TaxId",
    "typeshed.typeshed.stubs.stripe.stripe.api_resources.abstract.singleton_api_resource.SingletonAPIResource",
    "typeshed.typeshed.stubs.stripe.stripe.api_resources.account.Account",
    "typeshed.typeshed.stubs.stripe.stripe.api_resources.alipay_account.AlipayAccount",
    "typeshed.typeshed.stubs.stripe.stripe.api_resources.application_fee_refund.ApplicationFeeRefund",
    "typeshed.typeshed.stubs.stripe.stripe.api_resources.bank_account.BankAccount",
    "typeshed.typeshed.stubs.stripe.stripe.api_resources.bitcoin_receiver.BitcoinReceiver",
    "typeshed.typeshed.stubs.stripe.stripe.api_resources.capability.Capability",
    "typeshed.typeshed.stubs.stripe.stripe.api_resources.card.Card",
    "typeshed.typeshed.stubs.stripe.stripe.api_resources.customer_balance_transaction.CustomerBalanceTransaction",
    "typeshed.typeshed.stubs.stripe.stripe.api_resources.person.Person",
    "typeshed.typeshed.stubs.stripe.stripe.api_resources.reversal.Reversal",
    "typeshed.typeshed.stubs.stripe.stripe.api_resources.tax_id.TaxId"
  ],
  "stripe.api_resources.abstract.api_resource.APIResource.retrieve": [
    "stripe.api_resources.abstract.singleton_api_resource.SingletonAPIResource",
    "stripe.api_resources.account.Account",
    "stripe.api_resources.alipay_account.AlipayAccount",
    "stripe.api_resources.application_fee_refund.ApplicationFeeRefund",
    "stripe.api_resources.bank_account.BankAccount",
    "stripe.api_resources.capability.Capability",
    "stripe.api_resources.card.Card",
    "stripe.api_resources.customer_balance_transaction.CustomerBalanceTransaction",
    "stripe.api_resources.person.Person",
    "stripe.api_resources.reversal.Reversal",
    "stripe.api_resources.tax_id.TaxId",
    "typeshed.typeshed.stubs.stripe.stripe.api_resources.abstract.singleton_api_resource.SingletonAPIResource",
    "typeshed.typeshed.stubs.stripe.stripe.api_resources.account.Account",
    "typeshed.typeshed.stubs.stripe.stripe.api_resources.alipay_account.AlipayAccount",
    "typeshed.typeshed.stubs.stripe.stripe.api_resources.application_fee_refund.ApplicationFeeRefund",
    "typeshed.typeshed.stubs.stripe.stripe.api_resources.bank_account.BankAccount",
    "typeshed.typeshed.stubs.stripe.stripe.api_resources.capability.Capability",
    "typeshed.typeshed.stubs.stripe.stripe.api_resources.card.Card",
    "typeshed.typeshed.stubs.stripe.stripe.api_resources.customer_balance_transaction.CustomerBalanceTransaction",
    "typeshed.typeshed.stubs.stripe.stripe.api_resources.person.Person",
    "typeshed.typeshed.stubs.stripe.stripe.api_resources.reversal.Reversal",
    "typeshed.typeshed.stubs.stripe.stripe.api_resources.tax_id.TaxId"
  ],
  "stripe.api_resources.abstract.updateable_api_resource.UpdateableAPIResource.modify": [
    "stripe.api_resources.alipay_account.AlipayAccount",
    "stripe.api_resources.application_fee_refund.ApplicationFeeRefund",
    "stripe.api_resources.bank_account.BankAccount",
    "stripe.api_resources.capability.Capability",
    "stripe.api_resources.card.Card",
    "stripe.api_resources.person.Person",
    "stripe.api_resources.reversal.Reversal",
    "typeshed.typeshed.stubs.stripe.stripe.api_resources.alipay_account.AlipayAccount",
    "typeshed.typeshed.stubs.stripe.stripe.api_resources.application_fee_refund.ApplicationFeeRefund",
    "typeshed.typeshed.stubs.stripe.stripe.api_resources.bank_account.BankAccount",
    "typeshed.typeshed.stubs.stripe.stripe.api_resources.capability.Capability",
    "typeshed.typeshed.stubs.stripe.stripe.api_resources.card.Card",
    "typeshed.typeshed.stubs.stripe.stripe.api_resources.person.Person",
    "typeshed.typeshed.stubs.stripe.stripe.api_resources.reversal.Reversal"
  ],
  "stripe.error.StripeError.__init__": [
    "stripe.error.APIConnectionError",
    "stripe.error.SignatureVerificationError",
    "stripe.oauth_error.OAuthError",
    "typeshed.typeshed.stubs.stripe.stripe.oauth_error.OAuthError"
  ],
  "stripe.error.StripeError.construct_error_object": [
    "stripe.oauth_error.OAuthError",
    "typeshed.typeshed.stubs.stripe.stripe.oauth_error.OAuthError"
  ],
  "stripe.http_client.HTTPClient.__init__": [
    "stripe.http_client.PycurlClient",
    "stripe.http_client.RequestsClient",
    "stripe.http_client.UrlFetchClient",
    "stripe.http_client.Urllib2Client"
  ],
  "stripe.http_client.HTTPClient.close": [
    "stripe.http_client.PycurlClient",
    "stripe.http_client.RequestsClient",
    "stripe.http_client.UrlFetchClient",
    "stripe.http_client.Urllib2Client"
  ],
  "stripe.http_client.HTTPClient.request": [
    "stripe.http_client.PycurlClient",
    "stripe.http_client.RequestsClient",
    "stripe.http_client.UrlFetchClient",
    "stripe.http_client.Urllib2Client"
  ],
  "stripe.http_client.HTTPClient.request_stream": [
    "stripe.http_client.PycurlClient",
    "stripe.http_client.RequestsClient",
    "stripe.http_client.UrlFetchClient",
    "stripe.http_client.Urllib2Client"
  ],
  "stripe.stripe_object.StripeObject.__getitem__": [
    "stripe.api_resources.list_object.ListObject",
    "stripe.api_resources.search_result_object.SearchResultObject",
    "typeshed.typeshed.stubs.stripe.stripe.api_resources.list_object.ListObject",
    "typeshed.typeshed.stubs.stripe.stripe.api_resources.search_result_object.SearchResultObject"
  ],
  "stripe.stripe_object.StripeObject.refresh_from": [
    "stripe.api_resources.error_object.ErrorObject",
    "stripe.api_resources.error_object.OAuthErrorObject",
    "typeshed.typeshed.stubs.stripe.stripe.api_resources.error_object.ErrorObject",
    "typeshed.typeshed.stubs.stripe.stripe.api_resources.error_object.OAuthErrorObject"
  ],
  "stripe.stripe_object.StripeObject.serialize": [
    "stripe.api_resources.account.Account",
    "typeshed.typeshed.stubs.stripe.stripe.api_resources.account.Account"
  ],
  "stripe.stripe_response.StripeResponseBase.__init__": [
    "stripe.stripe_response.StripeResponse",
    "stripe.stripe_response.StripeStreamResponse"
  ],
  "tempfile.TemporaryDirectory.__enter__": [
    "IPython.utils.tempdir.TemporaryWorkingDirectory"
  ],
  "tempfile.TemporaryDirectory.__exit__": [
    "IPython.utils.tempdir.TemporaryWorkingDirectory"
  ],
  "tensorflow.Tensor.__getattr__": [
    "tensorflow.Variable"
  ],
  "tensorflow.Tensor.__init__": [
    "tensorflow.Variable"
  ],
  "testslide.matchers._FloatComparison.__init__": [
    "testslide.matchers.AnyFloat",
    "testslide.matchers.FloatBetween",
    "testslide.matchers.FloatGreaterOrEquals",
    "testslide.matchers.FloatGreaterThan",
    "testslide.matchers.FloatLessOrEquals",
    "testslide.matchers.FloatLessThan",
    "testslide.matchers.NotThisFloat"
  ],
  "testslide.matchers._IntComparison.__init__": [
    "testslide.matchers.AnyInt",
    "testslide.matchers.IntBetween",
    "testslide.matchers.IntGreaterOrEquals",
    "testslide.matchers.IntGreaterThan",
    "testslide.matchers.IntLessOrEquals",
    "testslide.matchers.IntLessThan",
    "testslide.matchers.NotThisInt"
  ],
  "testslide.matchers._RichComparison.__eq__": [
    "testslide.matchers.DictContainingKeys",
    "testslide.matchers.DictSupersetOf",
    "testslide.matchers.ListContaining",
    "testslide.matchers.ListContainingAll"
  ],
  "testslide.matchers._RichComparison.__init__": [
    "testslide.matchers.AnyDict",
    "testslide.matchers.AnyInstanceOf",
    "testslide.matchers.AnyList",
    "testslide.matchers.AnyStr",
    "testslide.matchers.DictContainingKeys",
    "testslide.matchers.DictSupersetOf",
    "testslide.matchers.ListContaining",
    "testslide.matchers.ListContainingAll",
    "testslide.matchers._FloatComparison",
    "testslide.matchers._IntComparison"
  ],
  "testslide.matchers._RichComparison.__repr__": [
    "testslide.matchers.ListContaining",
    "testslide.matchers.ListContainingAll"
  ],
  "testslide.mock_callable._AsyncRunner.run": [
    "testslide.mock_callable._AsyncCallOriginalRunner",
    "testslide.mock_callable._AsyncImplementationRunner"
  ],
  "testslide.mock_callable._MockCallableDSL.__init__": [
    "testslide.mock_callable._MockAsyncCallableDSL",
    "testslide.mock_constructor._MockConstructorDSL"
  ],
  "testslide.mock_callable._MockCallableDSL._get_callable_mock": [
    "testslide.mock_callable._MockAsyncCallableDSL"
  ],
  "testslide.mock_callable._MockCallableDSL._validate_patch": [
    "testslide.mock_callable._MockAsyncCallableDSL"
  ],
  "testslide.mock_callable._MockCallableDSL.for_call": [
    "testslide.mock_constructor._MockConstructorDSL"
  ],
  "testslide.mock_callable._MockCallableDSL.to_call_original": [
    "testslide.mock_callable._MockAsyncCallableDSL"
  ],
  "testslide.mock_callable._MockCallableDSL.with_implementation": [
    "testslide.mock_callable._MockAsyncCallableDSL",
    "testslide.mock_constructor._MockConstructorDSL"
  ],
  "testslide.mock_callable._MockCallableDSL.with_wrapper": [
    "testslide.mock_callable._MockAsyncCallableDSL",
    "testslide.mock_constructor._MockConstructorDSL"
  ],
  "testslide.mock_callable._Runner.run": [
    "testslide.mock_callable._CallOriginalRunner",
    "testslide.mock_callable._ImplementationRunner",
    "testslide.mock_callable._RaiseRunner",
    "testslide.mock_callable._ReturnValueRunner",
    "testslide.mock_callable._ReturnValuesRunner",
    "testslide.mock_callable._YieldValuesRunner"
  ],
  "testslide.runner.BaseFormatter.fail": [
    "testslide.runner.DocumentFormatter",
    "testslide.runner.LongFormatter",
    "testslide.runner.ProgressFormatter"
  ],
  "testslide.runner.BaseFormatter.finish": [
    "testslide.runner.ProgressFormatter",
    "testslide.runner.VerboseFinishMixin"
  ],
  "testslide.runner.BaseFormatter.new_context": [
    "testslide.runner.DocumentFormatter"
  ],
  "testslide.runner.BaseFormatter.new_example": [
    "testslide.runner.LongFormatter",
    "testslide.runner.ProgressFormatter"
  ],
  "testslide.runner.BaseFormatter.skip": [
    "testslide.runner.DocumentFormatter",
    "testslide.runner.LongFormatter",
    "testslide.runner.ProgressFormatter"
  ],
  "testslide.runner.BaseFormatter.success": [
    "testslide.runner.DocumentFormatter",
    "testslide.runner.LongFormatter",
    "testslide.runner.ProgressFormatter"
  ],
  "testslide.runner.DSLDebugMixin.get_dsl_debug_indent": [
    "testslide.runner.DocumentFormatter",
    "testslide.runner.LongFormatter"
  ],
  "textwrap.TextWrapper._handle_long_word": [
    "click._textwrap.TextWrapper"
  ],
  "threading.Barrier.__init__": [
    "multiprocessing.synchronize.Barrier",
    "typeshed.typeshed.stdlib.multiprocessing.synchronize.Barrier"
  ],
  "threading.Event.wait": [
    "keyboard._Event",
    "typeshed.typeshed.stubs.keyboard.keyboard._Event"
  ],
  "threading.Thread.__init__": [
    "IPython.core.history.HistorySavingThread",
    "IPython.lib.backgroundjobs.BackgroundJobBase",
    "concurrent.futures.process._ExecutorManagerThread",
    "invoke.util.ExceptionHandlingThread",
    "isapi.threaded_extension.WorkerThread",
    "ldap3.strategy.asynchronous.AsyncStrategy.ReceiverSocketThread",
    "ldap3.strategy.reusable.ReusableStrategy.PooledConnectionThread",
    "multiprocessing.dummy.DummyProcess",
    "paramiko.agent.AgentProxyThread",
    "paramiko.server.SubsystemHandler",
    "paramiko.transport.Transport",
    "pip._vendor.rich.live._RefreshThread",
    "pip._vendor.rich.progress._TrackThread",
    "pynput._util.AbstractListener",
    "redis.client.PubSubWorkerThread",
    "serial.threaded.ReaderThread",
    "threading.Timer",
    "threading._DummyThread",
    "tqdm._monitor.TMonitor",
    "typeshed.typeshed.stdlib.concurrent.futures.process._ExecutorManagerThread",
    "typeshed.typeshed.stdlib.multiprocessing.dummy.DummyProcess",
    "typeshed.typeshed.stubs.ldap3.ldap3.strategy.asynchronous.AsyncStrategy.ReceiverSocketThread",
    "typeshed.typeshed.stubs.ldap3.ldap3.strategy.reusable.ReusableStrategy.PooledConnectionThread",
    "typeshed.typeshed.stubs.paramiko.paramiko.agent.AgentProxyThread",
    "typeshed.typeshed.stubs.paramiko.paramiko.server.SubsystemHandler",
    "typeshed.typeshed.stubs.paramiko.paramiko.transport.Transport",
    "typeshed.typeshed.stubs.pynput.pynput._util.AbstractListener",
    "typeshed.typeshed.stubs.pyserial.serial.threaded.ReaderThread",
    "typeshed.typeshed.stubs.pywin32.isapi.threaded_extension.WorkerThread",
    "typeshed.typeshed.stubs.redis.redis.client.PubSubWorkerThread",
    "typeshed.typeshed.stubs.tqdm.tqdm._monitor.TMonitor"
  ],
  "threading.Thread.join": [
    "pynput._util.AbstractListener",
    "typeshed.typeshed.stubs.pynput.pynput._util.AbstractListener"
  ],
  "threading.Thread.run": [
    "IPython.core.history.HistorySavingThread",
    "IPython.lib.backgroundjobs.BackgroundJobBase",
    "concurrent.futures.process._ExecutorManagerThread",
    "ldap3.strategy.asynchronous.AsyncStrategy.ReceiverSocketThread",
    "ldap3.strategy.reusable.ReusableStrategy.PooledConnectionThread",
    "paramiko.agent.AgentProxyThread",
    "paramiko.transport.Transport",
    "pip._vendor.rich.live._RefreshThread",
    "pip._vendor.rich.progress._TrackThread",
    "pynput._util.AbstractListener",
    "redis.client.PubSubWorkerThread",
    "tqdm._monitor.TMonitor",
    "typeshed.typeshed.stdlib.concurrent.futures.process._ExecutorManagerThread",
    "typeshed.typeshed.stubs.ldap3.ldap3.strategy.asynchronous.AsyncStrategy.ReceiverSocketThread",
    "typeshed.typeshed.stubs.ldap3.ldap3.strategy.reusable.ReusableStrategy.PooledConnectionThread",
    "typeshed.typeshed.stubs.paramiko.paramiko.agent.AgentProxyThread",
    "typeshed.typeshed.stubs.paramiko.paramiko.transport.Transport",
    "typeshed.typeshed.stubs.pynput.pynput._util.AbstractListener",
    "typeshed.typeshed.stubs.redis.redis.client.PubSubWorkerThread",
    "typeshed.typeshed.stubs.tqdm.tqdm._monitor.TMonitor"
  ],
  "timeit.Timer.timeit": [
    "IPython.core.magics.execution.Timer"
  ],
  "tkinter.BaseWidget.__init__": [
    "tkinter.Toplevel"
  ],
  "tkinter.BaseWidget.destroy": [
    "tkinter.dialog.Dialog",
    "typeshed.typeshed.stdlib.tkinter.dialog.Dialog"
  ],
  "tkinter.Canvas.__init__": [
    "turtle.ScrolledCanvas",
    "typeshed.typeshed.stdlib.turtle.ScrolledCanvas"
  ],
  "tkinter.Entry.config": [
    "tkinter.ttk.Entry",
    "typeshed.typeshed.stdlib.tkinter.ttk.Entry"
  ],
  "tkinter.Entry.configure": [
    "tkinter.ttk.Entry",
    "typeshed.typeshed.stdlib.tkinter.ttk.Entry"
  ],
  "tkinter.Image.__getitem__": [
    "tkinter.PhotoImage"
  ],
  "tkinter.Image.__init__": [
    "tkinter.BitmapImage",
    "tkinter.PhotoImage"
  ],
  "tkinter.Image.configure": [
    "tkinter.PhotoImage"
  ],
  "tkinter.Menubutton.__init__": [
    "tkinter.OptionMenu"
  ],
  "tkinter.Misc.__getitem__": [
    "ttkthemes.themed_tk.ThemedTk",
    "typeshed.typeshed.stubs.ttkthemes.ttkthemes.themed_tk.ThemedTk"
  ],
  "tkinter.Misc.__setitem__": [
    "ttkthemes.themed_tk.ThemedTk",
    "typeshed.typeshed.stubs.ttkthemes.ttkthemes.themed_tk.ThemedTk"
  ],
  "tkinter.Misc.bbox": [
    "tkinter.Canvas",
    "tkinter.Listbox",
    "tkinter.Spinbox",
    "tkinter.Text",
    "tkinter.ttk.Entry",
    "tkinter.ttk.Treeview",
    "typeshed.typeshed.stdlib.tkinter.ttk.Entry",
    "typeshed.typeshed.stdlib.tkinter.ttk.Treeview"
  ],
  "tkinter.Misc.bind": [
    "tkinter.Widget"
  ],
  "tkinter.Misc.cget": [
    "ttkthemes.themed_tk.ThemedTk",
    "typeshed.typeshed.stubs.ttkthemes.ttkthemes.themed_tk.ThemedTk"
  ],
  "tkinter.Misc.configure": [
    "tkinter.Button",
    "tkinter.Canvas",
    "tkinter.Checkbutton",
    "tkinter.Entry",
    "tkinter.Frame",
    "tkinter.Label",
    "tkinter.LabelFrame",
    "tkinter.Listbox",
    "tkinter.Menu",
    "tkinter.Menubutton",
    "tkinter.Message",
    "tkinter.PanedWindow",
    "tkinter.Radiobutton",
    "tkinter.Scale",
    "tkinter.Scrollbar",
    "tkinter.Spinbox",
    "tkinter.Text",
    "tkinter.Tk",
    "tkinter.Toplevel",
    "tkinter.ttk.Button",
    "tkinter.ttk.Checkbutton",
    "tkinter.ttk.Frame",
    "tkinter.ttk.Label",
    "tkinter.ttk.Labelframe",
    "tkinter.ttk.Menubutton",
    "tkinter.ttk.Notebook",
    "tkinter.ttk.Progressbar",
    "tkinter.ttk.Radiobutton",
    "tkinter.ttk.Separator",
    "tkinter.ttk.Sizegrip",
    "tkinter.ttk.Treeview",
    "typeshed.typeshed.stdlib.tkinter.ttk.Button",
    "typeshed.typeshed.stdlib.tkinter.ttk.Checkbutton",
    "typeshed.typeshed.stdlib.tkinter.ttk.Frame",
    "typeshed.typeshed.stdlib.tkinter.ttk.Label",
    "typeshed.typeshed.stdlib.tkinter.ttk.Labelframe",
    "typeshed.typeshed.stdlib.tkinter.ttk.Menubutton",
    "typeshed.typeshed.stdlib.tkinter.ttk.Notebook",
    "typeshed.typeshed.stdlib.tkinter.ttk.Progressbar",
    "typeshed.typeshed.stdlib.tkinter.ttk.Radiobutton",
    "typeshed.typeshed.stdlib.tkinter.ttk.Separator",
    "typeshed.typeshed.stdlib.tkinter.ttk.Sizegrip",
    "typeshed.typeshed.stdlib.tkinter.ttk.Treeview"
  ],
  "tkinter.Misc.destroy": [
    "tkinter.BaseWidget",
    "tkinter.Tk"
  ],
  "tkinter.Misc.focus": [
    "tkinter.Canvas",
    "tkinter.ttk.Treeview",
    "typeshed.typeshed.stdlib.tkinter.ttk.Treeview"
  ],
  "tkinter.Misc.image_names": [
    "tkinter.Text"
  ],
  "tkinter.Misc.lift": [
    "tkinter.Canvas"
  ],
  "tkinter.Misc.lower": [
    "tkinter.Canvas"
  ],
  "tkinter.Misc.selection_clear": [
    "tkinter.Entry",
    "tkinter.Listbox",
    "tkinter.Spinbox",
    "tkinter.tix.HList",
    "tkinter.tix.TList",
    "typeshed.typeshed.stdlib.tkinter.tix.HList",
    "typeshed.typeshed.stdlib.tkinter.tix.TList"
  ],
  "tkinter.Misc.size": [
    "tkinter.Listbox"
  ],
  "tkinter.Misc.tkraise": [
    "tkinter.Canvas"
  ],
  "tkinter.Pack.forget": [
    "tkinter.tix.PanedWindow",
    "tkinter.ttk.Notebook",
    "typeshed.typeshed.stdlib.tkinter.tix.PanedWindow",
    "typeshed.typeshed.stdlib.tkinter.ttk.Notebook"
  ],
  "tkinter.PanedWindow.add": [
    "tkinter.ttk.Panedwindow",
    "typeshed.typeshed.stdlib.tkinter.ttk.Panedwindow"
  ],
  "tkinter.PanedWindow.config": [
    "tkinter.ttk.Panedwindow",
    "typeshed.typeshed.stdlib.tkinter.ttk.Panedwindow"
  ],
  "tkinter.PanedWindow.configure": [
    "tkinter.ttk.Panedwindow",
    "typeshed.typeshed.stdlib.tkinter.ttk.Panedwindow"
  ],
  "tkinter.Scale.config": [
    "tkinter.ttk.Scale",
    "typeshed.typeshed.stdlib.tkinter.ttk.Scale"
  ],
  "tkinter.Scale.configure": [
    "tkinter.ttk.Scale",
    "typeshed.typeshed.stdlib.tkinter.ttk.Scale"
  ],
  "tkinter.Scale.get": [
    "tkinter.ttk.Scale",
    "typeshed.typeshed.stdlib.tkinter.ttk.Scale"
  ],
  "tkinter.Scrollbar.config": [
    "tkinter.ttk.Scrollbar",
    "typeshed.typeshed.stdlib.tkinter.ttk.Scrollbar"
  ],
  "tkinter.Scrollbar.configure": [
    "tkinter.ttk.Scrollbar",
    "typeshed.typeshed.stdlib.tkinter.ttk.Scrollbar"
  ],
  "tkinter.Text.__init__": [
    "tkinter.scrolledtext.ScrolledText",
    "typeshed.typeshed.stdlib.tkinter.scrolledtext.ScrolledText"
  ],
  "tkinter.Tk.__init__": [
    "tkinter.tix.Tk",
    "ttkthemes.themed_tk.ThemedTk",
    "typeshed.typeshed.stdlib.tkinter.tix.Tk",
    "typeshed.typeshed.stubs.ttkthemes.ttkthemes.themed_tk.ThemedTk"
  ],
  "tkinter.Tk.config": [
    "ttkthemes.themed_tk.ThemedTk",
    "typeshed.typeshed.stubs.ttkthemes.ttkthemes.themed_tk.ThemedTk"
  ],
  "tkinter.Tk.configure": [
    "ttkthemes.themed_tk.ThemedTk",
    "typeshed.typeshed.stubs.ttkthemes.ttkthemes.themed_tk.ThemedTk"
  ],
  "tkinter.Toplevel.__init__": [
    "tkinter.simpledialog.Dialog",
    "typeshed.typeshed.stdlib.tkinter.simpledialog.Dialog"
  ],
  "tkinter.Variable.__init__": [
    "tkinter.BooleanVar",
    "tkinter.DoubleVar",
    "tkinter.IntVar",
    "tkinter.StringVar"
  ],
  "tkinter.Variable.get": [
    "tkinter.BooleanVar",
    "tkinter.DoubleVar",
    "tkinter.IntVar",
    "tkinter.StringVar"
  ],
  "tkinter.Variable.set": [
    "tkinter.BooleanVar",
    "tkinter.DoubleVar",
    "tkinter.IntVar",
    "tkinter.StringVar"
  ],
  "tkinter.filedialog.FileDialog.ok_command": [
    "tkinter.filedialog.LoadFileDialog",
    "tkinter.filedialog.SaveFileDialog"
  ],
  "tkinter.tix.TixWidget.__init__": [
    "tkinter.tix.Balloon",
    "tkinter.tix.ButtonBox",
    "tkinter.tix.CheckList",
    "tkinter.tix.ComboBox",
    "tkinter.tix.Control",
    "tkinter.tix.DirList",
    "tkinter.tix.DirSelectBox",
    "tkinter.tix.DirSelectDialog",
    "tkinter.tix.DirTree",
    "tkinter.tix.ExFileSelectBox",
    "tkinter.tix.FileEntry",
    "tkinter.tix.FileSelectBox",
    "tkinter.tix.HList",
    "tkinter.tix.InputOnly",
    "tkinter.tix.LabelEntry",
    "tkinter.tix.LabelFrame",
    "tkinter.tix.ListNoteBook",
    "tkinter.tix.Meter",
    "tkinter.tix.NoteBook",
    "tkinter.tix.OptionMenu",
    "tkinter.tix.PanedWindow",
    "tkinter.tix.PopupMenu",
    "tkinter.tix.Select",
    "tkinter.tix.StdButtonBox",
    "tkinter.tix.TList",
    "tkinter.tix.TixSubWidget",
    "tkinter.tix.Tree"
  ],
  "tkinter.ttk.Entry.__init__": [
    "tkinter.ttk.Combobox",
    "tkinter.ttk.Spinbox"
  ],
  "tkinter.ttk.Entry.config": [
    "tkinter.ttk.Combobox"
  ],
  "tkinter.ttk.Entry.configure": [
    "tkinter.ttk.Combobox",
    "tkinter.ttk.Spinbox"
  ],
  "tkinter.ttk.Frame.__init__": [
    "tkinter.ttk.LabeledScale"
  ],
  "tkinter.ttk.Menubutton.__init__": [
    "tkinter.ttk.OptionMenu"
  ],
  "tkinter.ttk.Style.__init__": [
    "ttkthemes.themed_style.ThemedStyle",
    "typeshed.typeshed.stubs.ttkthemes.ttkthemes.themed_style.ThemedStyle"
  ],
  "tkinter.ttk.Style.theme_names": [
    "ttkthemes.themed_style.ThemedStyle",
    "typeshed.typeshed.stubs.ttkthemes.ttkthemes.themed_style.ThemedStyle"
  ],
  "tkinter.ttk.Style.theme_use": [
    "ttkthemes.themed_style.ThemedStyle",
    "typeshed.typeshed.stubs.ttkthemes.ttkthemes.themed_style.ThemedStyle"
  ],
  "tkinter.ttk.Widget.__init__": [
    "tkinter.ttk.Button",
    "tkinter.ttk.Checkbutton",
    "tkinter.ttk.Entry",
    "tkinter.ttk.Frame",
    "tkinter.ttk.Label",
    "tkinter.ttk.Labelframe",
    "tkinter.ttk.Menubutton",
    "tkinter.ttk.Notebook",
    "tkinter.ttk.Panedwindow",
    "tkinter.ttk.Progressbar",
    "tkinter.ttk.Radiobutton",
    "tkinter.ttk.Scale",
    "tkinter.ttk.Scrollbar",
    "tkinter.ttk.Separator",
    "tkinter.ttk.Sizegrip",
    "tkinter.ttk.Treeview"
  ],
  "tkinter.ttk.Widget.identify": [
    "tkinter.ttk.Entry",
    "tkinter.ttk.Notebook",
    "tkinter.ttk.Treeview"
  ],
  "toml.decoder.TomlDecoder.__init__": [
    "toml.ordered.TomlOrderedDecoder"
  ],
  "toml.encoder.TomlEncoder.__init__": [
    "toml.encoder.TomlArraySeparatorEncoder",
    "toml.encoder.TomlPreserveInlineDictEncoder",
    "toml.ordered.TomlOrderedEncoder"
  ],
  "toml.encoder.TomlEncoder.dump_list": [
    "toml.encoder.TomlArraySeparatorEncoder"
  ],
  "tqdm.asyncio.tqdm_asyncio.__init__": [
    "tqdm.contrib.discord.tqdm_discord",
    "tqdm.contrib.slack.tqdm_slack",
    "tqdm.contrib.telegram.tqdm_telegram"
  ],
  "tqdm.dask._Callback.__init__": [
    "tqdm.dask.TqdmCallback"
  ],
  "tqdm.keras._Callback.__init__": [
    "tqdm.keras.TqdmCallback"
  ],
  "tqdm.keras._Callback.on_epoch_begin": [
    "tqdm.keras.TqdmCallback"
  ],
  "tqdm.keras._Callback.on_train_begin": [
    "tqdm.keras.TqdmCallback"
  ],
  "tqdm.keras._Callback.on_train_end": [
    "tqdm.keras.TqdmCallback"
  ],
  "tqdm.rich._ProgressColumn.__init__": [
    "tqdm.rich.FractionColumn",
    "tqdm.rich.RateColumn"
  ],
  "tqdm.rich._ProgressColumn.render": [
    "tqdm.rich.FractionColumn",
    "tqdm.rich.RateColumn"
  ],
  "tqdm.std.tqdm.__init__": [
    "tqdm.asyncio.tqdm_asyncio",
    "tqdm.gui.tqdm_gui",
    "tqdm.notebook.tqdm_notebook",
    "tqdm.rich.tqdm_rich",
    "tqdm.tk.tqdm_tk"
  ],
  "tqdm.std.tqdm.__iter__": [
    "tqdm.notebook.tqdm_notebook"
  ],
  "tqdm.std.tqdm.clear": [
    "tqdm.contrib.discord.tqdm_discord",
    "tqdm.contrib.slack.tqdm_slack",
    "tqdm.contrib.telegram.tqdm_telegram",
    "tqdm.gui.tqdm_gui",
    "tqdm.notebook.tqdm_notebook",
    "tqdm.rich.tqdm_rich",
    "tqdm.tk.tqdm_tk"
  ],
  "tqdm.std.tqdm.close": [
    "tqdm.contrib.telegram.tqdm_telegram",
    "tqdm.gui.tqdm_gui",
    "tqdm.notebook.tqdm_notebook",
    "tqdm.rich.tqdm_rich",
    "tqdm.tk.tqdm_tk"
  ],
  "tqdm.std.tqdm.colour": [
    "tqdm.notebook.tqdm_notebook"
  ],
  "tqdm.std.tqdm.colour@setter": [
    "tqdm.notebook.tqdm_notebook"
  ],
  "tqdm.std.tqdm.display": [
    "tqdm.contrib.discord.tqdm_discord",
    "tqdm.contrib.slack.tqdm_slack",
    "tqdm.contrib.telegram.tqdm_telegram",
    "tqdm.gui.tqdm_gui",
    "tqdm.notebook.tqdm_notebook",
    "tqdm.rich.tqdm_rich",
    "tqdm.tk.tqdm_tk"
  ],
  "tqdm.std.tqdm.reset": [
    "tqdm.notebook.tqdm_notebook",
    "tqdm.rich.tqdm_rich",
    "tqdm.tk.tqdm_tk"
  ],
  "tqdm.std.tqdm.set_description": [
    "tqdm.tk.tqdm_tk"
  ],
  "tqdm.std.tqdm.set_description_str": [
    "tqdm.tk.tqdm_tk"
  ],
  "tqdm.std.tqdm.status_printer": [
    "tqdm.notebook.tqdm_notebook"
  ],
  "tqdm.std.tqdm.update": [
    "tqdm.notebook.tqdm_notebook"
  ],
  "tqdm.utils.ObjectWrapper.__init__": [
    "tqdm.contrib.DummyTqdmFile",
    "tqdm.utils.CallbackIOWrapper",
    "tqdm.utils.DisableOnWriteError",
    "tqdm.utils.SimpleTextIOWrapper"
  ],
  "traceback.FrameSummary.__init__": [
    "werkzeug.debug.tbtools.DebugFrameSummary"
  ],
  "traceback.TracebackException.__init__": [
    "exceptiongroup._formatting.PatchedTracebackException"
  ],
  "traceback.TracebackException.format": [
    "exceptiongroup._formatting.PatchedTracebackException"
  ],
  "traceback.TracebackException.format_exception_only": [
    "exceptiongroup._formatting.PatchedTracebackException"
  ],
  "tracemalloc.BaseFilter.__init__": [
    "tracemalloc.DomainFilter",
    "tracemalloc.Filter"
  ],
  "traitlets.config.application.Application.__init__": [
    "IPython.core.application.BaseIPythonApplication"
  ],
  "traitlets.config.application.Application.initialize": [
    "IPython.core.application.BaseIPythonApplication"
  ],
  "traitlets.config.application.Application.load_config_file": [
    "IPython.core.application.BaseIPythonApplication"
  ],
  "traitlets.config.application.Application.parse_command_line": [
    "IPython.core.profileapp.ProfileCreate",
    "IPython.core.profileapp.ProfileLocate"
  ],
  "traitlets.config.application.Application.start": [
    "IPython.core.historyapp.HistoryApp",
    "IPython.core.historyapp.HistoryTrim",
    "IPython.core.profileapp.ProfileApp",
    "IPython.core.profileapp.ProfileList",
    "IPython.core.profileapp.ProfileLocate",
    "IPython.terminal.ipapp.LocateIPythonApp",
    "IPython.terminal.ipapp.TerminalIPythonApp"
  ],
  "traitlets.config.configurable.Configurable.__init__": [
    "IPython.core.alias.AliasManager",
    "IPython.core.builtin_trap.BuiltinTrap",
    "IPython.core.completer.Completer",
    "IPython.core.display_trap.DisplayTrap",
    "IPython.core.displayhook.DisplayHook",
    "IPython.core.displaypub.DisplayPublisher",
    "IPython.core.extensions.ExtensionManager",
    "IPython.core.magic.Magics",
    "IPython.core.magic.MagicsManager",
    "IPython.core.prefilter.PrefilterChecker",
    "IPython.core.prefilter.PrefilterHandler",
    "IPython.core.prefilter.PrefilterManager",
    "IPython.core.prefilter.PrefilterTransformer"
  ],
  "traitlets.config.configurable.Configurable._config_changed": [
    "traitlets.config.application.Application"
  ],
  "traitlets.config.configurable.Configurable.config": [
    "IPython.core.magics.config.ConfigMagics"
  ],
  "traitlets.config.configurable.LoggingConfigurable._log_default": [
    "traitlets.config.application.Application"
  ],
  "traitlets.config.loader.ArgParseConfigLoader._add_arguments": [
    "traitlets.config.loader.KVArgParseConfigLoader"
  ],
  "traitlets.config.loader.ArgParseConfigLoader._argcomplete": [
    "traitlets.config.loader.KVArgParseConfigLoader"
  ],
  "traitlets.config.loader.ArgParseConfigLoader._convert_to_config": [
    "traitlets.config.loader.KVArgParseConfigLoader"
  ],
  "traitlets.config.loader.ConfigLoader.__init__": [
    "traitlets.config.loader.FileConfigLoader"
  ],
  "traitlets.config.loader.ConfigLoader.load_config": [
    "traitlets.config.loader.ArgParseConfigLoader",
    "traitlets.config.loader.JSONFileConfigLoader",
    "traitlets.config.loader.PyFileConfigLoader"
  ],
  "traitlets.config.loader.DeferredConfig.get_value": [
    "traitlets.config.loader.DeferredConfigList",
    "traitlets.config.loader.DeferredConfigString"
  ],
  "traitlets.config.loader.PyFileConfigLoader.load_subconfig": [
    "IPython.core.application.ProfileAwareConfigLoader"
  ],
  "traitlets.traitlets.BaseDescriptor.class_init": [
    "traitlets.traitlets.Container",
    "traitlets.traitlets.DefaultHandler",
    "traitlets.traitlets.Dict",
    "traitlets.traitlets.Union"
  ],
  "traitlets.traitlets.BaseDescriptor.instance_init": [
    "traitlets.traitlets.Instance",
    "traitlets.traitlets.ObserveHandler",
    "traitlets.traitlets.Type",
    "traitlets.traitlets.ValidateHandler"
  ],
  "traitlets.traitlets.BaseDescriptor.subclass_init": [
    "traitlets.traitlets.Any",
    "traitlets.traitlets.Bool",
    "traitlets.traitlets.Bytes",
    "traitlets.traitlets.Complex",
    "traitlets.traitlets.Container",
    "traitlets.traitlets.Dict",
    "traitlets.traitlets.Enum",
    "traitlets.traitlets.Float",
    "traitlets.traitlets.Int",
    "traitlets.traitlets.Unicode",
    "traitlets.traitlets.Union"
  ],
  "traitlets.traitlets.Bool.validate": [
    "traitlets.traitlets.CBool"
  ],
  "traitlets.traitlets.Bytes.validate": [
    "traitlets.traitlets.CBytes"
  ],
  "traitlets.traitlets.Complex.validate": [
    "traitlets.traitlets.CComplex"
  ],
  "traitlets.traitlets.Container.__init__": [
    "traitlets.traitlets.List",
    "traitlets.traitlets.Set",
    "traitlets.traitlets.Tuple"
  ],
  "traitlets.traitlets.Container.class_init": [
    "traitlets.traitlets.Tuple"
  ],
  "traitlets.traitlets.Container.item_from_string": [
    "traitlets.traitlets.Tuple"
  ],
  "traitlets.traitlets.Container.subclass_init": [
    "traitlets.traitlets.Tuple"
  ],
  "traitlets.traitlets.Container.validate_elements": [
    "traitlets.traitlets.List",
    "traitlets.traitlets.Set",
    "traitlets.traitlets.Tuple"
  ],
  "traitlets.traitlets.Enum.__init__": [
    "traitlets.traitlets.CaselessStrEnum",
    "traitlets.traitlets.FuzzyEnum"
  ],
  "traitlets.traitlets.Enum._info": [
    "traitlets.traitlets.CaselessStrEnum",
    "traitlets.traitlets.FuzzyEnum"
  ],
  "traitlets.traitlets.Enum.info": [
    "traitlets.traitlets.CaselessStrEnum",
    "traitlets.traitlets.FuzzyEnum"
  ],
  "traitlets.traitlets.Enum.info_rst": [
    "traitlets.traitlets.CaselessStrEnum",
    "traitlets.traitlets.FuzzyEnum"
  ],
  "traitlets.traitlets.Enum.validate": [
    "traitlets.traitlets.CaselessStrEnum",
    "traitlets.traitlets.FuzzyEnum"
  ],
  "traitlets.traitlets.Float.validate": [
    "traitlets.traitlets.CFloat"
  ],
  "traitlets.traitlets.HasDescriptors.setup_instance": [
    "traitlets.traitlets.HasTraits"
  ],
  "traitlets.traitlets.HasTraits.__init__": [
    "traitlets.config.configurable.Configurable"
  ],
  "traitlets.traitlets.Instance.__init__": [
    "traitlets.traitlets.Container",
    "traitlets.traitlets.Dict"
  ],
  "traitlets.traitlets.Instance.default_value_repr": [
    "traitlets.traitlets.Set"
  ],
  "traitlets.traitlets.Instance.from_string": [
    "traitlets.traitlets.Container",
    "traitlets.traitlets.Dict"
  ],
  "traitlets.traitlets.Instance.validate": [
    "traitlets.traitlets.Container",
    "traitlets.traitlets.Dict"
  ],
  "traitlets.traitlets.Int.validate": [
    "traitlets.traitlets.CInt"
  ],
  "traitlets.traitlets.MetaHasDescriptors.__init__": [
    "IPython.core.history.HistoryAccessor",
    "IPython.core.interactiveshell.InteractiveShell",
    "IPython.core.oinspect.Inspector",
    "IPython.core.ultratb.SyntaxTB",
    "IPython.core.ultratb.TBTools",
    "IPython.utils.PyColorize.Parser",
    "traitlets.config.application.Application",
    "traitlets.traitlets.HasTraits"
  ],
  "traitlets.traitlets.MetaHasDescriptors.setup_class": [
    "traitlets.traitlets.MetaHasTraits"
  ],
  "traitlets.traitlets.ObjectName.validate": [
    "traitlets.traitlets.DottedObjectName"
  ],
  "traitlets.traitlets.TraitType.__init__": [
    "traitlets.traitlets.Enum",
    "traitlets.traitlets.Float",
    "traitlets.traitlets.Int",
    "traitlets.traitlets.Union",
    "traitlets.traitlets.UseEnum"
  ],
  "traitlets.traitlets.TraitType.__or__": [
    "traitlets.traitlets.Union"
  ],
  "traitlets.traitlets.TraitType.default": [
    "traitlets.traitlets.Union"
  ],
  "traitlets.traitlets.TraitType.default_value_repr": [
    "traitlets.traitlets.Instance",
    "traitlets.traitlets.Type"
  ],
  "traitlets.traitlets.TraitType.from_string": [
    "traitlets.traitlets.Bool",
    "traitlets.traitlets.Bytes",
    "traitlets.traitlets.Complex",
    "traitlets.traitlets.Enum",
    "traitlets.traitlets.Float",
    "traitlets.traitlets.Instance",
    "traitlets.traitlets.Int",
    "traitlets.traitlets.ObjectName",
    "traitlets.traitlets.TCPAddress",
    "traitlets.traitlets.Unicode",
    "traitlets.traitlets.Union"
  ],
  "traitlets.traitlets.TraitType.info": [
    "traitlets.traitlets.Enum",
    "traitlets.traitlets.Instance",
    "traitlets.traitlets.Type",
    "traitlets.traitlets.UseEnum"
  ],
  "traitlets.traitlets.TraitType.set": [
    "traitlets.traitlets.List",
    "traitlets.traitlets.Set"
  ],
  "traitlets.traitlets.Unicode.validate": [
    "IPython.core.interactiveshell.SeparateUnicode",
    "traitlets.traitlets.CUnicode"
  ],
  "traitlets.utils.sentinel.Sentinel.__init__": [
    "traitlets.Sentinel"
  ],
  "ttkthemes._widget.ThemedWidget.set_theme": [
    "ttkthemes.themed_tk.ThemedTk"
  ],
  "tuple.__add__": [
    "fpdf.drawing.Point",
    "turtle.Vec2D",
    "typeshed.typeshed.stdlib.turtle.Vec2D",
    "typeshed.typeshed.stdlib.xml.dom.minicompat.EmptyNodeList",
    "typeshed.typeshed.stubs.fpdf2.fpdf.drawing.Point",
    "xml.dom.minicompat.EmptyNodeList"
  ],
  "tuple.__contains__": [
    "pip._vendor.pygments.token._TokenType",
    "pygments.token._TokenType",
    "typeshed.typeshed.stubs.Pygments.pygments.token._TokenType"
  ],
  "tuple.__getitem__": [
    "importlib_metadata.EntryPoints",
    "pip._vendor.distlib.compat.ConvertingTuple",
    "typeshed.typeshed.stdlib.logging.config.ConvertingTuple"
  ],
  "tuple.__gt__": [
    "parso.utils.PythonVersionInfo"
  ],
  "tuple.__mul__": [
    "fpdf.drawing.Point",
    "fpdf.drawing.Transform",
    "turtle.Vec2D",
    "typeshed.typeshed.stdlib.turtle.Vec2D",
    "typeshed.typeshed.stubs.fpdf2.fpdf.drawing.Point",
    "typeshed.typeshed.stubs.fpdf2.fpdf.drawing.Transform"
  ],
  "tuple.__new__": [
    "codecs.CodecInfo",
    "django.db.migrations.migration.SwappableTuple",
    "django.utils.datastructures.ImmutableList",
    "jinja2.lexer.OptionalLStrip",
    "mock.mock._Call",
    "pip._vendor.pygments.lexer.combined",
    "pygments.lexer.combined",
    "turtle.Vec2D",
    "typeshed.typeshed.stdlib.codecs.CodecInfo",
    "typeshed.typeshed.stdlib.turtle.Vec2D",
    "typeshed.typeshed.stdlib.unittest.mock._Call",
    "typeshed.typeshed.stubs.Pygments.pygments.lexer.combined",
    "typeshed.typeshed.stubs.mock.mock.mock._Call",
    "unittest.mock._Call"
  ],
  "tuple.__rmul__": [
    "fpdf.drawing.Point",
    "fpdf.drawing.Transform",
    "turtle.Vec2D",
    "typeshed.typeshed.stdlib.turtle.Vec2D",
    "typeshed.typeshed.stubs.fpdf2.fpdf.drawing.Point",
    "typeshed.typeshed.stubs.fpdf2.fpdf.drawing.Transform"
  ],
  "turtle.RawTurtle.__init__": [
    "turtle.Turtle"
  ],
  "turtle.TNavigator.reset": [
    "turtle.RawTurtle"
  ],
  "turtle.TPen.__init__": [
    "turtle.RawTurtle"
  ],
  "turtle.TurtleScreen.__init__": [
    "turtle._Screen"
  ],
  "turtle.TurtleScreenBase.__init__": [
    "turtle.TurtleScreen"
  ],
  "type.__base__": [
    "typeshed.typeshed.stdlib.builtins.type"
  ],
  "type.__basicsize__": [
    "typeshed.typeshed.stdlib.builtins.type"
  ],
  "type.__call__": [
    "IPython.core.alias.Alias",
    "IPython.core.async_helpers._AsyncIORunner",
    "IPython.core.autocall.ExitAutocall",
    "IPython.core.completer.MatcherAPIv2",
    "IPython.core.completer._MatcherAPIv1Base",
    "IPython.core.crashhandler.CrashHandler",
    "IPython.core.displayhook.CapturingDisplayHook",
    "IPython.core.displayhook.DisplayHook",
    "IPython.core.formatters.BaseFormatter",
    "IPython.core.formatters.FormatterABC",
    "IPython.core.guarded_eval.InstancesHaveGetItem",
    "IPython.core.hooks.CommandChainDispatcher",
    "IPython.core.inputtransformer2.PromptStripper",
    "IPython.core.magic.MagicAlias",
    "IPython.core.magic_arguments.ArgDecorator",
    "IPython.core.prompts.LazyEvaluate",
    "IPython.core.tests.test_handlers.Autocallable",
    "IPython.core.tests.test_handlers.CallableIndexable",
    "IPython.core.ultratb.AutoFormattedTB",
    "IPython.core.ultratb.ListTB",
    "IPython.core.ultratb.VerboseTB",
    "IPython.extensions.autoreload.StrongRef",
    "IPython.lib.backgroundjobs.BackgroundJobManager",
    "IPython.lib.demo.Demo",
    "IPython.terminal.embed.InteractiveShellEmbed",
    "IPython.utils.PyColorize.Parser",
    "Xlib.error.CatchError",
    "_cffi_backend._Allocator",
    "_cffi_backend._CDataBase",
    "_json.make_encoder",
    "_json.make_scanner",
    "_operator.attrgetter",
    "_operator.itemgetter",
    "_operator.methodcaller",
    "_sitebuiltins.Quitter",
    "_sitebuiltins._Helper",
    "_sitebuiltins._Printer",
    "_typeshed.IdentityFunction",
    "_typeshed.wsgi.FileWrapper",
    "_typeshed.wsgi.StartResponse",
    "_weakref.ReferenceType",
    "argparse.Action",
    "argparse.FileType",
    "argparse._FormatterClass",
    "asgiref.sync.AsyncToSync",
    "asgiref.sync.SyncToAsync",
    "asgiref.typing.ASGI2Protocol",
    "asgiref.wsgi.WsgiToAsgi",
    "asgiref.wsgi.WsgiToAsgiInstance",
    "asyncio.events._TaskFactory",
    "asyncio.proactor_events._WarnCallbackProtocol",
    "asyncio.unix_events._Warn",
    "aws_xray_sdk.core.models.subsegment.SubsegmentContextManager",
    "babel.plural.PluralRule",
    "babel.support.LazyProxy",
    "bleach.callbacks._Callback",
    "bleach.sanitizer._Filter",
    "blinker._saferef.BoundMethodWeakref",
    "cachetools._TimedCache._Timer",
    "cgitb.Hook",
    "click.core.BaseCommand",
    "click.types.ParamType",
    "codecs._Decoder",
    "codecs._Encoder",
    "codecs._IncrementalDecoder",
    "codecs._IncrementalEncoder",
    "codecs._StreamReader",
    "codecs._StreamWriter",
    "codeop.CommandCompiler",
    "codeop.Compile",
    "contextlib.ContextDecorator",
    "ctypes._FuncPointer",
    "dataclasses._DefaultFactory",
    "dateparser.parser._time_parser",
    "dateutil._common.weekday",
    "dateutil.rrule._rrulestr",
    "dateutil.tz.tz._GetTZ",
    "decorator.ContextManager",
    "deprecated.classic.ClassicAdapter",
    "django.contrib.gis.geos.libgeos.GEOSFuncFactory",
    "django.contrib.gis.geos.prototypes.threadsafe.GEOSFunc",
    "django.contrib.postgres.fields.hstore.KeyTransformFactory",
    "django.contrib.postgres.validators.KeysValidator",
    "django.contrib.staticfiles.handlers.ASGIStaticFilesHandler",
    "django.contrib.staticfiles.handlers.StaticFilesHandler",
    "django.contrib.syndication.views.Feed",
    "django.core.checks.registry._CheckCallable",
    "django.core.handlers.asgi.ASGIHandler",
    "django.core.handlers.wsgi.WSGIHandler",
    "django.core.serializers.BadSerializer",
    "django.core.validators.BaseValidator",
    "django.core.validators.DecimalValidator",
    "django.core.validators.EmailValidator",
    "django.core.validators.FileExtensionValidator",
    "django.core.validators.ProhibitNullCharactersValidator",
    "django.core.validators.RegexValidator",
    "django.db.backends.ddl_references._NameCallable",
    "django.db.backends.ddl_references._QuoteCallable",
    "django.db.migrations.executor._ProgressCallbackT",
    "django.db.migrations.operations.special._CodeCallable",
    "django.db.models.fields._ChoicesCallable",
    "django.db.models.fields.files._UploadToCallable",
    "django.db.models.fields.json.KeyTransformFactory",
    "django.db.models.fields.related_descriptors.ManyRelatedManager",
    "django.db.models.fields.related_descriptors.RelatedManager",
    "django.db.transaction.Atomic",
    "django.forms.fields._CoerceCallable",
    "django.forms.widgets._CheckCallable",
    "django.test.client.AsyncClientHandler",
    "django.test.client.ClientHandler",
    "django.test.utils.TestContextDecorator",
    "django.utils.datastructures._ItemCallable",
    "django.utils.deprecation.MiddlewareMixin",
    "django.utils.deprecation._AsyncGetResponseCallable",
    "django.utils.deprecation._GetResponseCallable",
    "django.utils.deprecation.warn_about_renamed_method",
    "django.utils.html.Urlizer",
    "django.utils.translation.trans_real._PluralCallable",
    "docutils.languages.LanguageImporter",
    "email.headerregistry.HeaderRegistry",
    "flask.app.Flask",
    "fpdf.recorder.CallRecorder",
    "functools._SingleDispatchCallable",
    "functools._Wrapped",
    "functools._Wrapper",
    "functools._lru_cache_wrapper",
    "functools.partial",
    "gdb.Unwinder",
    "gdb.Value",
    "gdb.printing.PrettyPrinter",
    "gdb.xmethod._XMethodWorker",
    "gflags.FlagValues",
    "google.cloud.ndb.query.RepeatedStructuredPropertyPredicate",
    "google.cloud.ndb.utils.keyword_only",
    "graphql.pyutils.enum.EnumMeta",
    "humanfriendly.terminal.html.HTMLConverter",
    "influxdb_client.configuration.TypeWithDefault",
    "invoke.tasks.Task",
    "jinja2.environment.TemplateExpression",
    "jinja2.lexer.Failure",
    "jinja2.runtime.BlockReference",
    "jinja2.runtime.LoopContext",
    "jinja2.runtime.LoopRenderFunc",
    "jinja2.runtime.Macro",
    "jinja2.utils.Joiner",
    "jinja2.visitor.VisitCallable",
    "libcst._metadata_dependent.LazyValue",
    "libcst.matchers._matcher_base.TypeOf",
    "linecache._SourceLoader",
    "marshmallow.validate.URL.RegexMemoizer",
    "marshmallow.validate.Validator",
    "mock.mock.CallableMixin",
    "mock.mock._Call",
    "mock.mock._patch",
    "mock.mock._patch_dict",
    "mock.mock._patcher",
    "multiprocessing.sharedctypes._AcquireFunc",
    "multiprocessing.util.Finalize",
    "oauthlib.oauth2.rfc6749.tokens.TokenBase",
    "openpyxl.compat.singleton.Cached",
    "openpyxl.compat.singleton.Singleton",
    "openpyxl.descriptors.base.Default",
    "paramiko.client._TransportFactory",
    "paramiko.compress.ZlibCompressor",
    "paramiko.compress.ZlibDecompressor",
    "passlib.pwd.SequenceGenerator",
    "peewee.Context",
    "peewee.ModelAlias",
    "peewee.State",
    "peewee._callable_context_manager",
    "pip._internal.index.collector.ParseLinks",
    "pip._internal.network.download.BatchDownloader",
    "pip._internal.network.download.Downloader",
    "pip._vendor.pkg_resources.NoDists",
    "pip._vendor.pygments.lexer.RegexLexerMeta",
    "pip._vendor.pyparsing.actions.OnlyOnce",
    "pip._vendor.pyparsing.core.ParserElement",
    "pip._vendor.pyparsing.diagram.EditablePartial",
    "pip._vendor.requests.auth.AuthBase",
    "pip._vendor.rich._log_render.LogRender",
    "pip._vendor.rich.highlighter.Highlighter",
    "pip._vendor.rich.progress.ProgressColumn",
    "pip._vendor.rich.prompt.PromptBase",
    "pip._vendor.tenacity.BaseRetrying",
    "pip._vendor.tenacity.nap.sleep_using_event",
    "pip._vendor.tenacity.retry.retry_base",
    "pip._vendor.tenacity.retry.retry_if_not_exception_message",
    "pip._vendor.tenacity.stop.stop_base",
    "pip._vendor.tenacity.wait.wait_base",
    "pip._vendor.typing_extensions.NewType",
    "pip._vendor.typing_extensions.ParamSpec",
    "pip._vendor.typing_extensions.TypeAliasType",
    "pip._vendor.typing_extensions._ConcatenateGenericAlias",
    "pip._vendor.typing_extensions._SpecialForm",
    "pip._vendor.urllib3.packages.backports.weakref_finalize.weakref_finalize",
    "pip._vendor.urllib3.request.RequestModule",
    "promise.utils.deprecated",
    "prompt_toolkit.filters.base.Filter",
    "prompt_toolkit.shortcuts.progress_bar.base.ProgressBar",
    "prompt_toolkit.utils.Event",
    "pyasn1.codec.ber.decoder.Decoder",
    "pyasn1.codec.ber.encoder.Encoder",
    "pyasn1.codec.native.decoder.AbstractScalarDecoder",
    "pyasn1.codec.native.decoder.ChoiceDecoder",
    "pyasn1.codec.native.decoder.Decoder",
    "pyasn1.codec.native.decoder.SequenceOfOrSetOfDecoder",
    "pyasn1.codec.native.decoder.SequenceOrSetDecoder",
    "pyasn1.codec.native.encoder.Encoder",
    "pyasn1.debug.Debug",
    "pyasn1.debug.Printer",
    "pyasn1.type.constraint.AbstractConstraint",
    "pydoc.Helper",
    "pygments.lexer.RegexLexerMeta",
    "redis.asyncio.client.AsyncPubsubWorkerExceptionHandler",
    "redis.asyncio.client.AsyncResponseCallbackProtocol",
    "redis.asyncio.client.PubsubWorkerExceptionHandler",
    "redis.asyncio.client.ResponseCallbackProtocol",
    "redis.asyncio.connection.AsyncConnectCallbackProtocol",
    "redis.asyncio.connection.ConnectCallbackProtocol",
    "redis.cluster._ParseResponseCallback",
    "redis.commands.core.AsyncScript",
    "redis.commands.core.Script",
    "requests.auth.AuthBase",
    "shutil._RmtreeType",
    "singledispatch._SingleDispatchCallable",
    "slumber.Resource",
    "smtplib._AuthObject",
    "sqlalchemy.engine.result.FrozenResult",
    "sqlalchemy.event.attr._CompoundListener",
    "sqlalchemy.event.attr._EmptyListener",
    "sqlalchemy.event.base._UnpickleDispatch",
    "sqlalchemy.ext.associationproxy._lazy_collection",
    "sqlalchemy.ext.baked.BakedQuery",
    "sqlalchemy.ext.baked.Bakery",
    "sqlalchemy.ext.compiler._dispatcher",
    "sqlalchemy.orm.clsregistry._class_resolver",
    "sqlalchemy.orm.collections._PlainColumnGetter",
    "sqlalchemy.orm.collections._SerializableAttrGetter",
    "sqlalchemy.orm.collections._SerializableColumnGetter",
    "sqlalchemy.orm.decl_api._stateful_declared_attr",
    "sqlalchemy.orm.instrumentation._SerializeManager",
    "sqlalchemy.orm.relationships._ColInAnnotations",
    "sqlalchemy.orm.scoping.ScopedSessionMixin",
    "sqlalchemy.orm.session.sessionmaker",
    "sqlalchemy.orm.strategies.LoadDeferredColumns",
    "sqlalchemy.orm.strategies.LoadLazyAttribute",
    "sqlalchemy.orm.strategy_options.loader_option",
    "sqlalchemy.sql.ddl.DDLElement",
    "sqlalchemy.sql.functions._FunctionGenerator",
    "sqlalchemy.sql.lambdas.PyWrapper",
    "sqlalchemy.sql.operators.custom_op",
    "sqlalchemy.testing.exclusions.BooleanPredicate",
    "sqlalchemy.testing.exclusions.LambdaPredicate",
    "sqlalchemy.testing.exclusions.NotPredicate",
    "sqlalchemy.testing.exclusions.OrPredicate",
    "sqlalchemy.testing.exclusions.SpecPredicate",
    "sqlalchemy.testing.exclusions.compound",
    "sqlalchemy.testing.provision.register",
    "sqlalchemy.testing.util.adict",
    "sqlalchemy.util._collections.ScopedRegistry",
    "sqlalchemy.util.langhelpers.portable_instancemethod",
    "sqlite3.dbapi2.Connection",
    "stripe.util.class_method_variant",
    "symtable.SymbolTableFactory",
    "testslide.dsl._DSLContext",
    "testslide.mock_callable._CallableMock",
    "testslide.strict_mock._DefaultMagic",
    "testslide.strict_mock._MethodProxy",
    "tkinter.CallWrapper",
    "tkinter._ExceptionReportingCallback",
    "tkinter._setit",
    "tqdm.rich._ProgressColumn",
    "traitlets.traitlets.EventHandler",
    "traitlets.traitlets._CallbackWrapper",
    "traitlets.traitlets._SimpleTest",
    "typeguard.TypeChecker",
    "types.BuiltinFunctionType",
    "types.ClassMethodDescriptorType",
    "types.FunctionType",
    "types.MethodDescriptorType",
    "types.MethodType",
    "types.MethodWrapperType",
    "types.WrapperDescriptorType",
    "typeshed.typeshed.stdlib._ctypes.CFuncPtr",
    "typeshed.typeshed.stdlib._json.make_encoder",
    "typeshed.typeshed.stdlib._json.make_scanner",
    "typeshed.typeshed.stdlib._operator.attrgetter",
    "typeshed.typeshed.stdlib._operator.itemgetter",
    "typeshed.typeshed.stdlib._operator.methodcaller",
    "typeshed.typeshed.stdlib._sitebuiltins.Quitter",
    "typeshed.typeshed.stdlib._sitebuiltins._Helper",
    "typeshed.typeshed.stdlib._sitebuiltins._Printer",
    "typeshed.typeshed.stdlib._typeshed.IdentityFunction",
    "typeshed.typeshed.stdlib._typeshed.wsgi.FileWrapper",
    "typeshed.typeshed.stdlib._typeshed.wsgi.StartResponse",
    "typeshed.typeshed.stdlib._weakref.ReferenceType",
    "typeshed.typeshed.stdlib.argparse.Action",
    "typeshed.typeshed.stdlib.argparse.FileType",
    "typeshed.typeshed.stdlib.argparse._FormatterClass",
    "typeshed.typeshed.stdlib.asyncio.events._TaskFactory",
    "typeshed.typeshed.stdlib.builtins.type",
    "typeshed.typeshed.stdlib.cgitb.Hook",
    "typeshed.typeshed.stdlib.codecs._Decoder",
    "typeshed.typeshed.stdlib.codecs._Encoder",
    "typeshed.typeshed.stdlib.codecs._IncrementalDecoder",
    "typeshed.typeshed.stdlib.codecs._IncrementalEncoder",
    "typeshed.typeshed.stdlib.codecs._StreamReader",
    "typeshed.typeshed.stdlib.codecs._StreamWriter",
    "typeshed.typeshed.stdlib.codeop.CommandCompiler",
    "typeshed.typeshed.stdlib.codeop.Compile",
    "typeshed.typeshed.stdlib.contextlib.ContextDecorator",
    "typeshed.typeshed.stdlib.dataclasses._DefaultFactory",
    "typeshed.typeshed.stdlib.email.headerregistry.HeaderRegistry",
    "typeshed.typeshed.stdlib.functools._SingleDispatchCallable",
    "typeshed.typeshed.stdlib.functools._Wrapped",
    "typeshed.typeshed.stdlib.functools._Wrapper",
    "typeshed.typeshed.stdlib.functools._lru_cache_wrapper",
    "typeshed.typeshed.stdlib.functools.partial",
    "typeshed.typeshed.stdlib.multiprocessing.sharedctypes._AcquireFunc",
    "typeshed.typeshed.stdlib.multiprocessing.util.Finalize",
    "typeshed.typeshed.stdlib.pydoc.Helper",
    "typeshed.typeshed.stdlib.shutil._RmtreeType",
    "typeshed.typeshed.stdlib.smtplib._AuthObject",
    "typeshed.typeshed.stdlib.sqlite3.dbapi2.Connection",
    "typeshed.typeshed.stdlib.symtable.SymbolTableFactory",
    "typeshed.typeshed.stdlib.tkinter.CallWrapper",
    "typeshed.typeshed.stdlib.tkinter._setit",
    "typeshed.typeshed.stdlib.types.BuiltinFunctionType",
    "typeshed.typeshed.stdlib.types.ClassMethodDescriptorType",
    "typeshed.typeshed.stdlib.types.FunctionType",
    "typeshed.typeshed.stdlib.types.MethodDescriptorType",
    "typeshed.typeshed.stdlib.types.MethodType",
    "typeshed.typeshed.stdlib.types.MethodWrapperType",
    "typeshed.typeshed.stdlib.types.WrapperDescriptorType",
    "typeshed.typeshed.stdlib.typing_extensions.NewType",
    "typeshed.typeshed.stdlib.unittest.case.TestCase",
    "typeshed.typeshed.stdlib.unittest.mock.CallableMixin",
    "typeshed.typeshed.stdlib.unittest.mock._Call",
    "typeshed.typeshed.stdlib.unittest.mock._patch",
    "typeshed.typeshed.stdlib.unittest.mock._patch_dict",
    "typeshed.typeshed.stdlib.unittest.mock._patcher",
    "typeshed.typeshed.stdlib.unittest.suite.BaseTestSuite",
    "typeshed.typeshed.stdlib.urllib.request._HTTPConnectionProtocol",
    "typeshed.typeshed.stdlib.weakref.finalize",
    "typeshed.typeshed.stdlib.wsgiref.types.FileWrapper",
    "typeshed.typeshed.stdlib.wsgiref.types.StartResponse",
    "typeshed.typeshed.stdlib.wsgiref.validate.WriteWrapper",
    "typeshed.typeshed.stdlib.xmlrpc.client.MultiCall",
    "typeshed.typeshed.stdlib.xmlrpc.client.ServerProxy",
    "typeshed.typeshed.stdlib.xmlrpc.client._Method",
    "typeshed.typeshed.stdlib.xmlrpc.client._MultiCallMethod",
    "typeshed.typeshed.stdlib.xmlrpc.server._DispatchArity0",
    "typeshed.typeshed.stdlib.xmlrpc.server._DispatchArity1",
    "typeshed.typeshed.stdlib.xmlrpc.server._DispatchArity2",
    "typeshed.typeshed.stdlib.xmlrpc.server._DispatchArity3",
    "typeshed.typeshed.stdlib.xmlrpc.server._DispatchArity4",
    "typeshed.typeshed.stdlib.xmlrpc.server._DispatchArityN",
    "typeshed.typeshed.stubs.Deprecated.deprecated.classic.ClassicAdapter",
    "typeshed.typeshed.stubs.Flask-SocketIO.flask_socketio._ExceptionHandlerDecorator",
    "typeshed.typeshed.stubs.Flask-SocketIO.flask_socketio._HandlerDecorator",
    "typeshed.typeshed.stubs.Pygments.pygments.lexer.RegexLexerMeta",
    "typeshed.typeshed.stubs.WTForms.@tests.test_cases.check_filters.Filter1",
    "typeshed.typeshed.stubs.WTForms.@tests.test_cases.check_filters.Filter2",
    "typeshed.typeshed.stubs.WTForms.wtforms.fields.core.Field",
    "typeshed.typeshed.stubs.WTForms.wtforms.fields.core.Label",
    "typeshed.typeshed.stubs.WTForms.wtforms.fields.core._Validator",
    "typeshed.typeshed.stubs.WTForms.wtforms.fields.core._Widget",
    "typeshed.typeshed.stubs.WTForms.wtforms.form.FormMeta",
    "typeshed.typeshed.stubs.WTForms.wtforms.validators.AnyOf",
    "typeshed.typeshed.stubs.WTForms.wtforms.validators.DataRequired",
    "typeshed.typeshed.stubs.WTForms.wtforms.validators.Disabled",
    "typeshed.typeshed.stubs.WTForms.wtforms.validators.Email",
    "typeshed.typeshed.stubs.WTForms.wtforms.validators.EqualTo",
    "typeshed.typeshed.stubs.WTForms.wtforms.validators.HostnameValidation",
    "typeshed.typeshed.stubs.WTForms.wtforms.validators.IPAddress",
    "typeshed.typeshed.stubs.WTForms.wtforms.validators.InputRequired",
    "typeshed.typeshed.stubs.WTForms.wtforms.validators.Length",
    "typeshed.typeshed.stubs.WTForms.wtforms.validators.NoneOf",
    "typeshed.typeshed.stubs.WTForms.wtforms.validators.NumberRange",
    "typeshed.typeshed.stubs.WTForms.wtforms.validators.Optional",
    "typeshed.typeshed.stubs.WTForms.wtforms.validators.ReadOnly",
    "typeshed.typeshed.stubs.WTForms.wtforms.validators.Regexp",
    "typeshed.typeshed.stubs.WTForms.wtforms.validators.UUID",
    "typeshed.typeshed.stubs.WTForms.wtforms.widgets.core.Input",
    "typeshed.typeshed.stubs.WTForms.wtforms.widgets.core.ListWidget",
    "typeshed.typeshed.stubs.WTForms.wtforms.widgets.core.Option",
    "typeshed.typeshed.stubs.WTForms.wtforms.widgets.core.Select",
    "typeshed.typeshed.stubs.WTForms.wtforms.widgets.core.TableWidget",
    "typeshed.typeshed.stubs.WTForms.wtforms.widgets.core.TextArea",
    "typeshed.typeshed.stubs.WebOb.webob.client.SendRequest",
    "typeshed.typeshed.stubs.WebOb.webob.cookies.CookieProfile",
    "typeshed.typeshed.stubs.WebOb.webob.dec._MiddlewareFactory",
    "typeshed.typeshed.stubs.WebOb.webob.dec._UnboundMiddleware",
    "typeshed.typeshed.stubs.WebOb.webob.dec.wsgify",
    "typeshed.typeshed.stubs.WebOb.webob.exc.HTTPException",
    "typeshed.typeshed.stubs.WebOb.webob.exc.HTTPExceptionMiddleware",
    "typeshed.typeshed.stubs.WebOb.webob.exc._JSONFormatter",
    "typeshed.typeshed.stubs.WebOb.webob.response.Response",
    "typeshed.typeshed.stubs.WebOb.webob.response._ResponseCacheExpires",
    "typeshed.typeshed.stubs.WebOb.webob.static.DirectoryApp",
    "typeshed.typeshed.stubs.WebOb.webob.static.FileApp",
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.models.subsegment.SubsegmentContextManager",
    "typeshed.typeshed.stubs.bleach.bleach.callbacks._Callback",
    "typeshed.typeshed.stubs.bleach.bleach.sanitizer._Filter",
    "typeshed.typeshed.stubs.boltons.boltons.cacheutils.CachedFunction",
    "typeshed.typeshed.stubs.boltons.boltons.cacheutils.CachedMethod",
    "typeshed.typeshed.stubs.cachetools.cachetools._TimedCache._Timer",
    "typeshed.typeshed.stubs.cffi._cffi_backend._Allocator",
    "typeshed.typeshed.stubs.cffi._cffi_backend._CDataBase",
    "typeshed.typeshed.stubs.dateparser.dateparser.parser._time_parser",
    "typeshed.typeshed.stubs.decorator.decorator.ContextManager",
    "typeshed.typeshed.stubs.docutils.docutils.languages.LanguageImporter",
    "typeshed.typeshed.stubs.fpdf2.fpdf.deprecation.WarnOnDeprecatedModuleAttributes",
    "typeshed.typeshed.stubs.fpdf2.fpdf.recorder.CallRecorder",
    "typeshed.typeshed.stubs.gdb.gdb.Unwinder",
    "typeshed.typeshed.stubs.gdb.gdb.Value",
    "typeshed.typeshed.stubs.gdb.gdb.printing.PrettyPrinter",
    "typeshed.typeshed.stubs.gdb.gdb.xmethod._XMethodWorker",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.query.RepeatedStructuredPropertyPredicate",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.utils.keyword_only",
    "typeshed.typeshed.stubs.humanfriendly.humanfriendly.terminal.html.HTMLConverter",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.configuration.TypeWithDefault",
    "typeshed.typeshed.stubs.jsonschema.jsonschema._typing.SchemaKeywordValidator",
    "typeshed.typeshed.stubs.libsass.sass.SassFunction",
    "typeshed.typeshed.stubs.libsass.sassutils.wsgi.SassMiddleware",
    "typeshed.typeshed.stubs.mock.mock.mock.CallableMixin",
    "typeshed.typeshed.stubs.mock.mock.mock._Call",
    "typeshed.typeshed.stubs.mock.mock.mock._patch",
    "typeshed.typeshed.stubs.mock.mock.mock._patch_dict",
    "typeshed.typeshed.stubs.mock.mock.mock._patcher",
    "typeshed.typeshed.stubs.oauthlib.oauthlib.oauth2.rfc6749.tokens.TokenBase",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.compat.singleton.Cached",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.compat.singleton.Singleton",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.base.Default",
    "typeshed.typeshed.stubs.paramiko.paramiko.client._TransportFactory",
    "typeshed.typeshed.stubs.paramiko.paramiko.compress.ZlibCompressor",
    "typeshed.typeshed.stubs.paramiko.paramiko.compress.ZlibDecompressor",
    "typeshed.typeshed.stubs.passlib.passlib.pwd.SequenceGenerator",
    "typeshed.typeshed.stubs.peewee.peewee.Context",
    "typeshed.typeshed.stubs.peewee.peewee.ModelAlias",
    "typeshed.typeshed.stubs.peewee.peewee.State",
    "typeshed.typeshed.stubs.peewee.peewee._callable_context_manager",
    "typeshed.typeshed.stubs.pluggy.pluggy._hooks.HookimplMarker",
    "typeshed.typeshed.stubs.pluggy.pluggy._hooks.HookspecMarker",
    "typeshed.typeshed.stubs.pluggy.pluggy._hooks._HookCaller",
    "typeshed.typeshed.stubs.pluggy.pluggy._tracing.TagTracerSub",
    "typeshed.typeshed.stubs.psycopg2.psycopg2._psycopg._type",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.codec.ber.decoder.Decoder",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.codec.ber.decoder.SingleItemDecoder",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.codec.ber.encoder.Encoder",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.codec.ber.encoder.SingleItemEncoder",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.codec.native.decoder.AbstractScalarPayloadDecoder",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.codec.native.decoder.ChoicePayloadDecoder",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.codec.native.decoder.Decoder",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.codec.native.decoder.SequenceOfOrSetOfPayloadDecoder",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.codec.native.decoder.SequenceOrSetPayloadDecoder",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.codec.native.decoder.SingleItemDecoder",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.codec.native.encoder.Encoder",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.codec.native.encoder.SingleItemEncoder",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.debug.Debug",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.debug.Printer",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.constraint.AbstractConstraint",
    "typeshed.typeshed.stubs.python-dateutil.dateutil._common.weekday",
    "typeshed.typeshed.stubs.python-dateutil.dateutil.rrule._rrulestr",
    "typeshed.typeshed.stubs.python-dateutil.dateutil.tz.tz._GetTZ",
    "typeshed.typeshed.stubs.python-gflags.gflags.FlagValues",
    "typeshed.typeshed.stubs.python-xlib.Xlib.error.CatchError",
    "typeshed.typeshed.stubs.pywin32.win32com.client.dynamic.CDispatch",
    "typeshed.typeshed.stubs.pywin32.win32com.client.dynamic._DispatchCreateClass",
    "typeshed.typeshed.stubs.pywin32.win32comext.adsi.ADSIEnumerator",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.AsyncPubsubWorkerExceptionHandler",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.AsyncResponseCallbackProtocol",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.PubsubWorkerExceptionHandler",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.ResponseCallbackProtocol",
    "typeshed.typeshed.stubs.redis.redis.asyncio.connection.AsyncConnectCallbackProtocol",
    "typeshed.typeshed.stubs.redis.redis.asyncio.connection.ConnectCallbackProtocol",
    "typeshed.typeshed.stubs.redis.redis.cluster._ParseResponseCallback",
    "typeshed.typeshed.stubs.redis.redis.commands.core.AsyncScript",
    "typeshed.typeshed.stubs.redis.redis.commands.core.Script",
    "typeshed.typeshed.stubs.requests-oauthlib.requests_oauthlib.oauth2_session._AccessTokenResponseHook",
    "typeshed.typeshed.stubs.requests-oauthlib.requests_oauthlib.oauth2_session._ProtectedRequestHook",
    "typeshed.typeshed.stubs.requests-oauthlib.requests_oauthlib.oauth2_session._RefreshTokenResponseHook",
    "typeshed.typeshed.stubs.requests.requests.auth.AuthBase",
    "typeshed.typeshed.stubs.seaborn.seaborn._core.moves.Move",
    "typeshed.typeshed.stubs.seaborn.seaborn._core.scales.Scale",
    "typeshed.typeshed.stubs.seaborn.seaborn._stats.base.Stat",
    "typeshed.typeshed.stubs.seaborn.seaborn.rcmod._RCAesthetics",
    "typeshed.typeshed.stubs.setuptools.setuptools.command.editable_wheel.EditableStrategy",
    "typeshed.typeshed.stubs.setuptools.setuptools.command.editable_wheel._StaticPth",
    "typeshed.typeshed.stubs.setuptools.setuptools.command.editable_wheel._TopLevelFinder",
    "typeshed.typeshed.stubs.setuptools.setuptools.config.expand.EnsurePackagesDiscovered",
    "typeshed.typeshed.stubs.setuptools.setuptools.discovery.ConfigDiscovery",
    "typeshed.typeshed.stubs.setuptools.setuptools.discovery._Filter",
    "typeshed.typeshed.stubs.singledispatch.singledispatch._SingleDispatchCallable",
    "typeshed.typeshed.stubs.slumber.slumber.Resource",
    "typeshed.typeshed.stubs.stripe.stripe.util.class_method_variant",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.constraints.Constraint",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.initializers.Initializer",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.layers.Layer",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.losses.Loss",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.optimizers.schedules.LearningRateSchedule",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.regularizers.Regularizer",
    "typeshed.typeshed.stubs.tqdm.tqdm.rich._ProgressColumn",
    "typeshed.typeshed.stubs.translationstring.translationstring._ChameleonTranslate",
    "typeshed.typeshed.stubs.translationstring.translationstring._Pluralizer",
    "typeshed.typeshed.stubs.translationstring.translationstring._PluralizerPolicy",
    "typeshed.typeshed.stubs.translationstring.translationstring._TranslationStringFactory",
    "typeshed.typeshed.stubs.translationstring.translationstring._Translator",
    "typeshed.typeshed.stubs.translationstring.translationstring._TranslatorPolicy",
    "typeshed.typeshed.stubs.uWSGI.uwsgi._RPCCallable",
    "typeshed.typeshed.stubs.uWSGI.uwsgidecorators._spoolraw",
    "typeshed.typeshed.stubs.uWSGI.uwsgidecorators.cron",
    "typeshed.typeshed.stubs.uWSGI.uwsgidecorators.farm",
    "typeshed.typeshed.stubs.uWSGI.uwsgidecorators.farm_loop",
    "typeshed.typeshed.stubs.uWSGI.uwsgidecorators.filemon",
    "typeshed.typeshed.stubs.uWSGI.uwsgidecorators.harakiri",
    "typeshed.typeshed.stubs.uWSGI.uwsgidecorators.lock",
    "typeshed.typeshed.stubs.uWSGI.uwsgidecorators.mule",
    "typeshed.typeshed.stubs.uWSGI.uwsgidecorators.mule_brain",
    "typeshed.typeshed.stubs.uWSGI.uwsgidecorators.mulefunc",
    "typeshed.typeshed.stubs.uWSGI.uwsgidecorators.mulemsg",
    "typeshed.typeshed.stubs.uWSGI.uwsgidecorators.mulemsg_loop",
    "typeshed.typeshed.stubs.uWSGI.uwsgidecorators.postfork",
    "typeshed.typeshed.stubs.uWSGI.uwsgidecorators.rbtimer",
    "typeshed.typeshed.stubs.uWSGI.uwsgidecorators.rpc",
    "typeshed.typeshed.stubs.uWSGI.uwsgidecorators.signal",
    "typeshed.typeshed.stubs.uWSGI.uwsgidecorators.thread",
    "typeshed.typeshed.stubs.uWSGI.uwsgidecorators.timer",
    "unittest.mock.CallableMixin",
    "unittest.mock._Call",
    "unittest.mock._patch",
    "unittest.mock._patch_dict",
    "unittest.mock._patcher",
    "unittest.suite.BaseTestSuite",
    "urllib.request._HTTPConnectionProtocol",
    "weakref.finalize",
    "werkzeug.datastructures.etag.ETags",
    "werkzeug.debug.DebuggedApplication",
    "werkzeug.debug.repr._Helper",
    "werkzeug.exceptions.Aborter",
    "werkzeug.exceptions.HTTPException",
    "werkzeug.formparser.TStreamFactory",
    "werkzeug.local.Local",
    "werkzeug.local.LocalStack",
    "werkzeug.local._ProxyLookup",
    "werkzeug.middleware.dispatcher.DispatcherMiddleware",
    "werkzeug.middleware.http_proxy.ProxyMiddleware",
    "werkzeug.middleware.lint.GuardedWrite",
    "werkzeug.middleware.lint.LintMiddleware",
    "werkzeug.middleware.profiler.ProfilerMiddleware",
    "werkzeug.middleware.proxy_fix.ProxyFix",
    "werkzeug.middleware.shared_data.SharedDataMiddleware",
    "werkzeug.routing.rules.RuleTemplate",
    "werkzeug.wrappers.response.Response",
    "win32com.client.dynamic.CDispatch",
    "win32com.client.dynamic._DispatchCreateClass",
    "win32comext.adsi.ADSIEnumerator",
    "wsgiref.types.FileWrapper",
    "wsgiref.types.StartResponse",
    "wsgiref.validate.WriteWrapper",
    "xmlrpc.client.MultiCall",
    "xmlrpc.client.ServerProxy",
    "xmlrpc.client._Method",
    "xmlrpc.client._MultiCallMethod",
    "xmlrpc.server._DispatchArity0",
    "xmlrpc.server._DispatchArity1",
    "xmlrpc.server._DispatchArity2",
    "xmlrpc.server._DispatchArity3",
    "xmlrpc.server._DispatchArity4",
    "xmlrpc.server._DispatchArityN",
    "zipfile._PathOpenProtocol"
  ],
  "type.__dictoffset__": [
    "typeshed.typeshed.stdlib.builtins.type"
  ],
  "type.__flags__": [
    "typeshed.typeshed.stdlib.builtins.type"
  ],
  "type.__init__": [
    "IPython.core.compilerop.CachingCompiler",
    "IPython.core.display.HTML",
    "IPython.core.display.Javascript",
    "IPython.core.inputtransformer.CoroutineInputTransformer",
    "IPython.core.inputtransformer.StatelessInputTransformer",
    "IPython.core.inputtransformer.TokenInputTransformer",
    "IPython.core.inputtransformer2.MaybeAsyncCommandCompiler",
    "IPython.core.inputtransformer2.MaybeAsyncCompile",
    "IPython.core.magic_arguments.ArgMethodWrapper",
    "IPython.core.magic_arguments.kwds",
    "IPython.core.magic_arguments.magic_arguments",
    "IPython.core.magics.ast_mod.Mangler",
    "IPython.core.magics.ast_mod.ReplaceCodeTransformer",
    "IPython.core.magics.code.InteractivelyDefined",
    "IPython.core.magics.execution.TimeitTemplateFiller",
    "IPython.external.qt_loaders.ImportDenier",
    "IPython.lib.display.Code",
    "IPython.lib.pretty.Breakable",
    "IPython.lib.pretty.Group",
    "IPython.lib.pretty.PrettyPrinter",
    "IPython.lib.pretty.Text",
    "IPython.terminal.pt_inputhooks.UnknownBackend",
    "IPython.terminal.ptutils.IPythonPTCompleter",
    "IPython.terminal.ptutils.IPythonPTLexer",
    "IPython.terminal.shortcuts.auto_suggest.AppendAutoSuggestionInAnyLine",
    "IPython.terminal.shortcuts.auto_suggest.NavigableAutoSuggestFromHistory",
    "IPython.testing.plugin.pytest_ipdoctest.MultipleDoctestFailures",
    "IPython.testing.plugin.pytest_ipdoctest._init_runner_class.PytestDoctestRunner",
    "IPython.utils.shimmodule.ShimImporter",
    "ImportError",
    "OpenSSL.crypto.X509StoreContextError",
    "PIL.GimpGradientFile.GimpGradientFile",
    "PIL.ImageCms.ImageCmsTransform",
    "PIL.ImageEnhance.Brightness",
    "PIL.ImageEnhance.Color",
    "PIL.ImageEnhance.Contrast",
    "PIL.ImageEnhance.Sharpness",
    "PIL.ImageFile.ImageFile",
    "PIL.ImageFilter.BoxBlur",
    "PIL.ImageFilter.Color3DLUT",
    "PIL.ImageFilter.GaussianBlur",
    "PIL.ImageFilter.Kernel",
    "PIL.ImageFilter.ModeFilter",
    "PIL.ImageFilter.RankFilter",
    "PIL.ImageFilter.UnsharpMask",
    "PIL.ImageTk.BitmapImage",
    "PIL.ImageTk.PhotoImage",
    "PIL.ImageTransform.Transform",
    "PIL.TiffImagePlugin.IFDRational",
    "PIL.TiffImagePlugin.ImageFileDirectory_v2",
    "PyInstaller.building.build_main.Analysis",
    "PyInstaller.building.datastruct.Tree",
    "UnicodeDecodeError",
    "UnicodeEncodeError",
    "UnicodeTranslateError",
    "Xlib.error.ConnectionClosedError",
    "Xlib.error.DisplayError",
    "Xlib.error.XError",
    "Xlib.ext.nvcontrol.Cooler",
    "Xlib.ext.nvcontrol.Gpu",
    "Xlib.ext.nvcontrol.Screen",
    "Xlib.protocol.display.ConnectionSetupRequest",
    "Xlib.protocol.rq.ConstantField",
    "Xlib.protocol.rq.DictWrapper",
    "Xlib.protocol.rq.Event",
    "Xlib.protocol.rq.FixedPropertyData",
    "Xlib.protocol.rq.FormatField",
    "Xlib.protocol.rq.LengthOf",
    "Xlib.protocol.rq.OddLength",
    "Xlib.protocol.rq.Pad",
    "Xlib.protocol.rq.ReplyRequest",
    "Xlib.protocol.rq.Resource",
    "Xlib.protocol.rq.ValueField",
    "Xlib.protocol.rq.ValueList",
    "Xlib.rdb.IsArg",
    "Xlib.rdb.NoArg",
    "Xlib.rdb.SepArg",
    "Xlib.rdb.SkipNArgs",
    "_compression.DecompressReader",
    "_py_abc._CacheToken",
    "_weakrefset.WeakSet",
    "aiofiles.base.AiofilesContextManager",
    "aiofiles.base.AsyncBase",
    "argparse.Action",
    "argparse.ArgumentError",
    "argparse.ArgumentParser",
    "argparse.Namespace",
    "argparse._SUPPRESS_T",
    "array.array",
    "asgiref.current_thread_executor.CurrentThreadExecutor",
    "asgiref.sync.AsyncToSync",
    "asgiref.sync.SyncToAsync",
    "asgiref.typing.ASGI2Protocol",
    "ast._ABC",
    "asyncio.base_events.Server",
    "asyncio.base_subprocess.BaseSubprocessTransport",
    "asyncio.base_subprocess.WriteSubprocessPipeProto",
    "asyncio.exceptions.IncompleteReadError",
    "asyncio.exceptions.LimitOverrunError",
    "asyncio.futures.Future",
    "asyncio.locks.Condition",
    "asyncio.locks.Lock",
    "asyncio.locks.Semaphore",
    "asyncio.proactor_events.BaseProactorEventLoop",
    "asyncio.queues.Queue",
    "asyncio.selector_events.BaseSelectorEventLoop",
    "asyncio.sslproto.SSLProtocol",
    "asyncio.streams.FlowControlMixin",
    "asyncio.streams.StreamReader",
    "asyncio.transports._FlowControlMixin",
    "babel.core.UnknownLocaleError",
    "babel.localedata.LocaleDataDict",
    "babel.messages.pofile.PoFileError",
    "babel.numbers.NumberFormatError",
    "babel.numbers.UnknownCurrencyError",
    "babel.units.UnknownUnitError",
    "babel.util.FixedOffsetTimezone",
    "bleach.html5lib_shim.BleachHTMLParser",
    "bleach.linkifier.LinkifyFilter",
    "bleach.sanitizer.BleachSanitizerFilter",
    "boto.auth.QuerySignatureV1AuthHandler",
    "boto.auth_handler.AuthHandler",
    "boto.exception.BotoClientError",
    "boto.exception.BotoServerError",
    "boto.exception.InvalidAclError",
    "boto.exception.InvalidCorsError",
    "boto.exception.InvalidInstanceMetadataError",
    "boto.exception.InvalidLifecycleConfigError",
    "boto.exception.InvalidUriError",
    "boto.exception.PleaseRetryException",
    "boto.exception.ResumableDownloadException",
    "boto.exception.ResumableUploadException",
    "boto.exception.TooManyRecordsException",
    "boto.s3.bucketlistresultset.BucketListResultSet",
    "braintree.search.Search.MultipleValueOrTextNodeBuilder",
    "bs4.builder.ParserRejectedMarkup",
    "bs4.builder._htmlparser.HTMLParserTreeBuilder",
    "bs4.element.Tag",
    "bs4.formatter.Formatter",
    "bytearray",
    "bz2.BZ2File",
    "cachetools.Cache",
    "caldav.lib.error.DAVError",
    "caldav.objects.ScheduleMailbox",
    "caldav.requests.HTTPBearerAuth",
    "calendar.IllegalMonthError",
    "calendar.IllegalWeekdayError",
    "calendar.LocaleHTMLCalendar",
    "calendar.LocaleTextCalendar",
    "cffi.model.ArrayType",
    "cffi.model.BaseFunctionType",
    "cffi.model.EnumType",
    "cffi.model.PointerType",
    "cffi.model.PrimitiveType",
    "cffi.model.StructOrUnion",
    "cffi.model.UnknownFloatType",
    "cffi.model.UnknownIntegerType",
    "cffi.model.VoidType",
    "classmethod",
    "click._termui_impl.ProgressBar",
    "click._winconsole._WindowsConsoleRawIOBase",
    "click.exceptions.ClickException",
    "click.exceptions.Exit",
    "click.types.Choice",
    "click.types.DateTime",
    "click.types.File",
    "click.types.FuncParamType",
    "click.types.Path",
    "click.types.Tuple",
    "click.types._NumberRangeBase",
    "codecs.StreamReader",
    "codecs.StreamReaderWriter",
    "codecs.StreamRecoder",
    "codecs.StreamWriter",
    "collections.ChainMap",
    "collections.UserDict",
    "collections.UserList",
    "collections.UserString",
    "collections.deque",
    "commonmark.render.html.HtmlRenderer",
    "commonmark.render.rst.ReStructuredTextRenderer",
    "concurrent.futures._base._AllCompletedWaiter",
    "concurrent.futures.process.ProcessPoolExecutor",
    "concurrent.futures.process._RemoteTraceback",
    "concurrent.futures.process._WorkItem",
    "concurrent.futures.thread.ThreadPoolExecutor",
    "concurrent.futures.thread._WorkItem",
    "configparser.ConverterMapping",
    "configparser.Error",
    "configparser.RawConfigParser",
    "configparser.SectionProxy",
    "consolemenu.items.command_item.CommandItem",
    "consolemenu.items.function_item.FunctionItem",
    "contextlib._AsyncGeneratorContextManager",
    "contextlib._GeneratorContextManager",
    "contextlib._RedirectStream",
    "contextlib.closing",
    "contextlib.nullcontext",
    "contextlib.suppress",
    "contextvars.Context",
    "contextvars.ContextVar",
    "croniter.croniter.croniter",
    "crontab.OrderedVariableList",
    "csv.DictReader",
    "csv.DictWriter",
    "ctypes.Array",
    "ctypes.LibraryLoader",
    "ctypes._FuncPointer",
    "ctypes._Pointer",
    "ctypes._SimpleCData",
    "ctypes._StructUnionBase",
    "ctypes.c_char_p",
    "ctypes.c_wchar_p",
    "dataclasses.Field",
    "dataclasses.InitVar",
    "dateparser.timezone_parser.StaticTzInfo",
    "datetime.timezone",
    "dateutil.tz._common.tzrangebase",
    "dateutil.tz.tz.tzfile",
    "dateutil.tz.tz.tzlocal",
    "dateutil.tz.tz.tzoffset",
    "dbm.dumb._Database",
    "dict",
    "difflib.SequenceMatcher",
    "django.conf.SettingsReference",
    "django.contrib.admin.options.BaseModelAdmin",
    "django.contrib.admin.templatetags.log.AdminLogNode",
    "django.contrib.admin.widgets.AdminDateWidget",
    "django.contrib.admin.widgets.AdminEmailInputWidget",
    "django.contrib.admin.widgets.AdminIntegerFieldWidget",
    "django.contrib.admin.widgets.AdminTextInputWidget",
    "django.contrib.admin.widgets.AdminTimeWidget",
    "django.contrib.admin.widgets.AdminURLFieldWidget",
    "django.contrib.admin.widgets.AdminUUIDInputWidget",
    "django.contrib.admin.widgets.FilteredSelectMultiple",
    "django.contrib.admin.widgets.ForeignKeyRawIdWidget",
    "django.contrib.auth.forms.AdminPasswordChangeForm",
    "django.contrib.auth.forms.AuthenticationForm",
    "django.contrib.auth.forms.BaseUserCreationForm",
    "django.contrib.auth.forms.SetPasswordForm",
    "django.contrib.auth.forms.UserChangeForm",
    "django.contrib.contenttypes.fields.GenericForeignKey",
    "django.contrib.flatpages.templatetags.flatpages.FlatpageNode",
    "django.contrib.gis.db.backends.mysql.schema.MySQLGISSchemaEditor",
    "django.contrib.gis.db.backends.oracle.schema.OracleGISSchemaEditor",
    "django.contrib.gis.db.backends.postgis.base.DatabaseWrapper",
    "django.contrib.gis.db.backends.spatialite.base.DatabaseWrapper",
    "django.contrib.gis.db.backends.spatialite.schema.SpatialiteSchemaEditor",
    "django.contrib.gis.db.models.aggregates.Extent",
    "django.contrib.gis.db.models.aggregates.Extent3D",
    "django.contrib.gis.db.models.functions.AsGML",
    "django.contrib.gis.db.models.functions.AsGeoJSON",
    "django.contrib.gis.db.models.functions.AsKML",
    "django.contrib.gis.db.models.functions.AsSVG",
    "django.contrib.gis.db.models.functions.BoundingCircle",
    "django.contrib.gis.db.models.functions.Distance",
    "django.contrib.gis.db.models.functions.GeoHash",
    "django.contrib.gis.db.models.functions.Length",
    "django.contrib.gis.db.models.functions.Scale",
    "django.contrib.gis.db.models.functions.SnapToGrid",
    "django.contrib.gis.db.models.functions.Transform",
    "django.contrib.gis.db.models.sql.conversion.AreaField",
    "django.contrib.gis.db.models.sql.conversion.DistanceField",
    "django.contrib.gis.forms.widgets.OSMWidget",
    "django.contrib.gis.gdal.datasource.DataSource",
    "django.contrib.gis.gdal.driver.Driver",
    "django.contrib.gis.gdal.feature.Feature",
    "django.contrib.gis.gdal.field.Field",
    "django.contrib.gis.gdal.geometries.OGRGeometry",
    "django.contrib.gis.gdal.layer.Layer",
    "django.contrib.gis.gdal.raster.band.GDALBand",
    "django.contrib.gis.gdal.raster.source.GDALRaster",
    "django.contrib.gis.gdal.srs.CoordTransform",
    "django.contrib.gis.gdal.srs.SpatialReference",
    "django.contrib.gis.geos.coordseq.GEOSCoordSeq",
    "django.contrib.gis.geos.geometry.GEOSGeometry",
    "django.contrib.gis.geos.geometry.GEOSGeometryBase",
    "django.contrib.gis.geos.linestring.LineString",
    "django.contrib.gis.geos.prepared.PreparedGeometry",
    "django.contrib.gis.geos.prototypes.io.IOBase",
    "django.contrib.gis.geos.prototypes.threadsafe.GEOSContextHandle",
    "django.contrib.gis.sitemaps.kml.KMLSitemap",
    "django.contrib.postgres.fields.array.ArrayField",
    "django.contrib.postgres.fields.hstore.KeyTransform",
    "django.contrib.postgres.fields.ranges.RangeBoundary",
    "django.contrib.postgres.indexes.BTreeIndex",
    "django.contrib.postgres.indexes.BloomIndex",
    "django.contrib.postgres.indexes.BrinIndex",
    "django.contrib.postgres.indexes.GinIndex",
    "django.contrib.postgres.indexes.GistIndex",
    "django.contrib.postgres.indexes.HashIndex",
    "django.contrib.postgres.indexes.SpGistIndex",
    "django.contrib.postgres.operations.CollationOperation",
    "django.contrib.postgres.operations.CreateExtension",
    "django.contrib.postgres.operations.ValidateConstraint",
    "django.contrib.postgres.search.CombinedSearchQuery",
    "django.contrib.postgres.search.CombinedSearchVector",
    "django.contrib.postgres.search.SearchConfig",
    "django.contrib.postgres.search.SearchQuery",
    "django.contrib.postgres.search.SearchVector",
    "django.contrib.postgres.validators.KeysValidator",
    "django.contrib.sitemaps.GenericSitemap",
    "django.contrib.sites.managers.CurrentSiteManager",
    "django.contrib.staticfiles.finders.AppDirectoriesFinder",
    "django.contrib.staticfiles.finders.BaseStorageFinder",
    "django.contrib.staticfiles.finders.FileSystemFinder",
    "django.contrib.staticfiles.handlers.ASGIStaticFilesHandler",
    "django.contrib.staticfiles.handlers.StaticFilesHandler",
    "django.core.exceptions.ValidationError",
    "django.core.files.base.File",
    "django.core.files.storage.filesystem.FileSystemStorage",
    "django.core.files.storage.memory.InMemoryStorage",
    "django.core.files.uploadhandler.StopUpload",
    "django.core.handlers.asgi.ASGIHandler",
    "django.core.handlers.asgi.ASGIRequest",
    "django.core.handlers.wsgi.WSGIHandler",
    "django.core.handlers.wsgi.WSGIRequest",
    "django.core.mail.message.SafeMIMEMultipart",
    "django.core.mail.message.SafeMIMEText",
    "django.core.management.base.CommandError",
    "django.core.management.base.OutputWrapper",
    "django.core.paginator.Page",
    "django.core.paginator.Paginator",
    "django.core.serializers.base.M2MDeserializationError",
    "django.core.serializers.xml_serializer.DTDForbidden",
    "django.core.serializers.xml_serializer.EntitiesForbidden",
    "django.core.serializers.xml_serializer.ExternalReferenceForbidden",
    "django.core.servers.basehttp.WSGIServer",
    "django.core.validators.BaseValidator",
    "django.core.validators.DecimalValidator",
    "django.core.validators.EmailValidator",
    "django.core.validators.FileExtensionValidator",
    "django.core.validators.ProhibitNullCharactersValidator",
    "django.core.validators.RegexValidator",
    "django.db.backends.base.schema.BaseDatabaseSchemaEditor",
    "django.db.backends.ddl_references.Statement",
    "django.db.backends.ddl_references.Table",
    "django.db.migrations.exceptions.NodeNotFoundError",
    "django.db.migrations.operations.fields.FieldOperation",
    "django.db.migrations.operations.models.AddConstraint",
    "django.db.migrations.operations.models.AddIndex",
    "django.db.migrations.operations.models.AlterModelManagers",
    "django.db.migrations.operations.models.AlterModelOptions",
    "django.db.migrations.operations.models.AlterModelTable",
    "django.db.migrations.operations.models.AlterModelTableComment",
    "django.db.migrations.operations.models.AlterOrderWithRespectTo",
    "django.db.migrations.operations.models.AlterTogetherOptionOperation",
    "django.db.migrations.operations.models.ModelOperation",
    "django.db.migrations.operations.models.RemoveConstraint",
    "django.db.migrations.operations.models.RemoveIndex",
    "django.db.migrations.operations.models.RenameIndex",
    "django.db.migrations.operations.special.RunPython",
    "django.db.migrations.operations.special.RunSQL",
    "django.db.migrations.operations.special.SeparateDatabaseAndState",
    "django.db.models.deletion.ProtectedError",
    "django.db.models.deletion.RestrictedError",
    "django.db.models.expressions.Case",
    "django.db.models.expressions.Col",
    "django.db.models.expressions.CombinedExpression",
    "django.db.models.expressions.ExpressionWrapper",
    "django.db.models.expressions.F",
    "django.db.models.expressions.Func",
    "django.db.models.expressions.OrderBy",
    "django.db.models.expressions.RawSQL",
    "django.db.models.expressions.Ref",
    "django.db.models.expressions.Value",
    "django.db.models.expressions.When",
    "django.db.models.expressions.Window",
    "django.db.models.expressions.WindowFrame",
    "django.db.models.fields.DateField",
    "django.db.models.fields.Field",
    "django.db.models.fields.TimeField",
    "django.db.models.fields.json.JSONField",
    "django.db.models.fields.json.KeyTransform",
    "django.db.models.fields.proxy.OrderWrt",
    "django.db.models.fields.related.RelatedField",
    "django.db.models.fields.related_descriptors.ForwardManyToOneDescriptor",
    "django.db.models.fields.related_descriptors.ReverseOneToOneDescriptor",
    "django.db.models.fields.reverse_related.ForeignObjectRel",
    "django.db.models.functions.datetime.Extract",
    "django.db.models.lookups.Lookup",
    "django.db.models.manager.BaseManager",
    "django.db.models.manager.EmptyManager",
    "django.db.models.options.Options",
    "django.db.models.query.BaseIterable",
    "django.db.models.query.RawQuerySet",
    "django.db.models.query._QuerySet",
    "django.db.models.sql.datastructures.MultiJoin",
    "django.forms.fields.TypedMultipleChoiceField",
    "django.forms.forms.BaseForm",
    "django.forms.formsets.ManagementForm",
    "django.forms.models.BaseModelForm",
    "django.forms.models.ModelFormOptions",
    "django.forms.widgets.CheckboxInput",
    "django.forms.widgets.DateTimeBaseInput",
    "django.forms.widgets.NullBooleanSelect",
    "django.forms.widgets.PasswordInput",
    "django.middleware.cache.CacheMiddleware",
    "django.middleware.csrf.InvalidTokenFormat",
    "django.middleware.csrf.RejectRequest",
    "django.template.backends.django.Template",
    "django.template.base.TextNode",
    "django.template.base.VariableDoesNotExist",
    "django.template.base.VariableNode",
    "django.template.context.BaseContext",
    "django.template.defaulttags.AutoEscapeControlNode",
    "django.template.defaulttags.CycleNode",
    "django.template.defaulttags.FilterNode",
    "django.template.defaulttags.FirstOfNode",
    "django.template.defaulttags.ForNode",
    "django.template.defaulttags.IfChangedNode",
    "django.template.defaulttags.IfEqualNode",
    "django.template.defaulttags.IfNode",
    "django.template.defaulttags.LoremNode",
    "django.template.defaulttags.NowNode",
    "django.template.defaulttags.RegroupNode",
    "django.template.defaulttags.ResetCycleNode",
    "django.template.defaulttags.SpacelessNode",
    "django.template.defaulttags.TemplateTagNode",
    "django.template.defaulttags.URLNode",
    "django.template.defaulttags.VerbatimNode",
    "django.template.defaulttags.WidthRatioNode",
    "django.template.defaulttags.WithNode",
    "django.template.exceptions.TemplateDoesNotExist",
    "django.template.library.TagHelperNode",
    "django.template.loader_tags.BlockNode",
    "django.template.loader_tags.ExtendsNode",
    "django.template.loader_tags.IncludeNode",
    "django.template.smartif.Literal",
    "django.templatetags.cache.CacheNode",
    "django.templatetags.i18n.BlockTranslateNode",
    "django.templatetags.i18n.GetAvailableLanguagesNode",
    "django.templatetags.i18n.GetCurrentLanguageBidiNode",
    "django.templatetags.i18n.GetCurrentLanguageNode",
    "django.templatetags.i18n.GetLanguageInfoListNode",
    "django.templatetags.i18n.GetLanguageInfoNode",
    "django.templatetags.i18n.LanguageNode",
    "django.templatetags.i18n.TranslateNode",
    "django.templatetags.l10n.LocalizeNode",
    "django.templatetags.static.PrefixNode",
    "django.templatetags.static.StaticNode",
    "django.templatetags.tz.GetCurrentTimezoneNode",
    "django.templatetags.tz.LocalTimeNode",
    "django.templatetags.tz.TimezoneNode",
    "django.test.client.AsyncClient",
    "django.test.client.AsyncClientHandler",
    "django.test.client.Client",
    "django.test.client.ClientHandler",
    "django.test.client.FakePayload",
    "django.test.client.RedirectCycleError",
    "django.test.client._RequestFactory",
    "django.test.runner.ParallelTestSuite",
    "django.urls.resolvers.RegexPattern",
    "django.urls.resolvers.RoutePattern",
    "django.utils.archive.TarArchive",
    "django.utils.archive.ZipArchive",
    "django.utils.connection.BaseConnectionHandler",
    "django.utils.datastructures.CaseInsensitiveMapping",
    "django.utils.datastructures.OrderedSet",
    "django.utils.dateformat.TimeFormat",
    "django.utils.functional.classproperty",
    "django.utils.timezone.override",
    "django.utils.translation.override",
    "django.utils.translation.trans_real.DjangoTranslation",
    "django.views.generic.edit.BaseDeleteView",
    "django_stubs_ext.patch.MPGeneric",
    "docutils.io.FileInput",
    "docutils.io.Output",
    "docutils.nodes.Element",
    "docutils.nodes.Text",
    "docutils.parsers.rst.DirectiveError",
    "docutils.parsers.rst.Parser",
    "docutils.utils.SystemMessage",
    "email.errors.MessageDefect",
    "email.errors.NonPrintableDefect",
    "email.feedparser.BytesFeedParser",
    "email.feedparser.FeedParser",
    "email.mime.application.MIMEApplication",
    "email.mime.audio.MIMEAudio",
    "email.mime.image.MIMEImage",
    "email.mime.message.MIMEMessage",
    "email.mime.text.MIMEText",
    "entrypoints.BadEntryPoint",
    "entrypoints.NoSuchEntryPoint",
    "enumerate",
    "exceptiongroup._suppress.suppress",
    "executing._exceptions.VerifierFailure",
    "executing.executing.NotOneValueFound",
    "executing.executing.QualnameVisitor",
    "filecmp.dircmp",
    "fileinput.FileInput",
    "filter",
    "flake8_plugin_utils.plugin.Plugin",
    "flake8_plugin_utils.plugin.Visitor",
    "flask.cli.CertParamType",
    "flask.cli.FlaskGroup",
    "flask.debughelpers.DebugFilesKeyError",
    "flask.debughelpers.FormDataRoutingRedirect",
    "flask.templating.DispatchingJinjaLoader",
    "flask_sqlalchemy.Pagination",
    "flask_sqlalchemy.model.BindMetaMixin",
    "flask_sqlalchemy.model.NameMetaMixin",
    "formatter.DumbWriter",
    "fpdf._fonttools_shims.DecomposingPen",
    "fpdf._fonttools_shims._TTGlyph",
    "fpdf.actions.Action",
    "fpdf.errors.FPDFPageFormatException",
    "fpdf.errors.FPDFUnicodeEncodingException",
    "fpdf.linearization.PDFXrefAndTrailer",
    "fpdf.output.PDFHeader",
    "fpdf.output.PDFXrefAndTrailer",
    "fpdf.syntax.DestinationXYZ",
    "fpdf.transitions.BlindsTransition",
    "fpdf.transitions.BoxTransition",
    "fpdf.transitions.CoverTransition",
    "fpdf.transitions.FlyTransition",
    "fpdf.transitions.GlitterTransition",
    "fpdf.transitions.PushTransition",
    "fpdf.transitions.SplitTransition",
    "fpdf.transitions.UncoverTransition",
    "fpdf.transitions.WipeTransition",
    "functools.cached_property",
    "functools.partialmethod",
    "functools.singledispatchmethod",
    "gdb.xmethod._XMethodMatcher",
    "getopt.GetoptError",
    "gflags.BaseListParser",
    "gflags.DuplicateFlagError",
    "gflags.EnumParser",
    "gflags.FloatParser",
    "gflags.IntegerParser",
    "gflags.ListSerializer",
    "gflags.UnrecognizedFlagError",
    "google.cloud.ndb._cache._GlobalCacheDeleteBatch",
    "google.cloud.ndb._cache._GlobalCacheGetBatch",
    "google.cloud.ndb._cache._GlobalCacheSetBatch",
    "google.cloud.ndb.exceptions.BadFilterError",
    "google.cloud.ndb.exceptions.ContextError",
    "google.cloud.ndb.exceptions.NoLongerImplementedError",
    "google.cloud.ndb.global_cache.MemcacheCache",
    "google.cloud.ndb.global_cache.MemcacheCache.KeyNotSet",
    "google.cloud.ndb.global_cache.RedisCache",
    "google.cloud.ndb.global_cache._InProcessGlobalCache",
    "google.cloud.ndb.model.MetaModel",
    "google.cloud.ndb.model.Model",
    "google.cloud.ndb.model.Property",
    "google.cloud.ndb.model._BaseValue",
    "google.cloud.ndb.model._CompressedValue",
    "google.cloud.ndb.query.Parameter",
    "google.cloud.ndb.query.ParameterizedFunction",
    "google.protobuf.internal.containers.BaseContainer",
    "google.protobuf.internal.containers.MessageMap",
    "google.protobuf.internal.containers.ScalarMap",
    "google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper",
    "google.protobuf.internal.extension_dict._ExtensionDict",
    "google.protobuf.internal.python_message.GeneratedProtocolMessageType",
    "google.protobuf.internal.type_checkers.TypeChecker",
    "google.protobuf.reflection.GeneratedProtocolMessageType",
    "google.protobuf.text_format.ParseError",
    "graphlib.TopologicalSorter",
    "graphql.backend.cache.GraphQLCachedBackend",
    "graphql.backend.core.GraphQLCoreBackend",
    "graphql.backend.quiver_cloud.GraphQLQuiverCloudBackend",
    "graphql.error.base.GraphQLError",
    "graphql.language.ast.Argument",
    "graphql.language.ast.BooleanValue",
    "graphql.language.ast.Directive",
    "graphql.language.ast.DirectiveDefinition",
    "graphql.language.ast.Document",
    "graphql.language.ast.EnumTypeDefinition",
    "graphql.language.ast.EnumValue",
    "graphql.language.ast.EnumValueDefinition",
    "graphql.language.ast.Field",
    "graphql.language.ast.FieldDefinition",
    "graphql.language.ast.FloatValue",
    "graphql.language.ast.FragmentDefinition",
    "graphql.language.ast.FragmentSpread",
    "graphql.language.ast.InlineFragment",
    "graphql.language.ast.InputObjectTypeDefinition",
    "graphql.language.ast.InputValueDefinition",
    "graphql.language.ast.IntValue",
    "graphql.language.ast.InterfaceTypeDefinition",
    "graphql.language.ast.ListType",
    "graphql.language.ast.ListValue",
    "graphql.language.ast.Name",
    "graphql.language.ast.NamedType",
    "graphql.language.ast.NonNullType",
    "graphql.language.ast.ObjectField",
    "graphql.language.ast.ObjectTypeDefinition",
    "graphql.language.ast.ObjectValue",
    "graphql.language.ast.OperationDefinition",
    "graphql.language.ast.OperationTypeDefinition",
    "graphql.language.ast.ScalarTypeDefinition",
    "graphql.language.ast.SchemaDefinition",
    "graphql.language.ast.SelectionSet",
    "graphql.language.ast.StringValue",
    "graphql.language.ast.TypeExtensionDefinition",
    "graphql.language.ast.UnionTypeDefinition",
    "graphql.language.ast.Variable",
    "graphql.language.ast.VariableDefinition",
    "graphql.language.tests.test_visitor.test_allows_editing_a_node_both_on_enter_and_on_leave.TestVisitor",
    "graphql.language.tests.test_visitor.test_allows_editing_the_root_node_on_enter_and_on_leave.TestVisitor",
    "graphql.language.tests.test_visitor.test_visits_edited_node.TestVisitor",
    "graphql.language.tests.test_visitor.test_visits_in_pararell_allows_early_exit_from_different_points.TestVisitor",
    "graphql.language.tests.test_visitor.test_visits_in_pararell_allows_skipping_different_subtrees.TestVisitor",
    "graphql.language.visitor.ParallelVisitor",
    "graphql.language.visitor.TypeInfoVisitor",
    "graphql.pyutils.default_ordered_dict.DefaultOrderedDict",
    "graphql.pyutils.enum._EnumDict",
    "graphql.type.definition.GraphQLList",
    "graphql.type.definition.GraphQLNamedType",
    "graphql.type.definition.GraphQLNonNull",
    "graphql.type.typemap.GraphQLTypeMap",
    "graphql.validation.rules.base.ValidationRule",
    "graphql.validation.validation.UsageVisitor",
    "gzip.GzipFile",
    "html.parser.HTMLParser",
    "html5lib._inputstream.EncodingBytes",
    "html5lib._trie.py.Trie",
    "html5lib._utils.BoundMethodDispatcher",
    "html5lib.treewalkers.etree_lxml.TreeWalker",
    "http.client.BadStatusLine",
    "http.client.HTTPResponse",
    "http.client.IncompleteRead",
    "http.client.LineTooLong",
    "http.client.UnknownProtocol",
    "http.cookiejar.CookieJar",
    "http.cookiejar.DefaultCookiePolicy",
    "http.server.SimpleHTTPRequestHandler",
    "httplib2.error.HttpLib2ErrorWithResponse",
    "humanfriendly.case.CaseInsensitiveDict",
    "importlib.abc.FileLoader",
    "importlib.machinery.ExtensionFileLoader",
    "importlib.machinery.FileFinder",
    "importlib.metadata.PathDistribution",
    "importlib.util.LazyLoader",
    "importlib_metadata.PathDistribution",
    "influxdb_client._async.rest.RESTResponseAsync",
    "influxdb_client._sync.rest.RESTResponse",
    "influxdb_client.client.exceptions.InfluxDBError",
    "influxdb_client.client.flux_csv_parser.FluxQueryException",
    "influxdb_client.client.flux_table.CSVIterator",
    "influxdb_client.client.flux_table.FluxColumn",
    "influxdb_client.client.flux_table.FluxRecord",
    "influxdb_client.client.flux_table.FluxTable",
    "influxdb_client.client.util.multiprocessing_helper.MultiprocessingWriter",
    "influxdb_client.configuration.TypeWithDefault",
    "invoke.config.Config",
    "invoke.context.Context",
    "invoke.exceptions.CollectionNotFound",
    "invoke.exceptions.Exit",
    "invoke.exceptions.Failure",
    "invoke.exceptions.ParseError",
    "invoke.exceptions.ThreadException",
    "invoke.tasks.Task",
    "invoke.watchers.Responder",
    "io.BufferedRWPair",
    "io.BufferedReader",
    "io.BufferedWriter",
    "io.BytesIO",
    "io.FileIO",
    "io.TextIOWrapper",
    "ipaddress._BaseAddress",
    "ipaddress._BaseNetwork",
    "isapi.ISAPIError",
    "itertools.accumulate",
    "itertools.chain",
    "itertools.combinations_with_replacement",
    "itertools.compress",
    "itertools.cycle",
    "itertools.dropwhile",
    "itertools.filterfalse",
    "itertools.islice",
    "itertools.permutations",
    "itertools.repeat",
    "itertools.starmap",
    "itertools.takewhile",
    "itsdangerous.exc.BadData",
    "itsdangerous.signer.HMACAlgorithm",
    "jack.JackErrorCode",
    "jack.JackOpenError",
    "jack.OwnMidiPort",
    "jinja2.bccache.FileSystemBytecodeCache",
    "jinja2.bccache.MemcachedBytecodeCache",
    "jinja2.compiler.CodeGenerator",
    "jinja2.compiler.DependencyFinderVisitor",
    "jinja2.compiler.UndeclaredNameVisitor",
    "jinja2.exceptions.TemplateError",
    "jinja2.exceptions.TemplateNotFound",
    "jinja2.idtracking.FrameSymbolVisitor",
    "jinja2.idtracking.RootVisitor",
    "jinja2.loaders.ChoiceLoader",
    "jinja2.loaders.DictLoader",
    "jinja2.loaders.FileSystemLoader",
    "jinja2.loaders.FunctionLoader",
    "jinja2.loaders.ModuleLoader",
    "jinja2.loaders.PackageLoader",
    "jinja2.loaders.PrefixLoader",
    "jinja2.nodes.InternalName",
    "jinja2.optimizer.Optimizer",
    "jinja2.sandbox.SandboxedFormatter",
    "jmespath.exceptions.EmptyExpressionError",
    "jmespath.exceptions.JMESPathTypeError",
    "jmespath.exceptions.ParseError",
    "jmespath.functions.FunctionRegistry",
    "json.decoder.JSONDecodeError",
    "jsonschema._utils.URIDict",
    "jsonschema.exceptions.FormatError",
    "jsonschema.exceptions.RefResolutionError",
    "jsonschema.exceptions.UndefinedTypeCheck",
    "jsonschema.exceptions.UnknownType",
    "jsonschema.exceptions._Error",
    "jsonschema.protocols.Validator",
    "ldap3.core.exceptions.LDAPOperationResult",
    "ldap3.core.timezone.OffsetTzInfo",
    "ldap3.utils.ciDict.CaseInsensitiveDict",
    "lib2to3.pgen2.parse.ParseError",
    "lib2to3.pytree.Leaf",
    "lib2to3.pytree.LeafPattern",
    "lib2to3.pytree.NegatedPattern",
    "lib2to3.pytree.Node",
    "lib2to3.pytree.NodePattern",
    "lib2to3.pytree.WildcardPattern",
    "libcst._batched_visitor._BatchedCSTVisitor",
    "libcst._exceptions.ParserSyntaxError",
    "libcst._exceptions.PartialParserSyntaxError",
    "libcst._flatten_sentinel.FlattenSentinel",
    "libcst._metadata_dependent.LazyValue",
    "libcst._metadata_dependent.MetadataDependent",
    "libcst._nodes.base._ChildReplacementTransformer",
    "libcst._nodes.base._ChildWithChangesTransformer",
    "libcst._nodes.base._ChildrenCollectionVisitor",
    "libcst._parser.base_parser.BaseParser",
    "libcst._parser.parso.pgen2.generator.DFAState",
    "libcst._parser.parso.pgen2.generator.Grammar",
    "libcst.codegen.gen_matcher_classes.AddWildcardsToSequenceUnions",
    "libcst.codegen.gen_matcher_classes.RemoveTypesFromGeneric",
    "libcst.codemod._command.MagicArgsCodemodCommand",
    "libcst.codemod.commands.add_pyre_directive.AddPyreDirectiveCommand",
    "libcst.codemod.commands.add_trailing_commas.AddTrailingCommas",
    "libcst.codemod.commands.convert_format_to_fstring.ConvertFormatStringCommand",
    "libcst.codemod.commands.convert_percent_format_to_fstring.EscapeStringQuote",
    "libcst.codemod.commands.convert_type_comments.ConvertTypeComments",
    "libcst.codemod.commands.fix_pyre_directives.FixPyreDirectivesCommand",
    "libcst.codemod.commands.remove_pyre_directive.RemovePyreDirectiveCommand",
    "libcst.codemod.commands.remove_unused_imports.RemoveUnusedImportsCommand",
    "libcst.codemod.commands.rename.RenameCommand",
    "libcst.codemod.visitors._apply_type_annotations._TypeCollectorDequalifier",
    "libcst.helpers._template.TemplateChecker",
    "libcst.helpers._template.TemplateTransformer",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.AtLeastN",
    "libcst.matchers._matcher_base.AtMostN",
    "libcst.matchers._matcher_base.MatchIfTrue",
    "libcst.matchers._matcher_base.MatchMetadata",
    "libcst.matchers._matcher_base.MatchMetadataIfTrue",
    "libcst.matchers._matcher_base.OneOf",
    "libcst.matchers._matcher_base.TypeOf",
    "libcst.matchers._matcher_base._ExtractMatchingNode",
    "libcst.matchers._matcher_base._FindAllVisitor",
    "libcst.matchers._matcher_base._InverseOf",
    "libcst.matchers._matcher_base._ReplaceTransformer",
    "libcst.matchers._visitors.MatchDecoratorMismatch",
    "libcst.matchers._visitors.MatcherDecoratableTransformer",
    "libcst.matchers._visitors.MatcherDecoratableVisitor",
    "libcst.metadata.expression_context_provider.ExpressionContextVisitor",
    "libcst.metadata.file_path_provider.FilePathProvider",
    "libcst.metadata.name_provider.FullyQualifiedNameProvider",
    "libcst.metadata.name_provider.FullyQualifiedNameVisitor",
    "libcst.metadata.name_provider.QualifiedNameVisitor",
    "libcst.metadata.parent_node_provider.ParentNodeVisitor",
    "libcst.metadata.scope_provider.BaseAssignment",
    "libcst.metadata.scope_provider.Scope",
    "libcst.metadata.scope_provider.ScopeVisitor",
    "libcst.metadata.type_inference_provider.TypeInferenceProvider",
    "libcst.tool._SerializerBase",
    "list",
    "logging.Handler",
    "logging.Logger",
    "logging.LoggerAdapter",
    "lzma.LZMAFile",
    "mailbox.Babyl",
    "mailbox.MMDF",
    "mailbox.Mailbox",
    "mailbox._ProxyFile",
    "mailbox.mbox",
    "map",
    "markdown.extensions.fenced_code.FencedBlockPreprocessor",
    "markdown.extensions.footnotes.FootnotePostTreeprocessor",
    "markdown.extensions.footnotes.FootnotePostprocessor",
    "markdown.extensions.footnotes.FootnotePreprocessor",
    "markdown.extensions.footnotes.FootnoteTreeprocessor",
    "markdown.extensions.smarty.SubstituteTextPattern",
    "markdown.extensions.toc.TocTreeprocessor",
    "markdown.treeprocessors.InlineProcessor",
    "markupsafe.EscapeFormatter",
    "marshmallow.exceptions.ValidationError",
    "marshmallow.fields.Email",
    "marshmallow.fields.Field",
    "marshmallow.fields.Url",
    "marshmallow.orderedset.OrderedSet",
    "marshmallow.schema.Schema",
    "marshmallow.schema.SchemaMeta",
    "marshmallow.validate.And",
    "marshmallow.validate.Email",
    "marshmallow.validate.Equal",
    "marshmallow.validate.Length",
    "marshmallow.validate.NoneOf",
    "marshmallow.validate.OneOf",
    "marshmallow.validate.Predicate",
    "marshmallow.validate.Range",
    "marshmallow.validate.Regexp",
    "marshmallow.validate.URL",
    "memoryview",
    "mmap.mmap",
    "mock.mock._Call",
    "mock.mock._patch",
    "multiprocessing.context.DefaultContext",
    "multiprocessing.pool.ApplyResult",
    "multiprocessing.pool.IMapIterator",
    "multiprocessing.queues.SimpleQueue",
    "multiprocessing.shared_memory.ShareableList",
    "multiprocessing.sharedctypes.SynchronizedBase",
    "multiprocessing.synchronize.Condition",
    "multiprocessing.synchronize.Lock",
    "multiprocessing.synchronize.RLock",
    "multiprocessing.synchronize.Semaphore",
    "netaddr.core.PrettyPrinter",
    "netaddr.eui.ieee.FileIndexer",
    "netaddr.ip.iana.DictUpdater",
    "netaddr.ip.iana.SaxRecordParser",
    "netrc.NetrcParseError",
    "nmap.nmap.PortScannerError",
    "oauthlib.oauth1.rfc5849.endpoints.pre_configured.WebApplicationServer",
    "oauthlib.oauth1.rfc5849.errors.OAuth1Error",
    "oauthlib.oauth2.rfc6749.errors.OAuth2Error",
    "oauthlib.oauth2.rfc6749.tokens.BearerToken",
    "oauthlib.openid.connect.core.grant_types.authorization_code.AuthorizationCodeGrant",
    "oauthlib.openid.connect.core.grant_types.dispatchers.AuthorizationCodeGrantDispatcher",
    "oauthlib.openid.connect.core.grant_types.dispatchers.AuthorizationTokenGrantDispatcher",
    "oauthlib.openid.connect.core.grant_types.dispatchers.ImplicitTokenGrantDispatcher",
    "oauthlib.openid.connect.core.grant_types.hybrid.HybridGrant",
    "oauthlib.openid.connect.core.grant_types.implicit.ImplicitGrant",
    "oauthlib.openid.connect.core.tokens.JWTToken",
    "openpyxl.cell.text.PhoneticProperties",
    "openpyxl.cell.text.PhoneticText",
    "openpyxl.cell.text.RichText",
    "openpyxl.cell.text.Text",
    "openpyxl.chart._3d.Surface",
    "openpyxl.chart._3d.View3D",
    "openpyxl.chart._3d._3DBase",
    "openpyxl.chart._chart.AxId",
    "openpyxl.chart._chart.ChartBase",
    "openpyxl.chart.axis.ChartLines",
    "openpyxl.chart.axis.DisplayUnitsLabel",
    "openpyxl.chart.axis.DisplayUnitsLabelList",
    "openpyxl.chart.axis.Scaling",
    "openpyxl.chart.axis._BaseAxis",
    "openpyxl.chart.chartspace.ChartContainer",
    "openpyxl.chart.chartspace.ChartSpace",
    "openpyxl.chart.chartspace.ExternalData",
    "openpyxl.chart.chartspace.Protection",
    "openpyxl.chart.data_source.AxDataSource",
    "openpyxl.chart.data_source.Level",
    "openpyxl.chart.data_source.MultiLevelStrData",
    "openpyxl.chart.data_source.MultiLevelStrRef",
    "openpyxl.chart.data_source.NumData",
    "openpyxl.chart.data_source.NumDataSource",
    "openpyxl.chart.data_source.NumFmt",
    "openpyxl.chart.data_source.NumRef",
    "openpyxl.chart.data_source.NumVal",
    "openpyxl.chart.data_source.StrData",
    "openpyxl.chart.data_source.StrRef",
    "openpyxl.chart.data_source.StrVal",
    "openpyxl.chart.error_bar.ErrorBars",
    "openpyxl.chart.label._DataLabelBase",
    "openpyxl.chart.layout.Layout",
    "openpyxl.chart.layout.ManualLayout",
    "openpyxl.chart.legend.Legend",
    "openpyxl.chart.legend.LegendEntry",
    "openpyxl.chart.marker.DataPoint",
    "openpyxl.chart.marker.Marker",
    "openpyxl.chart.picture.PictureOptions",
    "openpyxl.chart.pie_chart.CustomSplit",
    "openpyxl.chart.pivot.PivotFormat",
    "openpyxl.chart.pivot.PivotSource",
    "openpyxl.chart.plotarea.DataTable",
    "openpyxl.chart.plotarea.PlotArea",
    "openpyxl.chart.print_settings.PageMargins",
    "openpyxl.chart.print_settings.PrintSettings",
    "openpyxl.chart.reference.Reference",
    "openpyxl.chart.series.Series",
    "openpyxl.chart.series.SeriesLabel",
    "openpyxl.chart.shapes.GraphicalProperties",
    "openpyxl.chart.surface_chart.BandFormat",
    "openpyxl.chart.surface_chart.BandFormatList",
    "openpyxl.chart.text.RichText",
    "openpyxl.chart.text.Text",
    "openpyxl.chart.title.Title",
    "openpyxl.chart.trendline.Trendline",
    "openpyxl.chart.trendline.TrendlineLabel",
    "openpyxl.chart.updown_bars.UpDownBars",
    "openpyxl.chartsheet.custom.CustomChartsheetView",
    "openpyxl.chartsheet.custom.CustomChartsheetViews",
    "openpyxl.chartsheet.properties.ChartsheetProperties",
    "openpyxl.chartsheet.protection.ChartsheetProtection",
    "openpyxl.chartsheet.publish.WebPublishItem",
    "openpyxl.chartsheet.publish.WebPublishItems",
    "openpyxl.chartsheet.relation.DrawingHF",
    "openpyxl.chartsheet.relation.SheetBackgroundPicture",
    "openpyxl.chartsheet.views.ChartsheetView",
    "openpyxl.chartsheet.views.ChartsheetViewList",
    "openpyxl.comments.author.AuthorList",
    "openpyxl.comments.comment_sheet.CommentRecord",
    "openpyxl.comments.comment_sheet.CommentSheet",
    "openpyxl.comments.comment_sheet.Properties",
    "openpyxl.compat.singleton.Cached",
    "openpyxl.compat.singleton.Singleton",
    "openpyxl.descriptors.base.Max",
    "openpyxl.descriptors.base.Min",
    "openpyxl.descriptors.excel.Extension",
    "openpyxl.descriptors.excel.ExtensionList",
    "openpyxl.drawing.colors.ColorChoice",
    "openpyxl.drawing.colors.ColorMapping",
    "openpyxl.drawing.colors.HSLColor",
    "openpyxl.drawing.colors.RGBPercent",
    "openpyxl.drawing.colors.SchemeColor",
    "openpyxl.drawing.colors.SystemColor",
    "openpyxl.drawing.connector.Connection",
    "openpyxl.drawing.connector.ConnectorLocking",
    "openpyxl.drawing.connector.ConnectorNonVisual",
    "openpyxl.drawing.connector.ConnectorShape",
    "openpyxl.drawing.connector.NonVisualConnectorProperties",
    "openpyxl.drawing.connector.Shape",
    "openpyxl.drawing.connector.ShapeMeta",
    "openpyxl.drawing.effect.AlphaBiLevelEffect",
    "openpyxl.drawing.effect.AlphaModulateEffect",
    "openpyxl.drawing.effect.AlphaModulateFixedEffect",
    "openpyxl.drawing.effect.AlphaReplaceEffect",
    "openpyxl.drawing.effect.BiLevelEffect",
    "openpyxl.drawing.effect.BlurEffect",
    "openpyxl.drawing.effect.ColorChangeEffect",
    "openpyxl.drawing.effect.EffectContainer",
    "openpyxl.drawing.effect.EffectList",
    "openpyxl.drawing.effect.FillOverlayEffect",
    "openpyxl.drawing.effect.HSLEffect",
    "openpyxl.drawing.effect.LuminanceEffect",
    "openpyxl.drawing.effect.ReflectionEffect",
    "openpyxl.drawing.effect.SoftEdgesEffect",
    "openpyxl.drawing.effect.TintEffect",
    "openpyxl.drawing.fill.Blip",
    "openpyxl.drawing.fill.BlipFillProperties",
    "openpyxl.drawing.fill.GradientFillProperties",
    "openpyxl.drawing.fill.GradientStop",
    "openpyxl.drawing.fill.LinearShadeProperties",
    "openpyxl.drawing.fill.PathShadeProperties",
    "openpyxl.drawing.fill.PatternFillProperties",
    "openpyxl.drawing.fill.RelativeRect",
    "openpyxl.drawing.fill.SolidColorFillProperties",
    "openpyxl.drawing.fill.StretchInfoProperties",
    "openpyxl.drawing.fill.TileInfoProperties",
    "openpyxl.drawing.geometry.AdjPoint2D",
    "openpyxl.drawing.geometry.Backdrop",
    "openpyxl.drawing.geometry.Bevel",
    "openpyxl.drawing.geometry.Camera",
    "openpyxl.drawing.geometry.ConnectionSite",
    "openpyxl.drawing.geometry.ConnectionSiteList",
    "openpyxl.drawing.geometry.CustomGeometry2D",
    "openpyxl.drawing.geometry.FontReference",
    "openpyxl.drawing.geometry.GeomGuide",
    "openpyxl.drawing.geometry.GeomGuideList",
    "openpyxl.drawing.geometry.GeomRect",
    "openpyxl.drawing.geometry.GroupTransform2D",
    "openpyxl.drawing.geometry.LightRig",
    "openpyxl.drawing.geometry.Path2D",
    "openpyxl.drawing.geometry.Path2DList",
    "openpyxl.drawing.geometry.Point2D",
    "openpyxl.drawing.geometry.Point3D",
    "openpyxl.drawing.geometry.PositiveSize2D",
    "openpyxl.drawing.geometry.PresetGeometry2D",
    "openpyxl.drawing.geometry.Scene3D",
    "openpyxl.drawing.geometry.Shape3D",
    "openpyxl.drawing.geometry.ShapeStyle",
    "openpyxl.drawing.geometry.SphereCoords",
    "openpyxl.drawing.geometry.StyleMatrixReference",
    "openpyxl.drawing.geometry.Transform2D",
    "openpyxl.drawing.geometry.Vector3D",
    "openpyxl.drawing.graphic.GraphicData",
    "openpyxl.drawing.graphic.GraphicFrame",
    "openpyxl.drawing.graphic.GraphicFrameLocking",
    "openpyxl.drawing.graphic.GraphicObject",
    "openpyxl.drawing.graphic.GroupShape",
    "openpyxl.drawing.graphic.NonVisualGraphicFrame",
    "openpyxl.drawing.graphic.NonVisualGraphicFrameProperties",
    "openpyxl.drawing.line.DashStop",
    "openpyxl.drawing.line.DashStopList",
    "openpyxl.drawing.line.LineEndProperties",
    "openpyxl.drawing.line.LineProperties",
    "openpyxl.drawing.picture.NonVisualPictureProperties",
    "openpyxl.drawing.picture.PictureFrame",
    "openpyxl.drawing.picture.PictureLocking",
    "openpyxl.drawing.picture.PictureNonVisual",
    "openpyxl.drawing.properties.GroupLocking",
    "openpyxl.drawing.properties.GroupShapeProperties",
    "openpyxl.drawing.properties.NonVisualDrawingProps",
    "openpyxl.drawing.properties.NonVisualDrawingShapeProps",
    "openpyxl.drawing.properties.NonVisualGroupDrawingShapeProps",
    "openpyxl.drawing.properties.NonVisualGroupShape",
    "openpyxl.drawing.relation.ChartRelation",
    "openpyxl.drawing.spreadsheet_drawing.AnchorClientData",
    "openpyxl.drawing.spreadsheet_drawing.AnchorMarker",
    "openpyxl.drawing.spreadsheet_drawing.SpreadsheetDrawing",
    "openpyxl.drawing.spreadsheet_drawing._AnchorBase",
    "openpyxl.drawing.text.AutonumberBullet",
    "openpyxl.drawing.text.CharacterProperties",
    "openpyxl.drawing.text.EmbeddedWAVAudioFile",
    "openpyxl.drawing.text.Font",
    "openpyxl.drawing.text.GeomGuide",
    "openpyxl.drawing.text.GeomGuideList",
    "openpyxl.drawing.text.Hyperlink",
    "openpyxl.drawing.text.LineBreak",
    "openpyxl.drawing.text.ListStyle",
    "openpyxl.drawing.text.Paragraph",
    "openpyxl.drawing.text.ParagraphProperties",
    "openpyxl.drawing.text.PresetTextShape",
    "openpyxl.drawing.text.RegularTextRun",
    "openpyxl.drawing.text.RichTextProperties",
    "openpyxl.drawing.text.Spacing",
    "openpyxl.drawing.text.TabStop",
    "openpyxl.drawing.text.TabStopList",
    "openpyxl.drawing.text.TextField",
    "openpyxl.drawing.text.TextNormalAutofit",
    "openpyxl.formatting.formatting.ConditionalFormatting",
    "openpyxl.formatting.rule.ColorScale",
    "openpyxl.formatting.rule.DataBar",
    "openpyxl.formatting.rule.FormatObject",
    "openpyxl.formatting.rule.IconSet",
    "openpyxl.formatting.rule.Rule",
    "openpyxl.packaging.core.DocumentProperties",
    "openpyxl.packaging.extended.ExtendedProperties",
    "openpyxl.packaging.manifest.FileExtension",
    "openpyxl.packaging.manifest.Manifest",
    "openpyxl.packaging.manifest.Override",
    "openpyxl.packaging.relationship.Relationship",
    "openpyxl.packaging.relationship.RelationshipList",
    "openpyxl.packaging.workbook.ChildSheet",
    "openpyxl.packaging.workbook.FileRecoveryProperties",
    "openpyxl.packaging.workbook.PivotCache",
    "openpyxl.packaging.workbook.WorkbookPackage",
    "openpyxl.pivot.cache.CacheDefinition",
    "openpyxl.pivot.cache.CacheField",
    "openpyxl.pivot.cache.CacheHierarchy",
    "openpyxl.pivot.cache.CacheSource",
    "openpyxl.pivot.cache.CalculatedItem",
    "openpyxl.pivot.cache.CalculatedMember",
    "openpyxl.pivot.cache.Consolidation",
    "openpyxl.pivot.cache.DiscretePr",
    "openpyxl.pivot.cache.FieldGroup",
    "openpyxl.pivot.cache.FieldUsage",
    "openpyxl.pivot.cache.FieldsUsage",
    "openpyxl.pivot.cache.GroupItems",
    "openpyxl.pivot.cache.GroupLevel",
    "openpyxl.pivot.cache.GroupLevels",
    "openpyxl.pivot.cache.GroupMember",
    "openpyxl.pivot.cache.GroupMembers",
    "openpyxl.pivot.cache.Groups",
    "openpyxl.pivot.cache.LevelGroup",
    "openpyxl.pivot.cache.MeasureDimensionMap",
    "openpyxl.pivot.cache.MeasureGroup",
    "openpyxl.pivot.cache.OLAPSet",
    "openpyxl.pivot.cache.OLAPSets",
    "openpyxl.pivot.cache.PCDKPI",
    "openpyxl.pivot.cache.PCDSDTCEntries",
    "openpyxl.pivot.cache.Page",
    "openpyxl.pivot.cache.PageItem",
    "openpyxl.pivot.cache.PivotDimension",
    "openpyxl.pivot.cache.Query",
    "openpyxl.pivot.cache.QueryCache",
    "openpyxl.pivot.cache.RangePr",
    "openpyxl.pivot.cache.RangeSet",
    "openpyxl.pivot.cache.ServerFormat",
    "openpyxl.pivot.cache.ServerFormatList",
    "openpyxl.pivot.cache.SharedItems",
    "openpyxl.pivot.cache.TupleCache",
    "openpyxl.pivot.cache.WorksheetSource",
    "openpyxl.pivot.fields.Boolean",
    "openpyxl.pivot.fields.DateTimeField",
    "openpyxl.pivot.fields.Error",
    "openpyxl.pivot.fields.Index",
    "openpyxl.pivot.fields.Missing",
    "openpyxl.pivot.fields.Number",
    "openpyxl.pivot.fields.Text",
    "openpyxl.pivot.fields.Tuple",
    "openpyxl.pivot.fields.TupleList",
    "openpyxl.pivot.record.Record",
    "openpyxl.pivot.record.RecordList",
    "openpyxl.pivot.table.AutoSortScope",
    "openpyxl.pivot.table.ChartFormat",
    "openpyxl.pivot.table.ColHierarchiesUsage",
    "openpyxl.pivot.table.ConditionalFormat",
    "openpyxl.pivot.table.DataField",
    "openpyxl.pivot.table.FieldItem",
    "openpyxl.pivot.table.Format",
    "openpyxl.pivot.table.HierarchyUsage",
    "openpyxl.pivot.table.Location",
    "openpyxl.pivot.table.MemberList",
    "openpyxl.pivot.table.MemberProperty",
    "openpyxl.pivot.table.PageField",
    "openpyxl.pivot.table.PivotArea",
    "openpyxl.pivot.table.PivotField",
    "openpyxl.pivot.table.PivotFilter",
    "openpyxl.pivot.table.PivotFilters",
    "openpyxl.pivot.table.PivotHierarchy",
    "openpyxl.pivot.table.PivotTableStyle",
    "openpyxl.pivot.table.Reference",
    "openpyxl.pivot.table.RowColField",
    "openpyxl.pivot.table.RowColItem",
    "openpyxl.pivot.table.RowHierarchiesUsage",
    "openpyxl.pivot.table.TableDefinition",
    "openpyxl.styles.alignment.Alignment",
    "openpyxl.styles.borders.Border",
    "openpyxl.styles.borders.Side",
    "openpyxl.styles.cell_style.CellStyle",
    "openpyxl.styles.cell_style.CellStyleList",
    "openpyxl.styles.colors.Color",
    "openpyxl.styles.colors.ColorList",
    "openpyxl.styles.colors.RgbColor",
    "openpyxl.styles.differential.DifferentialStyle",
    "openpyxl.styles.differential.DifferentialStyleList",
    "openpyxl.styles.fills.GradientFill",
    "openpyxl.styles.fills.PatternFill",
    "openpyxl.styles.fills.Stop",
    "openpyxl.styles.fonts.Font",
    "openpyxl.styles.named_styles.NamedStyle",
    "openpyxl.styles.named_styles._NamedCellStyle",
    "openpyxl.styles.named_styles._NamedCellStyleList",
    "openpyxl.styles.numbers.NumberFormat",
    "openpyxl.styles.numbers.NumberFormatList",
    "openpyxl.styles.protection.Protection",
    "openpyxl.styles.stylesheet.Stylesheet",
    "openpyxl.styles.table.TableStyle",
    "openpyxl.styles.table.TableStyleElement",
    "openpyxl.styles.table.TableStyleList",
    "openpyxl.workbook.defined_name.DefinedName",
    "openpyxl.workbook.defined_name.DefinedNameList",
    "openpyxl.workbook.external_link.external.ExternalBook",
    "openpyxl.workbook.external_link.external.ExternalCell",
    "openpyxl.workbook.external_link.external.ExternalDefinedName",
    "openpyxl.workbook.external_link.external.ExternalLink",
    "openpyxl.workbook.external_link.external.ExternalRow",
    "openpyxl.workbook.external_link.external.ExternalSheetData",
    "openpyxl.workbook.external_link.external.ExternalSheetDataSet",
    "openpyxl.workbook.external_link.external.ExternalSheetNames",
    "openpyxl.workbook.external_reference.ExternalReference",
    "openpyxl.workbook.function_group.FunctionGroup",
    "openpyxl.workbook.function_group.FunctionGroupList",
    "openpyxl.workbook.properties.CalcProperties",
    "openpyxl.workbook.properties.FileVersion",
    "openpyxl.workbook.properties.WorkbookProperties",
    "openpyxl.workbook.protection.FileSharing",
    "openpyxl.workbook.protection.WorkbookProtection",
    "openpyxl.workbook.smart_tags.SmartTag",
    "openpyxl.workbook.smart_tags.SmartTagList",
    "openpyxl.workbook.smart_tags.SmartTagProperties",
    "openpyxl.workbook.views.BookView",
    "openpyxl.workbook.views.CustomWorkbookView",
    "openpyxl.workbook.web.WebPublishObject",
    "openpyxl.workbook.web.WebPublishObjectList",
    "openpyxl.workbook.web.WebPublishing",
    "openpyxl.worksheet.cell_range.CellRange",
    "openpyxl.worksheet.cell_range.MultiCellRange",
    "openpyxl.worksheet.cell_watch.CellWatch",
    "openpyxl.worksheet.cell_watch.CellWatches",
    "openpyxl.worksheet.controls.Control",
    "openpyxl.worksheet.controls.ControlProperty",
    "openpyxl.worksheet.controls.Controls",
    "openpyxl.worksheet.custom.CustomProperties",
    "openpyxl.worksheet.custom.CustomProperty",
    "openpyxl.worksheet.datavalidation.DataValidation",
    "openpyxl.worksheet.datavalidation.DataValidationList",
    "openpyxl.worksheet.dimensions.Dimension",
    "openpyxl.worksheet.dimensions.SheetDimension",
    "openpyxl.worksheet.dimensions.SheetFormatProperties",
    "openpyxl.worksheet.drawing.Drawing",
    "openpyxl.worksheet.errors.Extension",
    "openpyxl.worksheet.errors.ExtensionList",
    "openpyxl.worksheet.errors.IgnoredError",
    "openpyxl.worksheet.errors.IgnoredErrors",
    "openpyxl.worksheet.filters.AutoFilter",
    "openpyxl.worksheet.filters.ColorFilter",
    "openpyxl.worksheet.filters.CustomFilter",
    "openpyxl.worksheet.filters.CustomFilters",
    "openpyxl.worksheet.filters.DateGroupItem",
    "openpyxl.worksheet.filters.DynamicFilter",
    "openpyxl.worksheet.filters.FilterColumn",
    "openpyxl.worksheet.filters.Filters",
    "openpyxl.worksheet.filters.IconFilter",
    "openpyxl.worksheet.filters.SortCondition",
    "openpyxl.worksheet.filters.SortState",
    "openpyxl.worksheet.filters.Top10",
    "openpyxl.worksheet.header_footer.HeaderFooter",
    "openpyxl.worksheet.header_footer.HeaderFooterItem",
    "openpyxl.worksheet.header_footer._HeaderFooterPart",
    "openpyxl.worksheet.hyperlink.Hyperlink",
    "openpyxl.worksheet.hyperlink.HyperlinkList",
    "openpyxl.worksheet.merge.MergeCells",
    "openpyxl.worksheet.ole.ObjectAnchor",
    "openpyxl.worksheet.ole.ObjectPr",
    "openpyxl.worksheet.ole.OleObject",
    "openpyxl.worksheet.ole.OleObjects",
    "openpyxl.worksheet.page.PageMargins",
    "openpyxl.worksheet.page.PrintOptions",
    "openpyxl.worksheet.page.PrintPageSetup",
    "openpyxl.worksheet.pagebreak.Break",
    "openpyxl.worksheet.pagebreak.RowBreak",
    "openpyxl.worksheet.properties.Outline",
    "openpyxl.worksheet.properties.PageSetupProperties",
    "openpyxl.worksheet.properties.WorksheetProperties",
    "openpyxl.worksheet.protection.SheetProtection",
    "openpyxl.worksheet.related.Related",
    "openpyxl.worksheet.scenario.InputCells",
    "openpyxl.worksheet.scenario.Scenario",
    "openpyxl.worksheet.scenario.ScenarioList",
    "openpyxl.worksheet.smart_tag.CellSmartTag",
    "openpyxl.worksheet.smart_tag.CellSmartTagPr",
    "openpyxl.worksheet.smart_tag.CellSmartTags",
    "openpyxl.worksheet.smart_tag.SmartTags",
    "openpyxl.worksheet.table.Table",
    "openpyxl.worksheet.table.TableColumn",
    "openpyxl.worksheet.table.TableFormula",
    "openpyxl.worksheet.table.TablePartList",
    "openpyxl.worksheet.table.TableStyleInfo",
    "openpyxl.worksheet.table.XMLColumnProps",
    "openpyxl.worksheet.views.Pane",
    "openpyxl.worksheet.views.Selection",
    "openpyxl.worksheet.views.SheetView",
    "openpyxl.worksheet.views.SheetViewList",
    "opentracing.mocktracer.context.SpanContext",
    "optparse.OptParseError",
    "os._Environ",
    "packaging._tokenizer.ParserSyntaxError",
    "packaging.metadata.ExceptionGroup",
    "packaging.metadata.InvalidMetadata",
    "packaging.metadata._Validator",
    "packaging.specifiers.Specifier",
    "packaging.specifiers.SpecifierSet",
    "packaging.utils.NormalizedName",
    "packaging.version.Version",
    "paramiko.buffered_pipe.BufferedPipe",
    "paramiko.channel.Channel",
    "paramiko.client.SSHClient",
    "paramiko.file.BufferedFile",
    "paramiko.hostkeys.HostKeys",
    "paramiko.hostkeys.InvalidHostKey",
    "paramiko.hostkeys._SubDict",
    "paramiko.proxy.ProxyCommand",
    "paramiko.sftp_handle.SFTPHandle",
    "paramiko.ssh_exception.BadAuthenticationType",
    "paramiko.ssh_exception.BadHostKeyException",
    "paramiko.ssh_exception.ChannelException",
    "paramiko.ssh_exception.NoValidConnectionsError",
    "paramiko.ssh_exception.PartialAuthentication",
    "paramiko.ssh_exception.ProxyCommandFailure",
    "parsimonious.exceptions.ParseError",
    "parsimonious.exceptions.UndefinedLabel",
    "parsimonious.exceptions.VisitationError",
    "parsimonious.expressions.Expression",
    "parsimonious.grammar.Grammar",
    "parsimonious.grammar.RuleVisitor",
    "parsimonious.utils.Token",
    "parso.grammar.Grammar",
    "parso.parser.InternalParseError",
    "parso.parser.ParserSyntaxError",
    "parso.pgen2.generator.DFAState",
    "parso.pgen2.generator.Grammar",
    "parso.python.pep8.PEP8NormalizerConfig",
    "parso.python.tree.Class",
    "parso.python.tree.Function",
    "parso.python.tree.Param",
    "parso.python.tree.Scope",
    "parso.python.tree.UsedNamesMapping",
    "parso.tree.BaseNode",
    "parso.tree.Leaf",
    "passlib.crypto.digest.HashInfo",
    "passlib.exc.PasswordSizeError",
    "passlib.exc.TokenError",
    "passlib.exc.UnknownBackendError",
    "passlib.exc.UnknownHashError",
    "passlib.handlers.argon2._Argon2Common",
    "passlib.handlers.bcrypt.bcrypt_sha256",
    "passlib.handlers.misc.unix_fallback",
    "passlib.handlers.sha2_crypt._SHA2_Common",
    "passlib.pwd.WordsetDict",
    "passlib.totp.TotpMatch",
    "passlib.totp.TotpToken",
    "passlib.utils.handlers.GenericHandler",
    "peewee.AutoField",
    "peewee.BaseModelCursorWrapper",
    "peewee.BaseQuery",
    "peewee.BigBitField",
    "peewee.BitField",
    "peewee.CharField",
    "peewee.Column",
    "peewee.CompositeKey",
    "peewee.CompoundSelectQuery",
    "peewee.ConnectionContext",
    "peewee.DQ",
    "peewee.Database",
    "peewee.Entity",
    "peewee.Expression",
    "peewee.Field",
    "peewee.ForUpdate",
    "peewee.Function",
    "peewee.Index",
    "peewee.Join",
    "peewee.ManyToManyField",
    "peewee.ModelAlias",
    "peewee.ModelCompoundSelectQuery",
    "peewee.ModelObjectCursorWrapper",
    "peewee.ModelSelect",
    "peewee.NamespaceAttribute",
    "peewee.NodeList",
    "peewee.ObjectCursorWrapper",
    "peewee.OnConflict",
    "peewee.PeeweeException",
    "peewee.SQL",
    "peewee.Select",
    "peewee.Source",
    "peewee.TimestampField",
    "peewee.Value",
    "peewee.VirtualField",
    "peewee.Window",
    "peewee.WindowAlias",
    "peewee.WrappedNode",
    "peewee._BoundModelsContext",
    "peewee._BoundTableContext",
    "peewee._Namespace",
    "peewee._atomic",
    "peewee._manual",
    "peewee._savepoint",
    "peewee._transaction",
    "pika.adapters.asyncio_connection._AsyncioIOReference",
    "pika.adapters.asyncio_connection._AsyncioIOServicesAdapter",
    "pika.adapters.asyncio_connection._TimerHandle",
    "pika.adapters.base_connection._StreamingProtocolShim",
    "pika.adapters.blocking_connection._ConsumerCancellationEvt",
    "pika.adapters.blocking_connection._ConsumerDeliveryEvt",
    "pika.adapters.blocking_connection._ReturnedMessageEvt",
    "pika.adapters.gevent_connection._GeventIOLoopIOHandle",
    "pika.adapters.gevent_connection._GeventSelectorIOLoop",
    "pika.adapters.select_connection.IOLoop",
    "pika.adapters.select_connection._PollerBase",
    "pika.adapters.twisted_connection._TimerHandle",
    "pika.adapters.utils.connection_workflow.AMQPConnectionWorkflow",
    "pika.adapters.utils.connection_workflow.AMQPConnectionWorkflowFailed",
    "pika.adapters.utils.connection_workflow.AMQPConnectorPhaseErrorBase",
    "pika.adapters.utils.io_services_utils._AsyncServiceAsyncHandle",
    "pika.adapters.utils.io_services_utils._AsyncTransportBase",
    "pika.adapters.utils.io_services_utils._AsyncTransportBase.RxEndOfFile",
    "pika.adapters.utils.selector_ioloop_adapter.SelectorIOServicesAdapter",
    "pika.adapters.utils.selector_ioloop_adapter._SelectorIOLoopIOHandle",
    "pika.adapters.utils.selector_ioloop_adapter._TimerHandle",
    "pika.connection.Connection",
    "pika.exceptions.ChannelClosed",
    "pika.exceptions.ConnectionClosed",
    "pika.exceptions.NackError",
    "pika.exceptions.UnroutableError",
    "pika.frame.Frame",
    "pika.frame.ProtocolHeader",
    "pika.spec.Access.Request",
    "pika.spec.Access.RequestOk",
    "pika.spec.Basic.Ack",
    "pika.spec.Basic.Cancel",
    "pika.spec.Basic.CancelOk",
    "pika.spec.Basic.Consume",
    "pika.spec.Basic.ConsumeOk",
    "pika.spec.Basic.Deliver",
    "pika.spec.Basic.Get",
    "pika.spec.Basic.GetEmpty",
    "pika.spec.Basic.GetOk",
    "pika.spec.Basic.Nack",
    "pika.spec.Basic.Publish",
    "pika.spec.Basic.Qos",
    "pika.spec.Basic.QosOk",
    "pika.spec.Basic.Recover",
    "pika.spec.Basic.RecoverAsync",
    "pika.spec.Basic.RecoverOk",
    "pika.spec.Basic.Reject",
    "pika.spec.Basic.Return",
    "pika.spec.BasicProperties",
    "pika.spec.Channel.Close",
    "pika.spec.Channel.CloseOk",
    "pika.spec.Channel.Flow",
    "pika.spec.Channel.FlowOk",
    "pika.spec.Channel.Open",
    "pika.spec.Channel.OpenOk",
    "pika.spec.Confirm.Select",
    "pika.spec.Confirm.SelectOk",
    "pika.spec.Connection.Blocked",
    "pika.spec.Connection.Close",
    "pika.spec.Connection.CloseOk",
    "pika.spec.Connection.Open",
    "pika.spec.Connection.OpenOk",
    "pika.spec.Connection.Secure",
    "pika.spec.Connection.SecureOk",
    "pika.spec.Connection.Start",
    "pika.spec.Connection.StartOk",
    "pika.spec.Connection.Tune",
    "pika.spec.Connection.TuneOk",
    "pika.spec.Connection.Unblocked",
    "pika.spec.Connection.UpdateSecret",
    "pika.spec.Connection.UpdateSecretOk",
    "pika.spec.Exchange.Bind",
    "pika.spec.Exchange.BindOk",
    "pika.spec.Exchange.Declare",
    "pika.spec.Exchange.DeclareOk",
    "pika.spec.Exchange.Delete",
    "pika.spec.Exchange.DeleteOk",
    "pika.spec.Exchange.Unbind",
    "pika.spec.Exchange.UnbindOk",
    "pika.spec.Queue.Bind",
    "pika.spec.Queue.BindOk",
    "pika.spec.Queue.Declare",
    "pika.spec.Queue.DeclareOk",
    "pika.spec.Queue.Delete",
    "pika.spec.Queue.DeleteOk",
    "pika.spec.Queue.Purge",
    "pika.spec.Queue.PurgeOk",
    "pika.spec.Queue.Unbind",
    "pika.spec.Queue.UnbindOk",
    "pika.spec.Tx.Commit",
    "pika.spec.Tx.CommitOk",
    "pika.spec.Tx.Rollback",
    "pika.spec.Tx.RollbackOk",
    "pika.spec.Tx.Select",
    "pika.spec.Tx.SelectOk",
    "pip._internal.cli.parser.ConfigOptionParser",
    "pip._internal.cli.req_command.RequirementCommand",
    "pip._internal.cli.spinners.InteractiveSpinner",
    "pip._internal.cli.spinners.NonInteractiveSpinner",
    "pip._internal.configuration.Kind",
    "pip._internal.exceptions.ConfigurationFileCouldNotBeLoaded",
    "pip._internal.exceptions.DiagnosticPipError",
    "pip._internal.exceptions.HashErrors",
    "pip._internal.exceptions.HashMismatch",
    "pip._internal.exceptions.HashMissing",
    "pip._internal.exceptions.InvalidWheel",
    "pip._internal.exceptions.MetadataInconsistent",
    "pip._internal.exceptions.NetworkConnectionError",
    "pip._internal.exceptions.NoneMetadataError",
    "pip._internal.index.collector._NotAPIContent",
    "pip._internal.index.sources._FlatDirectorySource",
    "pip._internal.index.sources._IndexDirectorySource",
    "pip._internal.index.sources._LocalFileSource",
    "pip._internal.index.sources._RemoteFileSource",
    "pip._internal.metadata.base.FilesystemWheel",
    "pip._internal.metadata.base.MemoryWheel",
    "pip._internal.metadata.importlib._compat.BadMetadata",
    "pip._internal.metadata.importlib._dists.Distribution",
    "pip._internal.metadata.importlib._dists.WheelDistribution",
    "pip._internal.metadata.importlib._envs.Environment",
    "pip._internal.metadata.pkg_resources.Distribution",
    "pip._internal.metadata.pkg_resources.Environment",
    "pip._internal.network.auth.KeyRingCliProvider",
    "pip._internal.network.auth.KeyRingPythonProvider",
    "pip._internal.network.auth.MultiDomainBasicAuth",
    "pip._internal.network.cache.SafeFileCache",
    "pip._internal.operations.install.wheel.MissingCallableSuffix",
    "pip._internal.operations.install.wheel.RecordPath",
    "pip._internal.req.req_file.OptionParsingError",
    "pip._internal.resolution.legacy.resolver.Resolver",
    "pip._internal.resolution.resolvelib.candidates.AlreadyInstalledCandidate",
    "pip._internal.resolution.resolvelib.candidates.ExtrasCandidate",
    "pip._internal.resolution.resolvelib.candidates.RequiresPythonCandidate",
    "pip._internal.resolution.resolvelib.candidates._InstallRequirementBackedCandidate",
    "pip._internal.resolution.resolvelib.found_candidates.FoundCandidates",
    "pip._internal.resolution.resolvelib.provider.PipProvider",
    "pip._internal.resolution.resolvelib.reporter.PipReporter",
    "pip._internal.resolution.resolvelib.requirements.ExplicitRequirement",
    "pip._internal.resolution.resolvelib.requirements.RequiresPythonRequirement",
    "pip._internal.resolution.resolvelib.requirements.SpecifierRequirement",
    "pip._internal.resolution.resolvelib.requirements.UnsatisfiableRequirement",
    "pip._internal.resolution.resolvelib.resolver.Resolver",
    "pip._internal.utils.packaging.NormalizedExtra",
    "pip._internal.vcs.subversion.Subversion",
    "pip._internal.vcs.versioncontrol.RemoteNotValidError",
    "pip._vendor.cachecontrol.cache.DictCache",
    "pip._vendor.cachecontrol.caches.redis_cache.RedisCache",
    "pip._vendor.cachecontrol.heuristics.ExpiresAfter",
    "pip._vendor.distlib.compat.ChainMap",
    "pip._vendor.distlib.util.CSVReader",
    "pip._vendor.distlib.util.CSVWriter",
    "pip._vendor.msgpack.exceptions.ExtraData",
    "pip._vendor.packaging.specifiers.SpecifierSet",
    "pip._vendor.packaging.specifiers._IndividualSpecifier",
    "pip._vendor.packaging.utils.NormalizedName",
    "pip._vendor.packaging.version.LegacyVersion",
    "pip._vendor.packaging.version.Version",
    "pip._vendor.pkg_resources.PathMetadata",
    "pip._vendor.platformdirs.api.PlatformDirsABC",
    "pip._vendor.pygments.lexer.combined",
    "pip._vendor.pygments.lexer.words",
    "pip._vendor.pygments.token._TokenType",
    "pip._vendor.pyparsing.core.ParserElement",
    "pip._vendor.pyparsing.diagram.EditablePartial",
    "pip._vendor.pyparsing.exceptions.ParseBaseException",
    "pip._vendor.pyparsing.exceptions.RecursiveGrammarException",
    "pip._vendor.pyproject_hooks._impl.BackendInvalid",
    "pip._vendor.pyproject_hooks._impl.BackendUnavailable",
    "pip._vendor.pyproject_hooks._impl.HookMissing",
    "pip._vendor.pyproject_hooks._impl.UnsupportedOperation",
    "pip._vendor.pyproject_hooks._in_process._in_process.BackendInvalid",
    "pip._vendor.pyproject_hooks._in_process._in_process.BackendUnavailable",
    "pip._vendor.pyproject_hooks._in_process._in_process.GotUnsupportedOperation",
    "pip._vendor.pyproject_hooks._in_process._in_process.HookMissing",
    "pip._vendor.requests.auth.HTTPBasicAuth",
    "pip._vendor.requests.auth.HTTPDigestAuth",
    "pip._vendor.requests.exceptions.JSONDecodeError",
    "pip._vendor.requests.exceptions.RequestException",
    "pip._vendor.requests.models.PreparedRequest",
    "pip._vendor.requests.models.Request",
    "pip._vendor.requests.sessions.Session",
    "pip._vendor.requests.structures.CaseInsensitiveDict",
    "pip._vendor.resolvelib.resolvers.InconsistentCandidate",
    "pip._vendor.resolvelib.resolvers.RequirementsConflicted",
    "pip._vendor.resolvelib.resolvers.ResolutionImpossible",
    "pip._vendor.resolvelib.resolvers.ResolutionTooDeep",
    "pip._vendor.resolvelib.structs.IteratorMapping",
    "pip._vendor.rich._inspect.Inspect",
    "pip._vendor.rich.align.Align",
    "pip._vendor.rich.align.VerticalCenter",
    "pip._vendor.rich.bar.Bar",
    "pip._vendor.rich.columns.Columns",
    "pip._vendor.rich.constrain.Constrain",
    "pip._vendor.rich.emoji.Emoji",
    "pip._vendor.rich.file_proxy.FileProxy",
    "pip._vendor.rich.live.Live",
    "pip._vendor.rich.padding.Padding",
    "pip._vendor.rich.panel.Panel",
    "pip._vendor.rich.pretty.Pretty",
    "pip._vendor.rich.progress.Progress",
    "pip._vendor.rich.progress.ProgressColumn",
    "pip._vendor.rich.progress.TaskID",
    "pip._vendor.rich.progress._ReadContext",
    "pip._vendor.rich.progress._Reader",
    "pip._vendor.rich.progress_bar.ProgressBar",
    "pip._vendor.rich.prompt.InvalidResponse",
    "pip._vendor.rich.prompt.PromptBase",
    "pip._vendor.rich.rule.Rule",
    "pip._vendor.rich.status.Status",
    "pip._vendor.rich.syntax.ANSISyntaxTheme",
    "pip._vendor.rich.syntax.PygmentsSyntaxTheme",
    "pip._vendor.rich.syntax.Syntax",
    "pip._vendor.rich.table.Table",
    "pip._vendor.rich.text.Text",
    "pip._vendor.rich.tree.Tree",
    "pip._vendor.tenacity.BaseRetrying",
    "pip._vendor.tenacity.Future",
    "pip._vendor.tenacity.RetryAction",
    "pip._vendor.tenacity.RetryError",
    "pip._vendor.tenacity.retry.retry_all",
    "pip._vendor.tenacity.retry.retry_any",
    "pip._vendor.tenacity.retry.retry_if_exception",
    "pip._vendor.tenacity.retry.retry_if_exception_cause_type",
    "pip._vendor.tenacity.retry.retry_if_not_result",
    "pip._vendor.tenacity.retry.retry_if_result",
    "pip._vendor.tenacity.stop.stop_after_attempt",
    "pip._vendor.tenacity.stop.stop_after_delay",
    "pip._vendor.tenacity.stop.stop_all",
    "pip._vendor.tenacity.stop.stop_any",
    "pip._vendor.tenacity.stop.stop_when_event_set",
    "pip._vendor.tenacity.wait.wait_chain",
    "pip._vendor.tenacity.wait.wait_combine",
    "pip._vendor.tenacity.wait.wait_exponential",
    "pip._vendor.tenacity.wait.wait_exponential_jitter",
    "pip._vendor.tenacity.wait.wait_fixed",
    "pip._vendor.tenacity.wait.wait_incrementing",
    "pip._vendor.tenacity.wait.wait_random",
    "pip._vendor.typing_extensions.ParamSpecArgs",
    "pip._vendor.typing_extensions.ParamSpecKwargs",
    "pip._vendor.typing_extensions._LiteralForm",
    "pip._vendor.typing_extensions._UnpackSpecialForm",
    "pip._vendor.urllib3._collections.HTTPHeaderDict",
    "pip._vendor.urllib3._collections.RecentlyUsedContainer",
    "pip._vendor.urllib3.exceptions.HeaderParsingError",
    "pip._vendor.urllib3.exceptions.IncompleteRead",
    "pip._vendor.urllib3.exceptions.InvalidChunkLength",
    "pip._vendor.urllib3.exceptions.LocationParseError",
    "pip._vendor.urllib3.exceptions.PoolError",
    "pip._vendor.urllib3.exceptions.ProxyError",
    "pip._vendor.urllib3.exceptions.ProxySchemeUnknown",
    "pip._vendor.urllib3.exceptions.URLSchemeUnknown",
    "pip._vendor.urllib3.response.HTTPResponse",
    "pkg_resources.Distribution",
    "pkg_resources.EggMetadata",
    "pkg_resources.FileMetadata",
    "pkg_resources.PathMetadata",
    "plistlib.InvalidFileException",
    "polib._MOFileParser",
    "polib._POFileParser",
    "promise.async_.Async",
    "promise.dataloader.DataLoader",
    "promise.promise.Promise",
    "prompt_toolkit.application.application.Application",
    "prompt_toolkit.application.application._CombinedRegistry",
    "prompt_toolkit.auto_suggest.ConditionalAutoSuggest",
    "prompt_toolkit.auto_suggest.DynamicAutoSuggest",
    "prompt_toolkit.auto_suggest.ThreadedAutoSuggest",
    "prompt_toolkit.cache.SimpleCache",
    "prompt_toolkit.clipboard.base.DynamicClipboard",
    "prompt_toolkit.clipboard.in_memory.InMemoryClipboard",
    "prompt_toolkit.clipboard.pyperclip.PyperclipClipboard",
    "prompt_toolkit.completion.base.ConditionalCompleter",
    "prompt_toolkit.completion.base.DynamicCompleter",
    "prompt_toolkit.completion.base.ThreadedCompleter",
    "prompt_toolkit.completion.base._MergedCompleter",
    "prompt_toolkit.completion.deduplicate.DeduplicateCompleter",
    "prompt_toolkit.completion.filesystem.PathCompleter",
    "prompt_toolkit.completion.fuzzy_completer.FuzzyCompleter",
    "prompt_toolkit.completion.fuzzy_completer.FuzzyWordCompleter",
    "prompt_toolkit.completion.nested.NestedCompleter",
    "prompt_toolkit.completion.word_completer.WordCompleter",
    "prompt_toolkit.contrib.regular_languages.completion.GrammarCompleter",
    "prompt_toolkit.contrib.regular_languages.lexer.GrammarLexer",
    "prompt_toolkit.contrib.regular_languages.regex_parser.AnyNode",
    "prompt_toolkit.contrib.regular_languages.regex_parser.Lookahead",
    "prompt_toolkit.contrib.regular_languages.regex_parser.NodeSequence",
    "prompt_toolkit.contrib.regular_languages.regex_parser.Regex",
    "prompt_toolkit.contrib.regular_languages.regex_parser.Repeat",
    "prompt_toolkit.contrib.regular_languages.regex_parser.Variable",
    "prompt_toolkit.contrib.regular_languages.validation.GrammarValidator",
    "prompt_toolkit.cursor_shapes.DynamicCursorShapeConfig",
    "prompt_toolkit.cursor_shapes.SimpleCursorShapeConfig",
    "prompt_toolkit.eventloop.inputhook.InputHookSelector",
    "prompt_toolkit.input.vt100.Vt100Input",
    "prompt_toolkit.input.win32._Win32InputBase",
    "prompt_toolkit.key_binding.key_bindings.KeyBindings",
    "prompt_toolkit.key_binding.key_bindings._Proxy",
    "prompt_toolkit.layout.containers.ConditionalContainer",
    "prompt_toolkit.layout.containers.DynamicContainer",
    "prompt_toolkit.layout.containers.FloatContainer",
    "prompt_toolkit.layout.containers.Window",
    "prompt_toolkit.layout.containers._Split",
    "prompt_toolkit.layout.controls.BufferControl",
    "prompt_toolkit.layout.controls.FormattedTextControl",
    "prompt_toolkit.layout.margins.ConditionalMargin",
    "prompt_toolkit.layout.margins.NumberedMargin",
    "prompt_toolkit.layout.margins.PromptMargin",
    "prompt_toolkit.layout.margins.ScrollbarMargin",
    "prompt_toolkit.layout.menus.MultiColumnCompletionMenuControl",
    "prompt_toolkit.layout.processors.AfterInput",
    "prompt_toolkit.layout.processors.AppendAutoSuggestion",
    "prompt_toolkit.layout.processors.BeforeInput",
    "prompt_toolkit.layout.processors.ConditionalProcessor",
    "prompt_toolkit.layout.processors.DynamicProcessor",
    "prompt_toolkit.layout.processors.HighlightMatchingBracketProcessor",
    "prompt_toolkit.layout.processors.PasswordProcessor",
    "prompt_toolkit.layout.processors.ShowLeadingWhiteSpaceProcessor",
    "prompt_toolkit.layout.processors.ShowTrailingWhiteSpaceProcessor",
    "prompt_toolkit.layout.processors.TabsProcessor",
    "prompt_toolkit.layout.processors._MergedProcessor",
    "prompt_toolkit.layout.scrollable_pane.ScrollablePane",
    "prompt_toolkit.lexers.base.DynamicLexer",
    "prompt_toolkit.lexers.base.SimpleLexer",
    "prompt_toolkit.lexers.pygments.PygmentsLexer",
    "prompt_toolkit.lexers.pygments.RegexSync",
    "prompt_toolkit.output.plain_text.PlainTextOutput",
    "prompt_toolkit.output.vt100.Vt100_Output",
    "prompt_toolkit.output.win32.NoConsoleScreenBufferError",
    "prompt_toolkit.output.win32.Win32Output",
    "prompt_toolkit.shortcuts.progress_bar.base.ProgressBarCounter",
    "prompt_toolkit.shortcuts.progress_bar.base._ProgressControl",
    "prompt_toolkit.shortcuts.progress_bar.formatters.Bar",
    "prompt_toolkit.shortcuts.progress_bar.formatters.Label",
    "prompt_toolkit.shortcuts.progress_bar.formatters.Rainbow",
    "prompt_toolkit.shortcuts.progress_bar.formatters.Text",
    "prompt_toolkit.shortcuts.prompt.PromptSession",
    "prompt_toolkit.styles.base.DynamicStyle",
    "prompt_toolkit.styles.style.Style",
    "prompt_toolkit.styles.style._MergedStyle",
    "prompt_toolkit.styles.style_transformation.AdjustBrightnessStyleTransformation",
    "prompt_toolkit.styles.style_transformation.ConditionalStyleTransformation",
    "prompt_toolkit.styles.style_transformation.DynamicStyleTransformation",
    "prompt_toolkit.styles.style_transformation.SetDefaultColorStyleTransformation",
    "prompt_toolkit.styles.style_transformation._MergedStyleTransformation",
    "prompt_toolkit.utils.Event",
    "prompt_toolkit.validation.ConditionalValidator",
    "prompt_toolkit.validation.DynamicValidator",
    "prompt_toolkit.validation.ThreadedValidator",
    "prompt_toolkit.validation.ValidationError",
    "prompt_toolkit.validation._ValidatorFromCallable",
    "prompt_toolkit.widgets.base.Checkbox",
    "prompt_toolkit.widgets.base._DialogList",
    "psutil._common.Error",
    "psycopg2._psycopg.Error",
    "psycopg2.extras.RealDictRow",
    "psycopg2.tz.FixedOffsetTimezone",
    "py_compile.PyCompileError",
    "pyasn1.error.PyAsn1UnicodeError",
    "pyasn1.type.base.Asn1Type",
    "pyasn1.type.useful.TimeMixIn.FixedOffset",
    "pydoc.ErrorDuringImport",
    "pyflakes.checker.Builtin",
    "pyflakes.checker.FunctionScope",
    "pyflakes.checker.Importation",
    "pygments.formatter.Formatter",
    "pygments.lexer.combined",
    "pygments.lexer.words",
    "pymysql.connections.Connection",
    "pynput._util.Events",
    "pynput.keyboard.Events.Press",
    "pynput.keyboard.Events.Release",
    "pynput.mouse.Events.Click",
    "pynput.mouse.Events.Move",
    "pynput.mouse.Events.Scroll",
    "pyrfc3339.utils.FixedOffset",
    "pysftp.exceptions.ConnectionException",
    "pysftp.exceptions.CredentialException",
    "pytz._FixedOffset",
    "pytz.reference.FixedOffset",
    "pytz.reference.USTimeZone",
    "pytz.tzinfo.DstTzInfo",
    "queue.Queue",
    "queue.SimpleQueue",
    "range",
    "redis.asyncio.client.Redis",
    "redis.asyncio.cluster.ClusterPipeline",
    "redis.asyncio.cluster.RedisCluster",
    "redis.asyncio.sentinel.Sentinel",
    "redis.asyncio.utils.pipeline",
    "redis.backoff.ConstantBackoff",
    "redis.backoff.DecorrelatedJitterBackoff",
    "redis.backoff.EqualJitterBackoff",
    "redis.backoff.ExponentialBackoff",
    "redis.backoff.FullJitterBackoff",
    "redis.client.Redis",
    "redis.cluster.RedisCluster",
    "redis.commands.bf.BFBloom",
    "redis.commands.bf.CFBloom",
    "redis.commands.bf.CMSBloom",
    "redis.commands.bf.TDigestBloom",
    "redis.commands.bf.TOPKBloom",
    "redis.commands.graph.Graph",
    "redis.commands.graph.exceptions.VersionMismatchException",
    "redis.commands.json.JSON",
    "redis.commands.search.Search",
    "redis.commands.timeseries.TimeSeries",
    "redis.connection.HiredisParser",
    "redis.connection.PythonParser",
    "redis.credentials.UsernamePasswordCredentialProvider",
    "redis.exceptions.AskError",
    "redis.exceptions.ClusterDownError",
    "redis.sentinel.Sentinel",
    "regex._regex_core.Scanner",
    "regex._regex_core.error",
    "requests.auth.HTTPBasicAuth",
    "requests.auth.HTTPDigestAuth",
    "requests.exceptions.RequestException",
    "requests.models.PreparedRequest",
    "requests.models.Request",
    "requests.sessions.Session",
    "requests.structures.CaseInsensitiveDict",
    "reversed",
    "send2trash.exceptions.TrashPermissionError",
    "serial.serialutil.PortNotOpenError",
    "serial.serialutil.SerialBase",
    "serial.urlhandler.protocol_spy.FormatHexdump",
    "serial.urlhandler.protocol_spy.FormatRaw",
    "set",
    "setuptools.command.test.NonDataProperty",
    "setuptools.command.test.ScanningLoader",
    "setuptools.package_index.HashChecker",
    "setuptools.sandbox.DirectorySandbox",
    "shelve.Shelf",
    "shlex.shlex",
    "simplejson.errors.JSONDecodeError",
    "singledispatch.singledispatchmethod",
    "slumber.API",
    "slumber.Resource",
    "slumber.exceptions.SlumberHttpBaseException",
    "smtpd.SMTPChannel",
    "smtplib.SMTPRecipientsRefused",
    "smtplib.SMTPResponseException",
    "socket.SocketIO",
    "sqlalchemy.connectors.pyodbc.PyODBCConnector",
    "sqlalchemy.dialects.mssql.base.DATETIME2",
    "sqlalchemy.dialects.mssql.base.DATETIMEOFFSET",
    "sqlalchemy.dialects.mssql.base.REAL",
    "sqlalchemy.dialects.mssql.base.TIME",
    "sqlalchemy.dialects.mssql.base.VARBINARY",
    "sqlalchemy.dialects.mssql.information_schema._cast_on_2005",
    "sqlalchemy.dialects.mssql.mxodbc.MSDialect_mxodbc",
    "sqlalchemy.dialects.mysql.aiomysql.AsyncAdapt_aiomysql_connection",
    "sqlalchemy.dialects.mysql.asyncmy.AsyncAdapt_asyncmy_connection",
    "sqlalchemy.dialects.mysql.dml.OnDuplicateClause",
    "sqlalchemy.dialects.mysql.enumerated.ENUM",
    "sqlalchemy.dialects.mysql.expression.match",
    "sqlalchemy.dialects.mysql.types.BIT",
    "sqlalchemy.dialects.mysql.types.DATETIME",
    "sqlalchemy.dialects.mysql.types.TIME",
    "sqlalchemy.dialects.mysql.types.YEAR",
    "sqlalchemy.dialects.oracle.base.INTERVAL",
    "sqlalchemy.dialects.oracle.base._OuterJoinColumn",
    "sqlalchemy.dialects.postgresql.asyncpg.AsyncAdapt_asyncpg_connection",
    "sqlalchemy.dialects.postgresql.asyncpg.AsyncAdapt_asyncpg_dbapi.InvalidCachedStatementError",
    "sqlalchemy.dialects.postgresql.base.BIT",
    "sqlalchemy.dialects.postgresql.base.ENUM",
    "sqlalchemy.dialects.postgresql.base.INTERVAL",
    "sqlalchemy.dialects.postgresql.base.TIME",
    "sqlalchemy.dialects.postgresql.base.UUID",
    "sqlalchemy.dialects.postgresql.dml.OnConflictClause",
    "sqlalchemy.dialects.postgresql.ext.aggregate_order_by",
    "sqlalchemy.dialects.postgresql.hstore.HSTORE",
    "sqlalchemy.dialects.postgresql.pg8000.PGIdentifierPreparer_pg8000",
    "sqlalchemy.dialects.sqlite.aiosqlite.AsyncAdapt_aiosqlite_connection",
    "sqlalchemy.dialects.sqlite.dml.OnConflictClause",
    "sqlalchemy.engine.base.Connection",
    "sqlalchemy.engine.base.Engine",
    "sqlalchemy.engine.base.ExceptionContextImpl",
    "sqlalchemy.engine.base.Transaction",
    "sqlalchemy.engine.base.TwoPhaseTransaction",
    "sqlalchemy.engine.cursor.BufferedRowCursorFetchStrategy",
    "sqlalchemy.engine.cursor.CursorResultMetaData",
    "sqlalchemy.engine.cursor.FullyBufferedCursorFetchStrategy",
    "sqlalchemy.engine.default.DefaultDialect",
    "sqlalchemy.engine.mock.MockConnection",
    "sqlalchemy.engine.result.MappingResult",
    "sqlalchemy.engine.result.Result",
    "sqlalchemy.engine.result.ScalarResult",
    "sqlalchemy.engine.result.SimpleResultMetaData",
    "sqlalchemy.event.attr._ClsLevelDispatch",
    "sqlalchemy.event.attr._EmptyListener",
    "sqlalchemy.event.attr._JoinedListener",
    "sqlalchemy.event.attr._ListenerCollection",
    "sqlalchemy.event.base._EventMeta",
    "sqlalchemy.exc.CircularDependencyError",
    "sqlalchemy.exc.NoReferencedColumnError",
    "sqlalchemy.exc.NoReferencedTableError",
    "sqlalchemy.exc.ObjectNotExecutableError",
    "sqlalchemy.exc.StatementError",
    "sqlalchemy.exc.UnsupportedCompilationError",
    "sqlalchemy.ext.associationproxy.AssociationProxy",
    "sqlalchemy.ext.asyncio.engine.AsyncConnection",
    "sqlalchemy.ext.asyncio.engine.AsyncEngine",
    "sqlalchemy.ext.asyncio.engine.AsyncEngine._trans_ctx",
    "sqlalchemy.ext.asyncio.engine.AsyncTransaction",
    "sqlalchemy.ext.asyncio.result.AsyncMappingResult",
    "sqlalchemy.ext.asyncio.result.AsyncResult",
    "sqlalchemy.ext.asyncio.result.AsyncScalarResult",
    "sqlalchemy.ext.asyncio.scoping.async_scoped_session",
    "sqlalchemy.ext.asyncio.session.AsyncSession",
    "sqlalchemy.ext.asyncio.session.AsyncSessionTransaction",
    "sqlalchemy.ext.hybrid.hybrid_method",
    "sqlalchemy.ext.hybrid.hybrid_property",
    "sqlalchemy.orm.attributes.QueryableAttribute",
    "sqlalchemy.orm.context._BundleEntity",
    "sqlalchemy.orm.context._MapperEntity",
    "sqlalchemy.orm.context._ORMColumnEntity",
    "sqlalchemy.orm.context._RawColumnEntity",
    "sqlalchemy.orm.decl_api.DeclarativeMeta",
    "sqlalchemy.orm.decl_api.declared_attr",
    "sqlalchemy.orm.descriptor_props.CompositeProperty",
    "sqlalchemy.orm.descriptor_props.ConcreteInheritedProperty",
    "sqlalchemy.orm.descriptor_props.SynonymProperty",
    "sqlalchemy.orm.events._EventsHold",
    "sqlalchemy.orm.exc.LoaderStrategyException",
    "sqlalchemy.orm.exc.ObjectDeletedError",
    "sqlalchemy.orm.exc.UnmappedClassError",
    "sqlalchemy.orm.exc.UnmappedInstanceError",
    "sqlalchemy.orm.instrumentation.ClassManager",
    "sqlalchemy.orm.interfaces.MapperProperty",
    "sqlalchemy.orm.interfaces.PropComparator",
    "sqlalchemy.orm.interfaces.UserDefinedOption",
    "sqlalchemy.orm.mapper.Mapper",
    "sqlalchemy.orm.path_registry.AbstractEntityRegistry",
    "sqlalchemy.orm.path_registry.PropRegistry",
    "sqlalchemy.orm.path_registry.TokenRegistry",
    "sqlalchemy.orm.properties.ColumnProperty",
    "sqlalchemy.orm.query.AliasOption",
    "sqlalchemy.orm.query.FromStatement",
    "sqlalchemy.orm.query.Query",
    "sqlalchemy.orm.relationships.RelationshipProperty",
    "sqlalchemy.orm.scoping.scoped_session",
    "sqlalchemy.orm.session.ORMExecuteState",
    "sqlalchemy.orm.session.Session",
    "sqlalchemy.orm.session.SessionTransaction",
    "sqlalchemy.orm.session.sessionmaker",
    "sqlalchemy.orm.state.InstanceState",
    "sqlalchemy.orm.strategies.SelectInLoader",
    "sqlalchemy.orm.strategies.SubqueryLoader",
    "sqlalchemy.orm.strategy_options.Load",
    "sqlalchemy.orm.unitofwork.Preprocess",
    "sqlalchemy.orm.unitofwork.ProcessAll",
    "sqlalchemy.orm.util.AliasedInsp",
    "sqlalchemy.orm.util.Bundle",
    "sqlalchemy.orm.util.LoaderCriteriaOption",
    "sqlalchemy.pool.base.Pool",
    "sqlalchemy.sql.base.ImmutableColumnCollection",
    "sqlalchemy.sql.base._DialectArgDict",
    "sqlalchemy.sql.base._DialectArgView",
    "sqlalchemy.sql.base._MetaOptions",
    "sqlalchemy.sql.compiler._CompileLabel",
    "sqlalchemy.sql.crud._multiparam_column",
    "sqlalchemy.sql.ddl.CreateColumn",
    "sqlalchemy.sql.ddl.DDL",
    "sqlalchemy.sql.ddl.DDLBase",
    "sqlalchemy.sql.ddl._CreateDropBase",
    "sqlalchemy.sql.dml.Delete",
    "sqlalchemy.sql.dml.Update",
    "sqlalchemy.sql.dml.ValuesBase",
    "sqlalchemy.sql.elements.AsBoolean",
    "sqlalchemy.sql.elements.BinaryExpression",
    "sqlalchemy.sql.elements.BindParameter",
    "sqlalchemy.sql.elements.Case",
    "sqlalchemy.sql.elements.Cast",
    "sqlalchemy.sql.elements.ClauseList",
    "sqlalchemy.sql.elements.CollationClause",
    "sqlalchemy.sql.elements.ColumnClause",
    "sqlalchemy.sql.elements.Extract",
    "sqlalchemy.sql.elements.FunctionFilter",
    "sqlalchemy.sql.elements.Grouping",
    "sqlalchemy.sql.elements.Label",
    "sqlalchemy.sql.elements.Over",
    "sqlalchemy.sql.elements.Slice",
    "sqlalchemy.sql.elements.TableValuedColumn",
    "sqlalchemy.sql.elements.TextClause",
    "sqlalchemy.sql.elements.TypeClause",
    "sqlalchemy.sql.elements.TypeCoerce",
    "sqlalchemy.sql.elements.UnaryExpression",
    "sqlalchemy.sql.elements.WithinGroup",
    "sqlalchemy.sql.elements._IdentifiedClause",
    "sqlalchemy.sql.elements._label_reference",
    "sqlalchemy.sql.elements._textual_label_reference",
    "sqlalchemy.sql.functions.FunctionElement",
    "sqlalchemy.sql.functions.ScalarFunctionColumn",
    "sqlalchemy.sql.lambdas.LambdaElement",
    "sqlalchemy.sql.lambdas.LinkedLambdaElement",
    "sqlalchemy.sql.lambdas.NullLambdaStatement",
    "sqlalchemy.sql.lambdas.PyWrapper",
    "sqlalchemy.sql.schema.Column",
    "sqlalchemy.sql.schema.Constraint",
    "sqlalchemy.sql.schema.DefaultGenerator",
    "sqlalchemy.sql.schema.FetchedValue",
    "sqlalchemy.sql.schema.ForeignKey",
    "sqlalchemy.sql.schema.Index",
    "sqlalchemy.sql.schema.MetaData",
    "sqlalchemy.sql.schema.Table",
    "sqlalchemy.sql.selectable.CompoundSelect",
    "sqlalchemy.sql.selectable.ForUpdateArg",
    "sqlalchemy.sql.selectable.FromGrouping",
    "sqlalchemy.sql.selectable.GenerativeSelect",
    "sqlalchemy.sql.selectable.Join",
    "sqlalchemy.sql.selectable.ScalarSelect",
    "sqlalchemy.sql.selectable.Select",
    "sqlalchemy.sql.selectable.SelectState",
    "sqlalchemy.sql.selectable.SelectStatementGrouping",
    "sqlalchemy.sql.selectable.TableClause",
    "sqlalchemy.sql.selectable.TextualSelect",
    "sqlalchemy.sql.selectable.Values",
    "sqlalchemy.sql.sqltypes.ARRAY",
    "sqlalchemy.sql.sqltypes.Boolean",
    "sqlalchemy.sql.sqltypes.DateTime",
    "sqlalchemy.sql.sqltypes.Enum",
    "sqlalchemy.sql.sqltypes.Interval",
    "sqlalchemy.sql.sqltypes.JSON",
    "sqlalchemy.sql.sqltypes.Numeric",
    "sqlalchemy.sql.sqltypes.SchemaType",
    "sqlalchemy.sql.sqltypes.String",
    "sqlalchemy.sql.sqltypes.TableValueType",
    "sqlalchemy.sql.sqltypes.Time",
    "sqlalchemy.sql.sqltypes.TupleType",
    "sqlalchemy.sql.sqltypes.UnicodeText",
    "sqlalchemy.sql.sqltypes._Binary",
    "sqlalchemy.sql.traversals.TraversalComparatorStrategy",
    "sqlalchemy.sql.type_api.TypeDecorator",
    "sqlalchemy.sql.type_api.TypeEngine.Comparator",
    "sqlalchemy.sql.util.ClauseAdapter",
    "sqlalchemy.sql.util._repr_params",
    "sqlalchemy.sql.util._repr_row",
    "sqlalchemy.sql.visitors.TraversibleType",
    "sqlalchemy.sql.visitors._InternalTraversalType",
    "sqlalchemy.testing.assertsql.AllOf",
    "sqlalchemy.testing.assertsql.CompiledSQL",
    "sqlalchemy.testing.assertsql.CountStatements",
    "sqlalchemy.testing.assertsql.CursorSQL",
    "sqlalchemy.testing.assertsql.EachOf",
    "sqlalchemy.testing.exclusions.BooleanPredicate",
    "sqlalchemy.testing.exclusions.LambdaPredicate",
    "sqlalchemy.testing.exclusions.NotPredicate",
    "sqlalchemy.testing.exclusions.OrPredicate",
    "sqlalchemy.testing.exclusions.SpecPredicate",
    "sqlalchemy.util._collections.Properties",
    "sqlalchemy.util.langhelpers.EnsureKWArgType",
    "sqlalchemy.util.langhelpers.HasMemoized.memoized_attribute",
    "sqlalchemy.util.langhelpers.hybridproperty",
    "sqlalchemy.util.langhelpers.memoized_property",
    "sqlite3.dbapi2.Cursor",
    "sre_constants.error",
    "staticmethod",
    "stripe.error.CardError",
    "stripe.error.InvalidRequestError",
    "stripe.error.StripeError",
    "subprocess.CalledProcessError",
    "subprocess.CompletedProcess",
    "subprocess.Popen",
    "subprocess.TimeoutExpired",
    "tabnanny.NannyNag",
    "tempfile.SpooledTemporaryFile",
    "tempfile.TemporaryDirectory",
    "tempfile._TemporaryFileWrapper",
    "testslide.matchers.AnyWithCall",
    "testslide.matchers.RegexMatches",
    "testslide.matchers.StrContaining",
    "testslide.matchers.StrEndingWith",
    "testslide.matchers.StrStartingWith",
    "testslide.matchers._AndMatcher",
    "testslide.matchers._InvMatcher",
    "testslide.matchers._OrMatcher",
    "testslide.matchers._RichComparison",
    "testslide.matchers._XorMatcher",
    "testslide.mock_callable._AsyncImplementationRunner",
    "testslide.mock_callable._ImplementationRunner",
    "testslide.mock_callable._RaiseRunner",
    "testslide.mock_callable._ReturnValueRunner",
    "testslide.mock_callable._ReturnValuesRunner",
    "testslide.mock_callable._YieldValuesRunner",
    "testslide.runner.SlowImportWarningMixin",
    "tkinter.BaseWidget",
    "tkinter.Button",
    "tkinter.Canvas",
    "tkinter.Checkbutton",
    "tkinter.Entry",
    "tkinter.Frame",
    "tkinter.Image",
    "tkinter.Label",
    "tkinter.LabelFrame",
    "tkinter.Listbox",
    "tkinter.Menu",
    "tkinter.Menubutton",
    "tkinter.Message",
    "tkinter.PanedWindow",
    "tkinter.Radiobutton",
    "tkinter.Scale",
    "tkinter.Scrollbar",
    "tkinter.Spinbox",
    "tkinter.Text",
    "tkinter.Tk",
    "tkinter.dialog.Dialog",
    "tkinter.tix.TixWidget",
    "tkinter.ttk.Widget",
    "toml.decoder.TomlDecodeError",
    "toml.decoder.TomlDecoder",
    "toml.encoder.TomlEncoder",
    "toml.tz.TomlTz",
    "toposort.CircularDependencyError",
    "tqdm.contrib.discord.DiscordIO",
    "tqdm.contrib.slack.SlackIO",
    "tqdm.contrib.telegram.TelegramIO",
    "tqdm.rich._ProgressColumn",
    "tqdm.std.TqdmWarning",
    "tqdm.std.tqdm",
    "traceback.FrameSummary",
    "tracemalloc.Traceback",
    "traitlets.config.loader.ArgParseConfigLoader",
    "traitlets.config.loader.KeyValueConfigLoader",
    "traitlets.traitlets.DefaultHandler",
    "traitlets.traitlets.Instance",
    "traitlets.traitlets.MetaHasDescriptors",
    "traitlets.traitlets.ObserveHandler",
    "traitlets.traitlets.This",
    "traitlets.traitlets.TraitType",
    "traitlets.traitlets.Type",
    "traitlets.traitlets.ValidateHandler",
    "typeguard.TypeWarning",
    "typeguard.importhook.TypeguardFinder",
    "typeguard.importhook.TypeguardTransformer",
    "types.MappingProxyType",
    "typeshed.typeshed.stdlib._compression.DecompressReader",
    "typeshed.typeshed.stdlib._ctypes.Array",
    "typeshed.typeshed.stdlib._ctypes.CFuncPtr",
    "typeshed.typeshed.stdlib._ctypes._Pointer",
    "typeshed.typeshed.stdlib._ctypes._SimpleCData",
    "typeshed.typeshed.stdlib._ctypes._StructUnionBase",
    "typeshed.typeshed.stdlib._py_abc._CacheToken",
    "typeshed.typeshed.stdlib._weakrefset.WeakSet",
    "typeshed.typeshed.stdlib.argparse.Action",
    "typeshed.typeshed.stdlib.argparse.ArgumentError",
    "typeshed.typeshed.stdlib.argparse.ArgumentParser",
    "typeshed.typeshed.stdlib.argparse.Namespace",
    "typeshed.typeshed.stdlib.argparse._SUPPRESS_T",
    "typeshed.typeshed.stdlib.array.array",
    "typeshed.typeshed.stdlib.ast._ABC",
    "typeshed.typeshed.stdlib.asyncio.base_events.Server",
    "typeshed.typeshed.stdlib.asyncio.base_subprocess.BaseSubprocessTransport",
    "typeshed.typeshed.stdlib.asyncio.base_subprocess.WriteSubprocessPipeProto",
    "typeshed.typeshed.stdlib.asyncio.exceptions.IncompleteReadError",
    "typeshed.typeshed.stdlib.asyncio.exceptions.LimitOverrunError",
    "typeshed.typeshed.stdlib.asyncio.futures.Future",
    "typeshed.typeshed.stdlib.asyncio.locks.Condition",
    "typeshed.typeshed.stdlib.asyncio.locks.Lock",
    "typeshed.typeshed.stdlib.asyncio.locks.Semaphore",
    "typeshed.typeshed.stdlib.asyncio.proactor_events.BaseProactorEventLoop",
    "typeshed.typeshed.stdlib.asyncio.queues.Queue",
    "typeshed.typeshed.stdlib.asyncio.selector_events.BaseSelectorEventLoop",
    "typeshed.typeshed.stdlib.asyncio.sslproto.SSLProtocol",
    "typeshed.typeshed.stdlib.asyncio.streams.FlowControlMixin",
    "typeshed.typeshed.stdlib.asyncio.streams.StreamReader",
    "typeshed.typeshed.stdlib.asyncio.transports._FlowControlMixin",
    "typeshed.typeshed.stdlib.builtins.ImportError",
    "typeshed.typeshed.stdlib.builtins.UnicodeDecodeError",
    "typeshed.typeshed.stdlib.builtins.UnicodeEncodeError",
    "typeshed.typeshed.stdlib.builtins.UnicodeTranslateError",
    "typeshed.typeshed.stdlib.builtins.bytearray",
    "typeshed.typeshed.stdlib.builtins.classmethod",
    "typeshed.typeshed.stdlib.builtins.dict",
    "typeshed.typeshed.stdlib.builtins.list",
    "typeshed.typeshed.stdlib.builtins.reversed",
    "typeshed.typeshed.stdlib.builtins.set",
    "typeshed.typeshed.stdlib.builtins.staticmethod",
    "typeshed.typeshed.stdlib.bz2.BZ2File",
    "typeshed.typeshed.stdlib.calendar.IllegalMonthError",
    "typeshed.typeshed.stdlib.calendar.IllegalWeekdayError",
    "typeshed.typeshed.stdlib.calendar.LocaleHTMLCalendar",
    "typeshed.typeshed.stdlib.calendar.LocaleTextCalendar",
    "typeshed.typeshed.stdlib.codecs.StreamReader",
    "typeshed.typeshed.stdlib.codecs.StreamReaderWriter",
    "typeshed.typeshed.stdlib.codecs.StreamRecoder",
    "typeshed.typeshed.stdlib.codecs.StreamWriter",
    "typeshed.typeshed.stdlib.collections.ChainMap",
    "typeshed.typeshed.stdlib.collections.UserDict",
    "typeshed.typeshed.stdlib.collections.UserList",
    "typeshed.typeshed.stdlib.collections.UserString",
    "typeshed.typeshed.stdlib.collections.deque",
    "typeshed.typeshed.stdlib.concurrent.futures._base._AllCompletedWaiter",
    "typeshed.typeshed.stdlib.concurrent.futures.process.ProcessPoolExecutor",
    "typeshed.typeshed.stdlib.concurrent.futures.process._RemoteTraceback",
    "typeshed.typeshed.stdlib.concurrent.futures.process._WorkItem",
    "typeshed.typeshed.stdlib.concurrent.futures.thread.ThreadPoolExecutor",
    "typeshed.typeshed.stdlib.concurrent.futures.thread._WorkItem",
    "typeshed.typeshed.stdlib.configparser.ConverterMapping",
    "typeshed.typeshed.stdlib.configparser.Error",
    "typeshed.typeshed.stdlib.configparser.RawConfigParser",
    "typeshed.typeshed.stdlib.configparser.SectionProxy",
    "typeshed.typeshed.stdlib.contextlib._AsyncGeneratorContextManager",
    "typeshed.typeshed.stdlib.contextlib._GeneratorContextManager",
    "typeshed.typeshed.stdlib.contextlib._RedirectStream",
    "typeshed.typeshed.stdlib.contextlib.closing",
    "typeshed.typeshed.stdlib.contextlib.nullcontext",
    "typeshed.typeshed.stdlib.contextlib.suppress",
    "typeshed.typeshed.stdlib.contextvars.Context",
    "typeshed.typeshed.stdlib.contextvars.ContextVar",
    "typeshed.typeshed.stdlib.csv.DictReader",
    "typeshed.typeshed.stdlib.csv.DictWriter",
    "typeshed.typeshed.stdlib.ctypes.LibraryLoader",
    "typeshed.typeshed.stdlib.ctypes.c_char_p",
    "typeshed.typeshed.stdlib.ctypes.c_wchar_p",
    "typeshed.typeshed.stdlib.dataclasses.Field",
    "typeshed.typeshed.stdlib.dataclasses.InitVar",
    "typeshed.typeshed.stdlib.datetime.timezone",
    "typeshed.typeshed.stdlib.dbm.dumb._Database",
    "typeshed.typeshed.stdlib.difflib.SequenceMatcher",
    "typeshed.typeshed.stdlib.email.errors.MessageDefect",
    "typeshed.typeshed.stdlib.email.errors.NonPrintableDefect",
    "typeshed.typeshed.stdlib.email.feedparser.BytesFeedParser",
    "typeshed.typeshed.stdlib.email.feedparser.FeedParser",
    "typeshed.typeshed.stdlib.email.mime.application.MIMEApplication",
    "typeshed.typeshed.stdlib.email.mime.audio.MIMEAudio",
    "typeshed.typeshed.stdlib.email.mime.image.MIMEImage",
    "typeshed.typeshed.stdlib.email.mime.message.MIMEMessage",
    "typeshed.typeshed.stdlib.email.mime.text.MIMEText",
    "typeshed.typeshed.stdlib.filecmp.dircmp",
    "typeshed.typeshed.stdlib.fileinput.FileInput",
    "typeshed.typeshed.stdlib.formatter.DumbWriter",
    "typeshed.typeshed.stdlib.functools.cached_property",
    "typeshed.typeshed.stdlib.functools.partialmethod",
    "typeshed.typeshed.stdlib.functools.singledispatchmethod",
    "typeshed.typeshed.stdlib.getopt.GetoptError",
    "typeshed.typeshed.stdlib.graphlib.TopologicalSorter",
    "typeshed.typeshed.stdlib.gzip.GzipFile",
    "typeshed.typeshed.stdlib.html.parser.HTMLParser",
    "typeshed.typeshed.stdlib.http.client.BadStatusLine",
    "typeshed.typeshed.stdlib.http.client.HTTPResponse",
    "typeshed.typeshed.stdlib.http.client.IncompleteRead",
    "typeshed.typeshed.stdlib.http.client.LineTooLong",
    "typeshed.typeshed.stdlib.http.client.UnknownProtocol",
    "typeshed.typeshed.stdlib.http.cookiejar.CookieJar",
    "typeshed.typeshed.stdlib.http.cookiejar.DefaultCookiePolicy",
    "typeshed.typeshed.stdlib.http.server.SimpleHTTPRequestHandler",
    "typeshed.typeshed.stdlib.importlib.abc.FileLoader",
    "typeshed.typeshed.stdlib.importlib.machinery.ExtensionFileLoader",
    "typeshed.typeshed.stdlib.importlib.machinery.FileFinder",
    "typeshed.typeshed.stdlib.importlib.metadata.PathDistribution",
    "typeshed.typeshed.stdlib.importlib.util.LazyLoader",
    "typeshed.typeshed.stdlib.io.BufferedRWPair",
    "typeshed.typeshed.stdlib.io.BufferedReader",
    "typeshed.typeshed.stdlib.io.BufferedWriter",
    "typeshed.typeshed.stdlib.io.BytesIO",
    "typeshed.typeshed.stdlib.io.FileIO",
    "typeshed.typeshed.stdlib.io.TextIOWrapper",
    "typeshed.typeshed.stdlib.ipaddress._BaseAddress",
    "typeshed.typeshed.stdlib.ipaddress._BaseNetwork",
    "typeshed.typeshed.stdlib.itertools.accumulate",
    "typeshed.typeshed.stdlib.itertools.chain",
    "typeshed.typeshed.stdlib.itertools.combinations_with_replacement",
    "typeshed.typeshed.stdlib.itertools.compress",
    "typeshed.typeshed.stdlib.itertools.cycle",
    "typeshed.typeshed.stdlib.itertools.dropwhile",
    "typeshed.typeshed.stdlib.itertools.filterfalse",
    "typeshed.typeshed.stdlib.itertools.islice",
    "typeshed.typeshed.stdlib.itertools.repeat",
    "typeshed.typeshed.stdlib.itertools.starmap",
    "typeshed.typeshed.stdlib.itertools.takewhile",
    "typeshed.typeshed.stdlib.json.decoder.JSONDecodeError",
    "typeshed.typeshed.stdlib.lib2to3.main.StdoutRefactoringTool",
    "typeshed.typeshed.stdlib.lib2to3.pgen2.parse.ParseError",
    "typeshed.typeshed.stdlib.lib2to3.pytree.Leaf",
    "typeshed.typeshed.stdlib.lib2to3.pytree.LeafPattern",
    "typeshed.typeshed.stdlib.lib2to3.pytree.NegatedPattern",
    "typeshed.typeshed.stdlib.lib2to3.pytree.Node",
    "typeshed.typeshed.stdlib.lib2to3.pytree.NodePattern",
    "typeshed.typeshed.stdlib.lib2to3.pytree.WildcardPattern",
    "typeshed.typeshed.stdlib.logging.Handler",
    "typeshed.typeshed.stdlib.logging.Logger",
    "typeshed.typeshed.stdlib.logging.LoggerAdapter",
    "typeshed.typeshed.stdlib.lzma.LZMAFile",
    "typeshed.typeshed.stdlib.mailbox.Babyl",
    "typeshed.typeshed.stdlib.mailbox.MMDF",
    "typeshed.typeshed.stdlib.mailbox.Mailbox",
    "typeshed.typeshed.stdlib.mailbox._ProxyFile",
    "typeshed.typeshed.stdlib.mailbox.mbox",
    "typeshed.typeshed.stdlib.mmap.mmap",
    "typeshed.typeshed.stdlib.multiprocessing.context.DefaultContext",
    "typeshed.typeshed.stdlib.multiprocessing.pool.ApplyResult",
    "typeshed.typeshed.stdlib.multiprocessing.pool.IMapIterator",
    "typeshed.typeshed.stdlib.multiprocessing.queues.Queue",
    "typeshed.typeshed.stdlib.multiprocessing.queues.SimpleQueue",
    "typeshed.typeshed.stdlib.multiprocessing.shared_memory.ShareableList",
    "typeshed.typeshed.stdlib.multiprocessing.sharedctypes.SynchronizedBase",
    "typeshed.typeshed.stdlib.multiprocessing.synchronize.Condition",
    "typeshed.typeshed.stdlib.multiprocessing.synchronize.Lock",
    "typeshed.typeshed.stdlib.multiprocessing.synchronize.RLock",
    "typeshed.typeshed.stdlib.multiprocessing.synchronize.Semaphore",
    "typeshed.typeshed.stdlib.netrc.NetrcParseError",
    "typeshed.typeshed.stdlib.optparse.OptParseError",
    "typeshed.typeshed.stdlib.os._Environ",
    "typeshed.typeshed.stdlib.plistlib.InvalidFileException",
    "typeshed.typeshed.stdlib.py_compile.PyCompileError",
    "typeshed.typeshed.stdlib.pydoc.ErrorDuringImport",
    "typeshed.typeshed.stdlib.pydoc.HTMLRepr",
    "typeshed.typeshed.stdlib.pydoc.TextRepr",
    "typeshed.typeshed.stdlib.queue.Queue",
    "typeshed.typeshed.stdlib.queue.SimpleQueue",
    "typeshed.typeshed.stdlib.shelve.Shelf",
    "typeshed.typeshed.stdlib.shlex.shlex",
    "typeshed.typeshed.stdlib.smtpd.SMTPChannel",
    "typeshed.typeshed.stdlib.smtplib.SMTPRecipientsRefused",
    "typeshed.typeshed.stdlib.smtplib.SMTPResponseException",
    "typeshed.typeshed.stdlib.socket.SocketIO",
    "typeshed.typeshed.stdlib.sqlite3.dbapi2.Cursor",
    "typeshed.typeshed.stdlib.sre_constants.error",
    "typeshed.typeshed.stdlib.subprocess.CalledProcessError",
    "typeshed.typeshed.stdlib.subprocess.CompletedProcess",
    "typeshed.typeshed.stdlib.subprocess.Popen",
    "typeshed.typeshed.stdlib.subprocess.TimeoutExpired",
    "typeshed.typeshed.stdlib.tabnanny.NannyNag",
    "typeshed.typeshed.stdlib.tarfile.AbsoluteLinkError",
    "typeshed.typeshed.stdlib.tarfile.AbsolutePathError",
    "typeshed.typeshed.stdlib.tarfile.LinkOutsideDestinationError",
    "typeshed.typeshed.stdlib.tarfile.OutsideDestinationError",
    "typeshed.typeshed.stdlib.tarfile.SpecialFileError",
    "typeshed.typeshed.stdlib.tempfile.SpooledTemporaryFile",
    "typeshed.typeshed.stdlib.tempfile.TemporaryDirectory",
    "typeshed.typeshed.stdlib.tempfile._TemporaryFileWrapper",
    "typeshed.typeshed.stdlib.tkinter.BaseWidget",
    "typeshed.typeshed.stdlib.tkinter.Button",
    "typeshed.typeshed.stdlib.tkinter.Canvas",
    "typeshed.typeshed.stdlib.tkinter.Checkbutton",
    "typeshed.typeshed.stdlib.tkinter.Entry",
    "typeshed.typeshed.stdlib.tkinter.Frame",
    "typeshed.typeshed.stdlib.tkinter.Image",
    "typeshed.typeshed.stdlib.tkinter.Label",
    "typeshed.typeshed.stdlib.tkinter.LabelFrame",
    "typeshed.typeshed.stdlib.tkinter.Listbox",
    "typeshed.typeshed.stdlib.tkinter.Menu",
    "typeshed.typeshed.stdlib.tkinter.Menubutton",
    "typeshed.typeshed.stdlib.tkinter.Message",
    "typeshed.typeshed.stdlib.tkinter.PanedWindow",
    "typeshed.typeshed.stdlib.tkinter.Radiobutton",
    "typeshed.typeshed.stdlib.tkinter.Scale",
    "typeshed.typeshed.stdlib.tkinter.Scrollbar",
    "typeshed.typeshed.stdlib.tkinter.Spinbox",
    "typeshed.typeshed.stdlib.tkinter.Text",
    "typeshed.typeshed.stdlib.tkinter.Tk",
    "typeshed.typeshed.stdlib.tkinter.dialog.Dialog",
    "typeshed.typeshed.stdlib.tkinter.tix.TixWidget",
    "typeshed.typeshed.stdlib.tkinter.ttk.Widget",
    "typeshed.typeshed.stdlib.traceback.FrameSummary",
    "typeshed.typeshed.stdlib.tracemalloc.Traceback",
    "typeshed.typeshed.stdlib.typing.MappingView",
    "typeshed.typeshed.stdlib.typing.NamedTuple",
    "typeshed.typeshed.stdlib.typing_extensions.NamedTuple",
    "typeshed.typeshed.stdlib.unittest._log._AssertLogsContext",
    "typeshed.typeshed.stdlib.unittest.case.SkipTest",
    "typeshed.typeshed.stdlib.unittest.mock._Call",
    "typeshed.typeshed.stdlib.unittest.mock._patch",
    "typeshed.typeshed.stdlib.unittest.suite.BaseTestSuite",
    "typeshed.typeshed.stdlib.urllib.error.URLError",
    "typeshed.typeshed.stdlib.urllib.request.AbstractHTTPHandler",
    "typeshed.typeshed.stdlib.urllib.request.HTTPCookieProcessor",
    "typeshed.typeshed.stdlib.urllib.request.ProxyHandler",
    "typeshed.typeshed.stdlib.urllib.response.addbase",
    "typeshed.typeshed.stdlib.warnings.catch_warnings",
    "typeshed.typeshed.stdlib.weakref.KeyedRef",
    "typeshed.typeshed.stdlib.weakref.WeakKeyDictionary",
    "typeshed.typeshed.stdlib.weakref.WeakValueDictionary",
    "typeshed.typeshed.stdlib.wsgiref.handlers.CGIHandler",
    "typeshed.typeshed.stdlib.wsgiref.handlers.IISCGIHandler",
    "typeshed.typeshed.stdlib.wsgiref.handlers.SimpleHandler",
    "typeshed.typeshed.stdlib.xdrlib.Error",
    "typeshed.typeshed.stdlib.xml.dom.DOMException",
    "typeshed.typeshed.stdlib.xml.dom.minidom.Attr",
    "typeshed.typeshed.stdlib.xml.dom.minidom.CharacterData",
    "typeshed.typeshed.stdlib.xml.dom.minidom.Document",
    "typeshed.typeshed.stdlib.xml.dom.minidom.DocumentFragment",
    "typeshed.typeshed.stdlib.xml.dom.minidom.DocumentType",
    "typeshed.typeshed.stdlib.xml.dom.minidom.Element",
    "typeshed.typeshed.stdlib.xml.dom.minidom.Entity",
    "typeshed.typeshed.stdlib.xml.dom.minidom.Notation",
    "typeshed.typeshed.stdlib.xml.dom.minidom.ProcessingInstruction",
    "typeshed.typeshed.stdlib.xml.dom.pulldom.PullDOM",
    "typeshed.typeshed.stdlib.xml.sax.SAXException",
    "typeshed.typeshed.stdlib.xml.sax.saxutils.XMLFilterBase",
    "typeshed.typeshed.stdlib.xml.sax.saxutils.XMLGenerator",
    "typeshed.typeshed.stdlib.xml.sax.xmlreader.IncrementalParser",
    "typeshed.typeshed.stdlib.xmlrpc.client.Fault",
    "typeshed.typeshed.stdlib.xmlrpc.client.ProtocolError",
    "typeshed.typeshed.stdlib.zipfile.ZipExtFile",
    "typeshed.typeshed.stdlib.zoneinfo.ZoneInfo",
    "typeshed.typeshed.stubs.Flask-SocketIO.flask_socketio.namespace.Namespace",
    "typeshed.typeshed.stubs.JACK-Client.jack.JackErrorCode",
    "typeshed.typeshed.stubs.JACK-Client.jack.JackOpenError",
    "typeshed.typeshed.stubs.JACK-Client.jack.OwnMidiPort",
    "typeshed.typeshed.stubs.Markdown.markdown.extensions.fenced_code.FencedBlockPreprocessor",
    "typeshed.typeshed.stubs.Markdown.markdown.extensions.footnotes.FootnotePostTreeprocessor",
    "typeshed.typeshed.stubs.Markdown.markdown.extensions.footnotes.FootnotePostprocessor",
    "typeshed.typeshed.stubs.Markdown.markdown.extensions.footnotes.FootnoteTreeprocessor",
    "typeshed.typeshed.stubs.Markdown.markdown.extensions.smarty.SubstituteTextPattern",
    "typeshed.typeshed.stubs.Markdown.markdown.extensions.toc.TocTreeprocessor",
    "typeshed.typeshed.stubs.Markdown.markdown.treeprocessors.InlineProcessor",
    "typeshed.typeshed.stubs.Markdown.markdown.util.Registry",
    "typeshed.typeshed.stubs.Pillow.PIL.GimpGradientFile.GimpGradientFile",
    "typeshed.typeshed.stubs.Pillow.PIL.ImageCms.ImageCmsTransform",
    "typeshed.typeshed.stubs.Pillow.PIL.ImageEnhance.Brightness",
    "typeshed.typeshed.stubs.Pillow.PIL.ImageEnhance.Color",
    "typeshed.typeshed.stubs.Pillow.PIL.ImageEnhance.Contrast",
    "typeshed.typeshed.stubs.Pillow.PIL.ImageEnhance.Sharpness",
    "typeshed.typeshed.stubs.Pillow.PIL.ImageFile.ImageFile",
    "typeshed.typeshed.stubs.Pillow.PIL.ImageFilter.BoxBlur",
    "typeshed.typeshed.stubs.Pillow.PIL.ImageFilter.Color3DLUT",
    "typeshed.typeshed.stubs.Pillow.PIL.ImageFilter.GaussianBlur",
    "typeshed.typeshed.stubs.Pillow.PIL.ImageFilter.Kernel",
    "typeshed.typeshed.stubs.Pillow.PIL.ImageFilter.ModeFilter",
    "typeshed.typeshed.stubs.Pillow.PIL.ImageFilter.RankFilter",
    "typeshed.typeshed.stubs.Pillow.PIL.ImageFilter.UnsharpMask",
    "typeshed.typeshed.stubs.Pillow.PIL.ImageTk.BitmapImage",
    "typeshed.typeshed.stubs.Pillow.PIL.ImageTk.PhotoImage",
    "typeshed.typeshed.stubs.Pillow.PIL.ImageTransform.Transform",
    "typeshed.typeshed.stubs.Pillow.PIL.TiffImagePlugin.IFDRational",
    "typeshed.typeshed.stubs.Pillow.PIL.TiffImagePlugin.ImageFileDirectory_v2",
    "typeshed.typeshed.stubs.PyMySQL.pymysql.connections.Connection",
    "typeshed.typeshed.stubs.PyYAML.yaml.YAMLObjectMetaclass",
    "typeshed.typeshed.stubs.PyYAML.yaml.error.MarkedYAMLError",
    "typeshed.typeshed.stubs.PyYAML.yaml.reader.ReaderError",
    "typeshed.typeshed.stubs.Pygments.pygments.formatter.Formatter",
    "typeshed.typeshed.stubs.Pygments.pygments.lexer.combined",
    "typeshed.typeshed.stubs.Pygments.pygments.lexer.words",
    "typeshed.typeshed.stubs.Send2Trash.send2trash.exceptions.TrashPermissionError",
    "typeshed.typeshed.stubs.WTForms.wtforms.fields.core.UnboundField",
    "typeshed.typeshed.stubs.WTForms.wtforms.fields.form.FormField",
    "typeshed.typeshed.stubs.WTForms.wtforms.fields.list.FieldList",
    "typeshed.typeshed.stubs.WTForms.wtforms.form.FormMeta",
    "typeshed.typeshed.stubs.WTForms.wtforms.validators.StopValidation",
    "typeshed.typeshed.stubs.WTForms.wtforms.validators.ValidationError",
    "typeshed.typeshed.stubs.WebOb.webob.acceptparse.AcceptCharsetInvalidHeader",
    "typeshed.typeshed.stubs.WebOb.webob.acceptparse.AcceptCharsetNoHeader",
    "typeshed.typeshed.stubs.WebOb.webob.acceptparse.AcceptCharsetValidHeader",
    "typeshed.typeshed.stubs.WebOb.webob.acceptparse.AcceptEncodingInvalidHeader",
    "typeshed.typeshed.stubs.WebOb.webob.acceptparse.AcceptEncodingNoHeader",
    "typeshed.typeshed.stubs.WebOb.webob.acceptparse.AcceptEncodingValidHeader",
    "typeshed.typeshed.stubs.WebOb.webob.acceptparse.AcceptInvalidHeader",
    "typeshed.typeshed.stubs.WebOb.webob.acceptparse.AcceptLanguageInvalidHeader",
    "typeshed.typeshed.stubs.WebOb.webob.acceptparse.AcceptLanguageNoHeader",
    "typeshed.typeshed.stubs.WebOb.webob.acceptparse.AcceptLanguageValidHeader",
    "typeshed.typeshed.stubs.WebOb.webob.acceptparse.AcceptNoHeader",
    "typeshed.typeshed.stubs.WebOb.webob.acceptparse.AcceptValidHeader",
    "typeshed.typeshed.stubs.WebOb.webob.cachecontrol.CacheControl",
    "typeshed.typeshed.stubs.WebOb.webob.cachecontrol.value_property",
    "typeshed.typeshed.stubs.WebOb.webob.cookies.RequestCookies",
    "typeshed.typeshed.stubs.WebOb.webob.exc.HTTPException",
    "typeshed.typeshed.stubs.WebOb.webob.exc._HTTPMove",
    "typeshed.typeshed.stubs.WebOb.webob.headers.EnvironHeaders",
    "typeshed.typeshed.stubs.WebOb.webob.multidict.MultiDict",
    "typeshed.typeshed.stubs.WebOb.webob.request.LimitedLengthFile",
    "typeshed.typeshed.stubs.aiofiles.aiofiles.base.AiofilesContextManager",
    "typeshed.typeshed.stubs.aiofiles.aiofiles.base.AsyncBase",
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.builder.ParserRejectedMarkup",
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.builder._htmlparser.HTMLParserTreeBuilder",
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.element.Tag",
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.formatter.Formatter",
    "typeshed.typeshed.stubs.bleach.bleach.html5lib_shim.BleachHTMLParser",
    "typeshed.typeshed.stubs.bleach.bleach.sanitizer.BleachSanitizerFilter",
    "typeshed.typeshed.stubs.boltons.boltons.cacheutils.MinIDMap",
    "typeshed.typeshed.stubs.boltons.boltons.cacheutils.ThresholdCounter",
    "typeshed.typeshed.stubs.boltons.boltons.cacheutils.cachedproperty",
    "typeshed.typeshed.stubs.boltons.boltons.iterutils.PathAccessError",
    "typeshed.typeshed.stubs.boltons.boltons.setutils.IndexedSet",
    "typeshed.typeshed.stubs.boltons.boltons.socketutils.MessageTooLong",
    "typeshed.typeshed.stubs.boltons.boltons.socketutils.NetstringInvalidSize",
    "typeshed.typeshed.stubs.boltons.boltons.socketutils.NetstringMessageTooLong",
    "typeshed.typeshed.stubs.boltons.boltons.socketutils.Timeout",
    "typeshed.typeshed.stubs.boltons.boltons.timeutils.ConstantTZInfo",
    "typeshed.typeshed.stubs.boltons.boltons.timeutils.USTimeZone",
    "typeshed.typeshed.stubs.boto.boto.auth.QuerySignatureV1AuthHandler",
    "typeshed.typeshed.stubs.boto.boto.auth_handler.AuthHandler",
    "typeshed.typeshed.stubs.boto.boto.exception.BotoClientError",
    "typeshed.typeshed.stubs.boto.boto.exception.BotoServerError",
    "typeshed.typeshed.stubs.boto.boto.exception.InvalidAclError",
    "typeshed.typeshed.stubs.boto.boto.exception.InvalidCorsError",
    "typeshed.typeshed.stubs.boto.boto.exception.InvalidInstanceMetadataError",
    "typeshed.typeshed.stubs.boto.boto.exception.InvalidLifecycleConfigError",
    "typeshed.typeshed.stubs.boto.boto.exception.InvalidUriError",
    "typeshed.typeshed.stubs.boto.boto.exception.PleaseRetryException",
    "typeshed.typeshed.stubs.boto.boto.exception.ResumableDownloadException",
    "typeshed.typeshed.stubs.boto.boto.exception.ResumableUploadException",
    "typeshed.typeshed.stubs.boto.boto.exception.TooManyRecordsException",
    "typeshed.typeshed.stubs.boto.boto.s3.bucketlistresultset.BucketListResultSet",
    "typeshed.typeshed.stubs.braintree.braintree.search.Search.MultipleValueOrTextNodeBuilder",
    "typeshed.typeshed.stubs.cachetools.cachetools.Cache",
    "typeshed.typeshed.stubs.caldav.caldav.lib.error.DAVError",
    "typeshed.typeshed.stubs.caldav.caldav.objects.ScheduleMailbox",
    "typeshed.typeshed.stubs.caldav.caldav.requests.HTTPBearerAuth",
    "typeshed.typeshed.stubs.cffi.cffi.model.ArrayType",
    "typeshed.typeshed.stubs.cffi.cffi.model.BaseFunctionType",
    "typeshed.typeshed.stubs.cffi.cffi.model.EnumType",
    "typeshed.typeshed.stubs.cffi.cffi.model.PointerType",
    "typeshed.typeshed.stubs.cffi.cffi.model.PrimitiveType",
    "typeshed.typeshed.stubs.cffi.cffi.model.StructOrUnion",
    "typeshed.typeshed.stubs.cffi.cffi.model.UnknownFloatType",
    "typeshed.typeshed.stubs.cffi.cffi.model.UnknownIntegerType",
    "typeshed.typeshed.stubs.cffi.cffi.model.VoidType",
    "typeshed.typeshed.stubs.commonmark.commonmark.render.html.HtmlRenderer",
    "typeshed.typeshed.stubs.commonmark.commonmark.render.rst.ReStructuredTextRenderer",
    "typeshed.typeshed.stubs.console-menu.consolemenu.items.command_item.CommandItem",
    "typeshed.typeshed.stubs.console-menu.consolemenu.items.function_item.FunctionItem",
    "typeshed.typeshed.stubs.croniter.croniter.croniter.croniter",
    "typeshed.typeshed.stubs.dateparser.dateparser.timezone_parser.StaticTzInfo",
    "typeshed.typeshed.stubs.docopt.docopt.DocoptExit",
    "typeshed.typeshed.stubs.docutils.docutils.io.FileInput",
    "typeshed.typeshed.stubs.docutils.docutils.io.Output",
    "typeshed.typeshed.stubs.docutils.docutils.nodes.Element",
    "typeshed.typeshed.stubs.docutils.docutils.nodes.Text",
    "typeshed.typeshed.stubs.docutils.docutils.parsers.rst.DirectiveError",
    "typeshed.typeshed.stubs.docutils.docutils.parsers.rst.Parser",
    "typeshed.typeshed.stubs.docutils.docutils.utils.SystemMessage",
    "typeshed.typeshed.stubs.entrypoints.entrypoints.BadEntryPoint",
    "typeshed.typeshed.stubs.entrypoints.entrypoints.NoSuchEntryPoint",
    "typeshed.typeshed.stubs.flake8-plugin-utils.flake8_plugin_utils.plugin.Plugin",
    "typeshed.typeshed.stubs.flake8-plugin-utils.flake8_plugin_utils.plugin.Visitor",
    "typeshed.typeshed.stubs.fpdf2.fpdf._fonttools_shims.DecomposingPen",
    "typeshed.typeshed.stubs.fpdf2.fpdf._fonttools_shims._TTGlyph",
    "typeshed.typeshed.stubs.fpdf2.fpdf.actions.Action",
    "typeshed.typeshed.stubs.fpdf2.fpdf.encryption.EncryptionDictionary",
    "typeshed.typeshed.stubs.fpdf2.fpdf.errors.FPDFPageFormatException",
    "typeshed.typeshed.stubs.fpdf2.fpdf.errors.FPDFUnicodeEncodingException",
    "typeshed.typeshed.stubs.fpdf2.fpdf.fonts.CoreFont",
    "typeshed.typeshed.stubs.fpdf2.fpdf.fonts.PDFFontDescriptor",
    "typeshed.typeshed.stubs.fpdf2.fpdf.fonts.TTFFont",
    "typeshed.typeshed.stubs.fpdf2.fpdf.linearization.PDFLinearization",
    "typeshed.typeshed.stubs.fpdf2.fpdf.linearization.PDFXrefAndTrailer",
    "typeshed.typeshed.stubs.fpdf2.fpdf.outline.OutlineDictionary",
    "typeshed.typeshed.stubs.fpdf2.fpdf.outline.OutlineItemDictionary",
    "typeshed.typeshed.stubs.fpdf2.fpdf.output.PDFCatalog",
    "typeshed.typeshed.stubs.fpdf2.fpdf.output.PDFExtGState",
    "typeshed.typeshed.stubs.fpdf2.fpdf.output.PDFFont",
    "typeshed.typeshed.stubs.fpdf2.fpdf.output.PDFHeader",
    "typeshed.typeshed.stubs.fpdf2.fpdf.output.PDFInfo",
    "typeshed.typeshed.stubs.fpdf2.fpdf.output.PDFPage",
    "typeshed.typeshed.stubs.fpdf2.fpdf.output.PDFPagesRoot",
    "typeshed.typeshed.stubs.fpdf2.fpdf.output.PDFResources",
    "typeshed.typeshed.stubs.fpdf2.fpdf.output.PDFXrefAndTrailer",
    "typeshed.typeshed.stubs.fpdf2.fpdf.structure_tree.NumberTree",
    "typeshed.typeshed.stubs.fpdf2.fpdf.structure_tree.StructElem",
    "typeshed.typeshed.stubs.fpdf2.fpdf.structure_tree.StructTreeRoot",
    "typeshed.typeshed.stubs.fpdf2.fpdf.syntax.DestinationXYZ",
    "typeshed.typeshed.stubs.fpdf2.fpdf.syntax.PDFContentStream",
    "typeshed.typeshed.stubs.fpdf2.fpdf.text_region.TextColumns",
    "typeshed.typeshed.stubs.fpdf2.fpdf.transitions.BlindsTransition",
    "typeshed.typeshed.stubs.fpdf2.fpdf.transitions.BoxTransition",
    "typeshed.typeshed.stubs.fpdf2.fpdf.transitions.CoverTransition",
    "typeshed.typeshed.stubs.fpdf2.fpdf.transitions.FlyTransition",
    "typeshed.typeshed.stubs.fpdf2.fpdf.transitions.GlitterTransition",
    "typeshed.typeshed.stubs.fpdf2.fpdf.transitions.PushTransition",
    "typeshed.typeshed.stubs.fpdf2.fpdf.transitions.SplitTransition",
    "typeshed.typeshed.stubs.fpdf2.fpdf.transitions.UncoverTransition",
    "typeshed.typeshed.stubs.fpdf2.fpdf.transitions.WipeTransition",
    "typeshed.typeshed.stubs.gdb.gdb.xmethod._XMethodMatcher",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb._cache._GlobalCacheDeleteBatch",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb._cache._GlobalCacheGetBatch",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb._cache._GlobalCacheSetBatch",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.exceptions.BadFilterError",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.exceptions.ContextError",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.exceptions.NoLongerImplementedError",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.global_cache.MemcacheCache",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.global_cache.MemcacheCache.KeyNotSet",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.global_cache.RedisCache",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.global_cache._InProcessGlobalCache",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.model.MetaModel",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.model.Model",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.model.Property",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.model._BaseValue",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.model._CompressedValue",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.query.Parameter",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.query.ParameterizedFunction",
    "typeshed.typeshed.stubs.html5lib.html5lib._inputstream.EncodingBytes",
    "typeshed.typeshed.stubs.html5lib.html5lib._trie.py.Trie",
    "typeshed.typeshed.stubs.html5lib.html5lib._utils.BoundMethodDispatcher",
    "typeshed.typeshed.stubs.html5lib.html5lib.treewalkers.etree_lxml.TreeWalker",
    "typeshed.typeshed.stubs.httplib2.httplib2.error.HttpLib2ErrorWithResponse",
    "typeshed.typeshed.stubs.humanfriendly.humanfriendly.case.CaseInsensitiveDict",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client._async.rest.RESTResponseAsync",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client._sync.rest.RESTResponse",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.client.exceptions.InfluxDBError",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.client.flux_csv_parser.FluxQueryException",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.client.flux_table.CSVIterator",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.client.flux_table.FluxColumn",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.client.flux_table.FluxRecord",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.client.flux_table.FluxTable",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.client.util.multiprocessing_helper.MultiprocessingWriter",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.configuration.TypeWithDefault",
    "typeshed.typeshed.stubs.inifile.inifile.IniData",
    "typeshed.typeshed.stubs.jmespath.jmespath.exceptions.EmptyExpressionError",
    "typeshed.typeshed.stubs.jmespath.jmespath.exceptions.JMESPathTypeError",
    "typeshed.typeshed.stubs.jmespath.jmespath.exceptions.ParseError",
    "typeshed.typeshed.stubs.jmespath.jmespath.functions.FunctionRegistry",
    "typeshed.typeshed.stubs.jsonschema.jsonschema._utils.URIDict",
    "typeshed.typeshed.stubs.jsonschema.jsonschema.exceptions.FormatError",
    "typeshed.typeshed.stubs.jsonschema.jsonschema.exceptions.RefResolutionError",
    "typeshed.typeshed.stubs.jsonschema.jsonschema.exceptions.UndefinedTypeCheck",
    "typeshed.typeshed.stubs.jsonschema.jsonschema.exceptions.UnknownType",
    "typeshed.typeshed.stubs.jsonschema.jsonschema.exceptions._Error",
    "typeshed.typeshed.stubs.jsonschema.jsonschema.protocols.Validator",
    "typeshed.typeshed.stubs.ldap3.ldap3.core.exceptions.LDAPOperationResult",
    "typeshed.typeshed.stubs.ldap3.ldap3.core.timezone.OffsetTzInfo",
    "typeshed.typeshed.stubs.ldap3.ldap3.utils.ciDict.CaseInsensitiveDict",
    "typeshed.typeshed.stubs.libsass.sass.CompileError",
    "typeshed.typeshed.stubs.libsass.sass.SassFunction",
    "typeshed.typeshed.stubs.libsass.sass.SassMap",
    "typeshed.typeshed.stubs.mock.mock.mock._Call",
    "typeshed.typeshed.stubs.mock.mock.mock._patch",
    "typeshed.typeshed.stubs.netaddr.netaddr.core.PrettyPrinter",
    "typeshed.typeshed.stubs.netaddr.netaddr.eui.ieee.FileIndexer",
    "typeshed.typeshed.stubs.netaddr.netaddr.ip.iana.DictUpdater",
    "typeshed.typeshed.stubs.netaddr.netaddr.ip.iana.SaxRecordParser",
    "typeshed.typeshed.stubs.oauthlib.oauthlib.oauth1.rfc5849.endpoints.pre_configured.WebApplicationServer",
    "typeshed.typeshed.stubs.oauthlib.oauthlib.oauth1.rfc5849.errors.OAuth1Error",
    "typeshed.typeshed.stubs.oauthlib.oauthlib.oauth2.rfc6749.errors.OAuth2Error",
    "typeshed.typeshed.stubs.oauthlib.oauthlib.oauth2.rfc6749.tokens.BearerToken",
    "typeshed.typeshed.stubs.oauthlib.oauthlib.openid.connect.core.grant_types.authorization_code.AuthorizationCodeGrant",
    "typeshed.typeshed.stubs.oauthlib.oauthlib.openid.connect.core.grant_types.dispatchers.AuthorizationCodeGrantDispatcher",
    "typeshed.typeshed.stubs.oauthlib.oauthlib.openid.connect.core.grant_types.dispatchers.AuthorizationTokenGrantDispatcher",
    "typeshed.typeshed.stubs.oauthlib.oauthlib.openid.connect.core.grant_types.dispatchers.ImplicitTokenGrantDispatcher",
    "typeshed.typeshed.stubs.oauthlib.oauthlib.openid.connect.core.grant_types.hybrid.HybridGrant",
    "typeshed.typeshed.stubs.oauthlib.oauthlib.openid.connect.core.grant_types.implicit.ImplicitGrant",
    "typeshed.typeshed.stubs.oauthlib.oauthlib.openid.connect.core.tokens.JWTToken",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.cell.rich_text.TextBlock",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.cell.text.PhoneticProperties",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.cell.text.PhoneticText",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.cell.text.RichText",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.cell.text.Text",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart._3d.Surface",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart._3d.View3D",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart._3d._3DBase",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart._chart.AxId",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart._chart.ChartBase",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.axis.ChartLines",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.axis.DisplayUnitsLabel",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.axis.DisplayUnitsLabelList",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.axis.Scaling",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.axis._BaseAxis",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.chartspace.ChartContainer",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.chartspace.ChartSpace",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.chartspace.ExternalData",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.chartspace.Protection",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.data_source.AxDataSource",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.data_source.Level",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.data_source.MultiLevelStrData",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.data_source.MultiLevelStrRef",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.data_source.NumData",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.data_source.NumDataSource",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.data_source.NumFmt",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.data_source.NumRef",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.data_source.NumVal",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.data_source.StrData",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.data_source.StrRef",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.data_source.StrVal",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.error_bar.ErrorBars",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.label._DataLabelBase",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.layout.Layout",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.layout.ManualLayout",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.legend.Legend",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.legend.LegendEntry",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.marker.DataPoint",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.marker.Marker",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.picture.PictureOptions",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.pie_chart.CustomSplit",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.pivot.PivotFormat",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.pivot.PivotSource",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.plotarea.DataTable",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.plotarea.PlotArea",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.print_settings.PageMargins",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.print_settings.PrintSettings",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.reference.Reference",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.series.Series",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.series.SeriesLabel",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.shapes.GraphicalProperties",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.surface_chart.BandFormat",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.surface_chart.BandFormatList",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.text.RichText",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.text.Text",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.title.Title",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.trendline.Trendline",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.trendline.TrendlineLabel",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.updown_bars.UpDownBars",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chartsheet.custom.CustomChartsheetView",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chartsheet.custom.CustomChartsheetViews",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chartsheet.properties.ChartsheetProperties",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chartsheet.protection.ChartsheetProtection",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chartsheet.publish.WebPublishItem",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chartsheet.publish.WebPublishItems",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chartsheet.relation.DrawingHF",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chartsheet.relation.SheetBackgroundPicture",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chartsheet.views.ChartsheetView",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chartsheet.views.ChartsheetViewList",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.comments.author.AuthorList",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.comments.comment_sheet.CommentRecord",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.comments.comment_sheet.CommentSheet",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.comments.comment_sheet.Properties",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.compat.singleton.Cached",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.compat.singleton.Singleton",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.base.Descriptor",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.excel.Extension",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.excel.ExtensionList",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.colors.ColorChoice",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.colors.ColorMapping",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.colors.HSLColor",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.colors.RGBPercent",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.colors.SchemeColor",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.colors.SystemColor",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.connector.Connection",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.connector.ConnectorLocking",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.connector.ConnectorNonVisual",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.connector.ConnectorShape",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.connector.NonVisualConnectorProperties",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.connector.Shape",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.connector.ShapeMeta",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.effect.AlphaBiLevelEffect",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.effect.AlphaModulateEffect",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.effect.AlphaModulateFixedEffect",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.effect.AlphaReplaceEffect",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.effect.BiLevelEffect",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.effect.BlurEffect",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.effect.ColorChangeEffect",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.effect.EffectContainer",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.effect.EffectList",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.effect.FillOverlayEffect",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.effect.HSLEffect",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.effect.LuminanceEffect",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.effect.ReflectionEffect",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.effect.SoftEdgesEffect",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.effect.TintEffect",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.fill.Blip",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.fill.BlipFillProperties",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.fill.GradientFillProperties",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.fill.GradientStop",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.fill.LinearShadeProperties",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.fill.PathShadeProperties",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.fill.PatternFillProperties",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.fill.RelativeRect",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.fill.SolidColorFillProperties",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.fill.StretchInfoProperties",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.fill.TileInfoProperties",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.geometry.AdjPoint2D",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.geometry.Backdrop",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.geometry.Bevel",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.geometry.Camera",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.geometry.ConnectionSite",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.geometry.ConnectionSiteList",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.geometry.CustomGeometry2D",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.geometry.FontReference",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.geometry.GeomGuide",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.geometry.GeomGuideList",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.geometry.GeomRect",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.geometry.GroupTransform2D",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.geometry.LightRig",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.geometry.Path2D",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.geometry.Path2DList",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.geometry.Point2D",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.geometry.Point3D",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.geometry.PositiveSize2D",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.geometry.PresetGeometry2D",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.geometry.Scene3D",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.geometry.Shape3D",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.geometry.ShapeStyle",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.geometry.SphereCoords",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.geometry.StyleMatrixReference",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.geometry.Transform2D",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.geometry.Vector3D",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.graphic.GraphicData",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.graphic.GraphicFrame",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.graphic.GraphicFrameLocking",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.graphic.GraphicObject",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.graphic.GroupShape",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.graphic.NonVisualGraphicFrame",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.graphic.NonVisualGraphicFrameProperties",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.line.DashStop",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.line.DashStopList",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.line.LineEndProperties",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.line.LineProperties",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.picture.NonVisualPictureProperties",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.picture.PictureFrame",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.picture.PictureLocking",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.picture.PictureNonVisual",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.properties.GroupLocking",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.properties.GroupShapeProperties",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.properties.NonVisualDrawingProps",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.properties.NonVisualDrawingShapeProps",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.properties.NonVisualGroupDrawingShapeProps",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.properties.NonVisualGroupShape",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.relation.ChartRelation",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.spreadsheet_drawing.AnchorClientData",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.spreadsheet_drawing.AnchorMarker",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.spreadsheet_drawing.SpreadsheetDrawing",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.spreadsheet_drawing._AnchorBase",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.text.AutonumberBullet",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.text.CharacterProperties",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.text.EmbeddedWAVAudioFile",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.text.Font",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.text.GeomGuide",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.text.GeomGuideList",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.text.Hyperlink",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.text.LineBreak",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.text.ListStyle",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.text.Paragraph",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.text.ParagraphProperties",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.text.PresetTextShape",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.text.RegularTextRun",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.text.RichTextProperties",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.text.Spacing",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.text.TabStop",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.text.TabStopList",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.text.TextField",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.text.TextNormalAutofit",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.formatting.formatting.ConditionalFormatting",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.formatting.rule.ColorScale",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.formatting.rule.DataBar",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.formatting.rule.FormatObject",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.formatting.rule.IconSet",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.formatting.rule.Rule",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.packaging.core.DocumentProperties",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.packaging.custom.CustomPropertyList",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.packaging.custom._TypedProperty",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.packaging.extended.ExtendedProperties",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.packaging.manifest.FileExtension",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.packaging.manifest.Manifest",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.packaging.manifest.Override",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.packaging.relationship.Relationship",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.packaging.relationship.RelationshipList",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.packaging.workbook.ChildSheet",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.packaging.workbook.FileRecoveryProperties",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.packaging.workbook.PivotCache",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.packaging.workbook.WorkbookPackage",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.pivot.cache.CacheDefinition",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.pivot.cache.CacheField",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.pivot.cache.CacheHierarchy",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.pivot.cache.CacheSource",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.pivot.cache.CalculatedItem",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.pivot.cache.CalculatedMember",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.pivot.cache.Consolidation",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.pivot.cache.DiscretePr",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.pivot.cache.FieldGroup",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.pivot.cache.FieldUsage",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.pivot.cache.FieldsUsage",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.pivot.cache.GroupItems",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.pivot.cache.GroupLevel",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.pivot.cache.GroupLevels",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.pivot.cache.GroupMember",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.pivot.cache.GroupMembers",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.pivot.cache.Groups",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.pivot.cache.LevelGroup",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.pivot.cache.MeasureDimensionMap",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.pivot.cache.MeasureGroup",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.pivot.cache.OLAPSet",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.pivot.cache.OLAPSets",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.pivot.cache.PCDKPI",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.pivot.cache.PCDSDTCEntries",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.pivot.cache.Page",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.pivot.cache.PageItem",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.pivot.cache.PivotDimension",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.pivot.cache.Query",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.pivot.cache.QueryCache",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.pivot.cache.RangePr",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.pivot.cache.RangeSet",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.pivot.cache.ServerFormat",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.pivot.cache.ServerFormatList",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.pivot.cache.SharedItems",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.pivot.cache.TupleCache",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.pivot.cache.WorksheetSource",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.pivot.fields.Boolean",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.pivot.fields.DateTimeField",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.pivot.fields.Error",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.pivot.fields.Index",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.pivot.fields.Missing",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.pivot.fields.Number",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.pivot.fields.Text",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.pivot.fields.Tuple",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.pivot.fields.TupleList",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.pivot.record.Record",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.pivot.record.RecordList",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.pivot.table.AutoSortScope",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.pivot.table.ChartFormat",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.pivot.table.ColHierarchiesUsage",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.pivot.table.ConditionalFormat",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.pivot.table.ConditionalFormatList",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.pivot.table.DataField",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.pivot.table.FieldItem",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.pivot.table.Format",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.pivot.table.HierarchyUsage",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.pivot.table.Location",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.pivot.table.MemberList",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.pivot.table.MemberProperty",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.pivot.table.PageField",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.pivot.table.PivotArea",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.pivot.table.PivotField",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.pivot.table.PivotFilter",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.pivot.table.PivotFilters",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.pivot.table.PivotHierarchy",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.pivot.table.PivotTableStyle",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.pivot.table.Reference",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.pivot.table.RowColField",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.pivot.table.RowColItem",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.pivot.table.RowHierarchiesUsage",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.pivot.table.TableDefinition",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.styles.alignment.Alignment",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.styles.borders.Border",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.styles.borders.Side",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.styles.cell_style.CellStyle",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.styles.cell_style.CellStyleList",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.styles.colors.Color",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.styles.colors.ColorList",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.styles.colors.RgbColor",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.styles.differential.DifferentialStyle",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.styles.differential.DifferentialStyleList",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.styles.fills.GradientFill",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.styles.fills.PatternFill",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.styles.fills.Stop",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.styles.fonts.Font",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.styles.named_styles.NamedStyle",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.styles.named_styles._NamedCellStyle",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.styles.named_styles._NamedCellStyleList",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.styles.numbers.NumberFormat",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.styles.numbers.NumberFormatList",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.styles.protection.Protection",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.styles.stylesheet.Stylesheet",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.styles.table.TableStyle",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.styles.table.TableStyleElement",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.styles.table.TableStyleList",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.workbook.defined_name.DefinedName",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.workbook.defined_name.DefinedNameList",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.workbook.external_link.external.ExternalBook",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.workbook.external_link.external.ExternalCell",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.workbook.external_link.external.ExternalDefinedName",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.workbook.external_link.external.ExternalLink",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.workbook.external_link.external.ExternalRow",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.workbook.external_link.external.ExternalSheetData",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.workbook.external_link.external.ExternalSheetDataSet",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.workbook.external_link.external.ExternalSheetNames",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.workbook.external_reference.ExternalReference",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.workbook.function_group.FunctionGroup",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.workbook.function_group.FunctionGroupList",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.workbook.properties.CalcProperties",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.workbook.properties.FileVersion",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.workbook.properties.WorkbookProperties",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.workbook.protection.FileSharing",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.workbook.protection.WorkbookProtection",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.workbook.smart_tags.SmartTag",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.workbook.smart_tags.SmartTagList",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.workbook.smart_tags.SmartTagProperties",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.workbook.views.BookView",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.workbook.views.CustomWorkbookView",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.workbook.web.WebPublishObject",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.workbook.web.WebPublishObjectList",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.workbook.web.WebPublishing",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.cell_range.CellRange",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.cell_range.MultiCellRange",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.cell_watch.CellWatch",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.cell_watch.CellWatches",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.controls.Control",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.controls.ControlProperty",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.controls.Controls",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.custom.CustomProperties",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.custom.CustomProperty",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.datavalidation.DataValidation",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.datavalidation.DataValidationList",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.dimensions.Dimension",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.dimensions.SheetDimension",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.dimensions.SheetFormatProperties",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.drawing.Drawing",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.errors.Extension",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.errors.ExtensionList",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.errors.IgnoredError",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.errors.IgnoredErrors",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.filters.AutoFilter",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.filters.ColorFilter",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.filters.CustomFilter",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.filters.CustomFilters",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.filters.DateGroupItem",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.filters.DynamicFilter",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.filters.FilterColumn",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.filters.Filters",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.filters.IconFilter",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.filters.SortCondition",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.filters.SortState",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.filters.Top10",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.header_footer.HeaderFooter",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.header_footer.HeaderFooterItem",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.header_footer._HeaderFooterPart",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.hyperlink.Hyperlink",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.hyperlink.HyperlinkList",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.merge.MergeCells",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.ole.ObjectAnchor",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.ole.ObjectPr",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.ole.OleObject",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.ole.OleObjects",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.page.PageMargins",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.page.PrintOptions",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.page.PrintPageSetup",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.pagebreak.Break",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.pagebreak.RowBreak",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.print_settings.ColRange",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.print_settings.PrintTitles",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.print_settings.RowRange",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.properties.Outline",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.properties.PageSetupProperties",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.properties.WorksheetProperties",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.protection.SheetProtection",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.related.Related",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.scenario.InputCells",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.scenario.Scenario",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.scenario.ScenarioList",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.smart_tag.CellSmartTag",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.smart_tag.CellSmartTagPr",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.smart_tag.CellSmartTags",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.smart_tag.SmartTags",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.table.Table",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.table.TableColumn",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.table.TableFormula",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.table.TablePartList",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.table.TableStyleInfo",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.table.XMLColumnProps",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.views.Pane",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.views.Selection",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.views.SheetView",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.views.SheetViewList",
    "typeshed.typeshed.stubs.opentracing.opentracing.mocktracer.context.SpanContext",
    "typeshed.typeshed.stubs.paramiko.paramiko.auth_strategy.AuthFailure",
    "typeshed.typeshed.stubs.paramiko.paramiko.auth_strategy.InMemoryPrivateKey",
    "typeshed.typeshed.stubs.paramiko.paramiko.auth_strategy.OnDiskPrivateKey",
    "typeshed.typeshed.stubs.paramiko.paramiko.buffered_pipe.BufferedPipe",
    "typeshed.typeshed.stubs.paramiko.paramiko.channel.Channel",
    "typeshed.typeshed.stubs.paramiko.paramiko.client.SSHClient",
    "typeshed.typeshed.stubs.paramiko.paramiko.file.BufferedFile",
    "typeshed.typeshed.stubs.paramiko.paramiko.hostkeys.HostKeys",
    "typeshed.typeshed.stubs.paramiko.paramiko.hostkeys.InvalidHostKey",
    "typeshed.typeshed.stubs.paramiko.paramiko.hostkeys._SubDict",
    "typeshed.typeshed.stubs.paramiko.paramiko.proxy.ProxyCommand",
    "typeshed.typeshed.stubs.paramiko.paramiko.sftp_handle.SFTPHandle",
    "typeshed.typeshed.stubs.paramiko.paramiko.ssh_exception.BadAuthenticationType",
    "typeshed.typeshed.stubs.paramiko.paramiko.ssh_exception.BadHostKeyException",
    "typeshed.typeshed.stubs.paramiko.paramiko.ssh_exception.ChannelException",
    "typeshed.typeshed.stubs.paramiko.paramiko.ssh_exception.NoValidConnectionsError",
    "typeshed.typeshed.stubs.paramiko.paramiko.ssh_exception.PartialAuthentication",
    "typeshed.typeshed.stubs.paramiko.paramiko.ssh_exception.ProxyCommandFailure",
    "typeshed.typeshed.stubs.parsimonious.parsimonious.exceptions.ParseError",
    "typeshed.typeshed.stubs.parsimonious.parsimonious.exceptions.UndefinedLabel",
    "typeshed.typeshed.stubs.parsimonious.parsimonious.exceptions.VisitationError",
    "typeshed.typeshed.stubs.parsimonious.parsimonious.expressions.Expression",
    "typeshed.typeshed.stubs.parsimonious.parsimonious.grammar.Grammar",
    "typeshed.typeshed.stubs.parsimonious.parsimonious.grammar.RuleVisitor",
    "typeshed.typeshed.stubs.parsimonious.parsimonious.utils.Token",
    "typeshed.typeshed.stubs.passlib.passlib.crypto.digest.HashInfo",
    "typeshed.typeshed.stubs.passlib.passlib.exc.PasswordSizeError",
    "typeshed.typeshed.stubs.passlib.passlib.exc.TokenError",
    "typeshed.typeshed.stubs.passlib.passlib.exc.UnknownBackendError",
    "typeshed.typeshed.stubs.passlib.passlib.exc.UnknownHashError",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.argon2._Argon2Common",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.bcrypt.bcrypt_sha256",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.misc.unix_fallback",
    "typeshed.typeshed.stubs.passlib.passlib.handlers.sha2_crypt._SHA2_Common",
    "typeshed.typeshed.stubs.passlib.passlib.pwd.WordsetDict",
    "typeshed.typeshed.stubs.passlib.passlib.totp.TotpMatch",
    "typeshed.typeshed.stubs.passlib.passlib.totp.TotpToken",
    "typeshed.typeshed.stubs.passlib.passlib.utils.handlers.GenericHandler",
    "typeshed.typeshed.stubs.peewee.peewee.AutoField",
    "typeshed.typeshed.stubs.peewee.peewee.BaseModelCursorWrapper",
    "typeshed.typeshed.stubs.peewee.peewee.BaseQuery",
    "typeshed.typeshed.stubs.peewee.peewee.BigBitField",
    "typeshed.typeshed.stubs.peewee.peewee.BitField",
    "typeshed.typeshed.stubs.peewee.peewee.CharField",
    "typeshed.typeshed.stubs.peewee.peewee.Column",
    "typeshed.typeshed.stubs.peewee.peewee.CompositeKey",
    "typeshed.typeshed.stubs.peewee.peewee.CompoundSelectQuery",
    "typeshed.typeshed.stubs.peewee.peewee.ConnectionContext",
    "typeshed.typeshed.stubs.peewee.peewee.DQ",
    "typeshed.typeshed.stubs.peewee.peewee.Database",
    "typeshed.typeshed.stubs.peewee.peewee.Entity",
    "typeshed.typeshed.stubs.peewee.peewee.Expression",
    "typeshed.typeshed.stubs.peewee.peewee.Field",
    "typeshed.typeshed.stubs.peewee.peewee.ForUpdate",
    "typeshed.typeshed.stubs.peewee.peewee.Function",
    "typeshed.typeshed.stubs.peewee.peewee.Index",
    "typeshed.typeshed.stubs.peewee.peewee.Join",
    "typeshed.typeshed.stubs.peewee.peewee.ManyToManyField",
    "typeshed.typeshed.stubs.peewee.peewee.ModelAlias",
    "typeshed.typeshed.stubs.peewee.peewee.ModelCompoundSelectQuery",
    "typeshed.typeshed.stubs.peewee.peewee.ModelObjectCursorWrapper",
    "typeshed.typeshed.stubs.peewee.peewee.ModelSelect",
    "typeshed.typeshed.stubs.peewee.peewee.NamespaceAttribute",
    "typeshed.typeshed.stubs.peewee.peewee.NodeList",
    "typeshed.typeshed.stubs.peewee.peewee.ObjectCursorWrapper",
    "typeshed.typeshed.stubs.peewee.peewee.OnConflict",
    "typeshed.typeshed.stubs.peewee.peewee.PeeweeException",
    "typeshed.typeshed.stubs.peewee.peewee.SQL",
    "typeshed.typeshed.stubs.peewee.peewee.Select",
    "typeshed.typeshed.stubs.peewee.peewee.Source",
    "typeshed.typeshed.stubs.peewee.peewee.TimestampField",
    "typeshed.typeshed.stubs.peewee.peewee.Value",
    "typeshed.typeshed.stubs.peewee.peewee.VirtualField",
    "typeshed.typeshed.stubs.peewee.peewee.Window",
    "typeshed.typeshed.stubs.peewee.peewee.WindowAlias",
    "typeshed.typeshed.stubs.peewee.peewee.WrappedNode",
    "typeshed.typeshed.stubs.peewee.peewee._BoundModelsContext",
    "typeshed.typeshed.stubs.peewee.peewee._BoundTableContext",
    "typeshed.typeshed.stubs.peewee.peewee._Namespace",
    "typeshed.typeshed.stubs.peewee.peewee._atomic",
    "typeshed.typeshed.stubs.peewee.peewee._manual",
    "typeshed.typeshed.stubs.peewee.peewee._savepoint",
    "typeshed.typeshed.stubs.peewee.peewee._transaction",
    "typeshed.typeshed.stubs.pexpect.pexpect.FSM.ExceptionFSM",
    "typeshed.typeshed.stubs.pexpect.pexpect.exceptions.ExceptionPexpect",
    "typeshed.typeshed.stubs.pika.pika.adapters.asyncio_connection._AsyncioIOReference",
    "typeshed.typeshed.stubs.pika.pika.adapters.asyncio_connection._AsyncioIOServicesAdapter",
    "typeshed.typeshed.stubs.pika.pika.adapters.asyncio_connection._TimerHandle",
    "typeshed.typeshed.stubs.pika.pika.adapters.base_connection._StreamingProtocolShim",
    "typeshed.typeshed.stubs.pika.pika.adapters.blocking_connection._ConsumerCancellationEvt",
    "typeshed.typeshed.stubs.pika.pika.adapters.blocking_connection._ConsumerDeliveryEvt",
    "typeshed.typeshed.stubs.pika.pika.adapters.blocking_connection._ReturnedMessageEvt",
    "typeshed.typeshed.stubs.pika.pika.adapters.gevent_connection._GeventIOLoopIOHandle",
    "typeshed.typeshed.stubs.pika.pika.adapters.gevent_connection._GeventSelectorIOLoop",
    "typeshed.typeshed.stubs.pika.pika.adapters.select_connection.IOLoop",
    "typeshed.typeshed.stubs.pika.pika.adapters.select_connection._PollerBase",
    "typeshed.typeshed.stubs.pika.pika.adapters.twisted_connection.ClosableDeferredQueue",
    "typeshed.typeshed.stubs.pika.pika.adapters.twisted_connection._TimerHandle",
    "typeshed.typeshed.stubs.pika.pika.adapters.utils.connection_workflow.AMQPConnectionWorkflow",
    "typeshed.typeshed.stubs.pika.pika.adapters.utils.connection_workflow.AMQPConnectionWorkflowFailed",
    "typeshed.typeshed.stubs.pika.pika.adapters.utils.connection_workflow.AMQPConnectorPhaseErrorBase",
    "typeshed.typeshed.stubs.pika.pika.adapters.utils.io_services_utils._AsyncServiceAsyncHandle",
    "typeshed.typeshed.stubs.pika.pika.adapters.utils.io_services_utils._AsyncTransportBase",
    "typeshed.typeshed.stubs.pika.pika.adapters.utils.io_services_utils._AsyncTransportBase.RxEndOfFile",
    "typeshed.typeshed.stubs.pika.pika.adapters.utils.selector_ioloop_adapter.SelectorIOServicesAdapter",
    "typeshed.typeshed.stubs.pika.pika.adapters.utils.selector_ioloop_adapter._SelectorIOLoopIOHandle",
    "typeshed.typeshed.stubs.pika.pika.adapters.utils.selector_ioloop_adapter._TimerHandle",
    "typeshed.typeshed.stubs.pika.pika.connection.Connection",
    "typeshed.typeshed.stubs.pika.pika.exceptions.ChannelClosed",
    "typeshed.typeshed.stubs.pika.pika.exceptions.ConnectionClosed",
    "typeshed.typeshed.stubs.pika.pika.exceptions.NackError",
    "typeshed.typeshed.stubs.pika.pika.exceptions.UnroutableError",
    "typeshed.typeshed.stubs.pika.pika.frame.Frame",
    "typeshed.typeshed.stubs.pika.pika.frame.ProtocolHeader",
    "typeshed.typeshed.stubs.pika.pika.spec.Access.Request",
    "typeshed.typeshed.stubs.pika.pika.spec.Access.RequestOk",
    "typeshed.typeshed.stubs.pika.pika.spec.Basic.Ack",
    "typeshed.typeshed.stubs.pika.pika.spec.Basic.Cancel",
    "typeshed.typeshed.stubs.pika.pika.spec.Basic.CancelOk",
    "typeshed.typeshed.stubs.pika.pika.spec.Basic.Consume",
    "typeshed.typeshed.stubs.pika.pika.spec.Basic.ConsumeOk",
    "typeshed.typeshed.stubs.pika.pika.spec.Basic.Deliver",
    "typeshed.typeshed.stubs.pika.pika.spec.Basic.Get",
    "typeshed.typeshed.stubs.pika.pika.spec.Basic.GetEmpty",
    "typeshed.typeshed.stubs.pika.pika.spec.Basic.GetOk",
    "typeshed.typeshed.stubs.pika.pika.spec.Basic.Nack",
    "typeshed.typeshed.stubs.pika.pika.spec.Basic.Publish",
    "typeshed.typeshed.stubs.pika.pika.spec.Basic.Qos",
    "typeshed.typeshed.stubs.pika.pika.spec.Basic.QosOk",
    "typeshed.typeshed.stubs.pika.pika.spec.Basic.Recover",
    "typeshed.typeshed.stubs.pika.pika.spec.Basic.RecoverAsync",
    "typeshed.typeshed.stubs.pika.pika.spec.Basic.RecoverOk",
    "typeshed.typeshed.stubs.pika.pika.spec.Basic.Reject",
    "typeshed.typeshed.stubs.pika.pika.spec.Basic.Return",
    "typeshed.typeshed.stubs.pika.pika.spec.BasicProperties",
    "typeshed.typeshed.stubs.pika.pika.spec.Channel.Close",
    "typeshed.typeshed.stubs.pika.pika.spec.Channel.CloseOk",
    "typeshed.typeshed.stubs.pika.pika.spec.Channel.Flow",
    "typeshed.typeshed.stubs.pika.pika.spec.Channel.FlowOk",
    "typeshed.typeshed.stubs.pika.pika.spec.Channel.Open",
    "typeshed.typeshed.stubs.pika.pika.spec.Channel.OpenOk",
    "typeshed.typeshed.stubs.pika.pika.spec.Confirm.Select",
    "typeshed.typeshed.stubs.pika.pika.spec.Confirm.SelectOk",
    "typeshed.typeshed.stubs.pika.pika.spec.Connection.Blocked",
    "typeshed.typeshed.stubs.pika.pika.spec.Connection.Close",
    "typeshed.typeshed.stubs.pika.pika.spec.Connection.CloseOk",
    "typeshed.typeshed.stubs.pika.pika.spec.Connection.Open",
    "typeshed.typeshed.stubs.pika.pika.spec.Connection.OpenOk",
    "typeshed.typeshed.stubs.pika.pika.spec.Connection.Secure",
    "typeshed.typeshed.stubs.pika.pika.spec.Connection.SecureOk",
    "typeshed.typeshed.stubs.pika.pika.spec.Connection.Start",
    "typeshed.typeshed.stubs.pika.pika.spec.Connection.StartOk",
    "typeshed.typeshed.stubs.pika.pika.spec.Connection.Tune",
    "typeshed.typeshed.stubs.pika.pika.spec.Connection.TuneOk",
    "typeshed.typeshed.stubs.pika.pika.spec.Connection.Unblocked",
    "typeshed.typeshed.stubs.pika.pika.spec.Connection.UpdateSecret",
    "typeshed.typeshed.stubs.pika.pika.spec.Connection.UpdateSecretOk",
    "typeshed.typeshed.stubs.pika.pika.spec.Exchange.Bind",
    "typeshed.typeshed.stubs.pika.pika.spec.Exchange.BindOk",
    "typeshed.typeshed.stubs.pika.pika.spec.Exchange.Declare",
    "typeshed.typeshed.stubs.pika.pika.spec.Exchange.DeclareOk",
    "typeshed.typeshed.stubs.pika.pika.spec.Exchange.Delete",
    "typeshed.typeshed.stubs.pika.pika.spec.Exchange.DeleteOk",
    "typeshed.typeshed.stubs.pika.pika.spec.Exchange.Unbind",
    "typeshed.typeshed.stubs.pika.pika.spec.Exchange.UnbindOk",
    "typeshed.typeshed.stubs.pika.pika.spec.Queue.Bind",
    "typeshed.typeshed.stubs.pika.pika.spec.Queue.BindOk",
    "typeshed.typeshed.stubs.pika.pika.spec.Queue.Declare",
    "typeshed.typeshed.stubs.pika.pika.spec.Queue.DeclareOk",
    "typeshed.typeshed.stubs.pika.pika.spec.Queue.Delete",
    "typeshed.typeshed.stubs.pika.pika.spec.Queue.DeleteOk",
    "typeshed.typeshed.stubs.pika.pika.spec.Queue.Purge",
    "typeshed.typeshed.stubs.pika.pika.spec.Queue.PurgeOk",
    "typeshed.typeshed.stubs.pika.pika.spec.Queue.Unbind",
    "typeshed.typeshed.stubs.pika.pika.spec.Queue.UnbindOk",
    "typeshed.typeshed.stubs.pika.pika.spec.Tx.Commit",
    "typeshed.typeshed.stubs.pika.pika.spec.Tx.CommitOk",
    "typeshed.typeshed.stubs.pika.pika.spec.Tx.Rollback",
    "typeshed.typeshed.stubs.pika.pika.spec.Tx.RollbackOk",
    "typeshed.typeshed.stubs.pika.pika.spec.Tx.Select",
    "typeshed.typeshed.stubs.pika.pika.spec.Tx.SelectOk",
    "typeshed.typeshed.stubs.pluggy.pluggy._manager.PluginValidationError",
    "typeshed.typeshed.stubs.pluggy.pluggy._result._Result",
    "typeshed.typeshed.stubs.polib.polib._MOFileParser",
    "typeshed.typeshed.stubs.polib.polib._POFileParser",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.internal.containers.BaseContainer",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.internal.containers.MessageMap",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.internal.containers.ScalarMap",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.internal.extension_dict._ExtensionDict",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.internal.python_message.GeneratedProtocolMessageType",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.internal.type_checkers.TypeChecker",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.reflection.GeneratedProtocolMessageType",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.text_format.ParseError",
    "typeshed.typeshed.stubs.psutil.psutil._common.Error",
    "typeshed.typeshed.stubs.psycopg2.psycopg2._psycopg.Error",
    "typeshed.typeshed.stubs.psycopg2.psycopg2.extras.RealDictRow",
    "typeshed.typeshed.stubs.psycopg2.psycopg2.tz.FixedOffsetTimezone",
    "typeshed.typeshed.stubs.pyOpenSSL.OpenSSL.crypto.X509StoreContextError",
    "typeshed.typeshed.stubs.pyRFC3339.pyrfc3339.utils.FixedOffset",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.codec.streaming.CachingStreamWrapper",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.error.PyAsn1Error",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.base.Asn1Type",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.useful.TimeMixIn.FixedOffset",
    "typeshed.typeshed.stubs.pyflakes.pyflakes.checker.Builtin",
    "typeshed.typeshed.stubs.pyflakes.pyflakes.checker.FunctionScope",
    "typeshed.typeshed.stubs.pyflakes.pyflakes.checker.Importation",
    "typeshed.typeshed.stubs.pyinstaller.PyInstaller.building.api.COLLECT",
    "typeshed.typeshed.stubs.pyinstaller.PyInstaller.building.api.EXE",
    "typeshed.typeshed.stubs.pyinstaller.PyInstaller.building.api.PKG",
    "typeshed.typeshed.stubs.pyinstaller.PyInstaller.building.api.PYZ",
    "typeshed.typeshed.stubs.pyinstaller.PyInstaller.building.build_main.Analysis",
    "typeshed.typeshed.stubs.pyinstaller.PyInstaller.building.splash.Splash",
    "typeshed.typeshed.stubs.pynput.pynput._util.Events",
    "typeshed.typeshed.stubs.pynput.pynput.keyboard.Events.Press",
    "typeshed.typeshed.stubs.pynput.pynput.keyboard.Events.Release",
    "typeshed.typeshed.stubs.pynput.pynput.mouse.Events.Click",
    "typeshed.typeshed.stubs.pynput.pynput.mouse.Events.Move",
    "typeshed.typeshed.stubs.pynput.pynput.mouse.Events.Scroll",
    "typeshed.typeshed.stubs.pyserial.serial.serialutil.PortNotOpenError",
    "typeshed.typeshed.stubs.pyserial.serial.serialutil.SerialBase",
    "typeshed.typeshed.stubs.pyserial.serial.urlhandler.protocol_spy.FormatHexdump",
    "typeshed.typeshed.stubs.pyserial.serial.urlhandler.protocol_spy.FormatRaw",
    "typeshed.typeshed.stubs.pysftp.pysftp.exceptions.ConnectionException",
    "typeshed.typeshed.stubs.pysftp.pysftp.exceptions.CredentialException",
    "typeshed.typeshed.stubs.python-crontab.crontab.OrderedVariableList",
    "typeshed.typeshed.stubs.python-dateutil.dateutil.tz._common.tzrangebase",
    "typeshed.typeshed.stubs.python-dateutil.dateutil.tz.tz.tzfile",
    "typeshed.typeshed.stubs.python-dateutil.dateutil.tz.tz.tzlocal",
    "typeshed.typeshed.stubs.python-dateutil.dateutil.tz.tz.tzoffset",
    "typeshed.typeshed.stubs.python-gflags.gflags.BaseListParser",
    "typeshed.typeshed.stubs.python-gflags.gflags.DuplicateFlagError",
    "typeshed.typeshed.stubs.python-gflags.gflags.EnumParser",
    "typeshed.typeshed.stubs.python-gflags.gflags.FloatParser",
    "typeshed.typeshed.stubs.python-gflags.gflags.IntegerParser",
    "typeshed.typeshed.stubs.python-gflags.gflags.ListSerializer",
    "typeshed.typeshed.stubs.python-gflags.gflags.UnrecognizedFlagError",
    "typeshed.typeshed.stubs.python-nmap.nmap.nmap.PortScannerError",
    "typeshed.typeshed.stubs.python-xlib.Xlib.error.ConnectionClosedError",
    "typeshed.typeshed.stubs.python-xlib.Xlib.error.DisplayError",
    "typeshed.typeshed.stubs.python-xlib.Xlib.error.XError",
    "typeshed.typeshed.stubs.python-xlib.Xlib.ext.nvcontrol.Cooler",
    "typeshed.typeshed.stubs.python-xlib.Xlib.ext.nvcontrol.Gpu",
    "typeshed.typeshed.stubs.python-xlib.Xlib.ext.nvcontrol.Screen",
    "typeshed.typeshed.stubs.python-xlib.Xlib.protocol.display.ConnectionSetupRequest",
    "typeshed.typeshed.stubs.python-xlib.Xlib.protocol.rq.ConstantField",
    "typeshed.typeshed.stubs.python-xlib.Xlib.protocol.rq.DictWrapper",
    "typeshed.typeshed.stubs.python-xlib.Xlib.protocol.rq.Event",
    "typeshed.typeshed.stubs.python-xlib.Xlib.protocol.rq.FixedPropertyData",
    "typeshed.typeshed.stubs.python-xlib.Xlib.protocol.rq.FormatField",
    "typeshed.typeshed.stubs.python-xlib.Xlib.protocol.rq.LengthOf",
    "typeshed.typeshed.stubs.python-xlib.Xlib.protocol.rq.OddLength",
    "typeshed.typeshed.stubs.python-xlib.Xlib.protocol.rq.Pad",
    "typeshed.typeshed.stubs.python-xlib.Xlib.protocol.rq.ReplyRequest",
    "typeshed.typeshed.stubs.python-xlib.Xlib.protocol.rq.Resource",
    "typeshed.typeshed.stubs.python-xlib.Xlib.protocol.rq.ValueField",
    "typeshed.typeshed.stubs.python-xlib.Xlib.protocol.rq.ValueList",
    "typeshed.typeshed.stubs.python-xlib.Xlib.rdb.IsArg",
    "typeshed.typeshed.stubs.python-xlib.Xlib.rdb.NoArg",
    "typeshed.typeshed.stubs.python-xlib.Xlib.rdb.SepArg",
    "typeshed.typeshed.stubs.python-xlib.Xlib.rdb.SkipNArgs",
    "typeshed.typeshed.stubs.pytz.pytz._FixedOffset",
    "typeshed.typeshed.stubs.pytz.pytz.reference.FixedOffset",
    "typeshed.typeshed.stubs.pytz.pytz.reference.USTimeZone",
    "typeshed.typeshed.stubs.pytz.pytz.tzinfo.DstTzInfo",
    "typeshed.typeshed.stubs.pywin32.isapi.ISAPIError",
    "typeshed.typeshed.stubs.pywin32.win32.lib.pywintypes.error",
    "typeshed.typeshed.stubs.pywin32.win32.lib.win32pdhquery.QueryError",
    "typeshed.typeshed.stubs.pywin32.win32.lib.win32timezone.TimeZoneDefinition",
    "typeshed.typeshed.stubs.pywin32.win32.lib.win32timezone.TimeZoneInfo",
    "typeshed.typeshed.stubs.pywin32.win32com.server.dispatcher.DispatcherWin32trace",
    "typeshed.typeshed.stubs.pywin32.win32com.server.exception.COMException",
    "typeshed.typeshed.stubs.pywin32.win32com.server.policy.BasicWrapPolicy",
    "typeshed.typeshed.stubs.pywin32.win32comext.axdebug.contexts.DebugCodeContext",
    "typeshed.typeshed.stubs.pywin32.win32comext.axdebug.debugger.CodeContainerProvider",
    "typeshed.typeshed.stubs.pywin32.win32comext.axdebug.documents.DebugDocumentProvider",
    "typeshed.typeshed.stubs.pywin32.win32comext.axdebug.expressions.Expression",
    "typeshed.typeshed.stubs.pywin32.win32comext.axdebug.expressions.ExpressionContext",
    "typeshed.typeshed.stubs.pywin32.win32comext.axdebug.stackframe.DebugStackFrame",
    "typeshed.typeshed.stubs.pywin32.win32comext.axdebug.stackframe.EnumDebugStackFrames",
    "typeshed.typeshed.stubs.pyxdg.xdg.Exceptions.Error",
    "typeshed.typeshed.stubs.qrcode.qrcode.image.styles.colormasks.HorizontalGradiantColorMask",
    "typeshed.typeshed.stubs.qrcode.qrcode.image.styles.colormasks.ImageColorMask",
    "typeshed.typeshed.stubs.qrcode.qrcode.image.styles.colormasks.RadialGradiantColorMask",
    "typeshed.typeshed.stubs.qrcode.qrcode.image.styles.colormasks.SolidFillColorMask",
    "typeshed.typeshed.stubs.qrcode.qrcode.image.styles.colormasks.SquareGradiantColorMask",
    "typeshed.typeshed.stubs.qrcode.qrcode.image.styles.colormasks.VerticalGradiantColorMask",
    "typeshed.typeshed.stubs.qrcode.qrcode.image.styles.moduledrawers.base.QRModuleDrawer",
    "typeshed.typeshed.stubs.qrcode.qrcode.image.styles.moduledrawers.pil.GappedSquareModuleDrawer",
    "typeshed.typeshed.stubs.qrcode.qrcode.image.styles.moduledrawers.pil.HorizontalBarsDrawer",
    "typeshed.typeshed.stubs.qrcode.qrcode.image.styles.moduledrawers.pil.RoundedModuleDrawer",
    "typeshed.typeshed.stubs.qrcode.qrcode.image.styles.moduledrawers.pil.VerticalBarsDrawer",
    "typeshed.typeshed.stubs.qrcode.qrcode.image.svg.SvgPathImage",
    "typeshed.typeshed.stubs.qrcode.qrcode.main.QRCode",
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Redis",
    "typeshed.typeshed.stubs.redis.redis.asyncio.cluster.ClusterPipeline",
    "typeshed.typeshed.stubs.redis.redis.asyncio.cluster.RedisCluster",
    "typeshed.typeshed.stubs.redis.redis.asyncio.sentinel.Sentinel",
    "typeshed.typeshed.stubs.redis.redis.asyncio.utils.pipeline",
    "typeshed.typeshed.stubs.redis.redis.backoff.ConstantBackoff",
    "typeshed.typeshed.stubs.redis.redis.backoff.DecorrelatedJitterBackoff",
    "typeshed.typeshed.stubs.redis.redis.backoff.EqualJitterBackoff",
    "typeshed.typeshed.stubs.redis.redis.backoff.ExponentialBackoff",
    "typeshed.typeshed.stubs.redis.redis.backoff.FullJitterBackoff",
    "typeshed.typeshed.stubs.redis.redis.client.Redis",
    "typeshed.typeshed.stubs.redis.redis.cluster.RedisCluster",
    "typeshed.typeshed.stubs.redis.redis.commands.bf.BFBloom",
    "typeshed.typeshed.stubs.redis.redis.commands.bf.CFBloom",
    "typeshed.typeshed.stubs.redis.redis.commands.bf.CMSBloom",
    "typeshed.typeshed.stubs.redis.redis.commands.bf.TDigestBloom",
    "typeshed.typeshed.stubs.redis.redis.commands.bf.TOPKBloom",
    "typeshed.typeshed.stubs.redis.redis.commands.graph.Graph",
    "typeshed.typeshed.stubs.redis.redis.commands.graph.exceptions.VersionMismatchException",
    "typeshed.typeshed.stubs.redis.redis.commands.json.JSON",
    "typeshed.typeshed.stubs.redis.redis.commands.search.Search",
    "typeshed.typeshed.stubs.redis.redis.commands.timeseries.TimeSeries",
    "typeshed.typeshed.stubs.redis.redis.connection.HiredisParser",
    "typeshed.typeshed.stubs.redis.redis.connection.PythonParser",
    "typeshed.typeshed.stubs.redis.redis.credentials.UsernamePasswordCredentialProvider",
    "typeshed.typeshed.stubs.redis.redis.exceptions.AskError",
    "typeshed.typeshed.stubs.redis.redis.exceptions.ClusterDownError",
    "typeshed.typeshed.stubs.redis.redis.sentinel.Sentinel",
    "typeshed.typeshed.stubs.regex.regex._regex_core.Scanner",
    "typeshed.typeshed.stubs.regex.regex._regex_core.error",
    "typeshed.typeshed.stubs.requests-oauthlib.requests_oauthlib.oauth1_auth.OAuth1",
    "typeshed.typeshed.stubs.requests-oauthlib.requests_oauthlib.oauth1_session.TokenMissing",
    "typeshed.typeshed.stubs.requests-oauthlib.requests_oauthlib.oauth1_session.TokenRequestDenied",
    "typeshed.typeshed.stubs.requests-oauthlib.requests_oauthlib.oauth2_auth.OAuth2",
    "typeshed.typeshed.stubs.requests-oauthlib.requests_oauthlib.oauth2_session.TokenUpdated",
    "typeshed.typeshed.stubs.requests.requests.auth.HTTPBasicAuth",
    "typeshed.typeshed.stubs.requests.requests.auth.HTTPDigestAuth",
    "typeshed.typeshed.stubs.requests.requests.exceptions.RequestException",
    "typeshed.typeshed.stubs.requests.requests.models.PreparedRequest",
    "typeshed.typeshed.stubs.requests.requests.models.Request",
    "typeshed.typeshed.stubs.requests.requests.sessions.Session",
    "typeshed.typeshed.stubs.requests.requests.structures.CaseInsensitiveDict",
    "typeshed.typeshed.stubs.seaborn.seaborn.axisgrid.Grid",
    "typeshed.typeshed.stubs.seaborn.seaborn.axisgrid.JointGrid",
    "typeshed.typeshed.stubs.seaborn.seaborn.external.docscrape.NumpyDocString",
    "typeshed.typeshed.stubs.seaborn.seaborn.external.version.Version",
    "typeshed.typeshed.stubs.setuptools.pkg_resources.EggMetadata",
    "typeshed.typeshed.stubs.setuptools.pkg_resources.PathMetadata",
    "typeshed.typeshed.stubs.setuptools.pkg_resources._vendor.packaging.specifiers.Specifier",
    "typeshed.typeshed.stubs.setuptools.pkg_resources._vendor.packaging.specifiers.SpecifierSet",
    "typeshed.typeshed.stubs.setuptools.pkg_resources._vendor.packaging.version.Version",
    "typeshed.typeshed.stubs.setuptools.setuptools.command.editable_wheel._NamespaceInstaller",
    "typeshed.typeshed.stubs.setuptools.setuptools.command.test.NonDataProperty",
    "typeshed.typeshed.stubs.setuptools.setuptools.command.test.ScanningLoader",
    "typeshed.typeshed.stubs.setuptools.setuptools.config.expand.LazyMappingProxy",
    "typeshed.typeshed.stubs.setuptools.setuptools.config.setupcfg.ConfigHandler",
    "typeshed.typeshed.stubs.setuptools.setuptools.package_index.HashChecker",
    "typeshed.typeshed.stubs.setuptools.setuptools.sandbox.DirectorySandbox",
    "typeshed.typeshed.stubs.simplejson.simplejson.errors.JSONDecodeError",
    "typeshed.typeshed.stubs.singledispatch.singledispatch.singledispatchmethod",
    "typeshed.typeshed.stubs.slumber.slumber.API",
    "typeshed.typeshed.stubs.slumber.slumber.Resource",
    "typeshed.typeshed.stubs.slumber.slumber.exceptions.SlumberHttpBaseException",
    "typeshed.typeshed.stubs.stripe.stripe.error.CardError",
    "typeshed.typeshed.stubs.stripe.stripe.error.InvalidRequestError",
    "typeshed.typeshed.stubs.stripe.stripe.error.StripeError",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.RaggedTensorSpec",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.SparseTensorSpec",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.TensorSpec",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.data.TFRecordDataset",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.initializers.Constant",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.initializers.GlorotNormal",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.initializers.GlorotUniform",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.initializers.RandomNormal",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.initializers.RandomUniform",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.initializers.TruncatedNormal",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.layers.Layer",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.losses.Loss",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.optimizers.schedules.CosineDecay",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.optimizers.schedules.CosineDecayRestarts",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.optimizers.schedules.ExponentialDecay",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.optimizers.schedules.InverseTimeDecay",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.optimizers.schedules.PiecewiseConstantDecay",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.optimizers.schedules.PolynomialDecay",
    "typeshed.typeshed.stubs.toml.toml.decoder.TomlDecodeError",
    "typeshed.typeshed.stubs.toml.toml.decoder.TomlDecoder",
    "typeshed.typeshed.stubs.toml.toml.encoder.TomlEncoder",
    "typeshed.typeshed.stubs.toml.toml.tz.TomlTz",
    "typeshed.typeshed.stubs.toposort.toposort.CircularDependencyError",
    "typeshed.typeshed.stubs.tqdm.tqdm.contrib.discord.DiscordIO",
    "typeshed.typeshed.stubs.tqdm.tqdm.contrib.slack.SlackIO",
    "typeshed.typeshed.stubs.tqdm.tqdm.contrib.telegram.TelegramIO",
    "typeshed.typeshed.stubs.tqdm.tqdm.rich._ProgressColumn",
    "typeshed.typeshed.stubs.tqdm.tqdm.std.TqdmWarning",
    "typeshed.typeshed.stubs.tqdm.tqdm.std.tqdm",
    "typeshed.typeshed.stubs.uWSGI.uwsgidecorators._spoolraw",
    "typeshed.typeshed.stubs.uWSGI.uwsgidecorators.lock",
    "typeshed.typeshed.stubs.uWSGI.uwsgidecorators.mulefunc",
    "typeshed.typeshed.stubs.uWSGI.uwsgidecorators.postfork",
    "typeshed.typeshed.stubs.uWSGI.uwsgidecorators.thread",
    "typeshed.typeshed.stubs.untangle.untangle.Handler",
    "typeshed.typeshed.stubs.vobject.vobject.base.VObjectError",
    "typeshed.typeshed.stubs.waitress.waitress.proxy_headers.MalformedProxyHeader",
    "typeshed.typeshed.stubs.waitress.waitress.trigger.trigger",
    "typeshed.typeshed.stubs.whatthepatch.whatthepatch.exceptions.HunkException",
    "typeshed.typeshed.stubs.whatthepatch.whatthepatch.exceptions.SubprocessException",
    "typeshed.typeshed.stubs.workalendar.workalendar.asia.china.China",
    "typeshed.typeshed.stubs.workalendar.workalendar.europe.netherlands.Netherlands",
    "typeshed.typeshed.stubs.workalendar.workalendar.europe.scotland.Scotland",
    "typeshed.typeshed.stubs.workalendar.workalendar.usa.florida.FloridaLegal",
    "typing.MappingView",
    "typing.NamedTuple",
    "typing_extensions.NamedTuple",
    "unittest._log._AssertLogsContext",
    "unittest.mock._Call",
    "unittest.mock._patch",
    "unittest.suite.BaseTestSuite",
    "untangle.Handler",
    "urllib.error.URLError",
    "urllib.request.AbstractHTTPHandler",
    "urllib.request.HTTPCookieProcessor",
    "urllib.request.ProxyHandler",
    "urllib.response.addbase",
    "urllib3._collections.HTTPHeaderDict",
    "urllib3._collections.RecentlyUsedContainer",
    "urllib3.exceptions.HeaderParsingError",
    "urllib3.exceptions.IncompleteRead",
    "urllib3.exceptions.InvalidChunkLength",
    "urllib3.exceptions.LocationParseError",
    "urllib3.exceptions.PoolError",
    "urllib3.exceptions.ProxyError",
    "urllib3.exceptions.ProxySchemeUnknown",
    "urllib3.exceptions.URLSchemeUnknown",
    "urllib3.response.HTTPResponse",
    "vobject.base.VObjectError",
    "waitress.proxy_headers.MalformedProxyHeader",
    "waitress.trigger.trigger",
    "warnings.catch_warnings",
    "weakref.KeyedRef",
    "weakref.WeakKeyDictionary",
    "weakref.WeakValueDictionary",
    "werkzeug._internal._DictAccessorProperty",
    "werkzeug.datastructures.accept.Accept",
    "werkzeug.datastructures.cache_control._CacheControl",
    "werkzeug.datastructures.csp.ContentSecurityPolicy",
    "werkzeug.datastructures.etag.ETags",
    "werkzeug.datastructures.headers.EnvironHeaders",
    "werkzeug.datastructures.structures.CallbackDict",
    "werkzeug.datastructures.structures.CombinedMultiDict",
    "werkzeug.datastructures.structures.MultiDict",
    "werkzeug.datastructures.structures._omd_bucket",
    "werkzeug.exceptions.BadRequestKeyError",
    "werkzeug.exceptions.HTTPException",
    "werkzeug.local.LocalProxy",
    "werkzeug.local.LocalStack",
    "werkzeug.routing.exceptions.BuildError",
    "werkzeug.routing.exceptions.NoMatch",
    "werkzeug.routing.exceptions.RequestAliasRedirect",
    "werkzeug.routing.exceptions.RequestPath",
    "werkzeug.routing.rules.EndpointPrefix",
    "werkzeug.routing.rules.Rule",
    "werkzeug.routing.rules.RuleTemplateFactory",
    "werkzeug.routing.rules.Subdomain",
    "werkzeug.routing.rules.Submount",
    "werkzeug.serving.BaseWSGIServer",
    "werkzeug.serving.DechunkedInput",
    "werkzeug.serving.ForkingWSGIServer",
    "werkzeug.wsgi.LimitedStream",
    "whatthepatch.exceptions.HunkException",
    "whatthepatch.exceptions.SubprocessException",
    "win32.lib.pywintypes.error",
    "win32.lib.win32pdhquery.QueryError",
    "win32.lib.win32timezone.TimeZoneDefinition",
    "win32.lib.win32timezone.TimeZoneInfo",
    "win32com.server.dispatcher.DispatcherWin32trace",
    "win32com.server.exception.COMException",
    "win32com.server.policy.BasicWrapPolicy",
    "win32comext.axdebug.contexts.DebugCodeContext",
    "win32comext.axdebug.debugger.CodeContainerProvider",
    "win32comext.axdebug.documents.DebugDocumentProvider",
    "win32comext.axdebug.expressions.Expression",
    "win32comext.axdebug.expressions.ExpressionContext",
    "win32comext.axdebug.stackframe.DebugStackFrame",
    "win32comext.axdebug.stackframe.EnumDebugStackFrames",
    "wsgiref.handlers.CGIHandler",
    "wsgiref.handlers.IISCGIHandler",
    "wsgiref.handlers.SimpleHandler",
    "xdrlib.Error",
    "xml.dom.DOMException",
    "xml.dom.minidom.Attr",
    "xml.dom.minidom.CharacterData",
    "xml.dom.minidom.Document",
    "xml.dom.minidom.DocumentFragment",
    "xml.dom.minidom.DocumentType",
    "xml.dom.minidom.Element",
    "xml.dom.minidom.Entity",
    "xml.dom.minidom.Notation",
    "xml.dom.minidom.ProcessingInstruction",
    "xml.dom.pulldom.PullDOM",
    "xml.sax.SAXException",
    "xml.sax.saxutils.XMLFilterBase",
    "xml.sax.saxutils.XMLGenerator",
    "xml.sax.xmlreader.IncrementalParser",
    "xmlrpc.client.Fault",
    "xmlrpc.client.ProtocolError",
    "yaml.YAMLObjectMetaclass",
    "yaml.error.MarkedYAMLError",
    "yaml.reader.ReaderError",
    "zipfile.ZipExtFile",
    "zoneinfo.ZoneInfo"
  ],
  "type.__instancecheck__": [
    "abc.ABCMeta",
    "django.utils.deprecation.DeprecationInstanceCheck",
    "google.protobuf.descriptor.DescriptorMetaclass",
    "pip._vendor.typing_extensions._AnyMeta",
    "pip._vendor.typing_extensions._ProtocolMeta",
    "pip._vendor.typing_extensions._SpecialForm",
    "pip._vendor.typing_extensions._TypeVarLikeMeta",
    "typeshed.typeshed.stdlib.abc.ABCMeta",
    "typeshed.typeshed.stdlib.builtins.type",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor.DescriptorMetaclass"
  ],
  "type.__itemsize__": [
    "typeshed.typeshed.stdlib.builtins.type"
  ],
  "type.__mro__": [
    "typeshed.typeshed.stdlib.builtins.type"
  ],
  "type.__name__": [
    "PyInstaller.depend.imphookapi.PostGraphAPI",
    "types.BuiltinFunctionType",
    "types.ClassMethodDescriptorType",
    "types.GetSetDescriptorType",
    "types.MemberDescriptorType",
    "types.MethodDescriptorType",
    "types.MethodType",
    "types.MethodWrapperType",
    "types.WrapperDescriptorType",
    "typeshed.typeshed.stdlib.types.BuiltinFunctionType",
    "typeshed.typeshed.stdlib.types.ClassMethodDescriptorType",
    "typeshed.typeshed.stdlib.types.GetSetDescriptorType",
    "typeshed.typeshed.stdlib.types.MemberDescriptorType",
    "typeshed.typeshed.stdlib.types.MethodDescriptorType",
    "typeshed.typeshed.stdlib.types.MethodType",
    "typeshed.typeshed.stdlib.types.MethodWrapperType",
    "typeshed.typeshed.stdlib.types.WrapperDescriptorType",
    "typeshed.typeshed.stdlib.typing.TypeVar",
    "typeshed.typeshed.stdlib.typing_extensions.ParamSpec",
    "typeshed.typeshed.stdlib.typing_extensions.TypeAliasType",
    "typeshed.typeshed.stdlib.typing_extensions.TypeVar",
    "typeshed.typeshed.stdlib.typing_extensions.TypeVarTuple",
    "typeshed.typeshed.stubs.pyinstaller.PyInstaller.depend.imphookapi.PostGraphAPI"
  ],
  "type.__new__": [
    "IPython.core.guarded_eval.EvaluationContext",
    "IPython.core.guarded_eval._DummyNamedTuple",
    "IPython.utils.tokenutil.Token",
    "PIL.TiffTags._TagInfo",
    "_curses._ncurses_version",
    "_decimal.DecimalTuple",
    "_operator.attrgetter",
    "_operator.itemgetter",
    "_py_abc.ABCMeta",
    "_typeshed.structseq",
    "_weakref.ReferenceType",
    "abc.ABCMeta",
    "aifc._aifc_params",
    "asttokens.util.Token",
    "babel.messages.jslexer.Token",
    "bs4.element.CharsetMetaAttributeValue",
    "bs4.element.ContentMetaAttributeValue",
    "concurrent.futures._base.DoneAndNotDoneFutures",
    "consolemenu.prompt_utils.InputResult",
    "dataclasses_json.core.FieldOverride",
    "datetime._IsoCalendarDate",
    "dict",
    "difflib.Match",
    "dis.Instruction",
    "django.contrib.gis.db.models.fields.SRIDCacheEntry",
    "django.db.backends.base.introspection.FieldInfo",
    "django.db.backends.base.introspection.TableInfo",
    "django.db.backends.mysql.introspection.InfoLine",
    "django.db.migrations.operations.utils.FieldReference",
    "django.db.models.manager.BaseManager",
    "django.db.models.query_utils.PathInfo",
    "django.db.models.sql.query.JoinInfo",
    "django.template.defaulttags.GroupedResult",
    "django.utils.deprecation.RenameMethodsBase",
    "docutils._VersionInfo",
    "docutils.nodes.Text",
    "exceptiongroup._exceptions.BaseExceptionGroup",
    "executing._VersionInfo",
    "fpdf.annotations.FileSpec",
    "fpdf.drawing.Arc",
    "fpdf.drawing.BezierCurve",
    "fpdf.drawing.Close",
    "fpdf.drawing.Ellipse",
    "fpdf.drawing.HorizontalLine",
    "fpdf.drawing.ImplicitClose",
    "fpdf.drawing.Line",
    "fpdf.drawing.Move",
    "fpdf.drawing.Point",
    "fpdf.drawing.QuadraticBezierCurve",
    "fpdf.drawing.Rectangle",
    "fpdf.drawing.RelativeArc",
    "fpdf.drawing.RelativeBezierCurve",
    "fpdf.drawing.RelativeHorizontalLine",
    "fpdf.drawing.RelativeLine",
    "fpdf.drawing.RelativeMove",
    "fpdf.drawing.RelativeQuadraticBezierCurve",
    "fpdf.drawing.RelativeVerticalLine",
    "fpdf.drawing.RoundedRectangle",
    "fpdf.drawing.Transform",
    "fpdf.drawing.VerticalLine",
    "fpdf.drawing._DeviceCMYKBase",
    "fpdf.drawing._DeviceGrayBase",
    "fpdf.drawing._DeviceRGBBase",
    "fpdf.fpdf.TitleStyle",
    "fpdf.fpdf.ToCPlaceholder",
    "fpdf.line_break.HyphenHint",
    "fpdf.line_break.SpaceHint",
    "fpdf.line_break.TextLine",
    "fpdf.outline.OutlineSection",
    "frozenset",
    "functools._CacheInfo",
    "functools.partial",
    "google.cloud.ndb._eventloop._Event",
    "google.cloud.ndb.context._ContextTuple",
    "google.cloud.ndb.metadata._BaseMetadata",
    "google.cloud.ndb.model.Index",
    "google.cloud.ndb.model.IndexProperty",
    "google.cloud.ndb.model.IndexState",
    "google.cloud.ndb.model.TextProperty",
    "google.protobuf.descriptor.EnumDescriptor",
    "google.protobuf.descriptor.EnumValueDescriptor",
    "google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.descriptor.MethodDescriptor",
    "google.protobuf.internal.python_message.GeneratedProtocolMessageType",
    "google.protobuf.reflection.GeneratedProtocolMessageType",
    "graphql.execution.tests.test_benchmark.Container",
    "graphql.execution.tests.test_lists.Data",
    "graphql.execution.tests.test_subscribe.Email",
    "graphql.language.visitor_meta.VisitorMeta",
    "graphql.pyutils.enum.EnumMeta",
    "graphql.type.introspection.Field",
    "graphql.type.introspection.InputField",
    "graphql.type.schema.InterfaceImplementations",
    "humanfriendly.CombinedUnit",
    "humanfriendly.SizeUnit",
    "importlib.metadata._EntryPointBase",
    "importlib_metadata._adapters.Message",
    "importlib_metadata._collections.Pair",
    "inspect.ArgInfo",
    "inspect.ArgSpec",
    "inspect.Arguments",
    "inspect.Attribute",
    "inspect.ClosureVars",
    "inspect.FrameInfo",
    "inspect.FullArgSpec",
    "inspect.Traceback",
    "invoke.util.ExceptionWrapper",
    "itertools.combinations",
    "itertools.count",
    "itertools.groupby",
    "itertools.product",
    "itertools.zip_longest",
    "jinja2.compiler.CodeGenerator._FinalizeInfo",
    "jinja2.filters._GroupTuple",
    "jinja2.lexer.Token",
    "jinja2.lexer._Rule",
    "jinja2.nodes.NodeType",
    "keyboard._mouse_event.ButtonEvent",
    "keyboard._mouse_event.MoveEvent",
    "keyboard._mouse_event.WheelEvent",
    "ldap3.abstract.cursor.Operation",
    "ldap3.core.exceptions.LDAPOperationResult",
    "libcst._parser.parso.python.tokenize.Token",
    "mock.mock.NonCallableMock",
    "mypy_django_plugin.transformers.manytomany.M2MArguments",
    "mypy_django_plugin.transformers.manytomany.M2MThrough",
    "mypy_django_plugin.transformers.manytomany.M2MTo",
    "nntplib.ArticleInfo",
    "nntplib.GroupInfo",
    "openpyxl.descriptors.MetaSerialisable",
    "openpyxl.descriptors.MetaStrict",
    "openpyxl.descriptors.slots.AutoSlotProperties",
    "openpyxl.styles.cell_style.StyleArray",
    "opentracing.tracer.Reference",
    "packaging._manylinux._GLibCVersion",
    "packaging._musllinux._MuslVersion",
    "packaging._parser.ParsedRequirement",
    "packaging.version._Version",
    "parso.normalizer._NormalizerMeta",
    "parso.python.diff._NodesTreeNode._ChildrenGroup",
    "parso.python.tokenize.Token",
    "parso.python.tokenize.TokenCollection",
    "parso.utils.Version",
    "parso.utils._PythonVersionInfo",
    "pathlib.PurePath",
    "peewee.ColumnMetadata",
    "peewee.ForeignKeyMetadata",
    "peewee.IndexMetadata",
    "peewee.ModelBase",
    "peewee.ViewMetadata",
    "pika.adapters.blocking_connection.BlockingChannel._FlowOkCallbackResultArgs",
    "pika.adapters.blocking_connection.BlockingChannel._MethodFrameCallbackResultArgs",
    "pika.adapters.blocking_connection.BlockingChannel._OnMessageConfirmationReportArgs",
    "pika.adapters.blocking_connection.BlockingChannel._RxMessageArgs",
    "pika.adapters.blocking_connection.BlockingConnection._OnChannelOpenedArgs",
    "pika.adapters.blocking_connection.BlockingConnection._OnClosedArgs",
    "pika.adapters.twisted_connection.ReceivedMessage",
    "pip._internal.commands.CommandInfo",
    "pip._internal.commands.show._PackageInfo",
    "pip._internal.index.collector.CollectedSources",
    "pip._internal.metadata.base.RequiresEntry",
    "pip._internal.metadata.pkg_resources.EntryPoint",
    "pip._internal.models.link._CleanResult",
    "pip._internal.network.auth.Credentials",
    "pip._internal.operations.check.PackageDetails",
    "pip._internal.operations.freeze._EditableInfo",
    "pip._internal.pyproject.BuildSystemDetails",
    "pip._internal.resolution.resolvelib.factory.CollectedRootRequirements",
    "pip._vendor.chardet.sbcharsetprober.SingleByteCharSetModel",
    "pip._vendor.msgpack.ext.ExtType",
    "pip._vendor.packaging._manylinux._GLibCVersion",
    "pip._vendor.packaging._musllinux._MuslVersion",
    "pip._vendor.packaging.version._Version",
    "pip._vendor.pkg_resources.MemoizedZipManifests.manifest_mod",
    "pip._vendor.pygments.lexer.LexerMeta",
    "pip._vendor.pygments.style.StyleMeta",
    "pip._vendor.pyparsing.core.ParserElement.DebugActions",
    "pip._vendor.pyparsing.diagram.NamedDiagram",
    "pip._vendor.pyparsing.results.ParseResults.List",
    "pip._vendor.pyparsing.version_info",
    "pip._vendor.resolvelib.resolvers.RequirementInformation",
    "pip._vendor.resolvelib.resolvers.Result",
    "pip._vendor.resolvelib.resolvers.State",
    "pip._vendor.rich._win32_console.WindowsCoordinates",
    "pip._vendor.rich.ansi._AnsiToken",
    "pip._vendor.rich.color.Color",
    "pip._vendor.rich.color_triplet.ColorTriplet",
    "pip._vendor.rich.console.ConsoleDimensions",
    "pip._vendor.rich.layout.LayoutRender",
    "pip._vendor.rich.markup.Tag",
    "pip._vendor.rich.measure.Measurement",
    "pip._vendor.rich.pretty._dummy_namedtuple",
    "pip._vendor.rich.progress.ProgressSample",
    "pip._vendor.rich.region.Region",
    "pip._vendor.rich.segment.Segment",
    "pip._vendor.rich.syntax._SyntaxHighlightRange",
    "pip._vendor.rich.table._Cell",
    "pip._vendor.rich.text.Span",
    "pip._vendor.six.with_metaclass.metaclass",
    "pip._vendor.tomli._parser.Output",
    "pip._vendor.typing_extensions.ParamSpec",
    "pip._vendor.typing_extensions.TypeVarTuple",
    "pip._vendor.typing_extensions._NamedTupleMeta",
    "pip._vendor.typing_extensions._TypedDictMeta",
    "pip._vendor.typing_extensions._make_nmtuple.nm_tpl",
    "pip._vendor.urllib3.packages.six.with_metaclass.metaclass",
    "pip._vendor.urllib3.poolmanager.PoolKey",
    "pip._vendor.urllib3.poolmanager.ProxyConfig",
    "pip._vendor.urllib3.util.retry.RequestHistory",
    "pip._vendor.urllib3.util.url.Url",
    "pkgutil.ModuleInfo",
    "platform.uname_result",
    "promise.dataloader.Loader",
    "prompt_toolkit.completion.fuzzy_completer._FuzzyMatch",
    "prompt_toolkit.data_structures.Point",
    "prompt_toolkit.data_structures.Size",
    "prompt_toolkit.layout.controls._ProcessedLine",
    "prompt_toolkit.styles.base.Attrs",
    "psutil._common.addr",
    "psutil._common.pconn",
    "psutil._common.pcputimes",
    "psutil._common.pctxsw",
    "psutil._common.pgids",
    "psutil._common.pio",
    "psutil._common.pionice",
    "psutil._common.popenfile",
    "psutil._common.pthread",
    "psutil._common.puids",
    "psutil._common.sbattery",
    "psutil._common.sconn",
    "psutil._common.scpufreq",
    "psutil._common.scpustats",
    "psutil._common.sdiskio",
    "psutil._common.sdiskpart",
    "psutil._common.sdiskusage",
    "psutil._common.sfan",
    "psutil._common.shwtemp",
    "psutil._common.snetio",
    "psutil._common.snicaddr",
    "psutil._common.snicstats",
    "psutil._common.sswap",
    "psutil._common.suser",
    "psutil._psaix.pmem",
    "psutil._psaix.scputimes",
    "psutil._psaix.svmem",
    "psutil._psbsd.Process.nt_mmap_ext",
    "psutil._psbsd.Process.nt_mmap_grouped",
    "psutil._psbsd.pcputimes",
    "psutil._psbsd.pmem",
    "psutil._psbsd.pmmap_ext",
    "psutil._psbsd.pmmap_grouped",
    "psutil._psbsd.scputimes",
    "psutil._psbsd.sdiskio",
    "psutil._psbsd.svmem",
    "psutil._pslinux.pcputimes",
    "psutil._pslinux.pfullmem",
    "psutil._pslinux.pio",
    "psutil._pslinux.pmem",
    "psutil._pslinux.pmmap_grouped",
    "psutil._pslinux.popenfile",
    "psutil._pslinux.sdiskio",
    "psutil._pslinux.svmem",
    "psutil._psosx.pfullmem",
    "psutil._psosx.pmem",
    "psutil._psosx.scputimes",
    "psutil._psosx.svmem",
    "psutil._pssunos.Process.nt_mmap_ext",
    "psutil._pssunos.Process.nt_mmap_grouped",
    "psutil._pssunos.pcputimes",
    "psutil._pssunos.pmem",
    "psutil._pssunos.pmmap_grouped",
    "psutil._pssunos.scputimes",
    "psutil._pssunos.svmem",
    "psutil._pswindows.pfullmem",
    "psutil._pswindows.pio",
    "psutil._pswindows.pmem",
    "psutil._pswindows.pmmap_grouped",
    "psutil._pswindows.scputimes",
    "psutil._pswindows.svmem",
    "psycopg2.tz.FixedOffsetTimezone",
    "pyasn1.codec.ber.eoo.EndOfOctets",
    "pyautogui.Point",
    "pyautogui.Size",
    "pygments.lexer.LexerMeta",
    "pygments.style.StyleMeta",
    "pyscreeze.Box",
    "pyscreeze.Point",
    "pyscreeze.RGB",
    "pytz.lazy.LazyList",
    "pytz.lazy.LazySet",
    "sched.Event",
    "selectors.SelectorKey",
    "shutil._ntuple_diskusage",
    "sndhdr.SndHeaders",
    "sqlalchemy.engine.url._URLTuple",
    "sqlalchemy.orm.attributes._HasEntityNamespace",
    "sqlalchemy.orm.strategies.SelectInLoader.query_info",
    "sqlalchemy.sql.base.SingletonConstant",
    "sqlalchemy.sql.compiler.ExpandedState",
    "sqlalchemy.sql.elements.quoted_name",
    "sqlalchemy.sql.schema.Table",
    "sqlalchemy.util._collections.FacadeDict",
    "sqlalchemy.util.compat.FullArgSpec",
    "ssl.DefaultVerifyPaths",
    "ssl._ASN1ObjectBase",
    "stack_data.core.MarkerInLine",
    "stack_data.core.RangeInLine",
    "stack_data.core.Variable",
    "str",
    "sunau._sunau_params",
    "tabulate.DataRow",
    "tabulate.Line",
    "tabulate.TableFormat",
    "tokenize._TokenInfo",
    "tomli._parser.Output",
    "tqdm.std.tqdm",
    "traitlets.traitlets.MetaHasDescriptors",
    "tuple",
    "typeshed.typeshed.stdlib._curses._ncurses_version",
    "typeshed.typeshed.stdlib._decimal.DecimalTuple",
    "typeshed.typeshed.stdlib._operator.attrgetter",
    "typeshed.typeshed.stdlib._operator.itemgetter",
    "typeshed.typeshed.stdlib._py_abc.ABCMeta",
    "typeshed.typeshed.stdlib._typeshed.structseq",
    "typeshed.typeshed.stdlib._weakref.ReferenceType",
    "typeshed.typeshed.stdlib.abc.ABCMeta",
    "typeshed.typeshed.stdlib.aifc._aifc_params",
    "typeshed.typeshed.stdlib.builtins.bytes",
    "typeshed.typeshed.stdlib.builtins.dict",
    "typeshed.typeshed.stdlib.builtins.enumerate",
    "typeshed.typeshed.stdlib.builtins.filter",
    "typeshed.typeshed.stdlib.builtins.frozenset",
    "typeshed.typeshed.stdlib.builtins.map",
    "typeshed.typeshed.stdlib.builtins.memoryview",
    "typeshed.typeshed.stdlib.builtins.range",
    "typeshed.typeshed.stdlib.builtins.str",
    "typeshed.typeshed.stdlib.builtins.tuple",
    "typeshed.typeshed.stdlib.builtins.zip",
    "typeshed.typeshed.stdlib.concurrent.futures._base.DoneAndNotDoneFutures",
    "typeshed.typeshed.stdlib.datetime._IsoCalendarDate",
    "typeshed.typeshed.stdlib.difflib.Match",
    "typeshed.typeshed.stdlib.dis.Instruction",
    "typeshed.typeshed.stdlib.enum.EnumMeta",
    "typeshed.typeshed.stdlib.functools._CacheInfo",
    "typeshed.typeshed.stdlib.functools.partial",
    "typeshed.typeshed.stdlib.importlib.metadata._EntryPointBase",
    "typeshed.typeshed.stdlib.inspect.ArgInfo",
    "typeshed.typeshed.stdlib.inspect.ArgSpec",
    "typeshed.typeshed.stdlib.inspect.Arguments",
    "typeshed.typeshed.stdlib.inspect.Attribute",
    "typeshed.typeshed.stdlib.inspect.ClosureVars",
    "typeshed.typeshed.stdlib.inspect.FrameInfo",
    "typeshed.typeshed.stdlib.inspect.FullArgSpec",
    "typeshed.typeshed.stdlib.inspect.Traceback",
    "typeshed.typeshed.stdlib.itertools.combinations",
    "typeshed.typeshed.stdlib.itertools.count",
    "typeshed.typeshed.stdlib.itertools.groupby",
    "typeshed.typeshed.stdlib.itertools.permutations",
    "typeshed.typeshed.stdlib.itertools.product",
    "typeshed.typeshed.stdlib.itertools.zip_longest",
    "typeshed.typeshed.stdlib.nntplib.ArticleInfo",
    "typeshed.typeshed.stdlib.nntplib.GroupInfo",
    "typeshed.typeshed.stdlib.pathlib.PurePath",
    "typeshed.typeshed.stdlib.pkgutil.ModuleInfo",
    "typeshed.typeshed.stdlib.platform.uname_result",
    "typeshed.typeshed.stdlib.sched.Event",
    "typeshed.typeshed.stdlib.selectors.SelectorKey",
    "typeshed.typeshed.stdlib.shutil._ntuple_diskusage",
    "typeshed.typeshed.stdlib.sndhdr.SndHeaders",
    "typeshed.typeshed.stdlib.ssl.DefaultVerifyPaths",
    "typeshed.typeshed.stdlib.ssl._ASN1ObjectBase",
    "typeshed.typeshed.stdlib.sunau._sunau_params",
    "typeshed.typeshed.stdlib.tokenize._TokenInfo",
    "typeshed.typeshed.stdlib.types.MappingProxyType",
    "typeshed.typeshed.stdlib.unittest._log._LoggingWatcher",
    "typeshed.typeshed.stdlib.unittest.mock.NonCallableMock",
    "typeshed.typeshed.stdlib.urllib.parse._DefragResultBase",
    "typeshed.typeshed.stdlib.urllib.parse._ParseResultBase",
    "typeshed.typeshed.stdlib.urllib.parse._SplitResultBase",
    "typeshed.typeshed.stdlib.urllib.robotparser.RequestRate",
    "typeshed.typeshed.stdlib.wave._wave_params",
    "typeshed.typeshed.stubs.Markdown.markdown.inlinepatterns.EmStrongItem",
    "typeshed.typeshed.stubs.Pillow.PIL.TiffTags._TagInfo",
    "typeshed.typeshed.stubs.PyAutoGUI.pyautogui.Point",
    "typeshed.typeshed.stubs.PyAutoGUI.pyautogui.Size",
    "typeshed.typeshed.stubs.PyScreeze.pyscreeze.Box",
    "typeshed.typeshed.stubs.PyScreeze.pyscreeze.Point",
    "typeshed.typeshed.stubs.PyScreeze.pyscreeze.RGB",
    "typeshed.typeshed.stubs.Pygments.pygments.lexer.LexerMeta",
    "typeshed.typeshed.stubs.Pygments.pygments.style.StyleMeta",
    "typeshed.typeshed.stubs.WebOb.webob.acceptparse.AcceptOffer",
    "typeshed.typeshed.stubs.WebOb.webob.descriptors._authorization",
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.element.CharsetMetaAttributeValue",
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.element.ContentMetaAttributeValue",
    "typeshed.typeshed.stubs.boltons.boltons.excutils.ExceptionCauseMixin",
    "typeshed.typeshed.stubs.console-menu.consolemenu.prompt_utils.InputResult",
    "typeshed.typeshed.stubs.docutils.docutils._VersionInfo",
    "typeshed.typeshed.stubs.docutils.docutils.nodes.Text",
    "typeshed.typeshed.stubs.fpdf2.fpdf.annotations.FileSpec",
    "typeshed.typeshed.stubs.fpdf2.fpdf.drawing.Arc",
    "typeshed.typeshed.stubs.fpdf2.fpdf.drawing.BezierCurve",
    "typeshed.typeshed.stubs.fpdf2.fpdf.drawing.Close",
    "typeshed.typeshed.stubs.fpdf2.fpdf.drawing.Ellipse",
    "typeshed.typeshed.stubs.fpdf2.fpdf.drawing.HorizontalLine",
    "typeshed.typeshed.stubs.fpdf2.fpdf.drawing.ImplicitClose",
    "typeshed.typeshed.stubs.fpdf2.fpdf.drawing.Line",
    "typeshed.typeshed.stubs.fpdf2.fpdf.drawing.Move",
    "typeshed.typeshed.stubs.fpdf2.fpdf.drawing.Point",
    "typeshed.typeshed.stubs.fpdf2.fpdf.drawing.QuadraticBezierCurve",
    "typeshed.typeshed.stubs.fpdf2.fpdf.drawing.Rectangle",
    "typeshed.typeshed.stubs.fpdf2.fpdf.drawing.RelativeArc",
    "typeshed.typeshed.stubs.fpdf2.fpdf.drawing.RelativeBezierCurve",
    "typeshed.typeshed.stubs.fpdf2.fpdf.drawing.RelativeHorizontalLine",
    "typeshed.typeshed.stubs.fpdf2.fpdf.drawing.RelativeLine",
    "typeshed.typeshed.stubs.fpdf2.fpdf.drawing.RelativeMove",
    "typeshed.typeshed.stubs.fpdf2.fpdf.drawing.RelativeQuadraticBezierCurve",
    "typeshed.typeshed.stubs.fpdf2.fpdf.drawing.RelativeVerticalLine",
    "typeshed.typeshed.stubs.fpdf2.fpdf.drawing.RoundedRectangle",
    "typeshed.typeshed.stubs.fpdf2.fpdf.drawing.Transform",
    "typeshed.typeshed.stubs.fpdf2.fpdf.drawing.VerticalLine",
    "typeshed.typeshed.stubs.fpdf2.fpdf.drawing._DeviceCMYKBase",
    "typeshed.typeshed.stubs.fpdf2.fpdf.drawing._DeviceGrayBase",
    "typeshed.typeshed.stubs.fpdf2.fpdf.drawing._DeviceRGBBase",
    "typeshed.typeshed.stubs.fpdf2.fpdf.fpdf.ToCPlaceholder",
    "typeshed.typeshed.stubs.fpdf2.fpdf.line_break.HyphenHint",
    "typeshed.typeshed.stubs.fpdf2.fpdf.line_break.SpaceHint",
    "typeshed.typeshed.stubs.fpdf2.fpdf.line_break.TextLine",
    "typeshed.typeshed.stubs.fpdf2.fpdf.outline.OutlineSection",
    "typeshed.typeshed.stubs.fpdf2.fpdf.text_region.Extents",
    "typeshed.typeshed.stubs.fpdf2.fpdf.text_region.LineWrapper",
    "typeshed.typeshed.stubs.fpdf2.fpdf.util.Padding",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb._eventloop._Event",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.context._ContextTuple",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.metadata._BaseMetadata",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.model.Index",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.model.IndexProperty",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.model.IndexState",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.model.TextProperty",
    "typeshed.typeshed.stubs.humanfriendly.humanfriendly.CombinedUnit",
    "typeshed.typeshed.stubs.humanfriendly.humanfriendly.SizeUnit",
    "typeshed.typeshed.stubs.keyboard.keyboard._mouse_event.ButtonEvent",
    "typeshed.typeshed.stubs.keyboard.keyboard._mouse_event.MoveEvent",
    "typeshed.typeshed.stubs.keyboard.keyboard._mouse_event.WheelEvent",
    "typeshed.typeshed.stubs.ldap3.ldap3.abstract.cursor.Operation",
    "typeshed.typeshed.stubs.ldap3.ldap3.core.exceptions.LDAPOperationResult",
    "typeshed.typeshed.stubs.libsass.sass._SassColor",
    "typeshed.typeshed.stubs.libsass.sass._SassError",
    "typeshed.typeshed.stubs.libsass.sass._SassList",
    "typeshed.typeshed.stubs.libsass.sass._SassNumber",
    "typeshed.typeshed.stubs.libsass.sass._SassWarning",
    "typeshed.typeshed.stubs.mock.mock.mock.NonCallableMock",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.MetaSerialisable",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.MetaStrict",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.slots.AutoSlotProperties",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.styles.cell_style.StyleArray",
    "typeshed.typeshed.stubs.opentracing.opentracing.tracer.Reference",
    "typeshed.typeshed.stubs.paramiko.paramiko.auth_strategy.SourceResult",
    "typeshed.typeshed.stubs.peewee.peewee.ColumnMetadata",
    "typeshed.typeshed.stubs.peewee.peewee.ForeignKeyMetadata",
    "typeshed.typeshed.stubs.peewee.peewee.IndexMetadata",
    "typeshed.typeshed.stubs.peewee.peewee.ModelBase",
    "typeshed.typeshed.stubs.peewee.peewee.ViewMetadata",
    "typeshed.typeshed.stubs.pika.pika.adapters.blocking_connection.BlockingChannel._FlowOkCallbackResultArgs",
    "typeshed.typeshed.stubs.pika.pika.adapters.blocking_connection.BlockingChannel._MethodFrameCallbackResultArgs",
    "typeshed.typeshed.stubs.pika.pika.adapters.blocking_connection.BlockingChannel._OnMessageConfirmationReportArgs",
    "typeshed.typeshed.stubs.pika.pika.adapters.blocking_connection.BlockingChannel._RxMessageArgs",
    "typeshed.typeshed.stubs.pika.pika.adapters.blocking_connection.BlockingConnection._OnChannelOpenedArgs",
    "typeshed.typeshed.stubs.pika.pika.adapters.blocking_connection.BlockingConnection._OnClosedArgs",
    "typeshed.typeshed.stubs.pika.pika.adapters.twisted_connection.ReceivedMessage",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor.EnumDescriptor",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor.EnumValueDescriptor",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor.FieldDescriptor",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor.FileDescriptor",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor.MethodDescriptor",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.internal.python_message.GeneratedProtocolMessageType",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.reflection.GeneratedProtocolMessageType",
    "typeshed.typeshed.stubs.psutil.psutil._common.addr",
    "typeshed.typeshed.stubs.psutil.psutil._common.pconn",
    "typeshed.typeshed.stubs.psutil.psutil._common.pcputimes",
    "typeshed.typeshed.stubs.psutil.psutil._common.pctxsw",
    "typeshed.typeshed.stubs.psutil.psutil._common.pgids",
    "typeshed.typeshed.stubs.psutil.psutil._common.pio",
    "typeshed.typeshed.stubs.psutil.psutil._common.pionice",
    "typeshed.typeshed.stubs.psutil.psutil._common.popenfile",
    "typeshed.typeshed.stubs.psutil.psutil._common.pthread",
    "typeshed.typeshed.stubs.psutil.psutil._common.puids",
    "typeshed.typeshed.stubs.psutil.psutil._common.sbattery",
    "typeshed.typeshed.stubs.psutil.psutil._common.sconn",
    "typeshed.typeshed.stubs.psutil.psutil._common.scpufreq",
    "typeshed.typeshed.stubs.psutil.psutil._common.scpustats",
    "typeshed.typeshed.stubs.psutil.psutil._common.sdiskio",
    "typeshed.typeshed.stubs.psutil.psutil._common.sdiskpart",
    "typeshed.typeshed.stubs.psutil.psutil._common.sdiskusage",
    "typeshed.typeshed.stubs.psutil.psutil._common.sfan",
    "typeshed.typeshed.stubs.psutil.psutil._common.shwtemp",
    "typeshed.typeshed.stubs.psutil.psutil._common.snetio",
    "typeshed.typeshed.stubs.psutil.psutil._common.snicaddr",
    "typeshed.typeshed.stubs.psutil.psutil._common.snicstats",
    "typeshed.typeshed.stubs.psutil.psutil._common.sswap",
    "typeshed.typeshed.stubs.psutil.psutil._common.suser",
    "typeshed.typeshed.stubs.psutil.psutil._psaix.pmem",
    "typeshed.typeshed.stubs.psutil.psutil._psaix.scputimes",
    "typeshed.typeshed.stubs.psutil.psutil._psaix.svmem",
    "typeshed.typeshed.stubs.psutil.psutil._psbsd.Process.nt_mmap_ext",
    "typeshed.typeshed.stubs.psutil.psutil._psbsd.Process.nt_mmap_grouped",
    "typeshed.typeshed.stubs.psutil.psutil._psbsd.pcputimes",
    "typeshed.typeshed.stubs.psutil.psutil._psbsd.pmem",
    "typeshed.typeshed.stubs.psutil.psutil._psbsd.pmmap_ext",
    "typeshed.typeshed.stubs.psutil.psutil._psbsd.pmmap_grouped",
    "typeshed.typeshed.stubs.psutil.psutil._psbsd.scputimes",
    "typeshed.typeshed.stubs.psutil.psutil._psbsd.sdiskio",
    "typeshed.typeshed.stubs.psutil.psutil._psbsd.svmem",
    "typeshed.typeshed.stubs.psutil.psutil._pslinux.pcputimes",
    "typeshed.typeshed.stubs.psutil.psutil._pslinux.pfullmem",
    "typeshed.typeshed.stubs.psutil.psutil._pslinux.pio",
    "typeshed.typeshed.stubs.psutil.psutil._pslinux.pmem",
    "typeshed.typeshed.stubs.psutil.psutil._pslinux.pmmap_grouped",
    "typeshed.typeshed.stubs.psutil.psutil._pslinux.popenfile",
    "typeshed.typeshed.stubs.psutil.psutil._pslinux.sdiskio",
    "typeshed.typeshed.stubs.psutil.psutil._pslinux.svmem",
    "typeshed.typeshed.stubs.psutil.psutil._psosx.pfullmem",
    "typeshed.typeshed.stubs.psutil.psutil._psosx.pmem",
    "typeshed.typeshed.stubs.psutil.psutil._psosx.scputimes",
    "typeshed.typeshed.stubs.psutil.psutil._psosx.svmem",
    "typeshed.typeshed.stubs.psutil.psutil._pssunos.Process.nt_mmap_ext",
    "typeshed.typeshed.stubs.psutil.psutil._pssunos.Process.nt_mmap_grouped",
    "typeshed.typeshed.stubs.psutil.psutil._pssunos.pcputimes",
    "typeshed.typeshed.stubs.psutil.psutil._pssunos.pmem",
    "typeshed.typeshed.stubs.psutil.psutil._pssunos.pmmap_grouped",
    "typeshed.typeshed.stubs.psutil.psutil._pssunos.scputimes",
    "typeshed.typeshed.stubs.psutil.psutil._pssunos.svmem",
    "typeshed.typeshed.stubs.psutil.psutil._pswindows.pfullmem",
    "typeshed.typeshed.stubs.psutil.psutil._pswindows.pio",
    "typeshed.typeshed.stubs.psutil.psutil._pswindows.pmem",
    "typeshed.typeshed.stubs.psutil.psutil._pswindows.pmmap_grouped",
    "typeshed.typeshed.stubs.psutil.psutil._pswindows.scputimes",
    "typeshed.typeshed.stubs.psutil.psutil._pswindows.svmem",
    "typeshed.typeshed.stubs.psycopg2.psycopg2.tz.FixedOffsetTimezone",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.codec.ber.eoo.EndOfOctets",
    "typeshed.typeshed.stubs.pytz.pytz.lazy.LazyList",
    "typeshed.typeshed.stubs.pytz.pytz.lazy.LazySet",
    "typeshed.typeshed.stubs.pywin32.win32.lib.win32gui_struct._LVCOLUMN",
    "typeshed.typeshed.stubs.pywin32.win32.lib.win32gui_struct._LVDISPINFO",
    "typeshed.typeshed.stubs.pywin32.win32.lib.win32gui_struct._LVHITTEST",
    "typeshed.typeshed.stubs.pywin32.win32.lib.win32gui_struct._LVITEM",
    "typeshed.typeshed.stubs.pywin32.win32.lib.win32gui_struct._MENUINFO",
    "typeshed.typeshed.stubs.pywin32.win32.lib.win32gui_struct._MENUITEMINFO",
    "typeshed.typeshed.stubs.pywin32.win32.lib.win32gui_struct._NMITEMACTIVATE",
    "typeshed.typeshed.stubs.pywin32.win32.lib.win32gui_struct._TVDISPINFO",
    "typeshed.typeshed.stubs.pywin32.win32.lib.win32gui_struct._TVITEM",
    "typeshed.typeshed.stubs.pywin32.win32.lib.win32gui_struct._TVNOTIFY",
    "typeshed.typeshed.stubs.pywin32.win32.lib.win32gui_struct._UnpackLVNOTIFY",
    "typeshed.typeshed.stubs.pywin32.win32.lib.win32gui_struct._WMNOTIFY",
    "typeshed.typeshed.stubs.qrcode.qrcode.base.RSBlock",
    "typeshed.typeshed.stubs.qrcode.qrcode.image.styles.moduledrawers.svg.Coords",
    "typeshed.typeshed.stubs.qrcode.qrcode.main.ActiveWithNeighbors",
    "typeshed.typeshed.stubs.seaborn.seaborn.external.docscrape.Parameter",
    "typeshed.typeshed.stubs.tabulate.tabulate.DataRow",
    "typeshed.typeshed.stubs.tabulate.tabulate.Line",
    "typeshed.typeshed.stubs.tabulate.tabulate.TableFormat",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.io.FixedLenFeature",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.io.FixedLenSequenceFeature",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.io.RaggedFeature",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.io.SparseFeature",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.io.VarLenFeature",
    "typeshed.typeshed.stubs.tqdm.tqdm.std.tqdm",
    "typeshed.typeshed.stubs.waitress.waitress.proxy_headers.Forwarded",
    "typeshed.typeshed.stubs.whatthepatch.whatthepatch.patch.Change",
    "typeshed.typeshed.stubs.whatthepatch.whatthepatch.patch.diffobj",
    "typeshed.typeshed.stubs.whatthepatch.whatthepatch.patch.header",
    "unittest._log._LoggingWatcher",
    "unittest.mock.NonCallableMock",
    "urllib.parse._DefragResultBase",
    "urllib.parse._ParseResultBase",
    "urllib.parse._SplitResultBase",
    "urllib.robotparser.RequestRate",
    "urllib3.util.retry.RequestHistory",
    "urllib3.util.url._UrlBase",
    "waitress.proxy_headers.Forwarded",
    "wave._wave_params",
    "werkzeug.routing.rules.Weighting",
    "whatthepatch.patch.Change",
    "whatthepatch.patch.diffobj",
    "whatthepatch.patch.header",
    "win32.lib.win32gui_struct._LVCOLUMN",
    "win32.lib.win32gui_struct._LVDISPINFO",
    "win32.lib.win32gui_struct._LVHITTEST",
    "win32.lib.win32gui_struct._LVITEM",
    "win32.lib.win32gui_struct._MENUINFO",
    "win32.lib.win32gui_struct._MENUITEMINFO",
    "win32.lib.win32gui_struct._NMITEMACTIVATE",
    "win32.lib.win32gui_struct._TVDISPINFO",
    "win32.lib.win32gui_struct._TVITEM",
    "win32.lib.win32gui_struct._TVNOTIFY",
    "win32.lib.win32gui_struct._UnpackLVNOTIFY",
    "win32.lib.win32gui_struct._WMNOTIFY",
    "zip"
  ],
  "type.__prepare__": [
    "enum.EnumMeta",
    "graphql.pyutils.enum.EnumMeta",
    "pip._vendor.six.with_metaclass.metaclass",
    "pip._vendor.urllib3.packages.six.with_metaclass.metaclass",
    "typeshed.typeshed.stdlib.builtins.type",
    "typeshed.typeshed.stdlib.enum.EnumMeta"
  ],
  "type.__qualname__": [
    "types.BuiltinFunctionType",
    "types.ClassMethodDescriptorType",
    "types.GetSetDescriptorType",
    "types.MemberDescriptorType",
    "types.MethodDescriptorType",
    "types.MethodType",
    "types.MethodWrapperType",
    "types.WrapperDescriptorType",
    "typeshed.typeshed.stdlib.types.BuiltinFunctionType",
    "typeshed.typeshed.stdlib.types.ClassMethodDescriptorType",
    "typeshed.typeshed.stdlib.types.GetSetDescriptorType",
    "typeshed.typeshed.stdlib.types.MemberDescriptorType",
    "typeshed.typeshed.stdlib.types.MethodDescriptorType",
    "typeshed.typeshed.stdlib.types.MethodType",
    "typeshed.typeshed.stdlib.types.MethodWrapperType",
    "typeshed.typeshed.stdlib.types.WrapperDescriptorType"
  ],
  "type.__subclasscheck__": [
    "abc.ABCMeta",
    "pip._vendor.typing_extensions._ProtocolMeta",
    "pip._vendor.typing_extensions._SpecialForm",
    "pip._vendor.typing_extensions._TypedDictMeta",
    "typeshed.typeshed.stdlib.abc.ABCMeta",
    "typeshed.typeshed.stdlib.builtins.type"
  ],
  "type.__subclasses__": [
    "typeshed.typeshed.stdlib.builtins.type"
  ],
  "type.__text_signature__": [
    "typeshed.typeshed.stdlib.builtins.type"
  ],
  "type.__weakrefoffset__": [
    "typeshed.typeshed.stdlib.builtins.type"
  ],
  "type.mro": [
    "typeshed.typeshed.stdlib.builtins.type"
  ],
  "typed_ast.ast27.NodeVisitor.generic_visit": [
    "typed_ast.ast27.NodeTransformer"
  ],
  "typed_ast.ast3.NodeVisitor.generic_visit": [
    "typed_ast.ast3.NodeTransformer"
  ],
  "typeguard._TypeCheckMemo.__init__": [
    "typeguard._CallMemo"
  ],
  "types.ModuleType.__getattr__": [
    "IPython.utils.shimmodule.ShimModule",
    "fpdf.deprecation.WarnOnDeprecatedModuleAttributes",
    "humanfriendly.deprecation.DeprecationProxy",
    "pip._vendor.pygments.formatters._automodule",
    "pip._vendor.pygments.lexers._automodule",
    "typeshed.typeshed.stubs.fpdf2.fpdf.deprecation.WarnOnDeprecatedModuleAttributes",
    "typeshed.typeshed.stubs.humanfriendly.humanfriendly.deprecation.DeprecationProxy"
  ],
  "types.ModuleType.__init__": [
    "IPython.utils.shimmodule.ShimModule",
    "humanfriendly.deprecation.DeprecationProxy",
    "pip._vendor.six._LazyModule",
    "pip._vendor.urllib3.packages.six._LazyModule",
    "typeshed.typeshed.stubs.boltons.boltons.deprutils.DeprecatableModule",
    "typeshed.typeshed.stubs.humanfriendly.humanfriendly.deprecation.DeprecationProxy"
  ],
  "types.ModuleType.__path__": [
    "IPython.utils.shimmodule.ShimModule"
  ],
  "types.ModuleType.__spec__": [
    "IPython.utils.shimmodule.ShimModule"
  ],
  "typeshed.typeshed.stdlib._dummy_thread.LockType.release": [
    "typeshed.typeshed.stdlib._dummy_thread.RLock"
  ],
  "typeshed.typeshed.stdlib._dummy_threading.Thread.__init__": [
    "typeshed.typeshed.stdlib._dummy_threading.Timer"
  ],
  "typeshed.typeshed.stdlib._typeshed.SliceableBuffer.__getitem__": [
    "typeshed.typeshed.stdlib._typeshed.SupportsGetItemBuffer"
  ],
  "typeshed.typeshed.stdlib.argparse.Action.__init__": [
    "typeshed.typeshed.stdlib.argparse.BooleanOptionalAction",
    "typeshed.typeshed.stdlib.argparse._AppendConstAction",
    "typeshed.typeshed.stdlib.argparse._CountAction",
    "typeshed.typeshed.stdlib.argparse._HelpAction",
    "typeshed.typeshed.stdlib.argparse._StoreConstAction",
    "typeshed.typeshed.stdlib.argparse._SubParsersAction",
    "typeshed.typeshed.stdlib.argparse._VersionAction"
  ],
  "typeshed.typeshed.stdlib.argparse._ActionsContainer.__init__": [
    "typeshed.typeshed.stdlib.argparse._ArgumentGroup"
  ],
  "typeshed.typeshed.stdlib.argparse._ArgumentGroup.__init__": [
    "typeshed.typeshed.stdlib.argparse._MutuallyExclusiveGroup"
  ],
  "typeshed.typeshed.stdlib.argparse._StoreConstAction.__init__": [
    "typeshed.typeshed.stdlib.argparse._StoreFalseAction",
    "typeshed.typeshed.stdlib.argparse._StoreTrueAction"
  ],
  "typeshed.typeshed.stdlib.ast.NodeVisitor.generic_visit": [
    "typeshed.typeshed.stdlib.ast.NodeTransformer"
  ],
  "typeshed.typeshed.stdlib.asyncio.events.AbstractEventLoopPolicy.get_child_watcher": [
    "typeshed.typeshed.stdlib.asyncio.unix_events._UnixDefaultEventLoopPolicy"
  ],
  "typeshed.typeshed.stdlib.asyncio.events.AbstractEventLoopPolicy.get_event_loop": [
    "typeshed.typeshed.stdlib.asyncio.events.BaseDefaultEventLoopPolicy"
  ],
  "typeshed.typeshed.stdlib.asyncio.events.AbstractEventLoopPolicy.new_event_loop": [
    "typeshed.typeshed.stdlib.asyncio.events.BaseDefaultEventLoopPolicy"
  ],
  "typeshed.typeshed.stdlib.asyncio.events.AbstractEventLoopPolicy.set_child_watcher": [
    "typeshed.typeshed.stdlib.asyncio.unix_events._UnixDefaultEventLoopPolicy"
  ],
  "typeshed.typeshed.stdlib.asyncio.events.AbstractEventLoopPolicy.set_event_loop": [
    "typeshed.typeshed.stdlib.asyncio.events.BaseDefaultEventLoopPolicy"
  ],
  "typeshed.typeshed.stdlib.asyncio.events.Handle.__init__": [
    "typeshed.typeshed.stdlib.asyncio.events.TimerHandle"
  ],
  "typeshed.typeshed.stdlib.asyncio.futures.Future.__class_getitem__": [
    "typeshed.typeshed.stdlib.asyncio.tasks.Task"
  ],
  "typeshed.typeshed.stdlib.asyncio.futures.Future.__init__": [
    "typeshed.typeshed.stdlib.asyncio.tasks.Task"
  ],
  "typeshed.typeshed.stdlib.asyncio.proactor_events._ProactorBasePipeTransport.__init__": [
    "typeshed.typeshed.stdlib.asyncio.proactor_events._ProactorReadPipeTransport"
  ],
  "typeshed.typeshed.stdlib.asyncio.proactor_events._ProactorReadPipeTransport.__init__": [
    "typeshed.typeshed.stdlib.asyncio.proactor_events._ProactorSocketTransport"
  ],
  "typeshed.typeshed.stdlib.asyncio.protocols.BaseProtocol.connection_lost": [
    "typeshed.typeshed.stdlib.asyncio.sslproto.SSLProtocol"
  ],
  "typeshed.typeshed.stdlib.asyncio.protocols.BaseProtocol.connection_made": [
    "typeshed.typeshed.stdlib.asyncio.protocols.DatagramProtocol"
  ],
  "typeshed.typeshed.stdlib.asyncio.protocols.Protocol.eof_received": [
    "typeshed.typeshed.stdlib.asyncio.sslproto.SSLProtocol"
  ],
  "typeshed.typeshed.stdlib.asyncio.streams.FlowControlMixin.__init__": [
    "typeshed.typeshed.stdlib.asyncio.streams.StreamReaderProtocol"
  ],
  "typeshed.typeshed.stdlib.asyncio.transports.BaseTransport.get_extra_info": [
    "typeshed.typeshed.stdlib.asyncio.sslproto._SSLProtocolTransport"
  ],
  "typeshed.typeshed.stdlib.asyncio.transports.SubprocessTransport.get_pid": [
    "typeshed.typeshed.stdlib.asyncio.base_subprocess.BaseSubprocessTransport"
  ],
  "typeshed.typeshed.stdlib.asyncio.transports.SubprocessTransport.get_pipe_transport": [
    "typeshed.typeshed.stdlib.asyncio.base_subprocess.BaseSubprocessTransport"
  ],
  "typeshed.typeshed.stdlib.asyncio.transports.SubprocessTransport.send_signal": [
    "typeshed.typeshed.stdlib.asyncio.base_subprocess.BaseSubprocessTransport"
  ],
  "typeshed.typeshed.stdlib.asyncio.transports.WriteTransport.can_write_eof": [
    "typeshed.typeshed.stdlib.asyncio.proactor_events._ProactorSocketTransport",
    "typeshed.typeshed.stdlib.asyncio.sslproto._SSLProtocolTransport"
  ],
  "typeshed.typeshed.stdlib.asyncio.transports.WriteTransport.write": [
    "typeshed.typeshed.stdlib.asyncio.sslproto._SSLProtocolTransport"
  ],
  "typeshed.typeshed.stdlib.asyncio.transports._FlowControlMixin.__init__": [
    "typeshed.typeshed.stdlib.asyncio.proactor_events._ProactorBasePipeTransport",
    "typeshed.typeshed.stdlib.asyncio.sslproto._SSLProtocolTransport"
  ],
  "typeshed.typeshed.stdlib.asyncio.unix_events.AbstractChildWatcher.__enter__": [
    "typeshed.typeshed.stdlib.asyncio.unix_events.FastChildWatcher",
    "typeshed.typeshed.stdlib.asyncio.unix_events.MultiLoopChildWatcher",
    "typeshed.typeshed.stdlib.asyncio.unix_events.PidfdChildWatcher",
    "typeshed.typeshed.stdlib.asyncio.unix_events.SafeChildWatcher",
    "typeshed.typeshed.stdlib.asyncio.unix_events.ThreadedChildWatcher"
  ],
  "typeshed.typeshed.stdlib.asyncio.unix_events.AbstractChildWatcher.__exit__": [
    "typeshed.typeshed.stdlib.asyncio.unix_events.FastChildWatcher",
    "typeshed.typeshed.stdlib.asyncio.unix_events.MultiLoopChildWatcher",
    "typeshed.typeshed.stdlib.asyncio.unix_events.PidfdChildWatcher",
    "typeshed.typeshed.stdlib.asyncio.unix_events.SafeChildWatcher",
    "typeshed.typeshed.stdlib.asyncio.unix_events.ThreadedChildWatcher"
  ],
  "typeshed.typeshed.stdlib.asyncio.unix_events.AbstractChildWatcher.add_child_handler": [
    "typeshed.typeshed.stdlib.asyncio.unix_events.FastChildWatcher",
    "typeshed.typeshed.stdlib.asyncio.unix_events.MultiLoopChildWatcher",
    "typeshed.typeshed.stdlib.asyncio.unix_events.PidfdChildWatcher",
    "typeshed.typeshed.stdlib.asyncio.unix_events.SafeChildWatcher",
    "typeshed.typeshed.stdlib.asyncio.unix_events.ThreadedChildWatcher"
  ],
  "typeshed.typeshed.stdlib.asyncio.unix_events.AbstractChildWatcher.attach_loop": [
    "typeshed.typeshed.stdlib.asyncio.unix_events.BaseChildWatcher",
    "typeshed.typeshed.stdlib.asyncio.unix_events.MultiLoopChildWatcher",
    "typeshed.typeshed.stdlib.asyncio.unix_events.PidfdChildWatcher",
    "typeshed.typeshed.stdlib.asyncio.unix_events.ThreadedChildWatcher"
  ],
  "typeshed.typeshed.stdlib.asyncio.unix_events.AbstractChildWatcher.close": [
    "typeshed.typeshed.stdlib.asyncio.unix_events.BaseChildWatcher",
    "typeshed.typeshed.stdlib.asyncio.unix_events.MultiLoopChildWatcher",
    "typeshed.typeshed.stdlib.asyncio.unix_events.PidfdChildWatcher",
    "typeshed.typeshed.stdlib.asyncio.unix_events.ThreadedChildWatcher"
  ],
  "typeshed.typeshed.stdlib.asyncio.unix_events.AbstractChildWatcher.is_active": [
    "typeshed.typeshed.stdlib.asyncio.unix_events.BaseChildWatcher",
    "typeshed.typeshed.stdlib.asyncio.unix_events.MultiLoopChildWatcher",
    "typeshed.typeshed.stdlib.asyncio.unix_events.PidfdChildWatcher",
    "typeshed.typeshed.stdlib.asyncio.unix_events.ThreadedChildWatcher"
  ],
  "typeshed.typeshed.stdlib.asyncio.unix_events.AbstractChildWatcher.remove_child_handler": [
    "typeshed.typeshed.stdlib.asyncio.unix_events.FastChildWatcher",
    "typeshed.typeshed.stdlib.asyncio.unix_events.MultiLoopChildWatcher",
    "typeshed.typeshed.stdlib.asyncio.unix_events.PidfdChildWatcher",
    "typeshed.typeshed.stdlib.asyncio.unix_events.SafeChildWatcher",
    "typeshed.typeshed.stdlib.asyncio.unix_events.ThreadedChildWatcher"
  ],
  "typeshed.typeshed.stdlib.asyncore.dispatcher.__init__": [
    "typeshed.typeshed.stdlib.asyncore.file_dispatcher"
  ],
  "typeshed.typeshed.stdlib.builtins.int.__and__": [
    "typeshed.typeshed.stdlib.builtins.bool"
  ],
  "typeshed.typeshed.stdlib.builtins.int.__getnewargs__": [
    "typeshed.typeshed.stdlib.builtins.bool"
  ],
  "typeshed.typeshed.stdlib.builtins.int.__new__": [
    "typeshed.typeshed.stdlib.builtins.bool"
  ],
  "typeshed.typeshed.stdlib.builtins.int.__or__": [
    "typeshed.typeshed.stdlib.builtins.bool"
  ],
  "typeshed.typeshed.stdlib.builtins.int.__rand__": [
    "typeshed.typeshed.stdlib.builtins.bool"
  ],
  "typeshed.typeshed.stdlib.builtins.int.__ror__": [
    "typeshed.typeshed.stdlib.builtins.bool"
  ],
  "typeshed.typeshed.stdlib.builtins.int.__rxor__": [
    "typeshed.typeshed.stdlib.builtins.bool"
  ],
  "typeshed.typeshed.stdlib.builtins.int.__xor__": [
    "typeshed.typeshed.stdlib.builtins.bool"
  ],
  "typeshed.typeshed.stdlib.calendar.HTMLCalendar.formatmonthname": [
    "typeshed.typeshed.stdlib.calendar.LocaleHTMLCalendar"
  ],
  "typeshed.typeshed.stdlib.calendar.HTMLCalendar.formatweekday": [
    "typeshed.typeshed.stdlib.calendar.LocaleHTMLCalendar"
  ],
  "typeshed.typeshed.stdlib.code.InteractiveInterpreter.__init__": [
    "typeshed.typeshed.stdlib.code.InteractiveConsole"
  ],
  "typeshed.typeshed.stdlib.codecs.IncrementalDecoder.__init__": [
    "typeshed.typeshed.stdlib.codecs.BufferedIncrementalDecoder"
  ],
  "typeshed.typeshed.stdlib.codecs.IncrementalDecoder.decode": [
    "typeshed.typeshed.stdlib.codecs.BufferedIncrementalDecoder"
  ],
  "typeshed.typeshed.stdlib.codecs.IncrementalEncoder.__init__": [
    "typeshed.typeshed.stdlib.codecs.BufferedIncrementalEncoder"
  ],
  "typeshed.typeshed.stdlib.codecs.IncrementalEncoder.encode": [
    "typeshed.typeshed.stdlib.codecs.BufferedIncrementalEncoder"
  ],
  "typeshed.typeshed.stdlib.configparser.Error.__init__": [
    "typeshed.typeshed.stdlib.configparser.DuplicateOptionError",
    "typeshed.typeshed.stdlib.configparser.DuplicateSectionError",
    "typeshed.typeshed.stdlib.configparser.InterpolationError",
    "typeshed.typeshed.stdlib.configparser.NoOptionError",
    "typeshed.typeshed.stdlib.configparser.NoSectionError",
    "typeshed.typeshed.stdlib.configparser.ParsingError"
  ],
  "typeshed.typeshed.stdlib.configparser.Interpolation.before_get": [
    "typeshed.typeshed.stdlib.configparser.LegacyInterpolation"
  ],
  "typeshed.typeshed.stdlib.configparser.InterpolationError.__init__": [
    "typeshed.typeshed.stdlib.configparser.InterpolationDepthError",
    "typeshed.typeshed.stdlib.configparser.InterpolationMissingOptionError"
  ],
  "typeshed.typeshed.stdlib.configparser.ParsingError.__init__": [
    "typeshed.typeshed.stdlib.configparser.MissingSectionHeaderError"
  ],
  "typeshed.typeshed.stdlib.configparser.RawConfigParser.get": [
    "typeshed.typeshed.stdlib.configparser.ConfigParser"
  ],
  "typeshed.typeshed.stdlib.contextlib.AbstractAsyncContextManager.__aexit__": [
    "typeshed.typeshed.stdlib.contextlib._AsyncGeneratorContextManager"
  ],
  "typeshed.typeshed.stdlib.contextlib.AbstractContextManager.__enter__": [
    "typeshed.typeshed.stdlib.contextlib.nullcontext"
  ],
  "typeshed.typeshed.stdlib.contextlib.AbstractContextManager.__exit__": [
    "typeshed.typeshed.stdlib.contextlib._GeneratorContextManager",
    "typeshed.typeshed.stdlib.contextlib._RedirectStream",
    "typeshed.typeshed.stdlib.contextlib.closing",
    "typeshed.typeshed.stdlib.contextlib.nullcontext",
    "typeshed.typeshed.stdlib.contextlib.suppress"
  ],
  "typeshed.typeshed.stdlib.datetime.date.__eq__": [
    "typeshed.typeshed.stdlib.datetime.datetime"
  ],
  "typeshed.typeshed.stdlib.datetime.date.__ge__": [
    "typeshed.typeshed.stdlib.datetime.datetime"
  ],
  "typeshed.typeshed.stdlib.datetime.date.__gt__": [
    "typeshed.typeshed.stdlib.datetime.datetime"
  ],
  "typeshed.typeshed.stdlib.datetime.date.__hash__": [
    "typeshed.typeshed.stdlib.datetime.datetime"
  ],
  "typeshed.typeshed.stdlib.datetime.date.__le__": [
    "typeshed.typeshed.stdlib.datetime.datetime"
  ],
  "typeshed.typeshed.stdlib.datetime.date.__lt__": [
    "typeshed.typeshed.stdlib.datetime.datetime"
  ],
  "typeshed.typeshed.stdlib.datetime.date.__new__": [
    "typeshed.typeshed.stdlib.datetime.datetime"
  ],
  "typeshed.typeshed.stdlib.datetime.date.__sub__": [
    "typeshed.typeshed.stdlib.datetime.datetime"
  ],
  "typeshed.typeshed.stdlib.datetime.date.fromtimestamp": [
    "typeshed.typeshed.stdlib.datetime.datetime"
  ],
  "typeshed.typeshed.stdlib.datetime.date.isoformat": [
    "typeshed.typeshed.stdlib.datetime.datetime"
  ],
  "typeshed.typeshed.stdlib.datetime.date.replace": [
    "typeshed.typeshed.stdlib.datetime.datetime"
  ],
  "typeshed.typeshed.stdlib.datetime.tzinfo.dst": [
    "typeshed.typeshed.stdlib.datetime.timezone"
  ],
  "typeshed.typeshed.stdlib.datetime.tzinfo.tzname": [
    "typeshed.typeshed.stdlib.datetime.timezone"
  ],
  "typeshed.typeshed.stdlib.datetime.tzinfo.utcoffset": [
    "typeshed.typeshed.stdlib.datetime.timezone"
  ],
  "typeshed.typeshed.stdlib.distutils.cmd.Command.finalize_options": [
    "typeshed.typeshed.stdlib.distutils.command.bdist.bdist",
    "typeshed.typeshed.stdlib.distutils.command.bdist_dumb.bdist_dumb",
    "typeshed.typeshed.stdlib.distutils.command.bdist_rpm.bdist_rpm",
    "typeshed.typeshed.stdlib.distutils.command.build.build",
    "typeshed.typeshed.stdlib.distutils.command.build_clib.build_clib",
    "typeshed.typeshed.stdlib.distutils.command.build_ext.build_ext",
    "typeshed.typeshed.stdlib.distutils.command.build_py.build_py",
    "typeshed.typeshed.stdlib.distutils.command.build_scripts.build_scripts",
    "typeshed.typeshed.stdlib.distutils.command.check.check",
    "typeshed.typeshed.stdlib.distutils.command.clean.clean",
    "typeshed.typeshed.stdlib.distutils.command.config.config",
    "typeshed.typeshed.stdlib.distutils.command.install.install",
    "typeshed.typeshed.stdlib.distutils.command.install_data.install_data",
    "typeshed.typeshed.stdlib.distutils.command.install_egg_info.install_egg_info",
    "typeshed.typeshed.stdlib.distutils.command.install_headers.install_headers",
    "typeshed.typeshed.stdlib.distutils.command.install_lib.install_lib",
    "typeshed.typeshed.stdlib.distutils.command.install_scripts.install_scripts",
    "typeshed.typeshed.stdlib.distutils.command.sdist.sdist"
  ],
  "typeshed.typeshed.stdlib.distutils.cmd.Command.initialize_options": [
    "typeshed.typeshed.stdlib.distutils.command.bdist.bdist",
    "typeshed.typeshed.stdlib.distutils.command.bdist_dumb.bdist_dumb",
    "typeshed.typeshed.stdlib.distutils.command.bdist_rpm.bdist_rpm",
    "typeshed.typeshed.stdlib.distutils.command.build.build",
    "typeshed.typeshed.stdlib.distutils.command.build_clib.build_clib",
    "typeshed.typeshed.stdlib.distutils.command.build_ext.build_ext",
    "typeshed.typeshed.stdlib.distutils.command.build_py.build_py",
    "typeshed.typeshed.stdlib.distutils.command.build_scripts.build_scripts",
    "typeshed.typeshed.stdlib.distutils.command.check.check",
    "typeshed.typeshed.stdlib.distutils.command.clean.clean",
    "typeshed.typeshed.stdlib.distutils.command.config.config",
    "typeshed.typeshed.stdlib.distutils.command.install.install",
    "typeshed.typeshed.stdlib.distutils.command.install_data.install_data",
    "typeshed.typeshed.stdlib.distutils.command.install_egg_info.install_egg_info",
    "typeshed.typeshed.stdlib.distutils.command.install_headers.install_headers",
    "typeshed.typeshed.stdlib.distutils.command.install_lib.install_lib",
    "typeshed.typeshed.stdlib.distutils.command.install_scripts.install_scripts",
    "typeshed.typeshed.stdlib.distutils.command.sdist.sdist"
  ],
  "typeshed.typeshed.stdlib.distutils.cmd.Command.run": [
    "typeshed.typeshed.stdlib.distutils.command.bdist.bdist",
    "typeshed.typeshed.stdlib.distutils.command.bdist_dumb.bdist_dumb",
    "typeshed.typeshed.stdlib.distutils.command.bdist_rpm.bdist_rpm",
    "typeshed.typeshed.stdlib.distutils.command.build.build",
    "typeshed.typeshed.stdlib.distutils.command.build_clib.build_clib",
    "typeshed.typeshed.stdlib.distutils.command.build_ext.build_ext",
    "typeshed.typeshed.stdlib.distutils.command.build_py.build_py",
    "typeshed.typeshed.stdlib.distutils.command.build_scripts.build_scripts",
    "typeshed.typeshed.stdlib.distutils.command.check.check",
    "typeshed.typeshed.stdlib.distutils.command.clean.clean",
    "typeshed.typeshed.stdlib.distutils.command.config.config",
    "typeshed.typeshed.stdlib.distutils.command.install.install",
    "typeshed.typeshed.stdlib.distutils.command.install_data.install_data",
    "typeshed.typeshed.stdlib.distutils.command.install_egg_info.install_egg_info",
    "typeshed.typeshed.stdlib.distutils.command.install_headers.install_headers",
    "typeshed.typeshed.stdlib.distutils.command.install_lib.install_lib",
    "typeshed.typeshed.stdlib.distutils.command.install_scripts.install_scripts",
    "typeshed.typeshed.stdlib.distutils.command.sdist.sdist"
  ],
  "typeshed.typeshed.stdlib.distutils.cmd.Command.warn": [
    "typeshed.typeshed.stdlib.distutils.command.check.check"
  ],
  "typeshed.typeshed.stdlib.distutils.command.build_py.build_py.build_module": [
    "typeshed.typeshed.stdlib.distutils.command.build_py.build_py_2to3"
  ],
  "typeshed.typeshed.stdlib.distutils.command.build_py.build_py.run": [
    "typeshed.typeshed.stdlib.distutils.command.build_py.build_py_2to3"
  ],
  "typeshed.typeshed.stdlib.distutils.command.build_scripts.build_scripts.copy_scripts": [
    "typeshed.typeshed.stdlib.distutils.command.build_scripts.build_scripts_2to3"
  ],
  "typeshed.typeshed.stdlib.distutils.config.PyPIRCCommand.finalize_options": [
    "typeshed.typeshed.stdlib.distutils.command.register.register",
    "typeshed.typeshed.stdlib.distutils.command.upload.upload"
  ],
  "typeshed.typeshed.stdlib.distutils.config.PyPIRCCommand.initialize_options": [
    "typeshed.typeshed.stdlib.distutils.command.register.register",
    "typeshed.typeshed.stdlib.distutils.command.upload.upload"
  ],
  "typeshed.typeshed.stdlib.distutils.config.PyPIRCCommand.run": [
    "typeshed.typeshed.stdlib.distutils.command.register.register",
    "typeshed.typeshed.stdlib.distutils.command.upload.upload"
  ],
  "typeshed.typeshed.stdlib.distutils.version.Version.__init__": [
    "typeshed.typeshed.stdlib.distutils.version.LooseVersion",
    "typeshed.typeshed.stdlib.distutils.version.StrictVersion"
  ],
  "typeshed.typeshed.stdlib.distutils.version.Version.__str__": [
    "typeshed.typeshed.stdlib.distutils.version.LooseVersion",
    "typeshed.typeshed.stdlib.distutils.version.StrictVersion"
  ],
  "typeshed.typeshed.stdlib.distutils.version.Version._cmp": [
    "typeshed.typeshed.stdlib.distutils.version.LooseVersion",
    "typeshed.typeshed.stdlib.distutils.version.StrictVersion"
  ],
  "typeshed.typeshed.stdlib.distutils.version.Version.parse": [
    "typeshed.typeshed.stdlib.distutils.version.LooseVersion",
    "typeshed.typeshed.stdlib.distutils.version.StrictVersion"
  ],
  "typeshed.typeshed.stdlib.email._header_value_parser.TokenList.fold": [
    "typeshed.typeshed.stdlib.email._header_value_parser.MsgID"
  ],
  "typeshed.typeshed.stdlib.email.generator.Generator.__init__": [
    "typeshed.typeshed.stdlib.email.generator.BytesGenerator",
    "typeshed.typeshed.stdlib.email.generator.DecodedGenerator"
  ],
  "typeshed.typeshed.stdlib.email.message.Message.__init__": [
    "typeshed.typeshed.stdlib.email.message.MIMEPart"
  ],
  "typeshed.typeshed.stdlib.email.message.Message.as_string": [
    "typeshed.typeshed.stdlib.email.message.MIMEPart"
  ],
  "typeshed.typeshed.stdlib.email.parser.BytesParser.parse": [
    "typeshed.typeshed.stdlib.email.parser.BytesHeaderParser"
  ],
  "typeshed.typeshed.stdlib.email.parser.BytesParser.parsebytes": [
    "typeshed.typeshed.stdlib.email.parser.BytesHeaderParser"
  ],
  "typeshed.typeshed.stdlib.email.parser.Parser.parse": [
    "typeshed.typeshed.stdlib.email.parser.HeaderParser"
  ],
  "typeshed.typeshed.stdlib.email.parser.Parser.parsestr": [
    "typeshed.typeshed.stdlib.email.parser.HeaderParser"
  ],
  "typeshed.typeshed.stdlib.email.policy.Policy.__init__": [
    "typeshed.typeshed.stdlib.email.policy.EmailPolicy"
  ],
  "typeshed.typeshed.stdlib.email.policy.Policy.fold": [
    "typeshed.typeshed.stdlib.email.policy.Compat32",
    "typeshed.typeshed.stdlib.email.policy.EmailPolicy"
  ],
  "typeshed.typeshed.stdlib.email.policy.Policy.fold_binary": [
    "typeshed.typeshed.stdlib.email.policy.Compat32",
    "typeshed.typeshed.stdlib.email.policy.EmailPolicy"
  ],
  "typeshed.typeshed.stdlib.email.policy.Policy.header_fetch_parse": [
    "typeshed.typeshed.stdlib.email.policy.Compat32",
    "typeshed.typeshed.stdlib.email.policy.EmailPolicy"
  ],
  "typeshed.typeshed.stdlib.email.policy.Policy.header_source_parse": [
    "typeshed.typeshed.stdlib.email.policy.Compat32",
    "typeshed.typeshed.stdlib.email.policy.EmailPolicy"
  ],
  "typeshed.typeshed.stdlib.email.policy.Policy.header_store_parse": [
    "typeshed.typeshed.stdlib.email.policy.Compat32",
    "typeshed.typeshed.stdlib.email.policy.EmailPolicy"
  ],
  "typeshed.typeshed.stdlib.enum.Enum.name": [
    "typeshed.typeshed.stdlib.enum.Flag"
  ],
  "typeshed.typeshed.stdlib.enum.Enum.value": [
    "typeshed.typeshed.stdlib.enum.Flag",
    "typeshed.typeshed.stdlib.enum.IntEnum"
  ],
  "typeshed.typeshed.stdlib.enum.EnumMeta.__bool__": [
    "typeshed.typeshed.stdlib.enum.Flag"
  ],
  "typeshed.typeshed.stdlib.enum.EnumMeta.__contains__": [
    "typeshed.typeshed.stdlib.enum.Flag"
  ],
  "typeshed.typeshed.stdlib.enum.Flag.value": [
    "typeshed.typeshed.stdlib.enum.auto"
  ],
  "typeshed.typeshed.stdlib.enum.IntFlag.__new__": [
    "typeshed.typeshed.stdlib.enum.auto"
  ],
  "typeshed.typeshed.stdlib.ftplib.FTP.__init__": [
    "typeshed.typeshed.stdlib.ftplib.FTP_TLS"
  ],
  "typeshed.typeshed.stdlib.ftplib.FTP.login": [
    "typeshed.typeshed.stdlib.ftplib.FTP_TLS"
  ],
  "typeshed.typeshed.stdlib.hashlib._Hash.__init__": [
    "typeshed.typeshed.stdlib.hashlib._BlakeHash"
  ],
  "typeshed.typeshed.stdlib.http.client.HTTPConnection.__init__": [
    "typeshed.typeshed.stdlib.http.client.HTTPSConnection"
  ],
  "typeshed.typeshed.stdlib.http.cookiejar.CookieJar.__init__": [
    "typeshed.typeshed.stdlib.http.cookiejar.FileCookieJar"
  ],
  "typeshed.typeshed.stdlib.imaplib.IMAP4.__init__": [
    "typeshed.typeshed.stdlib.imaplib.IMAP4_SSL",
    "typeshed.typeshed.stdlib.imaplib.IMAP4_stream"
  ],
  "typeshed.typeshed.stdlib.imaplib.IMAP4.open": [
    "typeshed.typeshed.stdlib.imaplib.IMAP4_SSL",
    "typeshed.typeshed.stdlib.imaplib.IMAP4_stream"
  ],
  "typeshed.typeshed.stdlib.importlib.abc.ExecutionLoader.get_filename": [
    "typeshed.typeshed.stdlib.importlib.abc.FileLoader"
  ],
  "typeshed.typeshed.stdlib.importlib.abc.InspectLoader.get_source": [
    "typeshed.typeshed.stdlib.importlib.abc.SourceLoader"
  ],
  "typeshed.typeshed.stdlib.importlib.abc.Loader.exec_module": [
    "typeshed.typeshed.stdlib.importlib.abc.InspectLoader"
  ],
  "typeshed.typeshed.stdlib.importlib.abc.Loader.load_module": [
    "typeshed.typeshed.stdlib.importlib.abc.FileLoader"
  ],
  "typeshed.typeshed.stdlib.importlib.abc.ResourceLoader.get_data": [
    "typeshed.typeshed.stdlib.importlib.abc.FileLoader"
  ],
  "typeshed.typeshed.stdlib.importlib.abc.ResourceReader.contents": [
    "typeshed.typeshed.stdlib.importlib.abc.TraversableResources"
  ],
  "typeshed.typeshed.stdlib.importlib.abc.ResourceReader.is_resource": [
    "typeshed.typeshed.stdlib.importlib.abc.TraversableResources"
  ],
  "typeshed.typeshed.stdlib.importlib.abc.ResourceReader.open_resource": [
    "typeshed.typeshed.stdlib.importlib.abc.TraversableResources"
  ],
  "typeshed.typeshed.stdlib.importlib.abc.ResourceReader.resource_path": [
    "typeshed.typeshed.stdlib.importlib.abc.TraversableResources"
  ],
  "typeshed.typeshed.stdlib.importlib.metadata.Distribution.locate_file": [
    "typeshed.typeshed.stdlib.importlib.metadata.PathDistribution"
  ],
  "typeshed.typeshed.stdlib.importlib.metadata.Distribution.read_text": [
    "typeshed.typeshed.stdlib.importlib.metadata.PathDistribution"
  ],
  "typeshed.typeshed.stdlib.importlib.metadata.DistributionFinder.find_distributions": [
    "typeshed.typeshed.stdlib.importlib.metadata.MetadataPathFinder"
  ],
  "typeshed.typeshed.stdlib.io.BufferedIOBase.read1": [
    "typeshed.typeshed.stdlib.io.BytesIO"
  ],
  "typeshed.typeshed.stdlib.io.BufferedIOBase.write": [
    "typeshed.typeshed.stdlib.io.BufferedWriter"
  ],
  "typeshed.typeshed.stdlib.io.BufferedReader.__enter__": [
    "typeshed.typeshed.stdlib.io.BufferedRandom"
  ],
  "typeshed.typeshed.stdlib.io.IOBase.__enter__": [
    "typeshed.typeshed.stdlib.io.BufferedReader",
    "typeshed.typeshed.stdlib.io.BufferedWriter",
    "typeshed.typeshed.stdlib.io.BytesIO",
    "typeshed.typeshed.stdlib.io.FileIO",
    "typeshed.typeshed.stdlib.io.TextIOWrapper"
  ],
  "typeshed.typeshed.stdlib.io.IOBase.__iter__": [
    "typeshed.typeshed.stdlib.io.TextIOBase"
  ],
  "typeshed.typeshed.stdlib.io.IOBase.__next__": [
    "typeshed.typeshed.stdlib.io.TextIOBase"
  ],
  "typeshed.typeshed.stdlib.io.IOBase.closed": [
    "typeshed.typeshed.stdlib.io.TextIOWrapper"
  ],
  "typeshed.typeshed.stdlib.io.IOBase.read": [
    "typeshed.typeshed.stdlib.io.BufferedIOBase",
    "typeshed.typeshed.stdlib.io.RawIOBase",
    "typeshed.typeshed.stdlib.io.TextIOBase"
  ],
  "typeshed.typeshed.stdlib.io.IOBase.readline": [
    "typeshed.typeshed.stdlib.io.TextIOBase"
  ],
  "typeshed.typeshed.stdlib.io.IOBase.readlines": [
    "typeshed.typeshed.stdlib.io.TextIOBase"
  ],
  "typeshed.typeshed.stdlib.io.IOBase.seek": [
    "typeshed.typeshed.stdlib.io.BufferedRandom",
    "typeshed.typeshed.stdlib.io.TextIOWrapper"
  ],
  "typeshed.typeshed.stdlib.io.IOBase.write": [
    "typeshed.typeshed.stdlib.io.BufferedIOBase",
    "typeshed.typeshed.stdlib.io.RawIOBase",
    "typeshed.typeshed.stdlib.io.TextIOBase"
  ],
  "typeshed.typeshed.stdlib.io.IOBase.writelines": [
    "typeshed.typeshed.stdlib.io.TextIOBase"
  ],
  "typeshed.typeshed.stdlib.io.RawIOBase.read": [
    "typeshed.typeshed.stdlib.io.FileIO"
  ],
  "typeshed.typeshed.stdlib.io.RawIOBase.write": [
    "typeshed.typeshed.stdlib.io.FileIO"
  ],
  "typeshed.typeshed.stdlib.io.TextIOBase.__iter__": [
    "typeshed.typeshed.stdlib.io.TextIOWrapper"
  ],
  "typeshed.typeshed.stdlib.io.TextIOBase.__next__": [
    "typeshed.typeshed.stdlib.io.TextIOWrapper"
  ],
  "typeshed.typeshed.stdlib.io.TextIOBase.readline": [
    "typeshed.typeshed.stdlib.io.TextIOWrapper"
  ],
  "typeshed.typeshed.stdlib.io.TextIOBase.readlines": [
    "typeshed.typeshed.stdlib.io.TextIOWrapper"
  ],
  "typeshed.typeshed.stdlib.io.TextIOBase.writelines": [
    "typeshed.typeshed.stdlib.io.TextIOWrapper"
  ],
  "typeshed.typeshed.stdlib.io.TextIOWrapper.__init__": [
    "typeshed.typeshed.stdlib.io.StringIO"
  ],
  "typeshed.typeshed.stdlib.ipaddress.IPv6Address.__eq__": [
    "typeshed.typeshed.stdlib.ipaddress.IPv6Interface"
  ],
  "typeshed.typeshed.stdlib.ipaddress.IPv6Address.__hash__": [
    "typeshed.typeshed.stdlib.ipaddress.IPv6Interface"
  ],
  "typeshed.typeshed.stdlib.lib2to3.fixer_base.BaseFix.compile_pattern": [
    "typeshed.typeshed.stdlib.lib2to3.fixes.fix_imports.FixImports"
  ],
  "typeshed.typeshed.stdlib.lib2to3.fixer_base.BaseFix.finish_tree": [
    "typeshed.typeshed.stdlib.lib2to3.fixes.fix_xrange.FixXrange"
  ],
  "typeshed.typeshed.stdlib.lib2to3.fixer_base.BaseFix.match": [
    "typeshed.typeshed.stdlib.lib2to3.fixes.fix_idioms.FixIdioms",
    "typeshed.typeshed.stdlib.lib2to3.fixes.fix_imports.FixImports",
    "typeshed.typeshed.stdlib.lib2to3.fixes.fix_ne.FixNe",
    "typeshed.typeshed.stdlib.lib2to3.fixes.fix_numliterals.FixNumliterals",
    "typeshed.typeshed.stdlib.lib2to3.fixes.fix_renames.FixRenames"
  ],
  "typeshed.typeshed.stdlib.lib2to3.fixer_base.BaseFix.start_tree": [
    "typeshed.typeshed.stdlib.lib2to3.fixer_base.ConditionalFix",
    "typeshed.typeshed.stdlib.lib2to3.fixes.fix_import.FixImport",
    "typeshed.typeshed.stdlib.lib2to3.fixes.fix_imports.FixImports",
    "typeshed.typeshed.stdlib.lib2to3.fixes.fix_next.FixNext",
    "typeshed.typeshed.stdlib.lib2to3.fixes.fix_unicode.FixUnicode",
    "typeshed.typeshed.stdlib.lib2to3.fixes.fix_xrange.FixXrange"
  ],
  "typeshed.typeshed.stdlib.lib2to3.fixer_base.BaseFix.transform": [
    "typeshed.typeshed.stdlib.lib2to3.fixes.fix_apply.FixApply",
    "typeshed.typeshed.stdlib.lib2to3.fixes.fix_asserts.FixAsserts",
    "typeshed.typeshed.stdlib.lib2to3.fixes.fix_basestring.FixBasestring",
    "typeshed.typeshed.stdlib.lib2to3.fixes.fix_buffer.FixBuffer",
    "typeshed.typeshed.stdlib.lib2to3.fixes.fix_dict.FixDict",
    "typeshed.typeshed.stdlib.lib2to3.fixes.fix_except.FixExcept",
    "typeshed.typeshed.stdlib.lib2to3.fixes.fix_exec.FixExec",
    "typeshed.typeshed.stdlib.lib2to3.fixes.fix_execfile.FixExecfile",
    "typeshed.typeshed.stdlib.lib2to3.fixes.fix_filter.FixFilter",
    "typeshed.typeshed.stdlib.lib2to3.fixes.fix_funcattrs.FixFuncattrs",
    "typeshed.typeshed.stdlib.lib2to3.fixes.fix_future.FixFuture",
    "typeshed.typeshed.stdlib.lib2to3.fixes.fix_getcwdu.FixGetcwdu",
    "typeshed.typeshed.stdlib.lib2to3.fixes.fix_has_key.FixHasKey",
    "typeshed.typeshed.stdlib.lib2to3.fixes.fix_idioms.FixIdioms",
    "typeshed.typeshed.stdlib.lib2to3.fixes.fix_import.FixImport",
    "typeshed.typeshed.stdlib.lib2to3.fixes.fix_imports.FixImports",
    "typeshed.typeshed.stdlib.lib2to3.fixes.fix_input.FixInput",
    "typeshed.typeshed.stdlib.lib2to3.fixes.fix_intern.FixIntern",
    "typeshed.typeshed.stdlib.lib2to3.fixes.fix_isinstance.FixIsinstance",
    "typeshed.typeshed.stdlib.lib2to3.fixes.fix_itertools.FixItertools",
    "typeshed.typeshed.stdlib.lib2to3.fixes.fix_map.FixMap",
    "typeshed.typeshed.stdlib.lib2to3.fixes.fix_metaclass.FixMetaclass",
    "typeshed.typeshed.stdlib.lib2to3.fixes.fix_methodattrs.FixMethodattrs",
    "typeshed.typeshed.stdlib.lib2to3.fixes.fix_ne.FixNe",
    "typeshed.typeshed.stdlib.lib2to3.fixes.fix_next.FixNext",
    "typeshed.typeshed.stdlib.lib2to3.fixes.fix_nonzero.FixNonzero",
    "typeshed.typeshed.stdlib.lib2to3.fixes.fix_numliterals.FixNumliterals",
    "typeshed.typeshed.stdlib.lib2to3.fixes.fix_paren.FixParen",
    "typeshed.typeshed.stdlib.lib2to3.fixes.fix_print.FixPrint",
    "typeshed.typeshed.stdlib.lib2to3.fixes.fix_raise.FixRaise",
    "typeshed.typeshed.stdlib.lib2to3.fixes.fix_raw_input.FixRawInput",
    "typeshed.typeshed.stdlib.lib2to3.fixes.fix_reload.FixReload",
    "typeshed.typeshed.stdlib.lib2to3.fixes.fix_renames.FixRenames",
    "typeshed.typeshed.stdlib.lib2to3.fixes.fix_repr.FixRepr",
    "typeshed.typeshed.stdlib.lib2to3.fixes.fix_standarderror.FixStandarderror",
    "typeshed.typeshed.stdlib.lib2to3.fixes.fix_sys_exc.FixSysExc",
    "typeshed.typeshed.stdlib.lib2to3.fixes.fix_throw.FixThrow",
    "typeshed.typeshed.stdlib.lib2to3.fixes.fix_tuple_params.FixTupleParams",
    "typeshed.typeshed.stdlib.lib2to3.fixes.fix_types.FixTypes",
    "typeshed.typeshed.stdlib.lib2to3.fixes.fix_unicode.FixUnicode",
    "typeshed.typeshed.stdlib.lib2to3.fixes.fix_ws_comma.FixWsComma",
    "typeshed.typeshed.stdlib.lib2to3.fixes.fix_xrange.FixXrange",
    "typeshed.typeshed.stdlib.lib2to3.fixes.fix_xreadlines.FixXreadlines",
    "typeshed.typeshed.stdlib.lib2to3.fixes.fix_zip.FixZip"
  ],
  "typeshed.typeshed.stdlib.lib2to3.fixes.fix_imports.FixImports.build_pattern": [
    "typeshed.typeshed.stdlib.lib2to3.fixes.fix_urllib.FixUrllib"
  ],
  "typeshed.typeshed.stdlib.lib2to3.fixes.fix_imports.FixImports.transform": [
    "typeshed.typeshed.stdlib.lib2to3.fixes.fix_urllib.FixUrllib"
  ],
  "typeshed.typeshed.stdlib.lib2to3.pytree.Base._eq": [
    "typeshed.typeshed.stdlib.lib2to3.pytree.Leaf",
    "typeshed.typeshed.stdlib.lib2to3.pytree.Node"
  ],
  "typeshed.typeshed.stdlib.lib2to3.pytree.Base.clone": [
    "typeshed.typeshed.stdlib.lib2to3.pytree.Leaf",
    "typeshed.typeshed.stdlib.lib2to3.pytree.Node"
  ],
  "typeshed.typeshed.stdlib.lib2to3.pytree.Base.post_order": [
    "typeshed.typeshed.stdlib.lib2to3.pytree.Leaf",
    "typeshed.typeshed.stdlib.lib2to3.pytree.Node"
  ],
  "typeshed.typeshed.stdlib.lib2to3.pytree.Base.pre_order": [
    "typeshed.typeshed.stdlib.lib2to3.pytree.Leaf",
    "typeshed.typeshed.stdlib.lib2to3.pytree.Node"
  ],
  "typeshed.typeshed.stdlib.lib2to3.refactor.RefactoringTool.log_error": [
    "typeshed.typeshed.stdlib.lib2to3.main.StdoutRefactoringTool"
  ],
  "typeshed.typeshed.stdlib.lib2to3.refactor.RefactoringTool.print_output": [
    "typeshed.typeshed.stdlib.lib2to3.main.StdoutRefactoringTool"
  ],
  "typeshed.typeshed.stdlib.lib2to3.refactor.RefactoringTool.refactor": [
    "typeshed.typeshed.stdlib.lib2to3.refactor.MultiprocessRefactoringTool"
  ],
  "typeshed.typeshed.stdlib.lib2to3.refactor.RefactoringTool.write_file": [
    "typeshed.typeshed.stdlib.lib2to3.main.StdoutRefactoringTool"
  ],
  "typeshed.typeshed.stdlib.logging.Handler.__init__": [
    "typeshed.typeshed.stdlib.logging.StreamHandler"
  ],
  "typeshed.typeshed.stdlib.logging.Logger.__init__": [
    "typeshed.typeshed.stdlib.logging.RootLogger"
  ],
  "typeshed.typeshed.stdlib.logging.StreamHandler.__init__": [
    "typeshed.typeshed.stdlib.logging.FileHandler"
  ],
  "typeshed.typeshed.stdlib.logging.handlers.BaseRotatingHandler.__init__": [
    "typeshed.typeshed.stdlib.logging.handlers.RotatingFileHandler",
    "typeshed.typeshed.stdlib.logging.handlers.TimedRotatingFileHandler"
  ],
  "typeshed.typeshed.stdlib.logging.handlers.BufferingHandler.__init__": [
    "typeshed.typeshed.stdlib.logging.handlers.MemoryHandler"
  ],
  "typeshed.typeshed.stdlib.logging.handlers.SocketHandler.makeSocket": [
    "typeshed.typeshed.stdlib.logging.handlers.DatagramHandler"
  ],
  "typeshed.typeshed.stdlib.mailbox.Mailbox.__contains__": [
    "typeshed.typeshed.stdlib.mailbox.MH",
    "typeshed.typeshed.stdlib.mailbox.Maildir",
    "typeshed.typeshed.stdlib.mailbox._singlefileMailbox"
  ],
  "typeshed.typeshed.stdlib.mailbox.Mailbox.__init__": [
    "typeshed.typeshed.stdlib.mailbox.MH",
    "typeshed.typeshed.stdlib.mailbox.Maildir"
  ],
  "typeshed.typeshed.stdlib.mailbox.Mailbox.__len__": [
    "typeshed.typeshed.stdlib.mailbox.MH",
    "typeshed.typeshed.stdlib.mailbox.Maildir",
    "typeshed.typeshed.stdlib.mailbox._singlefileMailbox"
  ],
  "typeshed.typeshed.stdlib.mailbox.Mailbox.__setitem__": [
    "typeshed.typeshed.stdlib.mailbox.MH",
    "typeshed.typeshed.stdlib.mailbox.Maildir",
    "typeshed.typeshed.stdlib.mailbox._singlefileMailbox"
  ],
  "typeshed.typeshed.stdlib.mailbox.Mailbox.add": [
    "typeshed.typeshed.stdlib.mailbox.MH",
    "typeshed.typeshed.stdlib.mailbox.Maildir",
    "typeshed.typeshed.stdlib.mailbox._singlefileMailbox"
  ],
  "typeshed.typeshed.stdlib.mailbox.Mailbox.close": [
    "typeshed.typeshed.stdlib.mailbox.MH",
    "typeshed.typeshed.stdlib.mailbox.Maildir",
    "typeshed.typeshed.stdlib.mailbox._singlefileMailbox"
  ],
  "typeshed.typeshed.stdlib.mailbox.Mailbox.flush": [
    "typeshed.typeshed.stdlib.mailbox.MH",
    "typeshed.typeshed.stdlib.mailbox.Maildir",
    "typeshed.typeshed.stdlib.mailbox._singlefileMailbox"
  ],
  "typeshed.typeshed.stdlib.mailbox.Mailbox.get_bytes": [
    "typeshed.typeshed.stdlib.mailbox.Babyl",
    "typeshed.typeshed.stdlib.mailbox.MH",
    "typeshed.typeshed.stdlib.mailbox.Maildir",
    "typeshed.typeshed.stdlib.mailbox._mboxMMDF"
  ],
  "typeshed.typeshed.stdlib.mailbox.Mailbox.get_file": [
    "typeshed.typeshed.stdlib.mailbox.Babyl",
    "typeshed.typeshed.stdlib.mailbox.MH",
    "typeshed.typeshed.stdlib.mailbox.Maildir",
    "typeshed.typeshed.stdlib.mailbox._mboxMMDF"
  ],
  "typeshed.typeshed.stdlib.mailbox.Mailbox.get_message": [
    "typeshed.typeshed.stdlib.mailbox.Babyl",
    "typeshed.typeshed.stdlib.mailbox.MH",
    "typeshed.typeshed.stdlib.mailbox.Maildir",
    "typeshed.typeshed.stdlib.mailbox._mboxMMDF"
  ],
  "typeshed.typeshed.stdlib.mailbox.Mailbox.get_string": [
    "typeshed.typeshed.stdlib.mailbox._mboxMMDF"
  ],
  "typeshed.typeshed.stdlib.mailbox.Mailbox.iterkeys": [
    "typeshed.typeshed.stdlib.mailbox.MH",
    "typeshed.typeshed.stdlib.mailbox.Maildir",
    "typeshed.typeshed.stdlib.mailbox._singlefileMailbox"
  ],
  "typeshed.typeshed.stdlib.mailbox.Mailbox.lock": [
    "typeshed.typeshed.stdlib.mailbox.MH",
    "typeshed.typeshed.stdlib.mailbox.Maildir",
    "typeshed.typeshed.stdlib.mailbox._singlefileMailbox"
  ],
  "typeshed.typeshed.stdlib.mailbox.Mailbox.remove": [
    "typeshed.typeshed.stdlib.mailbox.MH",
    "typeshed.typeshed.stdlib.mailbox.Maildir",
    "typeshed.typeshed.stdlib.mailbox._singlefileMailbox"
  ],
  "typeshed.typeshed.stdlib.mailbox.Mailbox.unlock": [
    "typeshed.typeshed.stdlib.mailbox.MH",
    "typeshed.typeshed.stdlib.mailbox.Maildir",
    "typeshed.typeshed.stdlib.mailbox._singlefileMailbox"
  ],
  "typeshed.typeshed.stdlib.mailbox._ProxyFile.__init__": [
    "typeshed.typeshed.stdlib.mailbox._PartialFile"
  ],
  "typeshed.typeshed.stdlib.multiprocessing.managers.BaseManager.get_server": [
    "typeshed.typeshed.stdlib.multiprocessing.managers.SharedMemoryManager"
  ],
  "typeshed.typeshed.stdlib.multiprocessing.pool.ApplyResult.__init__": [
    "typeshed.typeshed.stdlib.multiprocessing.pool.MapResult"
  ],
  "typeshed.typeshed.stdlib.multiprocessing.pool.Pool.__init__": [
    "typeshed.typeshed.stdlib.multiprocessing.pool.ThreadPool"
  ],
  "typeshed.typeshed.stdlib.multiprocessing.synchronize.Semaphore.__init__": [
    "typeshed.typeshed.stdlib.multiprocessing.synchronize.BoundedSemaphore"
  ],
  "typeshed.typeshed.stdlib.nntplib.NNTP.__init__": [
    "typeshed.typeshed.stdlib.nntplib.NNTP_SSL"
  ],
  "typeshed.typeshed.stdlib.numbers.Complex.__complex__": [
    "typeshed.typeshed.stdlib.numbers.Real"
  ],
  "typeshed.typeshed.stdlib.numbers.Complex.__pow__": [
    "typeshed.typeshed.stdlib.numbers.Integral"
  ],
  "typeshed.typeshed.stdlib.numbers.Complex.conjugate": [
    "typeshed.typeshed.stdlib.numbers.Real"
  ],
  "typeshed.typeshed.stdlib.numbers.Complex.imag": [
    "typeshed.typeshed.stdlib.numbers.Real"
  ],
  "typeshed.typeshed.stdlib.numbers.Complex.real": [
    "typeshed.typeshed.stdlib.numbers.Real"
  ],
  "typeshed.typeshed.stdlib.numbers.Rational.__float__": [
    "typeshed.typeshed.stdlib.numbers.Integral"
  ],
  "typeshed.typeshed.stdlib.numbers.Rational.denominator": [
    "typeshed.typeshed.stdlib.numbers.Integral"
  ],
  "typeshed.typeshed.stdlib.numbers.Rational.numerator": [
    "typeshed.typeshed.stdlib.numbers.Integral"
  ],
  "typeshed.typeshed.stdlib.numbers.Real.__float__": [
    "typeshed.typeshed.stdlib.numbers.Rational"
  ],
  "typeshed.typeshed.stdlib.optparse.BadOptionError.__init__": [
    "typeshed.typeshed.stdlib.optparse.AmbiguousOptionError"
  ],
  "typeshed.typeshed.stdlib.optparse.HelpFormatter.__init__": [
    "typeshed.typeshed.stdlib.optparse.IndentedHelpFormatter",
    "typeshed.typeshed.stdlib.optparse.TitledHelpFormatter"
  ],
  "typeshed.typeshed.stdlib.optparse.HelpFormatter.format_heading": [
    "typeshed.typeshed.stdlib.optparse.IndentedHelpFormatter",
    "typeshed.typeshed.stdlib.optparse.TitledHelpFormatter"
  ],
  "typeshed.typeshed.stdlib.optparse.HelpFormatter.format_usage": [
    "typeshed.typeshed.stdlib.optparse.IndentedHelpFormatter",
    "typeshed.typeshed.stdlib.optparse.TitledHelpFormatter"
  ],
  "typeshed.typeshed.stdlib.optparse.OptParseError.__init__": [
    "typeshed.typeshed.stdlib.optparse.BadOptionError",
    "typeshed.typeshed.stdlib.optparse.OptionError"
  ],
  "typeshed.typeshed.stdlib.optparse.OptionContainer.__init__": [
    "typeshed.typeshed.stdlib.optparse.OptionGroup",
    "typeshed.typeshed.stdlib.optparse.OptionParser"
  ],
  "typeshed.typeshed.stdlib.optparse.OptionContainer.format_help": [
    "typeshed.typeshed.stdlib.optparse.OptionParser"
  ],
  "typeshed.typeshed.stdlib.optparse.OptionContainer.format_option_help": [
    "typeshed.typeshed.stdlib.optparse.OptionParser"
  ],
  "typeshed.typeshed.stdlib.pathlib.PurePath.__new__": [
    "typeshed.typeshed.stdlib.pathlib.Path"
  ],
  "typeshed.typeshed.stdlib.poplib.POP3.__init__": [
    "typeshed.typeshed.stdlib.poplib.POP3_SSL"
  ],
  "typeshed.typeshed.stdlib.poplib.POP3.stls": [
    "typeshed.typeshed.stdlib.poplib.POP3_SSL"
  ],
  "typeshed.typeshed.stdlib.pydoc.Doc.docclass": [
    "typeshed.typeshed.stdlib.pydoc.HTMLDoc",
    "typeshed.typeshed.stdlib.pydoc.TextDoc"
  ],
  "typeshed.typeshed.stdlib.pydoc.Doc.docdata": [
    "typeshed.typeshed.stdlib.pydoc.HTMLDoc",
    "typeshed.typeshed.stdlib.pydoc.TextDoc"
  ],
  "typeshed.typeshed.stdlib.pydoc.Doc.docmodule": [
    "typeshed.typeshed.stdlib.pydoc.HTMLDoc",
    "typeshed.typeshed.stdlib.pydoc.TextDoc"
  ],
  "typeshed.typeshed.stdlib.pydoc.Doc.docother": [
    "typeshed.typeshed.stdlib.pydoc.HTMLDoc",
    "typeshed.typeshed.stdlib.pydoc.TextDoc"
  ],
  "typeshed.typeshed.stdlib.pydoc.Doc.docproperty": [
    "typeshed.typeshed.stdlib.pydoc.HTMLDoc",
    "typeshed.typeshed.stdlib.pydoc.TextDoc"
  ],
  "typeshed.typeshed.stdlib.pydoc.Doc.docroutine": [
    "typeshed.typeshed.stdlib.pydoc.HTMLDoc",
    "typeshed.typeshed.stdlib.pydoc.TextDoc"
  ],
  "typeshed.typeshed.stdlib.random.Random.getstate": [
    "typeshed.typeshed.stdlib.random.SystemRandom"
  ],
  "typeshed.typeshed.stdlib.random.Random.setstate": [
    "typeshed.typeshed.stdlib.random.SystemRandom"
  ],
  "typeshed.typeshed.stdlib.selectors.BaseSelector.get_map": [
    "typeshed.typeshed.stdlib.selectors.DefaultSelector",
    "typeshed.typeshed.stdlib.selectors.DevpollSelector",
    "typeshed.typeshed.stdlib.selectors.EpollSelector",
    "typeshed.typeshed.stdlib.selectors.KqueueSelector",
    "typeshed.typeshed.stdlib.selectors.PollSelector",
    "typeshed.typeshed.stdlib.selectors.SelectSelector"
  ],
  "typeshed.typeshed.stdlib.selectors.BaseSelector.register": [
    "typeshed.typeshed.stdlib.selectors.DefaultSelector",
    "typeshed.typeshed.stdlib.selectors.DevpollSelector",
    "typeshed.typeshed.stdlib.selectors.EpollSelector",
    "typeshed.typeshed.stdlib.selectors.KqueueSelector",
    "typeshed.typeshed.stdlib.selectors.PollSelector",
    "typeshed.typeshed.stdlib.selectors.SelectSelector"
  ],
  "typeshed.typeshed.stdlib.selectors.BaseSelector.select": [
    "typeshed.typeshed.stdlib.selectors.DefaultSelector",
    "typeshed.typeshed.stdlib.selectors.DevpollSelector",
    "typeshed.typeshed.stdlib.selectors.EpollSelector",
    "typeshed.typeshed.stdlib.selectors.KqueueSelector",
    "typeshed.typeshed.stdlib.selectors.PollSelector",
    "typeshed.typeshed.stdlib.selectors.SelectSelector"
  ],
  "typeshed.typeshed.stdlib.selectors.BaseSelector.unregister": [
    "typeshed.typeshed.stdlib.selectors.DefaultSelector",
    "typeshed.typeshed.stdlib.selectors.DevpollSelector",
    "typeshed.typeshed.stdlib.selectors.EpollSelector",
    "typeshed.typeshed.stdlib.selectors.KqueueSelector",
    "typeshed.typeshed.stdlib.selectors.PollSelector",
    "typeshed.typeshed.stdlib.selectors.SelectSelector"
  ],
  "typeshed.typeshed.stdlib.shelve.Shelf.__init__": [
    "typeshed.typeshed.stdlib.shelve.DbfilenameShelf"
  ],
  "typeshed.typeshed.stdlib.smtpd.PureProxy.process_message": [
    "typeshed.typeshed.stdlib.smtpd.MailmanProxy"
  ],
  "typeshed.typeshed.stdlib.smtpd.SMTPServer.process_message": [
    "typeshed.typeshed.stdlib.smtpd.PureProxy"
  ],
  "typeshed.typeshed.stdlib.smtplib.SMTP.__init__": [
    "typeshed.typeshed.stdlib.smtplib.LMTP",
    "typeshed.typeshed.stdlib.smtplib.SMTP_SSL"
  ],
  "typeshed.typeshed.stdlib.smtplib.SMTPResponseException.__init__": [
    "typeshed.typeshed.stdlib.smtplib.SMTPSenderRefused"
  ],
  "typeshed.typeshed.stdlib.socketserver.BaseServer.__init__": [
    "typeshed.typeshed.stdlib.socketserver.TCPServer",
    "typeshed.typeshed.stdlib.socketserver.UnixDatagramServer",
    "typeshed.typeshed.stdlib.socketserver.UnixStreamServer"
  ],
  "typeshed.typeshed.stdlib.socketserver.BaseServer.get_request": [
    "typeshed.typeshed.stdlib.socketserver.TCPServer"
  ],
  "typeshed.typeshed.stdlib.socketserver.TCPServer.get_request": [
    "typeshed.typeshed.stdlib.socketserver.UDPServer"
  ],
  "typeshed.typeshed.stdlib.ssl._ASN1ObjectBase.__new__": [
    "typeshed.typeshed.stdlib.ssl._ASN1Object"
  ],
  "typeshed.typeshed.stdlib.threading.Thread.__init__": [
    "typeshed.typeshed.stdlib.threading.Timer",
    "typeshed.typeshed.stdlib.threading._DummyThread"
  ],
  "typeshed.typeshed.stdlib.tkinter.BaseWidget.__init__": [
    "typeshed.typeshed.stdlib.tkinter.Toplevel"
  ],
  "typeshed.typeshed.stdlib.tkinter.Image.__getitem__": [
    "typeshed.typeshed.stdlib.tkinter.PhotoImage"
  ],
  "typeshed.typeshed.stdlib.tkinter.Image.__init__": [
    "typeshed.typeshed.stdlib.tkinter.BitmapImage",
    "typeshed.typeshed.stdlib.tkinter.PhotoImage"
  ],
  "typeshed.typeshed.stdlib.tkinter.Image.configure": [
    "typeshed.typeshed.stdlib.tkinter.PhotoImage"
  ],
  "typeshed.typeshed.stdlib.tkinter.Menubutton.__init__": [
    "typeshed.typeshed.stdlib.tkinter.OptionMenu"
  ],
  "typeshed.typeshed.stdlib.tkinter.Misc.bbox": [
    "typeshed.typeshed.stdlib.tkinter.Canvas",
    "typeshed.typeshed.stdlib.tkinter.Listbox",
    "typeshed.typeshed.stdlib.tkinter.Spinbox",
    "typeshed.typeshed.stdlib.tkinter.Text"
  ],
  "typeshed.typeshed.stdlib.tkinter.Misc.bind": [
    "typeshed.typeshed.stdlib.tkinter.Widget"
  ],
  "typeshed.typeshed.stdlib.tkinter.Misc.configure": [
    "typeshed.typeshed.stdlib.tkinter.Button",
    "typeshed.typeshed.stdlib.tkinter.Canvas",
    "typeshed.typeshed.stdlib.tkinter.Checkbutton",
    "typeshed.typeshed.stdlib.tkinter.Entry",
    "typeshed.typeshed.stdlib.tkinter.Frame",
    "typeshed.typeshed.stdlib.tkinter.Label",
    "typeshed.typeshed.stdlib.tkinter.LabelFrame",
    "typeshed.typeshed.stdlib.tkinter.Listbox",
    "typeshed.typeshed.stdlib.tkinter.Menu",
    "typeshed.typeshed.stdlib.tkinter.Menubutton",
    "typeshed.typeshed.stdlib.tkinter.Message",
    "typeshed.typeshed.stdlib.tkinter.PanedWindow",
    "typeshed.typeshed.stdlib.tkinter.Radiobutton",
    "typeshed.typeshed.stdlib.tkinter.Scale",
    "typeshed.typeshed.stdlib.tkinter.Scrollbar",
    "typeshed.typeshed.stdlib.tkinter.Spinbox",
    "typeshed.typeshed.stdlib.tkinter.Text",
    "typeshed.typeshed.stdlib.tkinter.Tk",
    "typeshed.typeshed.stdlib.tkinter.Toplevel"
  ],
  "typeshed.typeshed.stdlib.tkinter.Misc.destroy": [
    "typeshed.typeshed.stdlib.tkinter.BaseWidget",
    "typeshed.typeshed.stdlib.tkinter.Tk"
  ],
  "typeshed.typeshed.stdlib.tkinter.Misc.focus": [
    "typeshed.typeshed.stdlib.tkinter.Canvas"
  ],
  "typeshed.typeshed.stdlib.tkinter.Misc.image_names": [
    "typeshed.typeshed.stdlib.tkinter.Text"
  ],
  "typeshed.typeshed.stdlib.tkinter.Misc.lift": [
    "typeshed.typeshed.stdlib.tkinter.Canvas"
  ],
  "typeshed.typeshed.stdlib.tkinter.Misc.lower": [
    "typeshed.typeshed.stdlib.tkinter.Canvas"
  ],
  "typeshed.typeshed.stdlib.tkinter.Misc.selection_clear": [
    "typeshed.typeshed.stdlib.tkinter.Entry",
    "typeshed.typeshed.stdlib.tkinter.Listbox",
    "typeshed.typeshed.stdlib.tkinter.Spinbox"
  ],
  "typeshed.typeshed.stdlib.tkinter.Misc.size": [
    "typeshed.typeshed.stdlib.tkinter.Listbox"
  ],
  "typeshed.typeshed.stdlib.tkinter.Misc.tkraise": [
    "typeshed.typeshed.stdlib.tkinter.Canvas"
  ],
  "typeshed.typeshed.stdlib.tkinter.Variable.__init__": [
    "typeshed.typeshed.stdlib.tkinter.BooleanVar",
    "typeshed.typeshed.stdlib.tkinter.DoubleVar",
    "typeshed.typeshed.stdlib.tkinter.IntVar",
    "typeshed.typeshed.stdlib.tkinter.StringVar"
  ],
  "typeshed.typeshed.stdlib.tkinter.Variable.get": [
    "typeshed.typeshed.stdlib.tkinter.BooleanVar",
    "typeshed.typeshed.stdlib.tkinter.DoubleVar",
    "typeshed.typeshed.stdlib.tkinter.IntVar",
    "typeshed.typeshed.stdlib.tkinter.StringVar"
  ],
  "typeshed.typeshed.stdlib.tkinter.Variable.set": [
    "typeshed.typeshed.stdlib.tkinter.BooleanVar",
    "typeshed.typeshed.stdlib.tkinter.DoubleVar",
    "typeshed.typeshed.stdlib.tkinter.IntVar",
    "typeshed.typeshed.stdlib.tkinter.StringVar"
  ],
  "typeshed.typeshed.stdlib.tkinter.filedialog.FileDialog.ok_command": [
    "typeshed.typeshed.stdlib.tkinter.filedialog.LoadFileDialog",
    "typeshed.typeshed.stdlib.tkinter.filedialog.SaveFileDialog"
  ],
  "typeshed.typeshed.stdlib.tkinter.tix.TixWidget.__init__": [
    "typeshed.typeshed.stdlib.tkinter.tix.Balloon",
    "typeshed.typeshed.stdlib.tkinter.tix.ButtonBox",
    "typeshed.typeshed.stdlib.tkinter.tix.CheckList",
    "typeshed.typeshed.stdlib.tkinter.tix.ComboBox",
    "typeshed.typeshed.stdlib.tkinter.tix.Control",
    "typeshed.typeshed.stdlib.tkinter.tix.DirList",
    "typeshed.typeshed.stdlib.tkinter.tix.DirSelectBox",
    "typeshed.typeshed.stdlib.tkinter.tix.DirSelectDialog",
    "typeshed.typeshed.stdlib.tkinter.tix.DirTree",
    "typeshed.typeshed.stdlib.tkinter.tix.ExFileSelectBox",
    "typeshed.typeshed.stdlib.tkinter.tix.FileEntry",
    "typeshed.typeshed.stdlib.tkinter.tix.FileSelectBox",
    "typeshed.typeshed.stdlib.tkinter.tix.HList",
    "typeshed.typeshed.stdlib.tkinter.tix.InputOnly",
    "typeshed.typeshed.stdlib.tkinter.tix.LabelEntry",
    "typeshed.typeshed.stdlib.tkinter.tix.LabelFrame",
    "typeshed.typeshed.stdlib.tkinter.tix.ListNoteBook",
    "typeshed.typeshed.stdlib.tkinter.tix.Meter",
    "typeshed.typeshed.stdlib.tkinter.tix.NoteBook",
    "typeshed.typeshed.stdlib.tkinter.tix.OptionMenu",
    "typeshed.typeshed.stdlib.tkinter.tix.PanedWindow",
    "typeshed.typeshed.stdlib.tkinter.tix.PopupMenu",
    "typeshed.typeshed.stdlib.tkinter.tix.Select",
    "typeshed.typeshed.stdlib.tkinter.tix.StdButtonBox",
    "typeshed.typeshed.stdlib.tkinter.tix.TList",
    "typeshed.typeshed.stdlib.tkinter.tix.TixSubWidget",
    "typeshed.typeshed.stdlib.tkinter.tix.Tree"
  ],
  "typeshed.typeshed.stdlib.tkinter.ttk.Entry.__init__": [
    "typeshed.typeshed.stdlib.tkinter.ttk.Combobox",
    "typeshed.typeshed.stdlib.tkinter.ttk.Spinbox"
  ],
  "typeshed.typeshed.stdlib.tkinter.ttk.Entry.config": [
    "typeshed.typeshed.stdlib.tkinter.ttk.Combobox"
  ],
  "typeshed.typeshed.stdlib.tkinter.ttk.Entry.configure": [
    "typeshed.typeshed.stdlib.tkinter.ttk.Combobox",
    "typeshed.typeshed.stdlib.tkinter.ttk.Spinbox"
  ],
  "typeshed.typeshed.stdlib.tkinter.ttk.Frame.__init__": [
    "typeshed.typeshed.stdlib.tkinter.ttk.LabeledScale"
  ],
  "typeshed.typeshed.stdlib.tkinter.ttk.Menubutton.__init__": [
    "typeshed.typeshed.stdlib.tkinter.ttk.OptionMenu"
  ],
  "typeshed.typeshed.stdlib.tkinter.ttk.Widget.__init__": [
    "typeshed.typeshed.stdlib.tkinter.ttk.Button",
    "typeshed.typeshed.stdlib.tkinter.ttk.Checkbutton",
    "typeshed.typeshed.stdlib.tkinter.ttk.Entry",
    "typeshed.typeshed.stdlib.tkinter.ttk.Frame",
    "typeshed.typeshed.stdlib.tkinter.ttk.Label",
    "typeshed.typeshed.stdlib.tkinter.ttk.Labelframe",
    "typeshed.typeshed.stdlib.tkinter.ttk.Menubutton",
    "typeshed.typeshed.stdlib.tkinter.ttk.Notebook",
    "typeshed.typeshed.stdlib.tkinter.ttk.Panedwindow",
    "typeshed.typeshed.stdlib.tkinter.ttk.Progressbar",
    "typeshed.typeshed.stdlib.tkinter.ttk.Radiobutton",
    "typeshed.typeshed.stdlib.tkinter.ttk.Scale",
    "typeshed.typeshed.stdlib.tkinter.ttk.Scrollbar",
    "typeshed.typeshed.stdlib.tkinter.ttk.Separator",
    "typeshed.typeshed.stdlib.tkinter.ttk.Sizegrip",
    "typeshed.typeshed.stdlib.tkinter.ttk.Treeview"
  ],
  "typeshed.typeshed.stdlib.tkinter.ttk.Widget.identify": [
    "typeshed.typeshed.stdlib.tkinter.ttk.Entry",
    "typeshed.typeshed.stdlib.tkinter.ttk.Notebook",
    "typeshed.typeshed.stdlib.tkinter.ttk.Treeview"
  ],
  "typeshed.typeshed.stdlib.tracemalloc.BaseFilter.__init__": [
    "typeshed.typeshed.stdlib.tracemalloc.DomainFilter",
    "typeshed.typeshed.stdlib.tracemalloc.Filter"
  ],
  "typeshed.typeshed.stdlib.turtle.RawTurtle.__init__": [
    "typeshed.typeshed.stdlib.turtle.Turtle"
  ],
  "typeshed.typeshed.stdlib.turtle.TNavigator.reset": [
    "typeshed.typeshed.stdlib.turtle.RawTurtle"
  ],
  "typeshed.typeshed.stdlib.turtle.TPen.__init__": [
    "typeshed.typeshed.stdlib.turtle.RawTurtle"
  ],
  "typeshed.typeshed.stdlib.turtle.TurtleScreen.__init__": [
    "typeshed.typeshed.stdlib.turtle._Screen"
  ],
  "typeshed.typeshed.stdlib.turtle.TurtleScreenBase.__init__": [
    "typeshed.typeshed.stdlib.turtle.TurtleScreen"
  ],
  "typeshed.typeshed.stdlib.typing.AbstractSet.__and__": [
    "typeshed.typeshed.stdlib.typing.ItemsView",
    "typeshed.typeshed.stdlib.typing.KeysView"
  ],
  "typeshed.typeshed.stdlib.typing.AbstractSet.__contains__": [
    "typeshed.typeshed.stdlib.typing.ItemsView",
    "typeshed.typeshed.stdlib.typing.KeysView"
  ],
  "typeshed.typeshed.stdlib.typing.AbstractSet.__or__": [
    "typeshed.typeshed.stdlib.typing.ItemsView",
    "typeshed.typeshed.stdlib.typing.KeysView"
  ],
  "typeshed.typeshed.stdlib.typing.AbstractSet.__sub__": [
    "typeshed.typeshed.stdlib.typing.ItemsView",
    "typeshed.typeshed.stdlib.typing.KeysView"
  ],
  "typeshed.typeshed.stdlib.typing.AbstractSet.__xor__": [
    "typeshed.typeshed.stdlib.typing.ItemsView",
    "typeshed.typeshed.stdlib.typing.KeysView"
  ],
  "typeshed.typeshed.stdlib.typing.AsyncIterable.__aiter__": [
    "typeshed.typeshed.stdlib.typing.AsyncIterator"
  ],
  "typeshed.typeshed.stdlib.typing.AsyncIterator.__anext__": [
    "typeshed.typeshed.stdlib.typing.AsyncGenerator"
  ],
  "typeshed.typeshed.stdlib.typing.Container.__contains__": [
    "typeshed.typeshed.stdlib.typing.AbstractSet",
    "typeshed.typeshed.stdlib.typing.Mapping",
    "typeshed.typeshed.stdlib.typing.Sequence",
    "typeshed.typeshed.stdlib.typing.ValuesView"
  ],
  "typeshed.typeshed.stdlib.typing.IO.__enter__": [
    "typeshed.typeshed.stdlib.typing.BinaryIO",
    "typeshed.typeshed.stdlib.typing.TextIO"
  ],
  "typeshed.typeshed.stdlib.typing.Iterable.__iter__": [
    "typeshed.typeshed.stdlib.typing.ItemsView",
    "typeshed.typeshed.stdlib.typing.Iterator",
    "typeshed.typeshed.stdlib.typing.KeysView",
    "typeshed.typeshed.stdlib.typing.Sequence",
    "typeshed.typeshed.stdlib.typing.ValuesView"
  ],
  "typeshed.typeshed.stdlib.typing.Iterator.__iter__": [
    "typeshed.typeshed.stdlib.typing.Generator",
    "typeshed.typeshed.stdlib.typing.IO"
  ],
  "typeshed.typeshed.stdlib.typing.Iterator.__next__": [
    "typeshed.typeshed.stdlib.typing.Generator",
    "typeshed.typeshed.stdlib.typing.IO"
  ],
  "typeshed.typeshed.stdlib.typing.Mapping.items": [
    "typeshed.typeshed.stdlib.typing._TypedDict"
  ],
  "typeshed.typeshed.stdlib.typing.Mapping.keys": [
    "typeshed.typeshed.stdlib.typing._TypedDict"
  ],
  "typeshed.typeshed.stdlib.typing.Mapping.values": [
    "typeshed.typeshed.stdlib.typing._TypedDict"
  ],
  "typeshed.typeshed.stdlib.typing.MappingView.__init__": [
    "typeshed.typeshed.stdlib.typing.ItemsView",
    "typeshed.typeshed.stdlib.typing.KeysView",
    "typeshed.typeshed.stdlib.typing.ValuesView"
  ],
  "typeshed.typeshed.stdlib.typing.Reversible.__reversed__": [
    "typeshed.typeshed.stdlib.typing.Sequence"
  ],
  "typeshed.typeshed.stdlib.typing.Sequence.__getitem__": [
    "typeshed.typeshed.stdlib.typing.MutableSequence"
  ],
  "typeshed.typeshed.stdlib.typing.Sized.__len__": [
    "typeshed.typeshed.stdlib.typing.MappingView"
  ],
  "typeshed.typeshed.stdlib.unittest.case.TestCase.__eq__": [
    "typeshed.typeshed.stdlib.unittest.case.FunctionTestCase"
  ],
  "typeshed.typeshed.stdlib.unittest.case.TestCase.__hash__": [
    "typeshed.typeshed.stdlib.unittest.case.FunctionTestCase"
  ],
  "typeshed.typeshed.stdlib.unittest.case.TestCase.__init__": [
    "typeshed.typeshed.stdlib.unittest.case.FunctionTestCase"
  ],
  "typeshed.typeshed.stdlib.unittest.mock.AsyncMockMixin.reset_mock": [
    "typeshed.typeshed.stdlib.unittest.mock.AsyncMock"
  ],
  "typeshed.typeshed.stdlib.unittest.mock.Base.__init__": [
    "typeshed.typeshed.stdlib.unittest.mock.AsyncMockMixin",
    "typeshed.typeshed.stdlib.unittest.mock.CallableMixin",
    "typeshed.typeshed.stdlib.unittest.mock.NonCallableMock"
  ],
  "typeshed.typeshed.stdlib.unittest.mock.MagicMixin.__init__": [
    "typeshed.typeshed.stdlib.unittest.mock.AsyncMagicMixin"
  ],
  "typeshed.typeshed.stdlib.unittest.mock._patch.__call__": [
    "typeshed.typeshed.stdlib.unittest.mock._patch_default_new"
  ],
  "typeshed.typeshed.stdlib.unittest.suite.BaseTestSuite.run": [
    "typeshed.typeshed.stdlib.unittest.suite.TestSuite"
  ],
  "typeshed.typeshed.stdlib.urllib.error.URLError.__init__": [
    "typeshed.typeshed.stdlib.urllib.error.ContentTooShortError",
    "typeshed.typeshed.stdlib.urllib.error.HTTPError"
  ],
  "typeshed.typeshed.stdlib.urllib.error.URLError.reason": [
    "typeshed.typeshed.stdlib.urllib.error.HTTPError"
  ],
  "typeshed.typeshed.stdlib.urllib.request.AbstractHTTPHandler.__init__": [
    "typeshed.typeshed.stdlib.urllib.request.HTTPSHandler"
  ],
  "typeshed.typeshed.stdlib.urllib.request.HTTPPasswordMgr.add_password": [
    "typeshed.typeshed.stdlib.urllib.request.HTTPPasswordMgrWithDefaultRealm"
  ],
  "typeshed.typeshed.stdlib.urllib.request.HTTPPasswordMgr.find_user_password": [
    "typeshed.typeshed.stdlib.urllib.request.HTTPPasswordMgrWithDefaultRealm"
  ],
  "typeshed.typeshed.stdlib.urllib.request.HTTPPasswordMgrWithDefaultRealm.add_password": [
    "typeshed.typeshed.stdlib.urllib.request.HTTPPasswordMgrWithPriorAuth"
  ],
  "typeshed.typeshed.stdlib.urllib.request.URLopener.http_error_default": [
    "typeshed.typeshed.stdlib.urllib.request.FancyURLopener"
  ],
  "typeshed.typeshed.stdlib.urllib.response.addbase.__init__": [
    "typeshed.typeshed.stdlib.urllib.response.addclosehook",
    "typeshed.typeshed.stdlib.urllib.response.addinfo"
  ],
  "typeshed.typeshed.stdlib.urllib.response.addinfo.__init__": [
    "typeshed.typeshed.stdlib.urllib.response.addinfourl"
  ],
  "typeshed.typeshed.stdlib.webbrowser.BaseBrowser.__init__": [
    "typeshed.typeshed.stdlib.webbrowser.GenericBrowser",
    "typeshed.typeshed.stdlib.webbrowser.MacOSXOSAScript"
  ],
  "typeshed.typeshed.stdlib.webbrowser.BaseBrowser.open": [
    "typeshed.typeshed.stdlib.webbrowser.GenericBrowser",
    "typeshed.typeshed.stdlib.webbrowser.Grail",
    "typeshed.typeshed.stdlib.webbrowser.Konqueror",
    "typeshed.typeshed.stdlib.webbrowser.MacOSX",
    "typeshed.typeshed.stdlib.webbrowser.MacOSXOSAScript",
    "typeshed.typeshed.stdlib.webbrowser.UnixBrowser"
  ],
  "typeshed.typeshed.stdlib.wsgiref.handlers.BaseHandler._flush": [
    "typeshed.typeshed.stdlib.wsgiref.handlers.SimpleHandler"
  ],
  "typeshed.typeshed.stdlib.wsgiref.handlers.BaseHandler._write": [
    "typeshed.typeshed.stdlib.wsgiref.handlers.SimpleHandler"
  ],
  "typeshed.typeshed.stdlib.wsgiref.handlers.BaseHandler.add_cgi_vars": [
    "typeshed.typeshed.stdlib.wsgiref.handlers.SimpleHandler"
  ],
  "typeshed.typeshed.stdlib.wsgiref.handlers.BaseHandler.get_stderr": [
    "typeshed.typeshed.stdlib.wsgiref.handlers.SimpleHandler"
  ],
  "typeshed.typeshed.stdlib.wsgiref.handlers.BaseHandler.get_stdin": [
    "typeshed.typeshed.stdlib.wsgiref.handlers.SimpleHandler"
  ],
  "typeshed.typeshed.stdlib.xml.dom.expatbuilder.ExpatBuilder.__init__": [
    "typeshed.typeshed.stdlib.xml.dom.expatbuilder.FragmentBuilder"
  ],
  "typeshed.typeshed.stdlib.xml.dom.expatbuilder.ExpatBuilder.end_doctype_decl_handler": [
    "typeshed.typeshed.stdlib.xml.dom.expatbuilder.InternalSubsetExtractor"
  ],
  "typeshed.typeshed.stdlib.xml.dom.expatbuilder.ExpatBuilder.parseFile": [
    "typeshed.typeshed.stdlib.xml.dom.expatbuilder.InternalSubsetExtractor"
  ],
  "typeshed.typeshed.stdlib.xml.dom.expatbuilder.ExpatBuilder.parseString": [
    "typeshed.typeshed.stdlib.xml.dom.expatbuilder.InternalSubsetExtractor"
  ],
  "typeshed.typeshed.stdlib.xml.dom.expatbuilder.ExpatBuilder.start_doctype_decl_handler": [
    "typeshed.typeshed.stdlib.xml.dom.expatbuilder.InternalSubsetExtractor"
  ],
  "typeshed.typeshed.stdlib.xml.dom.expatbuilder.ExpatBuilder.start_element_handler": [
    "typeshed.typeshed.stdlib.xml.dom.expatbuilder.InternalSubsetExtractor"
  ],
  "typeshed.typeshed.stdlib.xml.dom.minidom.CharacterData.__init__": [
    "typeshed.typeshed.stdlib.xml.dom.minidom.Comment"
  ],
  "typeshed.typeshed.stdlib.xml.dom.minidom.Node.appendChild": [
    "typeshed.typeshed.stdlib.xml.dom.minidom.Document",
    "typeshed.typeshed.stdlib.xml.dom.minidom.Entity"
  ],
  "typeshed.typeshed.stdlib.xml.dom.minidom.Node.cloneNode": [
    "typeshed.typeshed.stdlib.xml.dom.minidom.Document",
    "typeshed.typeshed.stdlib.xml.dom.minidom.DocumentType"
  ],
  "typeshed.typeshed.stdlib.xml.dom.minidom.Node.insertBefore": [
    "typeshed.typeshed.stdlib.xml.dom.minidom.Entity"
  ],
  "typeshed.typeshed.stdlib.xml.dom.minidom.Node.isSupported": [
    "typeshed.typeshed.stdlib.xml.dom.minidom.Document"
  ],
  "typeshed.typeshed.stdlib.xml.dom.minidom.Node.removeChild": [
    "typeshed.typeshed.stdlib.xml.dom.minidom.Document",
    "typeshed.typeshed.stdlib.xml.dom.minidom.Entity"
  ],
  "typeshed.typeshed.stdlib.xml.dom.minidom.Node.replaceChild": [
    "typeshed.typeshed.stdlib.xml.dom.minidom.Entity"
  ],
  "typeshed.typeshed.stdlib.xml.dom.minidom.Node.unlink": [
    "typeshed.typeshed.stdlib.xml.dom.minidom.Attr",
    "typeshed.typeshed.stdlib.xml.dom.minidom.Document",
    "typeshed.typeshed.stdlib.xml.dom.minidom.Element"
  ],
  "typeshed.typeshed.stdlib.xml.dom.minidom.Text.writexml": [
    "typeshed.typeshed.stdlib.xml.dom.minidom.CDATASection"
  ],
  "typeshed.typeshed.stdlib.xml.dom.pulldom.PullDOM.characters": [
    "typeshed.typeshed.stdlib.xml.dom.pulldom.SAX2DOM"
  ],
  "typeshed.typeshed.stdlib.xml.dom.pulldom.PullDOM.ignorableWhitespace": [
    "typeshed.typeshed.stdlib.xml.dom.pulldom.SAX2DOM"
  ],
  "typeshed.typeshed.stdlib.xml.dom.pulldom.PullDOM.processingInstruction": [
    "typeshed.typeshed.stdlib.xml.dom.pulldom.SAX2DOM"
  ],
  "typeshed.typeshed.stdlib.xml.dom.pulldom.PullDOM.startElement": [
    "typeshed.typeshed.stdlib.xml.dom.pulldom.SAX2DOM"
  ],
  "typeshed.typeshed.stdlib.xml.dom.pulldom.PullDOM.startElementNS": [
    "typeshed.typeshed.stdlib.xml.dom.pulldom.SAX2DOM"
  ],
  "typeshed.typeshed.stdlib.xml.sax.SAXException.__init__": [
    "typeshed.typeshed.stdlib.xml.sax.SAXParseException"
  ],
  "typeshed.typeshed.stdlib.xml.sax.xmlreader.AttributesImpl.__contains__": [
    "typeshed.typeshed.stdlib.xml.sax.xmlreader.AttributesNSImpl"
  ],
  "typeshed.typeshed.stdlib.xml.sax.xmlreader.AttributesImpl.__getitem__": [
    "typeshed.typeshed.stdlib.xml.sax.xmlreader.AttributesNSImpl"
  ],
  "typeshed.typeshed.stdlib.xml.sax.xmlreader.AttributesImpl.__init__": [
    "typeshed.typeshed.stdlib.xml.sax.xmlreader.AttributesNSImpl"
  ],
  "typeshed.typeshed.stdlib.xml.sax.xmlreader.AttributesImpl.get": [
    "typeshed.typeshed.stdlib.xml.sax.xmlreader.AttributesNSImpl"
  ],
  "typeshed.typeshed.stdlib.xml.sax.xmlreader.AttributesImpl.getNameByQName": [
    "typeshed.typeshed.stdlib.xml.sax.xmlreader.AttributesNSImpl"
  ],
  "typeshed.typeshed.stdlib.xml.sax.xmlreader.AttributesImpl.getNames": [
    "typeshed.typeshed.stdlib.xml.sax.xmlreader.AttributesNSImpl"
  ],
  "typeshed.typeshed.stdlib.xml.sax.xmlreader.AttributesImpl.getQNameByName": [
    "typeshed.typeshed.stdlib.xml.sax.xmlreader.AttributesNSImpl"
  ],
  "typeshed.typeshed.stdlib.xml.sax.xmlreader.AttributesImpl.getType": [
    "typeshed.typeshed.stdlib.xml.sax.xmlreader.AttributesNSImpl"
  ],
  "typeshed.typeshed.stdlib.xml.sax.xmlreader.AttributesImpl.getValue": [
    "typeshed.typeshed.stdlib.xml.sax.xmlreader.AttributesNSImpl"
  ],
  "typeshed.typeshed.stdlib.xml.sax.xmlreader.AttributesImpl.items": [
    "typeshed.typeshed.stdlib.xml.sax.xmlreader.AttributesNSImpl"
  ],
  "typeshed.typeshed.stdlib.xml.sax.xmlreader.AttributesImpl.keys": [
    "typeshed.typeshed.stdlib.xml.sax.xmlreader.AttributesNSImpl"
  ],
  "typeshed.typeshed.stdlib.xml.sax.xmlreader.XMLReader.parse": [
    "typeshed.typeshed.stdlib.xml.sax.xmlreader.IncrementalParser"
  ],
  "typeshed.typeshed.stdlib.xmlrpc.client.Transport.__init__": [
    "typeshed.typeshed.stdlib.xmlrpc.client.SafeTransport"
  ],
  "typeshed.typeshed.stdlib.xmlrpc.client.Transport.make_connection": [
    "typeshed.typeshed.stdlib.xmlrpc.client.SafeTransport"
  ],
  "typeshed.typeshed.stdlib.xmlrpc.server.CGIXMLRPCRequestHandler.__init__": [
    "typeshed.typeshed.stdlib.xmlrpc.server.DocCGIXMLRPCRequestHandler"
  ],
  "typeshed.typeshed.stdlib.xmlrpc.server.SimpleXMLRPCDispatcher.__init__": [
    "typeshed.typeshed.stdlib.xmlrpc.server.CGIXMLRPCRequestHandler"
  ],
  "typeshed.typeshed.stdlib.xmlrpc.server.SimpleXMLRPCServer.__init__": [
    "typeshed.typeshed.stdlib.xmlrpc.server.DocXMLRPCServer",
    "typeshed.typeshed.stdlib.xmlrpc.server.MultiPathXMLRPCServer"
  ],
  "typeshed.typeshed.stdlib.zipfile.ZipFile.__init__": [
    "typeshed.typeshed.stdlib.zipfile.PyZipFile"
  ],
  "typeshed.typeshed.stubs.Deprecated.deprecated.classic.ClassicAdapter.__call__": [
    "typeshed.typeshed.stubs.Deprecated.deprecated.sphinx.SphinxAdapter"
  ],
  "typeshed.typeshed.stubs.Deprecated.deprecated.classic.ClassicAdapter.__init__": [
    "typeshed.typeshed.stubs.Deprecated.deprecated.sphinx.SphinxAdapter"
  ],
  "typeshed.typeshed.stubs.Flask-SocketIO.flask_socketio.namespace._BaseNamespace.trigger_event": [
    "typeshed.typeshed.stubs.Flask-SocketIO.flask_socketio.namespace.Namespace"
  ],
  "typeshed.typeshed.stubs.Flask-SocketIO.flask_socketio.namespace._Namespace.close_room": [
    "typeshed.typeshed.stubs.Flask-SocketIO.flask_socketio.namespace.Namespace"
  ],
  "typeshed.typeshed.stubs.Flask-SocketIO.flask_socketio.namespace._Namespace.emit": [
    "typeshed.typeshed.stubs.Flask-SocketIO.flask_socketio.namespace.Namespace"
  ],
  "typeshed.typeshed.stubs.Flask-SocketIO.flask_socketio.namespace._Namespace.send": [
    "typeshed.typeshed.stubs.Flask-SocketIO.flask_socketio.namespace.Namespace"
  ],
  "typeshed.typeshed.stubs.JACK-Client.jack.OwnPort.get_array": [
    "typeshed.typeshed.stubs.JACK-Client.jack.OwnMidiPort"
  ],
  "typeshed.typeshed.stubs.JACK-Client.jack.OwnPort.get_buffer": [
    "typeshed.typeshed.stubs.JACK-Client.jack.OwnMidiPort"
  ],
  "typeshed.typeshed.stubs.JACK-Client.jack.Port.is_audio": [
    "typeshed.typeshed.stubs.JACK-Client.jack.MidiPort"
  ],
  "typeshed.typeshed.stubs.JACK-Client.jack.Port.is_midi": [
    "typeshed.typeshed.stubs.JACK-Client.jack.MidiPort"
  ],
  "typeshed.typeshed.stubs.Markdown.markdown.blockprocessors.BlockProcessor.__init__": [
    "typeshed.typeshed.stubs.Markdown.markdown.blockprocessors.ListIndentProcessor",
    "typeshed.typeshed.stubs.Markdown.markdown.blockprocessors.OListProcessor"
  ],
  "typeshed.typeshed.stubs.Markdown.markdown.blockprocessors.OListProcessor.__init__": [
    "typeshed.typeshed.stubs.Markdown.markdown.blockprocessors.UListProcessor"
  ],
  "typeshed.typeshed.stubs.Markdown.markdown.inlinepatterns.InlineProcessor.__init__": [
    "typeshed.typeshed.stubs.Markdown.markdown.inlinepatterns.BacktickInlineProcessor",
    "typeshed.typeshed.stubs.Markdown.markdown.inlinepatterns.SimpleTagInlineProcessor"
  ],
  "typeshed.typeshed.stubs.Markdown.markdown.inlinepatterns.Pattern.__init__": [
    "typeshed.typeshed.stubs.Markdown.markdown.inlinepatterns.InlineProcessor",
    "typeshed.typeshed.stubs.Markdown.markdown.inlinepatterns.SimpleTagPattern"
  ],
  "typeshed.typeshed.stubs.Markdown.markdown.inlinepatterns.Pattern.handleMatch": [
    "typeshed.typeshed.stubs.Markdown.markdown.inlinepatterns.InlineProcessor"
  ],
  "typeshed.typeshed.stubs.Markdown.markdown.inlinepatterns.Pattern.unescape": [
    "typeshed.typeshed.stubs.Markdown.markdown.inlinepatterns.HtmlInlineProcessor"
  ],
  "typeshed.typeshed.stubs.Markdown.markdown.treeprocessors.Treeprocessor.run": [
    "typeshed.typeshed.stubs.Markdown.markdown.treeprocessors.InlineProcessor"
  ],
  "typeshed.typeshed.stubs.Pillow.PIL.ContainerIO.ContainerIO.__init__": [
    "typeshed.typeshed.stubs.Pillow.PIL.TarIO.TarIO"
  ],
  "typeshed.typeshed.stubs.Pillow.PIL.FontFile.FontFile.__init__": [
    "typeshed.typeshed.stubs.Pillow.PIL.BdfFontFile.BdfFontFile",
    "typeshed.typeshed.stubs.Pillow.PIL.PcfFontFile.PcfFontFile"
  ],
  "typeshed.typeshed.stubs.Pillow.PIL.Image.Image.draft": [
    "typeshed.typeshed.stubs.Pillow.PIL.JpegImagePlugin.JpegImageFile"
  ],
  "typeshed.typeshed.stubs.Pillow.PIL.Image.Image.getexif": [
    "typeshed.typeshed.stubs.Pillow.PIL.PngImagePlugin.PngImageFile"
  ],
  "typeshed.typeshed.stubs.Pillow.PIL.Image.Image.is_animated": [
    "typeshed.typeshed.stubs.Pillow.PIL.GifImagePlugin.GifImageFile",
    "typeshed.typeshed.stubs.Pillow.PIL.ImImagePlugin.ImImageFile",
    "typeshed.typeshed.stubs.Pillow.PIL.SpiderImagePlugin.SpiderImageFile"
  ],
  "typeshed.typeshed.stubs.Pillow.PIL.Image.Image.load": [
    "typeshed.typeshed.stubs.Pillow.PIL.ImageFile.ImageFile"
  ],
  "typeshed.typeshed.stubs.Pillow.PIL.Image.Image.n_frames": [
    "typeshed.typeshed.stubs.Pillow.PIL.GifImagePlugin.GifImageFile",
    "typeshed.typeshed.stubs.Pillow.PIL.ImImagePlugin.ImImageFile",
    "typeshed.typeshed.stubs.Pillow.PIL.SpiderImagePlugin.SpiderImageFile",
    "typeshed.typeshed.stubs.Pillow.PIL.TiffImagePlugin.TiffImageFile"
  ],
  "typeshed.typeshed.stubs.Pillow.PIL.Image.Image.seek": [
    "typeshed.typeshed.stubs.Pillow.PIL.DcxImagePlugin.DcxImageFile",
    "typeshed.typeshed.stubs.Pillow.PIL.FliImagePlugin.FliImageFile",
    "typeshed.typeshed.stubs.Pillow.PIL.GifImagePlugin.GifImageFile",
    "typeshed.typeshed.stubs.Pillow.PIL.ImImagePlugin.ImImageFile",
    "typeshed.typeshed.stubs.Pillow.PIL.MpoImagePlugin.MpoImageFile",
    "typeshed.typeshed.stubs.Pillow.PIL.PngImagePlugin.PngImageFile",
    "typeshed.typeshed.stubs.Pillow.PIL.PsdImagePlugin.PsdImageFile",
    "typeshed.typeshed.stubs.Pillow.PIL.SpiderImagePlugin.SpiderImageFile",
    "typeshed.typeshed.stubs.Pillow.PIL.TiffImagePlugin.TiffImageFile",
    "typeshed.typeshed.stubs.Pillow.PIL.WebPImagePlugin.WebPImageFile"
  ],
  "typeshed.typeshed.stubs.Pillow.PIL.Image.Image.size": [
    "typeshed.typeshed.stubs.Pillow.PIL.IcnsImagePlugin.IcnsImageFile",
    "typeshed.typeshed.stubs.Pillow.PIL.IcoImagePlugin.IcoImageFile"
  ],
  "typeshed.typeshed.stubs.Pillow.PIL.Image.Image.size@setter": [
    "typeshed.typeshed.stubs.Pillow.PIL.IcnsImagePlugin.IcnsImageFile",
    "typeshed.typeshed.stubs.Pillow.PIL.IcoImagePlugin.IcoImageFile"
  ],
  "typeshed.typeshed.stubs.Pillow.PIL.Image.Image.tell": [
    "typeshed.typeshed.stubs.Pillow.PIL.DcxImagePlugin.DcxImageFile",
    "typeshed.typeshed.stubs.Pillow.PIL.FliImagePlugin.FliImageFile",
    "typeshed.typeshed.stubs.Pillow.PIL.GifImagePlugin.GifImageFile",
    "typeshed.typeshed.stubs.Pillow.PIL.ImImagePlugin.ImImageFile",
    "typeshed.typeshed.stubs.Pillow.PIL.MpoImagePlugin.MpoImageFile",
    "typeshed.typeshed.stubs.Pillow.PIL.PngImagePlugin.PngImageFile",
    "typeshed.typeshed.stubs.Pillow.PIL.PsdImagePlugin.PsdImageFile",
    "typeshed.typeshed.stubs.Pillow.PIL.SpiderImagePlugin.SpiderImageFile",
    "typeshed.typeshed.stubs.Pillow.PIL.TiffImagePlugin.TiffImageFile",
    "typeshed.typeshed.stubs.Pillow.PIL.WebPImagePlugin.WebPImageFile"
  ],
  "typeshed.typeshed.stubs.Pillow.PIL.Image.Image.verify": [
    "typeshed.typeshed.stubs.Pillow.PIL.ImageFile.ImageFile"
  ],
  "typeshed.typeshed.stubs.Pillow.PIL.ImageFile.ImageFile.__init__": [
    "typeshed.typeshed.stubs.Pillow.PIL.TiffImagePlugin.TiffImageFile"
  ],
  "typeshed.typeshed.stubs.Pillow.PIL.ImageFile.ImageFile.load": [
    "typeshed.typeshed.stubs.Pillow.PIL.EpsImagePlugin.EpsImageFile",
    "typeshed.typeshed.stubs.Pillow.PIL.FpxImagePlugin.FpxImageFile",
    "typeshed.typeshed.stubs.Pillow.PIL.GbrImagePlugin.GbrImageFile",
    "typeshed.typeshed.stubs.Pillow.PIL.IcnsImagePlugin.IcnsImageFile",
    "typeshed.typeshed.stubs.Pillow.PIL.IcoImagePlugin.IcoImageFile",
    "typeshed.typeshed.stubs.Pillow.PIL.ImageFile.StubImageFile",
    "typeshed.typeshed.stubs.Pillow.PIL.IptcImagePlugin.IptcImageFile",
    "typeshed.typeshed.stubs.Pillow.PIL.Jpeg2KImagePlugin.Jpeg2KImageFile",
    "typeshed.typeshed.stubs.Pillow.PIL.TiffImagePlugin.TiffImageFile",
    "typeshed.typeshed.stubs.Pillow.PIL.WalImageFile.WalImageFile",
    "typeshed.typeshed.stubs.Pillow.PIL.WebPImagePlugin.WebPImageFile"
  ],
  "typeshed.typeshed.stubs.Pillow.PIL.ImageFile.ImageFile.load_end": [
    "typeshed.typeshed.stubs.Pillow.PIL.PcdImagePlugin.PcdImageFile",
    "typeshed.typeshed.stubs.Pillow.PIL.PngImagePlugin.PngImageFile",
    "typeshed.typeshed.stubs.Pillow.PIL.TiffImagePlugin.TiffImageFile"
  ],
  "typeshed.typeshed.stubs.Pillow.PIL.ImageFile.ImageFile.load_prepare": [
    "typeshed.typeshed.stubs.Pillow.PIL.PngImagePlugin.PngImageFile",
    "typeshed.typeshed.stubs.Pillow.PIL.PsdImagePlugin.PsdImageFile"
  ],
  "typeshed.typeshed.stubs.Pillow.PIL.ImageFile.ImageFile.verify": [
    "typeshed.typeshed.stubs.Pillow.PIL.PngImagePlugin.PngImageFile"
  ],
  "typeshed.typeshed.stubs.Pillow.PIL.ImageFile.PyDecoder.decode": [
    "typeshed.typeshed.stubs.Pillow.PIL.BlpImagePlugin._BLPBaseDecoder",
    "typeshed.typeshed.stubs.Pillow.PIL.BmpImagePlugin.BmpRleDecoder",
    "typeshed.typeshed.stubs.Pillow.PIL.MspImagePlugin.MspDecoder",
    "typeshed.typeshed.stubs.Pillow.PIL.PpmImagePlugin.PpmDecoder",
    "typeshed.typeshed.stubs.Pillow.PIL.PpmImagePlugin.PpmPlainDecoder",
    "typeshed.typeshed.stubs.Pillow.PIL.QoiImagePlugin.QoiDecoder",
    "typeshed.typeshed.stubs.Pillow.PIL.SgiImagePlugin.SGI16Decoder"
  ],
  "typeshed.typeshed.stubs.Pillow.PIL.ImageFile.PyEncoder.encode": [
    "typeshed.typeshed.stubs.Pillow.PIL.BlpImagePlugin.BLPEncoder"
  ],
  "typeshed.typeshed.stubs.Pillow.PIL.ImageFile.StubImageFile.load": [
    "typeshed.typeshed.stubs.Pillow.PIL.WmfImagePlugin.WmfStubImageFile"
  ],
  "typeshed.typeshed.stubs.Pillow.PIL.ImageFilter.RankFilter.__init__": [
    "typeshed.typeshed.stubs.Pillow.PIL.ImageFilter.MaxFilter",
    "typeshed.typeshed.stubs.Pillow.PIL.ImageFilter.MedianFilter",
    "typeshed.typeshed.stubs.Pillow.PIL.ImageFilter.MinFilter"
  ],
  "typeshed.typeshed.stubs.Pillow.PIL.ImageShow.Viewer.get_command": [
    "typeshed.typeshed.stubs.Pillow.PIL.ImageShow.MacViewer",
    "typeshed.typeshed.stubs.Pillow.PIL.ImageShow.UnixViewer",
    "typeshed.typeshed.stubs.Pillow.PIL.ImageShow.WindowsViewer"
  ],
  "typeshed.typeshed.stubs.Pillow.PIL.ImageShow.Viewer.show_file": [
    "typeshed.typeshed.stubs.Pillow.PIL.ImageShow.DisplayViewer",
    "typeshed.typeshed.stubs.Pillow.PIL.ImageShow.EogViewer",
    "typeshed.typeshed.stubs.Pillow.PIL.ImageShow.GmDisplayViewer",
    "typeshed.typeshed.stubs.Pillow.PIL.ImageShow.MacViewer",
    "typeshed.typeshed.stubs.Pillow.PIL.ImageShow.XDGViewer",
    "typeshed.typeshed.stubs.Pillow.PIL.ImageShow.XVViewer"
  ],
  "typeshed.typeshed.stubs.Pillow.PIL.ImageShow.Viewer.show_image": [
    "typeshed.typeshed.stubs.Pillow.PIL.ImageShow.IPythonViewer"
  ],
  "typeshed.typeshed.stubs.Pillow.PIL.ImageWin.Window.__init__": [
    "typeshed.typeshed.stubs.Pillow.PIL.ImageWin.ImageWindow"
  ],
  "typeshed.typeshed.stubs.Pillow.PIL.ImageWin.Window.ui_handle_repair": [
    "typeshed.typeshed.stubs.Pillow.PIL.ImageWin.ImageWindow"
  ],
  "typeshed.typeshed.stubs.Pillow.PIL.PngImagePlugin.ChunkStream.__init__": [
    "typeshed.typeshed.stubs.Pillow.PIL.PngImagePlugin.PngStream"
  ],
  "typeshed.typeshed.stubs.Pillow.PIL.TiffImagePlugin.ImageFileDirectory_v2.__contains__": [
    "typeshed.typeshed.stubs.Pillow.PIL.TiffImagePlugin.ImageFileDirectory_v1"
  ],
  "typeshed.typeshed.stubs.Pillow.PIL.TiffImagePlugin.ImageFileDirectory_v2.__getitem__": [
    "typeshed.typeshed.stubs.Pillow.PIL.TiffImagePlugin.ImageFileDirectory_v1"
  ],
  "typeshed.typeshed.stubs.Pillow.PIL.TiffImagePlugin.ImageFileDirectory_v2.__init__": [
    "typeshed.typeshed.stubs.Pillow.PIL.TiffImagePlugin.ImageFileDirectory_v1"
  ],
  "typeshed.typeshed.stubs.Pillow.PIL.TiffImagePlugin.ImageFileDirectory_v2.__iter__": [
    "typeshed.typeshed.stubs.Pillow.PIL.TiffImagePlugin.ImageFileDirectory_v1"
  ],
  "typeshed.typeshed.stubs.Pillow.PIL.TiffImagePlugin.ImageFileDirectory_v2.__len__": [
    "typeshed.typeshed.stubs.Pillow.PIL.TiffImagePlugin.ImageFileDirectory_v1"
  ],
  "typeshed.typeshed.stubs.Pillow.PIL.TiffImagePlugin.ImageFileDirectory_v2.__setitem__": [
    "typeshed.typeshed.stubs.Pillow.PIL.TiffImagePlugin.ImageFileDirectory_v1"
  ],
  "typeshed.typeshed.stubs.Pillow.PIL.TiffImagePlugin.TiffImageFile.seek": [
    "typeshed.typeshed.stubs.Pillow.PIL.MicImagePlugin.MicImageFile"
  ],
  "typeshed.typeshed.stubs.Pillow.PIL.TiffImagePlugin.TiffImageFile.tell": [
    "typeshed.typeshed.stubs.Pillow.PIL.MicImagePlugin.MicImageFile"
  ],
  "typeshed.typeshed.stubs.Pillow.PIL.TiffTags._TagInfo.__new__": [
    "typeshed.typeshed.stubs.Pillow.PIL.TiffTags.TagInfo"
  ],
  "typeshed.typeshed.stubs.PyMySQL.pymysql.connections.MysqlPacket.__init__": [
    "typeshed.typeshed.stubs.PyMySQL.pymysql.connections.FieldDescriptorPacket"
  ],
  "typeshed.typeshed.stubs.PyMySQL.pymysql.cursors.Cursor.fetchall": [
    "typeshed.typeshed.stubs.PyMySQL.pymysql.cursors.SSCursor"
  ],
  "typeshed.typeshed.stubs.PyMySQL.pymysql.cursors.Cursor.scroll": [
    "typeshed.typeshed.stubs.PyMySQL.pymysql.cursors.SSCursor"
  ],
  "typeshed.typeshed.stubs.PyMySQL.pymysql.cursors.SSCursor.fetchall_unbuffered": [
    "typeshed.typeshed.stubs.PyMySQL.pymysql.cursors.SSDictCursor"
  ],
  "typeshed.typeshed.stubs.PyYAML.yaml._yaml.CEmitter.__init__": [
    "typeshed.typeshed.stubs.PyYAML.yaml.cyaml.CBaseDumper",
    "typeshed.typeshed.stubs.PyYAML.yaml.cyaml.CDumper"
  ],
  "typeshed.typeshed.stubs.PyYAML.yaml._yaml.CParser.__init__": [
    "typeshed.typeshed.stubs.PyYAML.yaml.cyaml.CBaseLoader",
    "typeshed.typeshed.stubs.PyYAML.yaml.cyaml.CFullLoader",
    "typeshed.typeshed.stubs.PyYAML.yaml.cyaml.CLoader",
    "typeshed.typeshed.stubs.PyYAML.yaml.cyaml.CSafeLoader",
    "typeshed.typeshed.stubs.PyYAML.yaml.cyaml.CUnsafeLoader"
  ],
  "typeshed.typeshed.stubs.PyYAML.yaml.constructor.BaseConstructor.construct_mapping": [
    "typeshed.typeshed.stubs.PyYAML.yaml.constructor.SafeConstructor"
  ],
  "typeshed.typeshed.stubs.PyYAML.yaml.constructor.BaseConstructor.construct_scalar": [
    "typeshed.typeshed.stubs.PyYAML.yaml.constructor.SafeConstructor"
  ],
  "typeshed.typeshed.stubs.PyYAML.yaml.constructor.FullConstructor.find_python_module": [
    "typeshed.typeshed.stubs.PyYAML.yaml.constructor.UnsafeConstructor"
  ],
  "typeshed.typeshed.stubs.PyYAML.yaml.constructor.FullConstructor.find_python_name": [
    "typeshed.typeshed.stubs.PyYAML.yaml.constructor.UnsafeConstructor"
  ],
  "typeshed.typeshed.stubs.PyYAML.yaml.constructor.FullConstructor.make_python_instance": [
    "typeshed.typeshed.stubs.PyYAML.yaml.constructor.UnsafeConstructor"
  ],
  "typeshed.typeshed.stubs.PyYAML.yaml.constructor.FullConstructor.set_python_instance_state": [
    "typeshed.typeshed.stubs.PyYAML.yaml.constructor.UnsafeConstructor"
  ],
  "typeshed.typeshed.stubs.PyYAML.yaml.events.Event.__init__": [
    "typeshed.typeshed.stubs.PyYAML.yaml.events.DocumentEndEvent",
    "typeshed.typeshed.stubs.PyYAML.yaml.events.DocumentStartEvent",
    "typeshed.typeshed.stubs.PyYAML.yaml.events.NodeEvent",
    "typeshed.typeshed.stubs.PyYAML.yaml.events.StreamStartEvent"
  ],
  "typeshed.typeshed.stubs.PyYAML.yaml.events.NodeEvent.__init__": [
    "typeshed.typeshed.stubs.PyYAML.yaml.events.CollectionStartEvent",
    "typeshed.typeshed.stubs.PyYAML.yaml.events.ScalarEvent"
  ],
  "typeshed.typeshed.stubs.PyYAML.yaml.nodes.Node.__init__": [
    "typeshed.typeshed.stubs.PyYAML.yaml.nodes.CollectionNode",
    "typeshed.typeshed.stubs.PyYAML.yaml.nodes.ScalarNode"
  ],
  "typeshed.typeshed.stubs.PyYAML.yaml.representer.BaseRepresenter.ignore_aliases": [
    "typeshed.typeshed.stubs.PyYAML.yaml.representer.SafeRepresenter"
  ],
  "typeshed.typeshed.stubs.PyYAML.yaml.tokens.Token.__init__": [
    "typeshed.typeshed.stubs.PyYAML.yaml.tokens.AliasToken",
    "typeshed.typeshed.stubs.PyYAML.yaml.tokens.AnchorToken",
    "typeshed.typeshed.stubs.PyYAML.yaml.tokens.DirectiveToken",
    "typeshed.typeshed.stubs.PyYAML.yaml.tokens.ScalarToken",
    "typeshed.typeshed.stubs.PyYAML.yaml.tokens.StreamStartToken",
    "typeshed.typeshed.stubs.PyYAML.yaml.tokens.TagToken"
  ],
  "typeshed.typeshed.stubs.Pygments.pygments.filter.Filter.__init__": [
    "typeshed.typeshed.stubs.Pygments.pygments.filter.FunctionFilter"
  ],
  "typeshed.typeshed.stubs.Pygments.pygments.filter.Filter.filter": [
    "typeshed.typeshed.stubs.Pygments.pygments.filter.FunctionFilter"
  ],
  "typeshed.typeshed.stubs.Pygments.pygments.lexer.Lexer.__init__": [
    "typeshed.typeshed.stubs.Pygments.pygments.lexer.DelegatingLexer"
  ],
  "typeshed.typeshed.stubs.Pygments.pygments.lexer.Lexer.get_tokens_unprocessed": [
    "typeshed.typeshed.stubs.Pygments.pygments.lexer.DelegatingLexer",
    "typeshed.typeshed.stubs.Pygments.pygments.lexer.RegexLexer"
  ],
  "typeshed.typeshed.stubs.Pygments.pygments.lexer.RegexLexer.get_tokens_unprocessed": [
    "typeshed.typeshed.stubs.Pygments.pygments.lexer.ExtendedRegexLexer",
    "typeshed.typeshed.stubs.Pygments.pygments.lexer.ProfilingRegexLexer"
  ],
  "typeshed.typeshed.stubs.WTForms.wtforms.fields.choices.SelectFieldBase.__init__": [
    "typeshed.typeshed.stubs.WTForms.wtforms.fields.choices.SelectField"
  ],
  "typeshed.typeshed.stubs.WTForms.wtforms.fields.choices.SelectFieldBase.has_groups": [
    "typeshed.typeshed.stubs.WTForms.wtforms.fields.choices.SelectField"
  ],
  "typeshed.typeshed.stubs.WTForms.wtforms.fields.choices.SelectFieldBase.iter_choices": [
    "typeshed.typeshed.stubs.WTForms.wtforms.fields.choices.SelectField"
  ],
  "typeshed.typeshed.stubs.WTForms.wtforms.fields.choices.SelectFieldBase.iter_groups": [
    "typeshed.typeshed.stubs.WTForms.wtforms.fields.choices.SelectField"
  ],
  "typeshed.typeshed.stubs.WTForms.wtforms.fields.datetime.DateField.__init__": [
    "typeshed.typeshed.stubs.WTForms.wtforms.fields.datetime.MonthField",
    "typeshed.typeshed.stubs.WTForms.wtforms.fields.datetime.WeekField"
  ],
  "typeshed.typeshed.stubs.WTForms.wtforms.fields.datetime.DateTimeField.__init__": [
    "typeshed.typeshed.stubs.WTForms.wtforms.fields.datetime.DateField",
    "typeshed.typeshed.stubs.WTForms.wtforms.fields.datetime.DateTimeLocalField",
    "typeshed.typeshed.stubs.WTForms.wtforms.fields.datetime.TimeField"
  ],
  "typeshed.typeshed.stubs.WTForms.wtforms.fields.numeric.LocaleAwareNumberField.__init__": [
    "typeshed.typeshed.stubs.WTForms.wtforms.fields.numeric.DecimalField"
  ],
  "typeshed.typeshed.stubs.WTForms.wtforms.form.BaseForm.__delitem__": [
    "typeshed.typeshed.stubs.WTForms.wtforms.form.Form"
  ],
  "typeshed.typeshed.stubs.WTForms.wtforms.form.BaseForm.__init__": [
    "typeshed.typeshed.stubs.WTForms.wtforms.form.Form"
  ],
  "typeshed.typeshed.stubs.WTForms.wtforms.form.BaseForm.__setitem__": [
    "typeshed.typeshed.stubs.WTForms.wtforms.form.Form"
  ],
  "typeshed.typeshed.stubs.WTForms.wtforms.validators.Regexp.__call__": [
    "typeshed.typeshed.stubs.WTForms.wtforms.validators.MacAddress",
    "typeshed.typeshed.stubs.WTForms.wtforms.validators.URL"
  ],
  "typeshed.typeshed.stubs.WTForms.wtforms.validators.Regexp.__init__": [
    "typeshed.typeshed.stubs.WTForms.wtforms.validators.MacAddress",
    "typeshed.typeshed.stubs.WTForms.wtforms.validators.URL"
  ],
  "typeshed.typeshed.stubs.WTForms.wtforms.widgets.core.Input.__init__": [
    "typeshed.typeshed.stubs.WTForms.wtforms.widgets.core.FileInput",
    "typeshed.typeshed.stubs.WTForms.wtforms.widgets.core.NumberInput",
    "typeshed.typeshed.stubs.WTForms.wtforms.widgets.core.PasswordInput",
    "typeshed.typeshed.stubs.WTForms.wtforms.widgets.core.RangeInput"
  ],
  "typeshed.typeshed.stubs.WebOb.webob.cachecontrol.value_property.__set__": [
    "typeshed.typeshed.stubs.WebOb.webob.cachecontrol._IntValueProperty"
  ],
  "typeshed.typeshed.stubs.WebOb.webob.cookies.CookieProfile.__call__": [
    "typeshed.typeshed.stubs.WebOb.webob.cookies.SignedCookieProfile"
  ],
  "typeshed.typeshed.stubs.WebOb.webob.cookies.CookieProfile.__init__": [
    "typeshed.typeshed.stubs.WebOb.webob.cookies.SignedCookieProfile"
  ],
  "typeshed.typeshed.stubs.WebOb.webob.cookies.CookieProfile.bind": [
    "typeshed.typeshed.stubs.WebOb.webob.cookies.SignedCookieProfile"
  ],
  "typeshed.typeshed.stubs.WebOb.webob.exc.HTTPException.__init__": [
    "typeshed.typeshed.stubs.WebOb.webob.exc.WSGIHTTPException"
  ],
  "typeshed.typeshed.stubs.WebOb.webob.exc.HTTPException.wsgi_response": [
    "typeshed.typeshed.stubs.WebOb.webob.exc.WSGIHTTPException"
  ],
  "typeshed.typeshed.stubs.WebOb.webob.multidict.MultiDict.__delitem__": [
    "typeshed.typeshed.stubs.WebOb.webob.multidict.NestedMultiDict"
  ],
  "typeshed.typeshed.stubs.WebOb.webob.multidict.MultiDict.__init__": [
    "typeshed.typeshed.stubs.WebOb.webob.multidict.GetDict",
    "typeshed.typeshed.stubs.WebOb.webob.multidict.NestedMultiDict"
  ],
  "typeshed.typeshed.stubs.WebOb.webob.multidict.MultiDict.__setitem__": [
    "typeshed.typeshed.stubs.WebOb.webob.multidict.NestedMultiDict"
  ],
  "typeshed.typeshed.stubs.WebOb.webob.multidict.MultiDict.add": [
    "typeshed.typeshed.stubs.WebOb.webob.multidict.NestedMultiDict"
  ],
  "typeshed.typeshed.stubs.WebOb.webob.multidict.MultiDict.clear": [
    "typeshed.typeshed.stubs.WebOb.webob.multidict.NestedMultiDict"
  ],
  "typeshed.typeshed.stubs.WebOb.webob.multidict.MultiDict.copy": [
    "typeshed.typeshed.stubs.WebOb.webob.multidict.NestedMultiDict"
  ],
  "typeshed.typeshed.stubs.WebOb.webob.multidict.MultiDict.pop": [
    "typeshed.typeshed.stubs.WebOb.webob.multidict.NestedMultiDict"
  ],
  "typeshed.typeshed.stubs.WebOb.webob.multidict.MultiDict.popitem": [
    "typeshed.typeshed.stubs.WebOb.webob.multidict.NestedMultiDict"
  ],
  "typeshed.typeshed.stubs.WebOb.webob.multidict.MultiDict.setdefault": [
    "typeshed.typeshed.stubs.WebOb.webob.multidict.NestedMultiDict"
  ],
  "typeshed.typeshed.stubs.WebOb.webob.multidict.MultiDict.update": [
    "typeshed.typeshed.stubs.WebOb.webob.multidict.NestedMultiDict"
  ],
  "typeshed.typeshed.stubs.WebOb.webob.request.BaseRequest.encget": [
    "typeshed.typeshed.stubs.WebOb.webob.request.LegacyRequest"
  ],
  "typeshed.typeshed.stubs.aiofiles.aiofiles.base.AiofilesContextManager.__aenter__": [
    "typeshed.typeshed.stubs.aiofiles.aiofiles.tempfile.AiofilesContextManagerTempDir"
  ],
  "typeshed.typeshed.stubs.aiofiles.aiofiles.base.AsyncBase.__init__": [
    "typeshed.typeshed.stubs.aiofiles.aiofiles.base.AsyncIndirectBase"
  ],
  "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.context.Context.__init__": [
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.async_context.AsyncContext",
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.lambda_launcher.LambdaContext"
  ],
  "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.context.Context.clear_trace_entities": [
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.async_context.AsyncContext"
  ],
  "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.context.Context.context_missing": [
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.lambda_launcher.LambdaContext"
  ],
  "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.context.Context.context_missing@setter": [
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.lambda_launcher.LambdaContext"
  ],
  "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.context.Context.end_segment": [
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.lambda_launcher.LambdaContext"
  ],
  "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.context.Context.get_trace_entity": [
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.lambda_launcher.LambdaContext"
  ],
  "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.context.Context.handle_context_missing": [
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.lambda_launcher.LambdaContext"
  ],
  "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.context.Context.put_segment": [
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.lambda_launcher.LambdaContext"
  ],
  "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.context.Context.put_subsegment": [
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.lambda_launcher.LambdaContext"
  ],
  "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.models.entity.Entity.__init__": [
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.models.segment.Segment",
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.models.subsegment.Subsegment"
  ],
  "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.models.entity.Entity.add_error_flag": [
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.models.facade_segment.FacadeSegment"
  ],
  "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.models.entity.Entity.add_exception": [
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.models.dummy_entities.DummySegment",
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.models.dummy_entities.DummySubsegment",
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.models.facade_segment.FacadeSegment"
  ],
  "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.models.entity.Entity.add_fault_flag": [
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.models.facade_segment.FacadeSegment"
  ],
  "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.models.entity.Entity.add_subsegment": [
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.models.segment.Segment",
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.models.subsegment.Subsegment"
  ],
  "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.models.entity.Entity.add_throttle_flag": [
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.models.facade_segment.FacadeSegment"
  ],
  "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.models.entity.Entity.apply_status_code": [
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.models.dummy_entities.DummySegment",
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.models.dummy_entities.DummySubsegment",
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.models.facade_segment.FacadeSegment"
  ],
  "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.models.entity.Entity.close": [
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.models.facade_segment.FacadeSegment",
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.models.subsegment.Subsegment"
  ],
  "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.models.entity.Entity.put_annotation": [
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.models.dummy_entities.DummySegment",
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.models.dummy_entities.DummySubsegment",
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.models.facade_segment.FacadeSegment"
  ],
  "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.models.entity.Entity.put_http_meta": [
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.models.dummy_entities.DummySegment",
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.models.dummy_entities.DummySubsegment",
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.models.facade_segment.FacadeSegment"
  ],
  "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.models.entity.Entity.put_metadata": [
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.models.dummy_entities.DummySegment",
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.models.dummy_entities.DummySubsegment",
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.models.facade_segment.FacadeSegment"
  ],
  "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.models.entity.Entity.remove_subsegment": [
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.models.segment.Segment",
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.models.subsegment.Subsegment"
  ],
  "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.models.entity.Entity.serialize": [
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.models.dummy_entities.DummySegment",
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.models.dummy_entities.DummySubsegment",
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.models.facade_segment.FacadeSegment"
  ],
  "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.models.entity.Entity.set_aws": [
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.models.dummy_entities.DummySegment",
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.models.dummy_entities.DummySubsegment",
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.models.facade_segment.FacadeSegment"
  ],
  "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.models.entity.Entity.to_dict": [
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.models.segment.Segment",
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.models.subsegment.Subsegment"
  ],
  "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.models.segment.Segment.__init__": [
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.models.dummy_entities.DummySegment",
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.models.facade_segment.FacadeSegment"
  ],
  "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.models.segment.Segment.decrement_ref_counter": [
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.models.facade_segment.FacadeSegment"
  ],
  "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.models.segment.Segment.increment": [
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.models.facade_segment.FacadeSegment"
  ],
  "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.models.segment.Segment.ready_to_send": [
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.models.facade_segment.FacadeSegment"
  ],
  "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.models.segment.Segment.set_service": [
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.models.dummy_entities.DummySegment"
  ],
  "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.models.segment.Segment.set_user": [
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.models.dummy_entities.DummySegment",
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.models.facade_segment.FacadeSegment"
  ],
  "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.models.subsegment.Subsegment.__init__": [
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.models.dummy_entities.DummySubsegment"
  ],
  "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.models.subsegment.Subsegment.set_sql": [
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.models.dummy_entities.DummySubsegment"
  ],
  "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.models.subsegment.SubsegmentContextManager.__call__": [
    "typeshed.typeshed.stubs.aws-xray-sdk.aws_xray_sdk.core.async_recorder.AsyncSubsegmentContextManager"
  ],
  "typeshed.typeshed.stubs.beautifulsoup4.bs4.builder.TreeBuilder.feed": [
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.builder.SAXTreeBuilder"
  ],
  "typeshed.typeshed.stubs.beautifulsoup4.bs4.builder.TreeBuilder.set_up_substitutions": [
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.builder.HTMLTreeBuilder"
  ],
  "typeshed.typeshed.stubs.beautifulsoup4.bs4.builder._html5lib.Element.__init__": [
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.builder._html5lib.TextNode"
  ],
  "typeshed.typeshed.stubs.beautifulsoup4.bs4.builder._html5lib.Element.cloneNode": [
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.builder._html5lib.TextNode"
  ],
  "typeshed.typeshed.stubs.beautifulsoup4.bs4.builder._lxml.LXMLTreeBuilderForXML.default_parser": [
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.builder._lxml.LXMLTreeBuilder"
  ],
  "typeshed.typeshed.stubs.beautifulsoup4.bs4.builder._lxml.LXMLTreeBuilderForXML.feed": [
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.builder._lxml.LXMLTreeBuilder"
  ],
  "typeshed.typeshed.stubs.beautifulsoup4.bs4.builder._lxml.LXMLTreeBuilderForXML.test_fragment_to_document": [
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.builder._lxml.LXMLTreeBuilder"
  ],
  "typeshed.typeshed.stubs.beautifulsoup4.bs4.element.NavigableString.output_ready": [
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.element.PreformattedString"
  ],
  "typeshed.typeshed.stubs.beautifulsoup4.bs4.element.PageElement.insert_after": [
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.BeautifulSoup"
  ],
  "typeshed.typeshed.stubs.beautifulsoup4.bs4.element.PageElement.insert_before": [
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.BeautifulSoup"
  ],
  "typeshed.typeshed.stubs.beautifulsoup4.bs4.element.Tag.__copy__": [
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.BeautifulSoup"
  ],
  "typeshed.typeshed.stubs.beautifulsoup4.bs4.element.Tag.__init__": [
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.BeautifulSoup"
  ],
  "typeshed.typeshed.stubs.beautifulsoup4.bs4.element.Tag.decode": [
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.BeautifulSoup"
  ],
  "typeshed.typeshed.stubs.beautifulsoup4.bs4.formatter.Formatter.__init__": [
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.formatter.HTMLFormatter",
    "typeshed.typeshed.stubs.beautifulsoup4.bs4.formatter.XMLFormatter"
  ],
  "typeshed.typeshed.stubs.bleach.bleach.html5lib_shim.Filter.__init__": [
    "typeshed.typeshed.stubs.bleach.bleach.linkifier.LinkifyFilter"
  ],
  "typeshed.typeshed.stubs.bleach.bleach.html5lib_shim.Filter.__iter__": [
    "typeshed.typeshed.stubs.bleach.bleach.linkifier.LinkifyFilter"
  ],
  "typeshed.typeshed.stubs.boltons.boltons.cacheutils.LRI.__getitem__": [
    "typeshed.typeshed.stubs.boltons.boltons.cacheutils.LRU"
  ],
  "typeshed.typeshed.stubs.boltons.boltons.dictutils.OrderedMultiDict.iteritems": [
    "typeshed.typeshed.stubs.boltons.boltons.dictutils.FastIterOrderedMultiDict"
  ],
  "typeshed.typeshed.stubs.boltons.boltons.dictutils.OrderedMultiDict.iterkeys": [
    "typeshed.typeshed.stubs.boltons.boltons.dictutils.FastIterOrderedMultiDict"
  ],
  "typeshed.typeshed.stubs.boltons.boltons.ioutils.SpooledIOBase.__init__": [
    "typeshed.typeshed.stubs.boltons.boltons.ioutils.SpooledStringIO"
  ],
  "typeshed.typeshed.stubs.boltons.boltons.ioutils.SpooledIOBase.buffer": [
    "typeshed.typeshed.stubs.boltons.boltons.ioutils.SpooledBytesIO",
    "typeshed.typeshed.stubs.boltons.boltons.ioutils.SpooledStringIO"
  ],
  "typeshed.typeshed.stubs.boltons.boltons.ioutils.SpooledIOBase.len": [
    "typeshed.typeshed.stubs.boltons.boltons.ioutils.SpooledBytesIO",
    "typeshed.typeshed.stubs.boltons.boltons.ioutils.SpooledStringIO"
  ],
  "typeshed.typeshed.stubs.boltons.boltons.ioutils.SpooledIOBase.read": [
    "typeshed.typeshed.stubs.boltons.boltons.ioutils.SpooledBytesIO",
    "typeshed.typeshed.stubs.boltons.boltons.ioutils.SpooledStringIO"
  ],
  "typeshed.typeshed.stubs.boltons.boltons.ioutils.SpooledIOBase.readline": [
    "typeshed.typeshed.stubs.boltons.boltons.ioutils.SpooledBytesIO",
    "typeshed.typeshed.stubs.boltons.boltons.ioutils.SpooledStringIO"
  ],
  "typeshed.typeshed.stubs.boltons.boltons.ioutils.SpooledIOBase.readlines": [
    "typeshed.typeshed.stubs.boltons.boltons.ioutils.SpooledBytesIO",
    "typeshed.typeshed.stubs.boltons.boltons.ioutils.SpooledStringIO"
  ],
  "typeshed.typeshed.stubs.boltons.boltons.ioutils.SpooledIOBase.rollover": [
    "typeshed.typeshed.stubs.boltons.boltons.ioutils.SpooledBytesIO",
    "typeshed.typeshed.stubs.boltons.boltons.ioutils.SpooledStringIO"
  ],
  "typeshed.typeshed.stubs.boltons.boltons.ioutils.SpooledIOBase.seek": [
    "typeshed.typeshed.stubs.boltons.boltons.ioutils.SpooledBytesIO",
    "typeshed.typeshed.stubs.boltons.boltons.ioutils.SpooledStringIO"
  ],
  "typeshed.typeshed.stubs.boltons.boltons.ioutils.SpooledIOBase.tell": [
    "typeshed.typeshed.stubs.boltons.boltons.ioutils.SpooledBytesIO",
    "typeshed.typeshed.stubs.boltons.boltons.ioutils.SpooledStringIO"
  ],
  "typeshed.typeshed.stubs.boltons.boltons.ioutils.SpooledIOBase.write": [
    "typeshed.typeshed.stubs.boltons.boltons.ioutils.SpooledBytesIO",
    "typeshed.typeshed.stubs.boltons.boltons.ioutils.SpooledStringIO"
  ],
  "typeshed.typeshed.stubs.boltons.boltons.iterutils.GUIDerator.__next__": [
    "typeshed.typeshed.stubs.boltons.boltons.iterutils.SequentialGUIDerator"
  ],
  "typeshed.typeshed.stubs.boltons.boltons.iterutils.GUIDerator.reseed": [
    "typeshed.typeshed.stubs.boltons.boltons.iterutils.SequentialGUIDerator"
  ],
  "typeshed.typeshed.stubs.boltons.boltons.tableutils.InputType.get_entry_seq": [
    "typeshed.typeshed.stubs.boltons.boltons.tableutils.DictInputType",
    "typeshed.typeshed.stubs.boltons.boltons.tableutils.ListInputType",
    "typeshed.typeshed.stubs.boltons.boltons.tableutils.NamedTupleInputType",
    "typeshed.typeshed.stubs.boltons.boltons.tableutils.TupleInputType"
  ],
  "typeshed.typeshed.stubs.boltons.boltons.tbutils.Callpoint.__init__": [
    "typeshed.typeshed.stubs.boltons.boltons.tbutils.ContextualCallpoint"
  ],
  "typeshed.typeshed.stubs.boltons.boltons.tbutils.Callpoint.from_frame": [
    "typeshed.typeshed.stubs.boltons.boltons.tbutils.ContextualCallpoint"
  ],
  "typeshed.typeshed.stubs.boltons.boltons.tbutils.Callpoint.from_tb": [
    "typeshed.typeshed.stubs.boltons.boltons.tbutils.ContextualCallpoint"
  ],
  "typeshed.typeshed.stubs.boltons.boltons.tbutils.Callpoint.to_dict": [
    "typeshed.typeshed.stubs.boltons.boltons.tbutils.ContextualCallpoint"
  ],
  "typeshed.typeshed.stubs.boto.boto.auth.HmacAuthV4Handler.__init__": [
    "typeshed.typeshed.stubs.boto.boto.auth.S3HmacAuthV4Handler"
  ],
  "typeshed.typeshed.stubs.boto.boto.auth.HmacAuthV4Handler.add_auth": [
    "typeshed.typeshed.stubs.boto.boto.auth.S3HmacAuthV4Handler"
  ],
  "typeshed.typeshed.stubs.boto.boto.auth.HmacAuthV4Handler.canonical_query_string": [
    "typeshed.typeshed.stubs.boto.boto.auth.S3HmacAuthV4Handler"
  ],
  "typeshed.typeshed.stubs.boto.boto.auth.HmacAuthV4Handler.canonical_uri": [
    "typeshed.typeshed.stubs.boto.boto.auth.S3HmacAuthV4Handler"
  ],
  "typeshed.typeshed.stubs.boto.boto.auth.HmacAuthV4Handler.determine_region_name": [
    "typeshed.typeshed.stubs.boto.boto.auth.S3HmacAuthV4Handler"
  ],
  "typeshed.typeshed.stubs.boto.boto.auth.HmacAuthV4Handler.determine_service_name": [
    "typeshed.typeshed.stubs.boto.boto.auth.S3HmacAuthV4Handler"
  ],
  "typeshed.typeshed.stubs.boto.boto.auth.HmacAuthV4Handler.headers_to_sign": [
    "typeshed.typeshed.stubs.boto.boto.auth.S3HmacAuthV4Handler"
  ],
  "typeshed.typeshed.stubs.boto.boto.auth.HmacAuthV4Handler.host_header": [
    "typeshed.typeshed.stubs.boto.boto.auth.S3HmacAuthV4Handler"
  ],
  "typeshed.typeshed.stubs.boto.boto.auth.HmacAuthV4Handler.payload": [
    "typeshed.typeshed.stubs.boto.boto.auth.S3HmacAuthV4Handler"
  ],
  "typeshed.typeshed.stubs.boto.boto.auth.HmacKeys.update_provider": [
    "typeshed.typeshed.stubs.boto.boto.auth.HmacAuthV1Handler",
    "typeshed.typeshed.stubs.boto.boto.auth.HmacAuthV2Handler"
  ],
  "typeshed.typeshed.stubs.boto.boto.auth.QuerySignatureHelper.add_auth": [
    "typeshed.typeshed.stubs.boto.boto.auth.POSTPathQSV2AuthHandler"
  ],
  "typeshed.typeshed.stubs.boto.boto.connection.AWSAuthConnection.__init__": [
    "typeshed.typeshed.stubs.boto.boto.connection.AWSQueryConnection"
  ],
  "typeshed.typeshed.stubs.boto.boto.connection.AWSAuthConnection.make_request": [
    "typeshed.typeshed.stubs.boto.boto.connection.AWSQueryConnection"
  ],
  "typeshed.typeshed.stubs.boto.boto.exception.BotoClientError.__init__": [
    "typeshed.typeshed.stubs.boto.boto.exception.SQSDecodeError"
  ],
  "typeshed.typeshed.stubs.boto.boto.exception.BotoServerError.__init__": [
    "typeshed.typeshed.stubs.boto.boto.exception.EC2ResponseError",
    "typeshed.typeshed.stubs.boto.boto.exception.JSONResponseError",
    "typeshed.typeshed.stubs.boto.boto.exception.SQSError",
    "typeshed.typeshed.stubs.boto.boto.exception.StorageCreateError",
    "typeshed.typeshed.stubs.boto.boto.exception.StorageResponseError"
  ],
  "typeshed.typeshed.stubs.boto.boto.exception.BotoServerError.endElement": [
    "typeshed.typeshed.stubs.boto.boto.exception.EC2ResponseError",
    "typeshed.typeshed.stubs.boto.boto.exception.SQSError",
    "typeshed.typeshed.stubs.boto.boto.exception.StorageCreateError",
    "typeshed.typeshed.stubs.boto.boto.exception.StorageResponseError"
  ],
  "typeshed.typeshed.stubs.boto.boto.exception.BotoServerError.startElement": [
    "typeshed.typeshed.stubs.boto.boto.exception.EC2ResponseError",
    "typeshed.typeshed.stubs.boto.boto.exception.SQSError",
    "typeshed.typeshed.stubs.boto.boto.exception.StorageResponseError"
  ],
  "typeshed.typeshed.stubs.boto.boto.s3.connection._CallingFormat.build_path_base": [
    "typeshed.typeshed.stubs.boto.boto.s3.connection.OrdinaryCallingFormat"
  ],
  "typeshed.typeshed.stubs.boto.boto.s3.connection._CallingFormat.build_url_base": [
    "typeshed.typeshed.stubs.boto.boto.s3.connection.ProtocolIndependentOrdinaryCallingFormat"
  ],
  "typeshed.typeshed.stubs.boto.boto.s3.connection._CallingFormat.get_bucket_server": [
    "typeshed.typeshed.stubs.boto.boto.s3.connection.OrdinaryCallingFormat",
    "typeshed.typeshed.stubs.boto.boto.s3.connection.SubdomainCallingFormat",
    "typeshed.typeshed.stubs.boto.boto.s3.connection.VHostCallingFormat"
  ],
  "typeshed.typeshed.stubs.boto.boto.s3.website._XMLKeyValue.__init__": [
    "typeshed.typeshed.stubs.boto.boto.s3.website.Condition",
    "typeshed.typeshed.stubs.boto.boto.s3.website.Redirect",
    "typeshed.typeshed.stubs.boto.boto.s3.website.RedirectLocation"
  ],
  "typeshed.typeshed.stubs.boto.boto.s3.website._XMLKeyValue.to_xml": [
    "typeshed.typeshed.stubs.boto.boto.s3.website.Condition",
    "typeshed.typeshed.stubs.boto.boto.s3.website.Redirect",
    "typeshed.typeshed.stubs.boto.boto.s3.website.RedirectLocation"
  ],
  "typeshed.typeshed.stubs.cachetools.cachetools.Cache.__init__": [
    "typeshed.typeshed.stubs.cachetools.cachetools.RRCache",
    "typeshed.typeshed.stubs.cachetools.cachetools._TimedCache"
  ],
  "typeshed.typeshed.stubs.cachetools.cachetools.Cache.currsize": [
    "typeshed.typeshed.stubs.cachetools.cachetools._TimedCache"
  ],
  "typeshed.typeshed.stubs.cachetools.cachetools._TimedCache.__init__": [
    "typeshed.typeshed.stubs.cachetools.cachetools.TLRUCache",
    "typeshed.typeshed.stubs.cachetools.cachetools.TTLCache"
  ],
  "typeshed.typeshed.stubs.caldav.caldav.elements.base.BaseElement.__init__": [
    "typeshed.typeshed.stubs.caldav.caldav.elements.base.NamedBaseElement",
    "typeshed.typeshed.stubs.caldav.caldav.elements.base.ValuedBaseElement",
    "typeshed.typeshed.stubs.caldav.caldav.elements.cdav.Expand",
    "typeshed.typeshed.stubs.caldav.caldav.elements.cdav.TimeRange"
  ],
  "typeshed.typeshed.stubs.caldav.caldav.elements.base.ValuedBaseElement.__init__": [
    "typeshed.typeshed.stubs.caldav.caldav.elements.cdav.TextMatch"
  ],
  "typeshed.typeshed.stubs.caldav.caldav.objects.CalendarObjectResource.__init__": [
    "typeshed.typeshed.stubs.caldav.caldav.objects.FreeBusy"
  ],
  "typeshed.typeshed.stubs.caldav.caldav.objects.DAVObject.__init__": [
    "typeshed.typeshed.stubs.caldav.caldav.objects.CalendarObjectResource",
    "typeshed.typeshed.stubs.caldav.caldav.objects.Principal"
  ],
  "typeshed.typeshed.stubs.caldav.caldav.objects.DAVObject.save": [
    "typeshed.typeshed.stubs.caldav.caldav.objects.CalendarObjectResource"
  ],
  "typeshed.typeshed.stubs.cffi.cffi.backend_ctypes.CTypesData.__hash__": [
    "typeshed.typeshed.stubs.cffi.cffi.backend_ctypes.CTypesGenericPrimitive"
  ],
  "typeshed.typeshed.stubs.cffi.cffi.backend_ctypes.CTypesData.__iter__": [
    "typeshed.typeshed.stubs.cffi.cffi.backend_ctypes.CTypesGenericArray"
  ],
  "typeshed.typeshed.stubs.cffi.cffi.model.BasePrimitiveType.is_complex_type": [
    "typeshed.typeshed.stubs.cffi.cffi.model.PrimitiveType"
  ],
  "typeshed.typeshed.stubs.cffi.cffi.model.BaseTypeByIdentity.get_cached_btype": [
    "typeshed.typeshed.stubs.cffi.cffi.model.StructOrUnion"
  ],
  "typeshed.typeshed.stubs.cffi.cffi.model.BaseTypeByIdentity.is_integer_type": [
    "typeshed.typeshed.stubs.cffi.cffi.model.PrimitiveType",
    "typeshed.typeshed.stubs.cffi.cffi.model.UnknownIntegerType"
  ],
  "typeshed.typeshed.stubs.cffi.cffi.model.PointerType.__init__": [
    "typeshed.typeshed.stubs.cffi.cffi.model.NamedPointerType"
  ],
  "typeshed.typeshed.stubs.cffi.cffi.model.StructOrUnionOrEnum.force_the_name": [
    "typeshed.typeshed.stubs.cffi.cffi.model.EnumType"
  ],
  "typeshed.typeshed.stubs.commonmark.commonmark.blocks.Block.can_contain": [
    "typeshed.typeshed.stubs.commonmark.commonmark.blocks.BlockQuote",
    "typeshed.typeshed.stubs.commonmark.commonmark.blocks.CodeBlock",
    "typeshed.typeshed.stubs.commonmark.commonmark.blocks.Document",
    "typeshed.typeshed.stubs.commonmark.commonmark.blocks.Heading",
    "typeshed.typeshed.stubs.commonmark.commonmark.blocks.HtmlBlock",
    "typeshed.typeshed.stubs.commonmark.commonmark.blocks.Item",
    "typeshed.typeshed.stubs.commonmark.commonmark.blocks.List",
    "typeshed.typeshed.stubs.commonmark.commonmark.blocks.Paragraph",
    "typeshed.typeshed.stubs.commonmark.commonmark.blocks.ThematicBreak"
  ],
  "typeshed.typeshed.stubs.commonmark.commonmark.blocks.Block.continue_": [
    "typeshed.typeshed.stubs.commonmark.commonmark.blocks.BlockQuote",
    "typeshed.typeshed.stubs.commonmark.commonmark.blocks.CodeBlock",
    "typeshed.typeshed.stubs.commonmark.commonmark.blocks.Document",
    "typeshed.typeshed.stubs.commonmark.commonmark.blocks.Heading",
    "typeshed.typeshed.stubs.commonmark.commonmark.blocks.HtmlBlock",
    "typeshed.typeshed.stubs.commonmark.commonmark.blocks.Item",
    "typeshed.typeshed.stubs.commonmark.commonmark.blocks.List",
    "typeshed.typeshed.stubs.commonmark.commonmark.blocks.Paragraph",
    "typeshed.typeshed.stubs.commonmark.commonmark.blocks.ThematicBreak"
  ],
  "typeshed.typeshed.stubs.commonmark.commonmark.blocks.Block.finalize": [
    "typeshed.typeshed.stubs.commonmark.commonmark.blocks.BlockQuote",
    "typeshed.typeshed.stubs.commonmark.commonmark.blocks.CodeBlock",
    "typeshed.typeshed.stubs.commonmark.commonmark.blocks.Document",
    "typeshed.typeshed.stubs.commonmark.commonmark.blocks.Heading",
    "typeshed.typeshed.stubs.commonmark.commonmark.blocks.HtmlBlock",
    "typeshed.typeshed.stubs.commonmark.commonmark.blocks.Item",
    "typeshed.typeshed.stubs.commonmark.commonmark.blocks.List",
    "typeshed.typeshed.stubs.commonmark.commonmark.blocks.Paragraph",
    "typeshed.typeshed.stubs.commonmark.commonmark.blocks.ThematicBreak"
  ],
  "typeshed.typeshed.stubs.console-menu.consolemenu.console_menu.MenuItem.__init__": [
    "typeshed.typeshed.stubs.console-menu.consolemenu.console_menu.ExitItem"
  ],
  "typeshed.typeshed.stubs.console-menu.consolemenu.console_menu.MenuItem.show": [
    "typeshed.typeshed.stubs.console-menu.consolemenu.console_menu.ExitItem"
  ],
  "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.DoubleLineBorderStyle.inner_horizontal": [
    "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.DoubleLineOuterLightInnerBorderStyle"
  ],
  "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.DoubleLineBorderStyle.inner_vertical": [
    "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.DoubleLineOuterLightInnerBorderStyle"
  ],
  "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.DoubleLineBorderStyle.intersection": [
    "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.DoubleLineOuterLightInnerBorderStyle"
  ],
  "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.DoubleLineBorderStyle.outer_horizontal_inner_down": [
    "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.DoubleLineOuterLightInnerBorderStyle"
  ],
  "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.DoubleLineBorderStyle.outer_horizontal_inner_up": [
    "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.DoubleLineOuterLightInnerBorderStyle"
  ],
  "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.DoubleLineBorderStyle.outer_vertical_inner_left": [
    "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.DoubleLineOuterLightInnerBorderStyle"
  ],
  "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.DoubleLineBorderStyle.outer_vertical_inner_right": [
    "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.DoubleLineOuterLightInnerBorderStyle"
  ],
  "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.HeavyBorderStyle.inner_horizontal": [
    "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.HeavyOuterLightInnerBorderStyle"
  ],
  "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.HeavyBorderStyle.inner_vertical": [
    "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.HeavyOuterLightInnerBorderStyle"
  ],
  "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.HeavyBorderStyle.intersection": [
    "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.HeavyOuterLightInnerBorderStyle"
  ],
  "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.HeavyBorderStyle.outer_horizontal_inner_down": [
    "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.HeavyOuterLightInnerBorderStyle"
  ],
  "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.HeavyBorderStyle.outer_horizontal_inner_up": [
    "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.HeavyOuterLightInnerBorderStyle"
  ],
  "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.HeavyBorderStyle.outer_vertical_inner_left": [
    "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.HeavyOuterLightInnerBorderStyle"
  ],
  "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.HeavyBorderStyle.outer_vertical_inner_right": [
    "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.HeavyOuterLightInnerBorderStyle"
  ],
  "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.MenuBorderStyle.bottom_left_corner": [
    "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.AsciiBorderStyle",
    "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.DoubleLineBorderStyle",
    "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.HeavyBorderStyle",
    "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.LightBorderStyle"
  ],
  "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.MenuBorderStyle.bottom_right_corner": [
    "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.AsciiBorderStyle",
    "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.DoubleLineBorderStyle",
    "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.HeavyBorderStyle",
    "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.LightBorderStyle"
  ],
  "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.MenuBorderStyle.inner_horizontal": [
    "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.AsciiBorderStyle",
    "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.DoubleLineBorderStyle",
    "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.HeavyBorderStyle",
    "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.LightBorderStyle"
  ],
  "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.MenuBorderStyle.inner_vertical": [
    "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.AsciiBorderStyle",
    "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.DoubleLineBorderStyle",
    "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.HeavyBorderStyle",
    "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.LightBorderStyle"
  ],
  "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.MenuBorderStyle.intersection": [
    "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.AsciiBorderStyle",
    "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.DoubleLineBorderStyle",
    "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.HeavyBorderStyle",
    "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.LightBorderStyle"
  ],
  "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.MenuBorderStyle.outer_horizontal": [
    "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.AsciiBorderStyle",
    "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.DoubleLineBorderStyle",
    "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.HeavyBorderStyle",
    "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.LightBorderStyle"
  ],
  "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.MenuBorderStyle.outer_horizontal_inner_down": [
    "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.AsciiBorderStyle",
    "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.DoubleLineBorderStyle",
    "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.HeavyBorderStyle",
    "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.LightBorderStyle"
  ],
  "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.MenuBorderStyle.outer_horizontal_inner_up": [
    "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.AsciiBorderStyle",
    "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.DoubleLineBorderStyle",
    "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.HeavyBorderStyle",
    "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.LightBorderStyle"
  ],
  "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.MenuBorderStyle.outer_vertical": [
    "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.AsciiBorderStyle",
    "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.DoubleLineBorderStyle",
    "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.HeavyBorderStyle",
    "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.LightBorderStyle"
  ],
  "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.MenuBorderStyle.outer_vertical_inner_left": [
    "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.AsciiBorderStyle",
    "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.DoubleLineBorderStyle",
    "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.HeavyBorderStyle",
    "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.LightBorderStyle"
  ],
  "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.MenuBorderStyle.outer_vertical_inner_right": [
    "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.AsciiBorderStyle",
    "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.DoubleLineBorderStyle",
    "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.HeavyBorderStyle",
    "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.LightBorderStyle"
  ],
  "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.MenuBorderStyle.top_left_corner": [
    "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.AsciiBorderStyle",
    "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.DoubleLineBorderStyle",
    "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.HeavyBorderStyle",
    "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.LightBorderStyle"
  ],
  "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.MenuBorderStyle.top_right_corner": [
    "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.AsciiBorderStyle",
    "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.DoubleLineBorderStyle",
    "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.HeavyBorderStyle",
    "typeshed.typeshed.stubs.console-menu.consolemenu.format.menu_borders.LightBorderStyle"
  ],
  "typeshed.typeshed.stubs.console-menu.consolemenu.menu_component.MenuComponent.__init__": [
    "typeshed.typeshed.stubs.console-menu.consolemenu.menu_component.MenuHeader",
    "typeshed.typeshed.stubs.console-menu.consolemenu.menu_component.MenuItemsSection",
    "typeshed.typeshed.stubs.console-menu.consolemenu.menu_component.MenuPrompt",
    "typeshed.typeshed.stubs.console-menu.consolemenu.menu_component.MenuTextSection"
  ],
  "typeshed.typeshed.stubs.console-menu.consolemenu.menu_component.MenuComponent.generate": [
    "typeshed.typeshed.stubs.console-menu.consolemenu.menu_component.MenuFooter",
    "typeshed.typeshed.stubs.console-menu.consolemenu.menu_component.MenuHeader",
    "typeshed.typeshed.stubs.console-menu.consolemenu.menu_component.MenuItemsSection",
    "typeshed.typeshed.stubs.console-menu.consolemenu.menu_component.MenuPrompt",
    "typeshed.typeshed.stubs.console-menu.consolemenu.menu_component.MenuTextSection"
  ],
  "typeshed.typeshed.stubs.dateparser.dateparser.languages.dictionary.Dictionary.__init__": [
    "typeshed.typeshed.stubs.dateparser.dateparser.languages.dictionary.NormalizedDictionary"
  ],
  "typeshed.typeshed.stubs.dateparser.dateparser.search.detection.BaseLanguageDetector.__init__": [
    "typeshed.typeshed.stubs.dateparser.dateparser.search.detection.AutoDetectLanguage",
    "typeshed.typeshed.stubs.dateparser.dateparser.search.detection.ExactLanguages"
  ],
  "typeshed.typeshed.stubs.dateparser.dateparser.search.detection.BaseLanguageDetector.iterate_applicable_languages": [
    "typeshed.typeshed.stubs.dateparser.dateparser.search.detection.AutoDetectLanguage",
    "typeshed.typeshed.stubs.dateparser.dateparser.search.detection.ExactLanguages"
  ],
  "typeshed.typeshed.stubs.docutils.docutils._VersionInfo.__new__": [
    "typeshed.typeshed.stubs.docutils.docutils.VersionInfo"
  ],
  "typeshed.typeshed.stubs.docutils.docutils.io.Input.read": [
    "typeshed.typeshed.stubs.docutils.docutils.io.FileInput",
    "typeshed.typeshed.stubs.docutils.docutils.io.NullInput"
  ],
  "typeshed.typeshed.stubs.docutils.docutils.io.Output.write": [
    "typeshed.typeshed.stubs.docutils.docutils.io.NullOutput"
  ],
  "typeshed.typeshed.stubs.docutils.docutils.nodes.Element.__getattr__": [
    "typeshed.typeshed.stubs.docutils.docutils.nodes.document"
  ],
  "typeshed.typeshed.stubs.docutils.docutils.nodes.Element.__init__": [
    "typeshed.typeshed.stubs.docutils.docutils.nodes.TextElement"
  ],
  "typeshed.typeshed.stubs.docutils.docutils.nodes.Element.astext": [
    "typeshed.typeshed.stubs.docutils.docutils.nodes.document"
  ],
  "typeshed.typeshed.stubs.docutils.docutils.nodes.Element.copy": [
    "typeshed.typeshed.stubs.docutils.docutils.nodes.document"
  ],
  "typeshed.typeshed.stubs.docutils.docutils.nodes.Element.deepcopy": [
    "typeshed.typeshed.stubs.docutils.docutils.nodes.document"
  ],
  "typeshed.typeshed.stubs.docutils.docutils.nodes.Element.pformat": [
    "typeshed.typeshed.stubs.docutils.docutils.nodes.document"
  ],
  "typeshed.typeshed.stubs.docutils.docutils.nodes.Node.astext": [
    "typeshed.typeshed.stubs.docutils.docutils.nodes.Element",
    "typeshed.typeshed.stubs.docutils.docutils.nodes.Text"
  ],
  "typeshed.typeshed.stubs.docutils.docutils.nodes.Node.copy": [
    "typeshed.typeshed.stubs.docutils.docutils.nodes.Element",
    "typeshed.typeshed.stubs.docutils.docutils.nodes.Text"
  ],
  "typeshed.typeshed.stubs.docutils.docutils.nodes.Node.deepcopy": [
    "typeshed.typeshed.stubs.docutils.docutils.nodes.Element",
    "typeshed.typeshed.stubs.docutils.docutils.nodes.Text"
  ],
  "typeshed.typeshed.stubs.docutils.docutils.nodes.Node.pformat": [
    "typeshed.typeshed.stubs.docutils.docutils.nodes.Element",
    "typeshed.typeshed.stubs.docutils.docutils.nodes.Text"
  ],
  "typeshed.typeshed.stubs.fpdf2.fpdf._fonttools_shims.AbstractPen.addComponent": [
    "typeshed.typeshed.stubs.fpdf2.fpdf._fonttools_shims.DecomposingPen"
  ],
  "typeshed.typeshed.stubs.fpdf2.fpdf._fonttools_shims.AbstractPen.closePath": [
    "typeshed.typeshed.stubs.fpdf2.fpdf._fonttools_shims.BasePen"
  ],
  "typeshed.typeshed.stubs.fpdf2.fpdf._fonttools_shims.AbstractPen.curveTo": [
    "typeshed.typeshed.stubs.fpdf2.fpdf._fonttools_shims.BasePen"
  ],
  "typeshed.typeshed.stubs.fpdf2.fpdf._fonttools_shims.AbstractPen.endPath": [
    "typeshed.typeshed.stubs.fpdf2.fpdf._fonttools_shims.BasePen"
  ],
  "typeshed.typeshed.stubs.fpdf2.fpdf._fonttools_shims.AbstractPen.lineTo": [
    "typeshed.typeshed.stubs.fpdf2.fpdf._fonttools_shims.BasePen"
  ],
  "typeshed.typeshed.stubs.fpdf2.fpdf._fonttools_shims.AbstractPen.moveTo": [
    "typeshed.typeshed.stubs.fpdf2.fpdf._fonttools_shims.BasePen"
  ],
  "typeshed.typeshed.stubs.fpdf2.fpdf._fonttools_shims.AbstractPen.qCurveTo": [
    "typeshed.typeshed.stubs.fpdf2.fpdf._fonttools_shims.BasePen"
  ],
  "typeshed.typeshed.stubs.fpdf2.fpdf._fonttools_shims.BasePen.__init__": [
    "typeshed.typeshed.stubs.fpdf2.fpdf.svg.PathPen"
  ],
  "typeshed.typeshed.stubs.fpdf2.fpdf._fonttools_shims.DecomposingPen.__init__": [
    "typeshed.typeshed.stubs.fpdf2.fpdf._fonttools_shims.BasePen"
  ],
  "typeshed.typeshed.stubs.fpdf2.fpdf.actions.Action.__init__": [
    "typeshed.typeshed.stubs.fpdf2.fpdf.actions.GoToAction",
    "typeshed.typeshed.stubs.fpdf2.fpdf.actions.GoToRemoteAction",
    "typeshed.typeshed.stubs.fpdf2.fpdf.actions.LaunchAction",
    "typeshed.typeshed.stubs.fpdf2.fpdf.actions.NamedAction",
    "typeshed.typeshed.stubs.fpdf2.fpdf.actions.URIAction"
  ],
  "typeshed.typeshed.stubs.fpdf2.fpdf.actions.Action.serialize": [
    "typeshed.typeshed.stubs.fpdf2.fpdf.actions.GoToAction",
    "typeshed.typeshed.stubs.fpdf2.fpdf.actions.GoToRemoteAction",
    "typeshed.typeshed.stubs.fpdf2.fpdf.actions.LaunchAction",
    "typeshed.typeshed.stubs.fpdf2.fpdf.actions.NamedAction",
    "typeshed.typeshed.stubs.fpdf2.fpdf.actions.URIAction"
  ],
  "typeshed.typeshed.stubs.fpdf2.fpdf.drawing.PaintedPath.__init__": [
    "typeshed.typeshed.stubs.fpdf2.fpdf.drawing.ClippingPath"
  ],
  "typeshed.typeshed.stubs.fpdf2.fpdf.drawing.PaintedPath.render": [
    "typeshed.typeshed.stubs.fpdf2.fpdf.drawing.ClippingPath"
  ],
  "typeshed.typeshed.stubs.fpdf2.fpdf.drawing.PaintedPath.render_debug": [
    "typeshed.typeshed.stubs.fpdf2.fpdf.drawing.ClippingPath"
  ],
  "typeshed.typeshed.stubs.fpdf2.fpdf.drawing._DeviceCMYKBase.__new__": [
    "typeshed.typeshed.stubs.fpdf2.fpdf.drawing.DeviceCMYK"
  ],
  "typeshed.typeshed.stubs.fpdf2.fpdf.drawing._DeviceGrayBase.__new__": [
    "typeshed.typeshed.stubs.fpdf2.fpdf.drawing.DeviceGray"
  ],
  "typeshed.typeshed.stubs.fpdf2.fpdf.drawing._DeviceRGBBase.__new__": [
    "typeshed.typeshed.stubs.fpdf2.fpdf.drawing.DeviceRGB"
  ],
  "typeshed.typeshed.stubs.fpdf2.fpdf.fonts.FontFace.__init__": [
    "typeshed.typeshed.stubs.fpdf2.fpdf.fpdf.TitleStyle"
  ],
  "typeshed.typeshed.stubs.fpdf2.fpdf.graphics_state.GraphicsStateMixin.__init__": [
    "typeshed.typeshed.stubs.fpdf2.fpdf.fpdf.FPDF"
  ],
  "typeshed.typeshed.stubs.fpdf2.fpdf.output.ContentWithoutID.serialize": [
    "typeshed.typeshed.stubs.fpdf2.fpdf.linearization.PDFXrefAndTrailer",
    "typeshed.typeshed.stubs.fpdf2.fpdf.output.PDFHeader",
    "typeshed.typeshed.stubs.fpdf2.fpdf.output.PDFXrefAndTrailer"
  ],
  "typeshed.typeshed.stubs.fpdf2.fpdf.output.OutputProducer.bufferize": [
    "typeshed.typeshed.stubs.fpdf2.fpdf.linearization.LinearizedOutputProducer"
  ],
  "typeshed.typeshed.stubs.fpdf2.fpdf.syntax.Destination.serialize": [
    "typeshed.typeshed.stubs.fpdf2.fpdf.syntax.DestinationXYZ"
  ],
  "typeshed.typeshed.stubs.fpdf2.fpdf.syntax.PDFContentStream.__init__": [
    "typeshed.typeshed.stubs.fpdf2.fpdf.annotations.PDFEmbeddedFile",
    "typeshed.typeshed.stubs.fpdf2.fpdf.output.PDFFontStream",
    "typeshed.typeshed.stubs.fpdf2.fpdf.output.PDFICCPObject",
    "typeshed.typeshed.stubs.fpdf2.fpdf.output.PDFXObject",
    "typeshed.typeshed.stubs.fpdf2.fpdf.output.PDFXmpMetadata"
  ],
  "typeshed.typeshed.stubs.fpdf2.fpdf.syntax.PDFObject.serialize": [
    "typeshed.typeshed.stubs.fpdf2.fpdf.output.PDFExtGState",
    "typeshed.typeshed.stubs.fpdf2.fpdf.structure_tree.NumberTree"
  ],
  "typeshed.typeshed.stubs.fpdf2.fpdf.template.FlexTemplate.__init__": [
    "typeshed.typeshed.stubs.fpdf2.fpdf.template.Template"
  ],
  "typeshed.typeshed.stubs.fpdf2.fpdf.template.FlexTemplate.render": [
    "typeshed.typeshed.stubs.fpdf2.fpdf.template.Template"
  ],
  "typeshed.typeshed.stubs.fpdf2.fpdf.text_region.ParagraphCollectorMixin.__enter__": [
    "typeshed.typeshed.stubs.fpdf2.fpdf.text_region.TextColumns"
  ],
  "typeshed.typeshed.stubs.fpdf2.fpdf.text_region.TextRegion.current_x_extents": [
    "typeshed.typeshed.stubs.fpdf2.fpdf.text_region.TextColumns"
  ],
  "typeshed.typeshed.stubs.fpdf2.fpdf.text_region.TextRegion.render": [
    "typeshed.typeshed.stubs.fpdf2.fpdf.text_region.TextColumns"
  ],
  "typeshed.typeshed.stubs.fpdf2.fpdf.transitions.Transition.serialize": [
    "typeshed.typeshed.stubs.fpdf2.fpdf.transitions.BlindsTransition",
    "typeshed.typeshed.stubs.fpdf2.fpdf.transitions.BoxTransition",
    "typeshed.typeshed.stubs.fpdf2.fpdf.transitions.CoverTransition",
    "typeshed.typeshed.stubs.fpdf2.fpdf.transitions.DissolveTransition",
    "typeshed.typeshed.stubs.fpdf2.fpdf.transitions.FadeTransition",
    "typeshed.typeshed.stubs.fpdf2.fpdf.transitions.FlyTransition",
    "typeshed.typeshed.stubs.fpdf2.fpdf.transitions.GlitterTransition",
    "typeshed.typeshed.stubs.fpdf2.fpdf.transitions.PushTransition",
    "typeshed.typeshed.stubs.fpdf2.fpdf.transitions.SplitTransition",
    "typeshed.typeshed.stubs.fpdf2.fpdf.transitions.UncoverTransition",
    "typeshed.typeshed.stubs.fpdf2.fpdf.transitions.WipeTransition"
  ],
  "typeshed.typeshed.stubs.gdb.gdb.Breakpoint.__init__": [
    "typeshed.typeshed.stubs.gdb.gdb.FinishBreakpoint"
  ],
  "typeshed.typeshed.stubs.gdb.gdb.printing.PrettyPrinter.__init__": [
    "typeshed.typeshed.stubs.gdb.gdb.printing.FlagEnumerationPrinter",
    "typeshed.typeshed.stubs.gdb.gdb.printing.RegexpCollectionPrettyPrinter"
  ],
  "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb._cache._GlobalCacheBatch.done_callback": [
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb._cache._GlobalCacheGetBatch",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb._cache._GlobalCacheSetBatch"
  ],
  "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb._cache._GlobalCacheBatch.future_info": [
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb._cache._GlobalCacheDeleteBatch",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb._cache._GlobalCacheGetBatch",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb._cache._GlobalCacheSetBatch"
  ],
  "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb._cache._GlobalCacheBatch.make_call": [
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb._cache._GlobalCacheDeleteBatch",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb._cache._GlobalCacheGetBatch",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb._cache._GlobalCacheSetBatch"
  ],
  "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb._cache._GlobalCacheDeleteBatch.future_info": [
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb._cache._GlobalCacheUnwatchBatch",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb._cache._GlobalCacheWatchBatch"
  ],
  "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb._cache._GlobalCacheDeleteBatch.make_call": [
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb._cache._GlobalCacheUnwatchBatch",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb._cache._GlobalCacheWatchBatch"
  ],
  "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb._cache._GlobalCacheSetBatch.add": [
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb._cache._GlobalCacheSetIfNotExistsBatch"
  ],
  "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb._cache._GlobalCacheSetBatch.future_info": [
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb._cache._GlobalCacheCompareAndSwapBatch",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb._cache._GlobalCacheSetIfNotExistsBatch"
  ],
  "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb._cache._GlobalCacheSetBatch.make_call": [
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb._cache._GlobalCacheCompareAndSwapBatch",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb._cache._GlobalCacheSetIfNotExistsBatch"
  ],
  "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb._options.Options.__init__": [
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb._options.ReadOptions"
  ],
  "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.context._ContextTuple.__new__": [
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.context._Context"
  ],
  "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.global_cache.GlobalCache.clear": [
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.global_cache.MemcacheCache",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.global_cache.RedisCache",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.global_cache._InProcessGlobalCache"
  ],
  "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.global_cache.GlobalCache.compare_and_swap": [
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.global_cache.MemcacheCache",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.global_cache.RedisCache",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.global_cache._InProcessGlobalCache"
  ],
  "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.global_cache.GlobalCache.delete": [
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.global_cache.MemcacheCache",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.global_cache.RedisCache",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.global_cache._InProcessGlobalCache"
  ],
  "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.global_cache.GlobalCache.get": [
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.global_cache.MemcacheCache",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.global_cache.RedisCache",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.global_cache._InProcessGlobalCache"
  ],
  "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.global_cache.GlobalCache.set": [
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.global_cache.MemcacheCache",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.global_cache.RedisCache",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.global_cache._InProcessGlobalCache"
  ],
  "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.global_cache.GlobalCache.unwatch": [
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.global_cache.MemcacheCache",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.global_cache.RedisCache",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.global_cache._InProcessGlobalCache"
  ],
  "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.global_cache.GlobalCache.watch": [
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.global_cache.MemcacheCache",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.global_cache.RedisCache",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.global_cache._InProcessGlobalCache"
  ],
  "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.model.BlobProperty.__init__": [
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.model.CompressedTextProperty",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.model.JsonProperty",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.model.LocalStructuredProperty"
  ],
  "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.model.GenericProperty.__init__": [
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.model.ComputedProperty"
  ],
  "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.model.Property.IN": [
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.model.StructuredProperty"
  ],
  "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.model.Property.__init__": [
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.model.BlobProperty",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.model.DateTimeProperty",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.model.GenericProperty",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.model.KeyProperty",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.model.ModelKey",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.model.StructuredProperty",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.model.TextProperty",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.model.UserProperty"
  ],
  "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.model.TextProperty.__init__": [
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.model.StringProperty"
  ],
  "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.query.Node.__eq__": [
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.query.ConjunctionNode",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.query.DisjunctionNode",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.query.FalseNode",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.query.FilterNode",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.query.ParameterNode",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.query.PostFilterNode"
  ],
  "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.query.Node.__new__": [
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.query.ConjunctionNode",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.query.DisjunctionNode",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.query.FilterNode",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.query.ParameterNode",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.query.PostFilterNode"
  ],
  "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.query.Node.resolve": [
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.query.ConjunctionNode",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.query.DisjunctionNode",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.query.ParameterNode"
  ],
  "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.query.ParameterizedThing.__eq__": [
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.query.Parameter",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.query.ParameterizedFunction"
  ],
  "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.tasklets.Future.__init__": [
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.tasklets._MultiFuture",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.tasklets._TaskletFuture"
  ],
  "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.tasklets.Future.cancel": [
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.tasklets._MultiFuture",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.tasklets._TaskletFuture"
  ],
  "typeshed.typeshed.stubs.html5lib.html5lib._inputstream.HTMLUnicodeInputStream.__init__": [
    "typeshed.typeshed.stubs.html5lib.html5lib._inputstream.HTMLBinaryInputStream"
  ],
  "typeshed.typeshed.stubs.html5lib.html5lib._inputstream.HTMLUnicodeInputStream.openStream": [
    "typeshed.typeshed.stubs.html5lib.html5lib._inputstream.HTMLBinaryInputStream"
  ],
  "typeshed.typeshed.stubs.html5lib.html5lib._inputstream.HTMLUnicodeInputStream.reset": [
    "typeshed.typeshed.stubs.html5lib.html5lib._inputstream.HTMLBinaryInputStream"
  ],
  "typeshed.typeshed.stubs.html5lib.html5lib._trie._base.Trie.has_keys_with_prefix": [
    "typeshed.typeshed.stubs.html5lib.html5lib._trie.py.Trie"
  ],
  "typeshed.typeshed.stubs.html5lib.html5lib._trie._base.Trie.keys": [
    "typeshed.typeshed.stubs.html5lib.html5lib._trie.py.Trie"
  ],
  "typeshed.typeshed.stubs.html5lib.html5lib.filters.base.Filter.__init__": [
    "typeshed.typeshed.stubs.html5lib.html5lib.filters.inject_meta_charset.Filter",
    "typeshed.typeshed.stubs.html5lib.html5lib.filters.lint.Filter",
    "typeshed.typeshed.stubs.html5lib.html5lib.filters.sanitizer.Filter"
  ],
  "typeshed.typeshed.stubs.html5lib.html5lib.filters.base.Filter.__iter__": [
    "typeshed.typeshed.stubs.html5lib.html5lib.filters.alphabeticalattributes.Filter",
    "typeshed.typeshed.stubs.html5lib.html5lib.filters.inject_meta_charset.Filter",
    "typeshed.typeshed.stubs.html5lib.html5lib.filters.lint.Filter",
    "typeshed.typeshed.stubs.html5lib.html5lib.filters.optionaltags.Filter",
    "typeshed.typeshed.stubs.html5lib.html5lib.filters.sanitizer.Filter",
    "typeshed.typeshed.stubs.html5lib.html5lib.filters.whitespace.Filter"
  ],
  "typeshed.typeshed.stubs.html5lib.html5lib.treebuilders.base.TreeBuilder.__init__": [
    "typeshed.typeshed.stubs.html5lib.html5lib.treebuilders.etree_lxml.TreeBuilder"
  ],
  "typeshed.typeshed.stubs.html5lib.html5lib.treebuilders.base.TreeBuilder.getDocument": [
    "typeshed.typeshed.stubs.html5lib.html5lib.treebuilders.etree_lxml.TreeBuilder"
  ],
  "typeshed.typeshed.stubs.html5lib.html5lib.treebuilders.base.TreeBuilder.getFragment": [
    "typeshed.typeshed.stubs.html5lib.html5lib.treebuilders.etree_lxml.TreeBuilder"
  ],
  "typeshed.typeshed.stubs.html5lib.html5lib.treebuilders.base.TreeBuilder.insertDoctype": [
    "typeshed.typeshed.stubs.html5lib.html5lib.treebuilders.etree_lxml.TreeBuilder"
  ],
  "typeshed.typeshed.stubs.html5lib.html5lib.treebuilders.base.TreeBuilder.insertRoot": [
    "typeshed.typeshed.stubs.html5lib.html5lib.treebuilders.etree_lxml.TreeBuilder"
  ],
  "typeshed.typeshed.stubs.html5lib.html5lib.treebuilders.base.TreeBuilder.reset": [
    "typeshed.typeshed.stubs.html5lib.html5lib.treebuilders.etree_lxml.TreeBuilder"
  ],
  "typeshed.typeshed.stubs.html5lib.html5lib.treebuilders.base.TreeBuilder.testSerializer": [
    "typeshed.typeshed.stubs.html5lib.html5lib.treebuilders.etree_lxml.TreeBuilder"
  ],
  "typeshed.typeshed.stubs.html5lib.html5lib.treewalkers.base.NonRecursiveTreeWalker.getFirstChild": [
    "typeshed.typeshed.stubs.html5lib.html5lib.treewalkers.dom.TreeWalker",
    "typeshed.typeshed.stubs.html5lib.html5lib.treewalkers.etree_lxml.TreeWalker"
  ],
  "typeshed.typeshed.stubs.html5lib.html5lib.treewalkers.base.NonRecursiveTreeWalker.getNextSibling": [
    "typeshed.typeshed.stubs.html5lib.html5lib.treewalkers.dom.TreeWalker",
    "typeshed.typeshed.stubs.html5lib.html5lib.treewalkers.etree_lxml.TreeWalker"
  ],
  "typeshed.typeshed.stubs.html5lib.html5lib.treewalkers.base.NonRecursiveTreeWalker.getNodeDetails": [
    "typeshed.typeshed.stubs.html5lib.html5lib.treewalkers.dom.TreeWalker",
    "typeshed.typeshed.stubs.html5lib.html5lib.treewalkers.etree_lxml.TreeWalker"
  ],
  "typeshed.typeshed.stubs.html5lib.html5lib.treewalkers.base.NonRecursiveTreeWalker.getParentNode": [
    "typeshed.typeshed.stubs.html5lib.html5lib.treewalkers.dom.TreeWalker",
    "typeshed.typeshed.stubs.html5lib.html5lib.treewalkers.etree_lxml.TreeWalker"
  ],
  "typeshed.typeshed.stubs.html5lib.html5lib.treewalkers.base.TreeWalker.__iter__": [
    "typeshed.typeshed.stubs.html5lib.html5lib.treewalkers.base.NonRecursiveTreeWalker",
    "typeshed.typeshed.stubs.html5lib.html5lib.treewalkers.genshi.TreeWalker"
  ],
  "typeshed.typeshed.stubs.html5lib.html5lib.treewalkers.etree_lxml.Root.__init__": [
    "typeshed.typeshed.stubs.html5lib.html5lib.treewalkers.etree_lxml.FragmentRoot"
  ],
  "typeshed.typeshed.stubs.html5lib.html5lib.treewalkers.etree_lxml.Root.getnext": [
    "typeshed.typeshed.stubs.html5lib.html5lib.treewalkers.etree_lxml.FragmentRoot"
  ],
  "typeshed.typeshed.stubs.httplib2.httplib2.Authentication.__init__": [
    "typeshed.typeshed.stubs.httplib2.httplib2.BasicAuthentication",
    "typeshed.typeshed.stubs.httplib2.httplib2.DigestAuthentication",
    "typeshed.typeshed.stubs.httplib2.httplib2.GoogleLoginAuthentication",
    "typeshed.typeshed.stubs.httplib2.httplib2.HmacDigestAuthentication",
    "typeshed.typeshed.stubs.httplib2.httplib2.WsseAuthentication"
  ],
  "typeshed.typeshed.stubs.httplib2.httplib2.Authentication.request": [
    "typeshed.typeshed.stubs.httplib2.httplib2.BasicAuthentication",
    "typeshed.typeshed.stubs.httplib2.httplib2.DigestAuthentication",
    "typeshed.typeshed.stubs.httplib2.httplib2.GoogleLoginAuthentication",
    "typeshed.typeshed.stubs.httplib2.httplib2.HmacDigestAuthentication",
    "typeshed.typeshed.stubs.httplib2.httplib2.WsseAuthentication"
  ],
  "typeshed.typeshed.stubs.httplib2.httplib2.Authentication.response": [
    "typeshed.typeshed.stubs.httplib2.httplib2.DigestAuthentication",
    "typeshed.typeshed.stubs.httplib2.httplib2.HmacDigestAuthentication"
  ],
  "typeshed.typeshed.stubs.httplib2.httplib2.Credentials.add": [
    "typeshed.typeshed.stubs.httplib2.httplib2.KeyCerts"
  ],
  "typeshed.typeshed.stubs.httplib2.httplib2.Credentials.iter": [
    "typeshed.typeshed.stubs.httplib2.httplib2.KeyCerts"
  ],
  "typeshed.typeshed.stubs.inifile.inifile.IniData.__init__": [
    "typeshed.typeshed.stubs.inifile.inifile.IniFile"
  ],
  "typeshed.typeshed.stubs.inifile.inifile.IniFile.__init__": [
    "typeshed.typeshed.stubs.inifile.inifile.AppIniFile"
  ],
  "typeshed.typeshed.stubs.jmespath.jmespath.exceptions.ParseError.__init__": [
    "typeshed.typeshed.stubs.jmespath.jmespath.exceptions.ArityError",
    "typeshed.typeshed.stubs.jmespath.jmespath.exceptions.LexerError"
  ],
  "typeshed.typeshed.stubs.jmespath.jmespath.visitor.Visitor.__init__": [
    "typeshed.typeshed.stubs.jmespath.jmespath.visitor.GraphvizVisitor",
    "typeshed.typeshed.stubs.jmespath.jmespath.visitor.TreeInterpreter"
  ],
  "typeshed.typeshed.stubs.jmespath.jmespath.visitor.Visitor.default_visit": [
    "typeshed.typeshed.stubs.jmespath.jmespath.visitor.TreeInterpreter"
  ],
  "typeshed.typeshed.stubs.jmespath.jmespath.visitor.Visitor.visit": [
    "typeshed.typeshed.stubs.jmespath.jmespath.visitor.GraphvizVisitor"
  ],
  "typeshed.typeshed.stubs.keyboard.keyboard._generic.GenericListener.pre_process_event": [
    "typeshed.typeshed.stubs.keyboard.keyboard.mouse._MouseListener"
  ],
  "typeshed.typeshed.stubs.ldap3.ldap3.abstract.cursor.Cursor.__init__": [
    "typeshed.typeshed.stubs.ldap3.ldap3.abstract.cursor.Reader",
    "typeshed.typeshed.stubs.ldap3.ldap3.abstract.cursor.Writer"
  ],
  "typeshed.typeshed.stubs.ldap3.ldap3.abstract.entry.EntryBase.__getattr__": [
    "typeshed.typeshed.stubs.ldap3.ldap3.abstract.entry.WritableEntry"
  ],
  "typeshed.typeshed.stubs.ldap3.ldap3.abstract.entry.EntryBase.__setattr__": [
    "typeshed.typeshed.stubs.ldap3.ldap3.abstract.entry.WritableEntry"
  ],
  "typeshed.typeshed.stubs.ldap3.ldap3.extend.ExtendedOperationContainer.__init__": [
    "typeshed.typeshed.stubs.ldap3.ldap3.extend.ExtendedOperationsRoot"
  ],
  "typeshed.typeshed.stubs.ldap3.ldap3.extend.operation.ExtendedOperation.__init__": [
    "typeshed.typeshed.stubs.ldap3.ldap3.extend.novell.endTransaction.EndTransaction",
    "typeshed.typeshed.stubs.ldap3.ldap3.extend.novell.listReplicas.ListReplicas",
    "typeshed.typeshed.stubs.ldap3.ldap3.extend.novell.nmasGetUniversalPassword.NmasGetUniversalPassword",
    "typeshed.typeshed.stubs.ldap3.ldap3.extend.novell.nmasSetUniversalPassword.NmasSetUniversalPassword",
    "typeshed.typeshed.stubs.ldap3.ldap3.extend.novell.partition_entry_count.PartitionEntryCount",
    "typeshed.typeshed.stubs.ldap3.ldap3.extend.novell.replicaInfo.ReplicaInfo",
    "typeshed.typeshed.stubs.ldap3.ldap3.extend.novell.startTransaction.StartTransaction",
    "typeshed.typeshed.stubs.ldap3.ldap3.extend.standard.modifyPassword.ModifyPassword"
  ],
  "typeshed.typeshed.stubs.ldap3.ldap3.extend.operation.ExtendedOperation.config": [
    "typeshed.typeshed.stubs.ldap3.ldap3.extend.novell.endTransaction.EndTransaction",
    "typeshed.typeshed.stubs.ldap3.ldap3.extend.novell.getBindDn.GetBindDn",
    "typeshed.typeshed.stubs.ldap3.ldap3.extend.novell.listReplicas.ListReplicas",
    "typeshed.typeshed.stubs.ldap3.ldap3.extend.novell.nmasGetUniversalPassword.NmasGetUniversalPassword",
    "typeshed.typeshed.stubs.ldap3.ldap3.extend.novell.nmasSetUniversalPassword.NmasSetUniversalPassword",
    "typeshed.typeshed.stubs.ldap3.ldap3.extend.novell.partition_entry_count.PartitionEntryCount",
    "typeshed.typeshed.stubs.ldap3.ldap3.extend.novell.replicaInfo.ReplicaInfo",
    "typeshed.typeshed.stubs.ldap3.ldap3.extend.novell.startTransaction.StartTransaction",
    "typeshed.typeshed.stubs.ldap3.ldap3.extend.standard.modifyPassword.ModifyPassword",
    "typeshed.typeshed.stubs.ldap3.ldap3.extend.standard.whoAmI.WhoAmI"
  ],
  "typeshed.typeshed.stubs.ldap3.ldap3.extend.operation.ExtendedOperation.populate_result": [
    "typeshed.typeshed.stubs.ldap3.ldap3.extend.novell.endTransaction.EndTransaction",
    "typeshed.typeshed.stubs.ldap3.ldap3.extend.novell.getBindDn.GetBindDn",
    "typeshed.typeshed.stubs.ldap3.ldap3.extend.novell.listReplicas.ListReplicas",
    "typeshed.typeshed.stubs.ldap3.ldap3.extend.novell.nmasGetUniversalPassword.NmasGetUniversalPassword",
    "typeshed.typeshed.stubs.ldap3.ldap3.extend.novell.nmasSetUniversalPassword.NmasSetUniversalPassword",
    "typeshed.typeshed.stubs.ldap3.ldap3.extend.novell.partition_entry_count.PartitionEntryCount",
    "typeshed.typeshed.stubs.ldap3.ldap3.extend.novell.replicaInfo.ReplicaInfo",
    "typeshed.typeshed.stubs.ldap3.ldap3.extend.novell.startTransaction.StartTransaction",
    "typeshed.typeshed.stubs.ldap3.ldap3.extend.standard.modifyPassword.ModifyPassword",
    "typeshed.typeshed.stubs.ldap3.ldap3.extend.standard.whoAmI.WhoAmI"
  ],
  "typeshed.typeshed.stubs.ldap3.ldap3.extend.operation.ExtendedOperation.set_response": [
    "typeshed.typeshed.stubs.ldap3.ldap3.extend.novell.endTransaction.EndTransaction",
    "typeshed.typeshed.stubs.ldap3.ldap3.extend.novell.startTransaction.StartTransaction"
  ],
  "typeshed.typeshed.stubs.ldap3.ldap3.protocol.rfc4512.BaseObjectInfo.__init__": [
    "typeshed.typeshed.stubs.ldap3.ldap3.protocol.rfc4512.AttributeTypeInfo",
    "typeshed.typeshed.stubs.ldap3.ldap3.protocol.rfc4512.DitContentRuleInfo",
    "typeshed.typeshed.stubs.ldap3.ldap3.protocol.rfc4512.DitStructureRuleInfo",
    "typeshed.typeshed.stubs.ldap3.ldap3.protocol.rfc4512.LdapSyntaxInfo",
    "typeshed.typeshed.stubs.ldap3.ldap3.protocol.rfc4512.MatchingRuleInfo",
    "typeshed.typeshed.stubs.ldap3.ldap3.protocol.rfc4512.MatchingRuleUseInfo",
    "typeshed.typeshed.stubs.ldap3.ldap3.protocol.rfc4512.NameFormInfo",
    "typeshed.typeshed.stubs.ldap3.ldap3.protocol.rfc4512.ObjectClassInfo"
  ],
  "typeshed.typeshed.stubs.ldap3.ldap3.protocol.rfc4512.BaseServerInfo.__init__": [
    "typeshed.typeshed.stubs.ldap3.ldap3.protocol.rfc4512.DsaInfo",
    "typeshed.typeshed.stubs.ldap3.ldap3.protocol.rfc4512.SchemaInfo"
  ],
  "typeshed.typeshed.stubs.ldap3.ldap3.strategy.asynchronous.AsyncStrategy.__init__": [
    "typeshed.typeshed.stubs.ldap3.ldap3.strategy.asyncStream.AsyncStreamStrategy"
  ],
  "typeshed.typeshed.stubs.ldap3.ldap3.strategy.asynchronous.AsyncStrategy.get_stream": [
    "typeshed.typeshed.stubs.ldap3.ldap3.strategy.asyncStream.AsyncStreamStrategy"
  ],
  "typeshed.typeshed.stubs.ldap3.ldap3.strategy.asynchronous.AsyncStrategy.post_send_search": [
    "typeshed.typeshed.stubs.ldap3.ldap3.strategy.mockAsync.MockAsyncStrategy"
  ],
  "typeshed.typeshed.stubs.ldap3.ldap3.strategy.asynchronous.AsyncStrategy.post_send_single_response": [
    "typeshed.typeshed.stubs.ldap3.ldap3.strategy.mockAsync.MockAsyncStrategy"
  ],
  "typeshed.typeshed.stubs.ldap3.ldap3.strategy.asynchronous.AsyncStrategy.set_stream": [
    "typeshed.typeshed.stubs.ldap3.ldap3.strategy.asyncStream.AsyncStreamStrategy"
  ],
  "typeshed.typeshed.stubs.ldap3.ldap3.strategy.base.BaseStrategy.__init__": [
    "typeshed.typeshed.stubs.ldap3.ldap3.strategy.asynchronous.AsyncStrategy",
    "typeshed.typeshed.stubs.ldap3.ldap3.strategy.ldifProducer.LdifProducerStrategy",
    "typeshed.typeshed.stubs.ldap3.ldap3.strategy.reusable.ReusableStrategy",
    "typeshed.typeshed.stubs.ldap3.ldap3.strategy.sync.SyncStrategy"
  ],
  "typeshed.typeshed.stubs.ldap3.ldap3.strategy.base.BaseStrategy.close": [
    "typeshed.typeshed.stubs.ldap3.ldap3.strategy.asynchronous.AsyncStrategy"
  ],
  "typeshed.typeshed.stubs.ldap3.ldap3.strategy.base.BaseStrategy.get_response": [
    "typeshed.typeshed.stubs.ldap3.ldap3.strategy.mockAsync.MockAsyncStrategy",
    "typeshed.typeshed.stubs.ldap3.ldap3.strategy.reusable.ReusableStrategy"
  ],
  "typeshed.typeshed.stubs.ldap3.ldap3.strategy.base.BaseStrategy.get_stream": [
    "typeshed.typeshed.stubs.ldap3.ldap3.strategy.asynchronous.AsyncStrategy",
    "typeshed.typeshed.stubs.ldap3.ldap3.strategy.ldifProducer.LdifProducerStrategy",
    "typeshed.typeshed.stubs.ldap3.ldap3.strategy.reusable.ReusableStrategy",
    "typeshed.typeshed.stubs.ldap3.ldap3.strategy.sync.SyncStrategy"
  ],
  "typeshed.typeshed.stubs.ldap3.ldap3.strategy.base.BaseStrategy.open": [
    "typeshed.typeshed.stubs.ldap3.ldap3.strategy.asynchronous.AsyncStrategy",
    "typeshed.typeshed.stubs.ldap3.ldap3.strategy.reusable.ReusableStrategy",
    "typeshed.typeshed.stubs.ldap3.ldap3.strategy.sync.SyncStrategy"
  ],
  "typeshed.typeshed.stubs.ldap3.ldap3.strategy.base.BaseStrategy.post_send_search": [
    "typeshed.typeshed.stubs.ldap3.ldap3.strategy.asynchronous.AsyncStrategy",
    "typeshed.typeshed.stubs.ldap3.ldap3.strategy.ldifProducer.LdifProducerStrategy",
    "typeshed.typeshed.stubs.ldap3.ldap3.strategy.reusable.ReusableStrategy",
    "typeshed.typeshed.stubs.ldap3.ldap3.strategy.sync.SyncStrategy"
  ],
  "typeshed.typeshed.stubs.ldap3.ldap3.strategy.base.BaseStrategy.post_send_single_response": [
    "typeshed.typeshed.stubs.ldap3.ldap3.strategy.asynchronous.AsyncStrategy",
    "typeshed.typeshed.stubs.ldap3.ldap3.strategy.ldifProducer.LdifProducerStrategy",
    "typeshed.typeshed.stubs.ldap3.ldap3.strategy.reusable.ReusableStrategy",
    "typeshed.typeshed.stubs.ldap3.ldap3.strategy.sync.SyncStrategy"
  ],
  "typeshed.typeshed.stubs.ldap3.ldap3.strategy.base.BaseStrategy.receiving": [
    "typeshed.typeshed.stubs.ldap3.ldap3.strategy.asynchronous.AsyncStrategy",
    "typeshed.typeshed.stubs.ldap3.ldap3.strategy.ldifProducer.LdifProducerStrategy",
    "typeshed.typeshed.stubs.ldap3.ldap3.strategy.reusable.ReusableStrategy",
    "typeshed.typeshed.stubs.ldap3.ldap3.strategy.sync.SyncStrategy"
  ],
  "typeshed.typeshed.stubs.ldap3.ldap3.strategy.base.BaseStrategy.send": [
    "typeshed.typeshed.stubs.ldap3.ldap3.strategy.ldifProducer.LdifProducerStrategy",
    "typeshed.typeshed.stubs.ldap3.ldap3.strategy.restartable.RestartableStrategy",
    "typeshed.typeshed.stubs.ldap3.ldap3.strategy.reusable.ReusableStrategy"
  ],
  "typeshed.typeshed.stubs.ldap3.ldap3.strategy.base.BaseStrategy.set_stream": [
    "typeshed.typeshed.stubs.ldap3.ldap3.strategy.asynchronous.AsyncStrategy",
    "typeshed.typeshed.stubs.ldap3.ldap3.strategy.ldifProducer.LdifProducerStrategy",
    "typeshed.typeshed.stubs.ldap3.ldap3.strategy.reusable.ReusableStrategy",
    "typeshed.typeshed.stubs.ldap3.ldap3.strategy.sync.SyncStrategy"
  ],
  "typeshed.typeshed.stubs.ldap3.ldap3.strategy.mockBase.MockBaseStrategy.__init__": [
    "typeshed.typeshed.stubs.ldap3.ldap3.strategy.mockAsync.MockAsyncStrategy",
    "typeshed.typeshed.stubs.ldap3.ldap3.strategy.mockSync.MockSyncStrategy"
  ],
  "typeshed.typeshed.stubs.ldap3.ldap3.strategy.restartable.RestartableStrategy.__init__": [
    "typeshed.typeshed.stubs.ldap3.ldap3.strategy.safeRestartable.SafeRestartableStrategy"
  ],
  "typeshed.typeshed.stubs.ldap3.ldap3.strategy.sync.SyncStrategy.__init__": [
    "typeshed.typeshed.stubs.ldap3.ldap3.strategy.restartable.RestartableStrategy",
    "typeshed.typeshed.stubs.ldap3.ldap3.strategy.safeSync.SafeSyncStrategy"
  ],
  "typeshed.typeshed.stubs.ldap3.ldap3.strategy.sync.SyncStrategy.get_stream": [
    "typeshed.typeshed.stubs.ldap3.ldap3.strategy.restartable.RestartableStrategy"
  ],
  "typeshed.typeshed.stubs.ldap3.ldap3.strategy.sync.SyncStrategy.open": [
    "typeshed.typeshed.stubs.ldap3.ldap3.strategy.restartable.RestartableStrategy"
  ],
  "typeshed.typeshed.stubs.ldap3.ldap3.strategy.sync.SyncStrategy.post_send_search": [
    "typeshed.typeshed.stubs.ldap3.ldap3.strategy.mockSync.MockSyncStrategy",
    "typeshed.typeshed.stubs.ldap3.ldap3.strategy.restartable.RestartableStrategy"
  ],
  "typeshed.typeshed.stubs.ldap3.ldap3.strategy.sync.SyncStrategy.post_send_single_response": [
    "typeshed.typeshed.stubs.ldap3.ldap3.strategy.mockSync.MockSyncStrategy",
    "typeshed.typeshed.stubs.ldap3.ldap3.strategy.restartable.RestartableStrategy"
  ],
  "typeshed.typeshed.stubs.ldap3.ldap3.strategy.sync.SyncStrategy.set_stream": [
    "typeshed.typeshed.stubs.ldap3.ldap3.strategy.restartable.RestartableStrategy"
  ],
  "typeshed.typeshed.stubs.ldap3.ldap3.utils.ciDict.CaseInsensitiveDict.__delitem__": [
    "typeshed.typeshed.stubs.ldap3.ldap3.utils.ciDict.CaseInsensitiveWithAliasDict"
  ],
  "typeshed.typeshed.stubs.ldap3.ldap3.utils.ciDict.CaseInsensitiveDict.__getitem__": [
    "typeshed.typeshed.stubs.ldap3.ldap3.utils.ciDict.CaseInsensitiveWithAliasDict"
  ],
  "typeshed.typeshed.stubs.ldap3.ldap3.utils.ciDict.CaseInsensitiveDict.__init__": [
    "typeshed.typeshed.stubs.ldap3.ldap3.utils.ciDict.CaseInsensitiveWithAliasDict"
  ],
  "typeshed.typeshed.stubs.ldap3.ldap3.utils.ciDict.CaseInsensitiveDict.__setitem__": [
    "typeshed.typeshed.stubs.ldap3.ldap3.utils.ciDict.CaseInsensitiveWithAliasDict"
  ],
  "typeshed.typeshed.stubs.ldap3.ldap3.utils.ciDict.CaseInsensitiveDict.copy": [
    "typeshed.typeshed.stubs.ldap3.ldap3.utils.ciDict.CaseInsensitiveWithAliasDict"
  ],
  "typeshed.typeshed.stubs.libsass.sass._SassColor.__new__": [
    "typeshed.typeshed.stubs.libsass.sass.SassColor"
  ],
  "typeshed.typeshed.stubs.libsass.sass._SassError.__new__": [
    "typeshed.typeshed.stubs.libsass.sass.SassError"
  ],
  "typeshed.typeshed.stubs.libsass.sass._SassList.__new__": [
    "typeshed.typeshed.stubs.libsass.sass.SassList"
  ],
  "typeshed.typeshed.stubs.libsass.sass._SassNumber.__new__": [
    "typeshed.typeshed.stubs.libsass.sass.SassNumber"
  ],
  "typeshed.typeshed.stubs.libsass.sass._SassWarning.__new__": [
    "typeshed.typeshed.stubs.libsass.sass.SassWarning"
  ],
  "typeshed.typeshed.stubs.mock.mock.mock.AsyncMockMixin.reset_mock": [
    "typeshed.typeshed.stubs.mock.mock.mock.AsyncMock"
  ],
  "typeshed.typeshed.stubs.mock.mock.mock.Base.__init__": [
    "typeshed.typeshed.stubs.mock.mock.mock.AsyncMockMixin",
    "typeshed.typeshed.stubs.mock.mock.mock.CallableMixin",
    "typeshed.typeshed.stubs.mock.mock.mock.MagicProxy",
    "typeshed.typeshed.stubs.mock.mock.mock.NonCallableMock",
    "typeshed.typeshed.stubs.mock.mock.mock.ThreadingMixin"
  ],
  "typeshed.typeshed.stubs.mock.mock.mock.NonCallableMock.mock_add_spec": [
    "typeshed.typeshed.stubs.mock.mock.mock.MagicMock",
    "typeshed.typeshed.stubs.mock.mock.mock.NonCallableMagicMock"
  ],
  "typeshed.typeshed.stubs.mock.mock.mock.ThreadingMixin.reset_mock": [
    "typeshed.typeshed.stubs.mock.mock.mock.ThreadingMock"
  ],
  "typeshed.typeshed.stubs.mysqlclient.MySQLdb._mysql.connection.__init__": [
    "typeshed.typeshed.stubs.mysqlclient.MySQLdb.connections.Connection"
  ],
  "typeshed.typeshed.stubs.mysqlclient.MySQLdb._mysql.connection.autocommit": [
    "typeshed.typeshed.stubs.mysqlclient.MySQLdb.connections.Connection"
  ],
  "typeshed.typeshed.stubs.mysqlclient.MySQLdb._mysql.connection.query": [
    "typeshed.typeshed.stubs.mysqlclient.MySQLdb.connections.Connection"
  ],
  "typeshed.typeshed.stubs.mysqlclient.MySQLdb._mysql.connection.set_character_set": [
    "typeshed.typeshed.stubs.mysqlclient.MySQLdb.connections.Connection"
  ],
  "typeshed.typeshed.stubs.mysqlclient.MySQLdb._mysql.connection.warning_count": [
    "typeshed.typeshed.stubs.mysqlclient.MySQLdb.connections.Connection"
  ],
  "typeshed.typeshed.stubs.netaddr.netaddr.core.Subscriber.update": [
    "typeshed.typeshed.stubs.netaddr.netaddr.core.PrettyPrinter"
  ],
  "typeshed.typeshed.stubs.netaddr.netaddr.eui.BaseIdentifier.__init__": [
    "typeshed.typeshed.stubs.netaddr.netaddr.eui.EUI",
    "typeshed.typeshed.stubs.netaddr.netaddr.eui.IAB",
    "typeshed.typeshed.stubs.netaddr.netaddr.eui.OUI"
  ],
  "typeshed.typeshed.stubs.netaddr.netaddr.ip.BaseIP.__init__": [
    "typeshed.typeshed.stubs.netaddr.netaddr.ip.IPAddress",
    "typeshed.typeshed.stubs.netaddr.netaddr.ip.IPNetwork",
    "typeshed.typeshed.stubs.netaddr.netaddr.ip.IPRange"
  ],
  "typeshed.typeshed.stubs.netaddr.netaddr.ip.BaseIP.key": [
    "typeshed.typeshed.stubs.netaddr.netaddr.ip.IPAddress",
    "typeshed.typeshed.stubs.netaddr.netaddr.ip.IPNetwork",
    "typeshed.typeshed.stubs.netaddr.netaddr.ip.IPRange"
  ],
  "typeshed.typeshed.stubs.netaddr.netaddr.ip.BaseIP.sort_key": [
    "typeshed.typeshed.stubs.netaddr.netaddr.ip.IPAddress",
    "typeshed.typeshed.stubs.netaddr.netaddr.ip.IPNetwork",
    "typeshed.typeshed.stubs.netaddr.netaddr.ip.IPRange"
  ],
  "typeshed.typeshed.stubs.netaddr.netaddr.ip.IPListMixin.__contains__": [
    "typeshed.typeshed.stubs.netaddr.netaddr.ip.IPNetwork",
    "typeshed.typeshed.stubs.netaddr.netaddr.ip.IPRange"
  ],
  "typeshed.typeshed.stubs.netaddr.netaddr.ip.iana.XMLRecordParser.process_record": [
    "typeshed.typeshed.stubs.netaddr.netaddr.ip.iana.IPv4Parser",
    "typeshed.typeshed.stubs.netaddr.netaddr.ip.iana.IPv6Parser",
    "typeshed.typeshed.stubs.netaddr.netaddr.ip.iana.IPv6UnicastParser"
  ],
  "typeshed.typeshed.stubs.oauthlib.oauthlib.oauth2.rfc6749.clients.base.Client.__init__": [
    "typeshed.typeshed.stubs.oauthlib.oauthlib.oauth2.rfc6749.clients.legacy_application.LegacyApplicationClient",
    "typeshed.typeshed.stubs.oauthlib.oauthlib.oauth2.rfc6749.clients.service_application.ServiceApplicationClient",
    "typeshed.typeshed.stubs.oauthlib.oauthlib.oauth2.rfc6749.clients.web_application.WebApplicationClient"
  ],
  "typeshed.typeshed.stubs.oauthlib.oauthlib.oauth2.rfc6749.clients.base.Client.parse_request_uri_response": [
    "typeshed.typeshed.stubs.oauthlib.oauthlib.oauth2.rfc6749.clients.mobile_application.MobileApplicationClient",
    "typeshed.typeshed.stubs.oauthlib.oauthlib.oauth2.rfc6749.clients.web_application.WebApplicationClient"
  ],
  "typeshed.typeshed.stubs.oauthlib.oauthlib.oauth2.rfc6749.clients.base.Client.prepare_request_body": [
    "typeshed.typeshed.stubs.oauthlib.oauthlib.oauth2.rfc6749.clients.backend_application.BackendApplicationClient",
    "typeshed.typeshed.stubs.oauthlib.oauthlib.oauth2.rfc6749.clients.legacy_application.LegacyApplicationClient",
    "typeshed.typeshed.stubs.oauthlib.oauthlib.oauth2.rfc6749.clients.service_application.ServiceApplicationClient",
    "typeshed.typeshed.stubs.oauthlib.oauthlib.oauth2.rfc6749.clients.web_application.WebApplicationClient"
  ],
  "typeshed.typeshed.stubs.oauthlib.oauthlib.oauth2.rfc6749.clients.base.Client.prepare_request_uri": [
    "typeshed.typeshed.stubs.oauthlib.oauthlib.oauth2.rfc6749.clients.mobile_application.MobileApplicationClient",
    "typeshed.typeshed.stubs.oauthlib.oauthlib.oauth2.rfc6749.clients.web_application.WebApplicationClient"
  ],
  "typeshed.typeshed.stubs.oauthlib.oauthlib.oauth2.rfc6749.endpoints.authorization.AuthorizationEndpoint.__init__": [
    "typeshed.typeshed.stubs.oauthlib.oauthlib.oauth2.rfc6749.endpoints.pre_configured.MobileApplicationServer",
    "typeshed.typeshed.stubs.oauthlib.oauthlib.oauth2.rfc6749.endpoints.pre_configured.Server",
    "typeshed.typeshed.stubs.oauthlib.oauthlib.oauth2.rfc6749.endpoints.pre_configured.WebApplicationServer"
  ],
  "typeshed.typeshed.stubs.oauthlib.oauthlib.oauth2.rfc6749.endpoints.base.BaseEndpoint.__init__": [
    "typeshed.typeshed.stubs.oauthlib.oauthlib.oauth2.rfc6749.endpoints.authorization.AuthorizationEndpoint",
    "typeshed.typeshed.stubs.oauthlib.oauthlib.oauth2.rfc6749.endpoints.introspect.IntrospectEndpoint",
    "typeshed.typeshed.stubs.oauthlib.oauthlib.oauth2.rfc6749.endpoints.metadata.MetadataEndpoint",
    "typeshed.typeshed.stubs.oauthlib.oauthlib.oauth2.rfc6749.endpoints.resource.ResourceEndpoint",
    "typeshed.typeshed.stubs.oauthlib.oauthlib.oauth2.rfc6749.endpoints.revocation.RevocationEndpoint",
    "typeshed.typeshed.stubs.oauthlib.oauthlib.oauth2.rfc6749.endpoints.token.TokenEndpoint"
  ],
  "typeshed.typeshed.stubs.oauthlib.oauthlib.oauth2.rfc6749.endpoints.token.TokenEndpoint.__init__": [
    "typeshed.typeshed.stubs.oauthlib.oauthlib.oauth2.rfc6749.endpoints.pre_configured.BackendApplicationServer",
    "typeshed.typeshed.stubs.oauthlib.oauthlib.oauth2.rfc6749.endpoints.pre_configured.LegacyApplicationServer"
  ],
  "typeshed.typeshed.stubs.oauthlib.oauthlib.oauth2.rfc6749.errors.OAuth2Error.__init__": [
    "typeshed.typeshed.stubs.oauthlib.oauthlib.oauth2.rfc6749.errors.CustomOAuth2Error"
  ],
  "typeshed.typeshed.stubs.oauthlib.oauthlib.oauth2.rfc6749.grant_types.base.GrantTypeBase.__init__": [
    "typeshed.typeshed.stubs.oauthlib.oauthlib.oauth2.rfc6749.grant_types.refresh_token.RefreshTokenGrant"
  ],
  "typeshed.typeshed.stubs.oauthlib.oauthlib.oauth2.rfc6749.grant_types.base.GrantTypeBase.create_authorization_response": [
    "typeshed.typeshed.stubs.oauthlib.oauthlib.oauth2.rfc6749.grant_types.authorization_code.AuthorizationCodeGrant",
    "typeshed.typeshed.stubs.oauthlib.oauthlib.oauth2.rfc6749.grant_types.implicit.ImplicitGrant"
  ],
  "typeshed.typeshed.stubs.oauthlib.oauthlib.oauth2.rfc6749.grant_types.base.GrantTypeBase.create_token_response": [
    "typeshed.typeshed.stubs.oauthlib.oauthlib.oauth2.rfc6749.grant_types.authorization_code.AuthorizationCodeGrant",
    "typeshed.typeshed.stubs.oauthlib.oauthlib.oauth2.rfc6749.grant_types.client_credentials.ClientCredentialsGrant",
    "typeshed.typeshed.stubs.oauthlib.oauthlib.oauth2.rfc6749.grant_types.implicit.ImplicitGrant",
    "typeshed.typeshed.stubs.oauthlib.oauthlib.oauth2.rfc6749.grant_types.refresh_token.RefreshTokenGrant",
    "typeshed.typeshed.stubs.oauthlib.oauthlib.oauth2.rfc6749.grant_types.resource_owner_password_credentials.ResourceOwnerPasswordCredentialsGrant"
  ],
  "typeshed.typeshed.stubs.oauthlib.oauthlib.oauth2.rfc6749.tokens.TokenBase.estimate_type": [
    "typeshed.typeshed.stubs.oauthlib.oauthlib.oauth2.rfc6749.tokens.BearerToken"
  ],
  "typeshed.typeshed.stubs.oauthlib.oauthlib.oauth2.rfc6749.tokens.TokenBase.validate_request": [
    "typeshed.typeshed.stubs.oauthlib.oauthlib.oauth2.rfc6749.tokens.BearerToken"
  ],
  "typeshed.typeshed.stubs.oauthlib.oauthlib.openid.connect.core.grant_types.base.GrantTypeBase.add_id_token": [
    "typeshed.typeshed.stubs.oauthlib.oauthlib.openid.connect.core.grant_types.authorization_code.AuthorizationCodeGrant",
    "typeshed.typeshed.stubs.oauthlib.oauthlib.openid.connect.core.grant_types.hybrid.HybridGrant",
    "typeshed.typeshed.stubs.oauthlib.oauthlib.openid.connect.core.grant_types.implicit.ImplicitGrant"
  ],
  "typeshed.typeshed.stubs.oauthlib.oauthlib.openid.connect.core.grant_types.base.GrantTypeBase.openid_authorization_validator": [
    "typeshed.typeshed.stubs.oauthlib.oauthlib.openid.connect.core.grant_types.hybrid.HybridGrant",
    "typeshed.typeshed.stubs.oauthlib.oauthlib.openid.connect.core.grant_types.implicit.ImplicitGrant"
  ],
  "typeshed.typeshed.stubs.openpyxl.openpyxl.chart._chart.ChartBase.__init__": [
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.area_chart._AreaChartBase",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.bar_chart._BarChartBase",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.bubble_chart.BubbleChart",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.line_chart._LineChartBase",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.pie_chart._PieChartBase",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.radar_chart.RadarChart",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.scatter_chart.ScatterChart",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.stock_chart.StockChart",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.surface_chart._SurfaceChartBase"
  ],
  "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.area_chart.AreaChart.__init__": [
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.area_chart.AreaChart3D"
  ],
  "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.area_chart._AreaChartBase.__init__": [
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.area_chart.AreaChart"
  ],
  "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.axis.TextAxis.__init__": [
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.axis.DateAxis"
  ],
  "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.axis._BaseAxis.__init__": [
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.axis.NumericAxis",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.axis.SeriesAxis",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.axis.TextAxis"
  ],
  "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.bar_chart._BarChartBase.__init__": [
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.bar_chart.BarChart",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.bar_chart.BarChart3D"
  ],
  "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.label._DataLabelBase.__init__": [
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.label.DataLabel",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.label.DataLabelList"
  ],
  "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.line_chart._LineChartBase.__init__": [
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.line_chart.LineChart",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.line_chart.LineChart3D"
  ],
  "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.pie_chart._PieChartBase.__init__": [
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.pie_chart.DoughnutChart",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.pie_chart.PieChart",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.pie_chart.ProjectedPieChart"
  ],
  "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.surface_chart.SurfaceChart3D.__init__": [
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.surface_chart.SurfaceChart"
  ],
  "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.surface_chart._SurfaceChartBase.__init__": [
    "typeshed.typeshed.stubs.openpyxl.openpyxl.chart.surface_chart.SurfaceChart3D"
  ],
  "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.base.Alias.__get__": [
    "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.sequence.MultiSequencePart"
  ],
  "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.base.Alias.__init__": [
    "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.sequence.MultiSequencePart"
  ],
  "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.base.Alias.__set__": [
    "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.sequence.MultiSequencePart"
  ],
  "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.base.Convertible.__init__": [
    "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.base.Bool",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.base.Float",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.base.Integer",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.base.Max",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.base.Min"
  ],
  "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.base.Convertible.__set__": [
    "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.base.Bool",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.base.Max",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.base.Min"
  ],
  "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.base.Descriptor.__get__": [
    "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.base.Alias",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.base.MatchPattern",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.base.Typed"
  ],
  "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.base.Descriptor.__init__": [
    "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.base.Alias",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.base.Length",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.base.MatchPattern",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.base.Set",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.base.Typed"
  ],
  "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.base.Descriptor.__set__": [
    "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.base.Alias",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.base.Length",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.base.MatchPattern",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.base.Set",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.base.Typed",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.sequence.Sequence"
  ],
  "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.base.MatchPattern.__set__": [
    "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.excel.CellRange"
  ],
  "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.base.Min.__init__": [
    "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.base.MinMax"
  ],
  "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.base.Min.__set__": [
    "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.excel.Percentage"
  ],
  "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.base.Set.__init__": [
    "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.base.NoneSet"
  ],
  "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.base.Set.__set__": [
    "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.base.NoneSet"
  ],
  "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.base.Typed.__init__": [
    "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.base.ASCII",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.base.Convertible",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.base.DateTime",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.base.Default",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.base.String",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.base.Tuple"
  ],
  "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.base.Typed.__set__": [
    "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.base.Convertible",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.base.DateTime"
  ],
  "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.nested.Nested.__get__": [
    "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.nested.EmptyTag",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.nested.NestedMinMax",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.nested.NestedValue"
  ],
  "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.nested.Nested.__init__": [
    "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.nested.EmptyTag",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.nested.NestedMinMax",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.nested.NestedNoneSet",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.nested.NestedSet",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.nested.NestedValue"
  ],
  "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.nested.Nested.__set__": [
    "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.nested.EmptyTag",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.nested.NestedMinMax",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.nested.NestedNoneSet",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.nested.NestedValue"
  ],
  "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.nested.Nested.from_tree": [
    "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.nested.EmptyTag",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.nested.NestedBool",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.nested.NestedText"
  ],
  "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.nested.Nested.to_tree": [
    "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.nested.EmptyTag",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.nested.NestedText"
  ],
  "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.nested.NestedValue.__get__": [
    "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.nested.NestedText"
  ],
  "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.nested.NestedValue.__init__": [
    "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.nested.NestedBool",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.nested.NestedFloat",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.nested.NestedInteger",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.nested.NestedString",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.nested.NestedText"
  ],
  "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.nested.NestedValue.__set__": [
    "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.nested.NestedBool",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.nested.NestedText"
  ],
  "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.sequence.Sequence.__set__": [
    "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.sequence.MultiSequence"
  ],
  "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.sequence.Sequence.to_tree": [
    "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.sequence.MultiSequence",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.sequence.NestedSequence",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.descriptors.sequence.ValueSequence"
  ],
  "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.colors.ColorChoice.__init__": [
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.effect.GlowEffect",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.effect.InnerShadowEffect",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.effect.OuterShadow",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.effect.PresetShadowEffect"
  ],
  "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.spreadsheet_drawing._AnchorBase.__init__": [
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.spreadsheet_drawing.AbsoluteAnchor",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.spreadsheet_drawing.OneCellAnchor",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.drawing.spreadsheet_drawing.TwoCellAnchor"
  ],
  "typeshed.typeshed.stubs.openpyxl.openpyxl.packaging.core.NestedDateTime.to_tree": [
    "typeshed.typeshed.stubs.openpyxl.openpyxl.packaging.core.QualifiedDateTime"
  ],
  "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.cell_range.CellRange.__contains__": [
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.merge.MergedCellRange"
  ],
  "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.cell_range.CellRange.__copy__": [
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.merge.MergeCell",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.merge.MergedCellRange"
  ],
  "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.cell_range.CellRange.__init__": [
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.merge.MergeCell",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.merge.MergedCellRange"
  ],
  "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.cell_range.MultiCellRange.__eq__": [
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.print_settings.PrintArea"
  ],
  "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.cell_range.MultiCellRange.__init__": [
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.print_settings.PrintArea"
  ],
  "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.dimensions.Dimension.__init__": [
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.dimensions.ColumnDimension",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.dimensions.RowDimension"
  ],
  "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.protection._Protected.set_password": [
    "typeshed.typeshed.stubs.openpyxl.openpyxl.worksheet.protection.SheetProtection"
  ],
  "typeshed.typeshed.stubs.opentracing.opentracing.mocktracer.propagator.Propagator.extract": [
    "typeshed.typeshed.stubs.opentracing.opentracing.mocktracer.binary_propagator.BinaryPropagator",
    "typeshed.typeshed.stubs.opentracing.opentracing.mocktracer.text_propagator.TextPropagator"
  ],
  "typeshed.typeshed.stubs.opentracing.opentracing.mocktracer.propagator.Propagator.inject": [
    "typeshed.typeshed.stubs.opentracing.opentracing.mocktracer.binary_propagator.BinaryPropagator",
    "typeshed.typeshed.stubs.opentracing.opentracing.mocktracer.text_propagator.TextPropagator"
  ],
  "typeshed.typeshed.stubs.opentracing.opentracing.scope_manager.ScopeManager.__init__": [
    "typeshed.typeshed.stubs.opentracing.opentracing.scope_managers.ThreadLocalScopeManager"
  ],
  "typeshed.typeshed.stubs.opentracing.opentracing.scope_manager.ScopeManager.activate": [
    "typeshed.typeshed.stubs.opentracing.opentracing.scope_managers.ThreadLocalScopeManager",
    "typeshed.typeshed.stubs.opentracing.opentracing.scope_managers.contextvars.ContextVarsScopeManager",
    "typeshed.typeshed.stubs.opentracing.opentracing.scope_managers.gevent.GeventScopeManager"
  ],
  "typeshed.typeshed.stubs.opentracing.opentracing.scope_manager.ScopeManager.active": [
    "typeshed.typeshed.stubs.opentracing.opentracing.scope_managers.ThreadLocalScopeManager",
    "typeshed.typeshed.stubs.opentracing.opentracing.scope_managers.contextvars.ContextVarsScopeManager",
    "typeshed.typeshed.stubs.opentracing.opentracing.scope_managers.gevent.GeventScopeManager"
  ],
  "typeshed.typeshed.stubs.opentracing.opentracing.scope_managers.ThreadLocalScopeManager.activate": [
    "typeshed.typeshed.stubs.opentracing.opentracing.scope_managers.asyncio.AsyncioScopeManager",
    "typeshed.typeshed.stubs.opentracing.opentracing.scope_managers.tornado.TornadoScopeManager"
  ],
  "typeshed.typeshed.stubs.opentracing.opentracing.scope_managers.ThreadLocalScopeManager.active": [
    "typeshed.typeshed.stubs.opentracing.opentracing.scope_managers.asyncio.AsyncioScopeManager",
    "typeshed.typeshed.stubs.opentracing.opentracing.scope_managers.tornado.TornadoScopeManager"
  ],
  "typeshed.typeshed.stubs.opentracing.opentracing.span.Span.__init__": [
    "typeshed.typeshed.stubs.opentracing.opentracing.mocktracer.span.MockSpan"
  ],
  "typeshed.typeshed.stubs.opentracing.opentracing.span.Span.context": [
    "typeshed.typeshed.stubs.opentracing.opentracing.mocktracer.span.MockSpan"
  ],
  "typeshed.typeshed.stubs.opentracing.opentracing.span.Span.log_kv": [
    "typeshed.typeshed.stubs.opentracing.opentracing.mocktracer.span.MockSpan"
  ],
  "typeshed.typeshed.stubs.opentracing.opentracing.span.Span.set_baggage_item": [
    "typeshed.typeshed.stubs.opentracing.opentracing.mocktracer.span.MockSpan"
  ],
  "typeshed.typeshed.stubs.opentracing.opentracing.span.Span.set_operation_name": [
    "typeshed.typeshed.stubs.opentracing.opentracing.mocktracer.span.MockSpan"
  ],
  "typeshed.typeshed.stubs.opentracing.opentracing.span.Span.set_tag": [
    "typeshed.typeshed.stubs.opentracing.opentracing.mocktracer.span.MockSpan"
  ],
  "typeshed.typeshed.stubs.opentracing.opentracing.span.Span.tracer": [
    "typeshed.typeshed.stubs.opentracing.opentracing.mocktracer.span.MockSpan"
  ],
  "typeshed.typeshed.stubs.opentracing.opentracing.tracer.Tracer.__init__": [
    "typeshed.typeshed.stubs.opentracing.opentracing.mocktracer.tracer.MockTracer"
  ],
  "typeshed.typeshed.stubs.opentracing.opentracing.tracer.Tracer.active_span": [
    "typeshed.typeshed.stubs.opentracing.opentracing.mocktracer.tracer.MockTracer"
  ],
  "typeshed.typeshed.stubs.opentracing.opentracing.tracer.Tracer.extract": [
    "typeshed.typeshed.stubs.opentracing.opentracing.mocktracer.tracer.MockTracer"
  ],
  "typeshed.typeshed.stubs.opentracing.opentracing.tracer.Tracer.start_span": [
    "typeshed.typeshed.stubs.opentracing.opentracing.mocktracer.tracer.MockTracer"
  ],
  "typeshed.typeshed.stubs.paramiko.paramiko.agent.AgentProxyThread.__init__": [
    "typeshed.typeshed.stubs.paramiko.paramiko.agent.AgentLocalProxy",
    "typeshed.typeshed.stubs.paramiko.paramiko.agent.AgentRemoteProxy"
  ],
  "typeshed.typeshed.stubs.paramiko.paramiko.agent.AgentSSH.__init__": [
    "typeshed.typeshed.stubs.paramiko.paramiko.agent.Agent",
    "typeshed.typeshed.stubs.paramiko.paramiko.agent.AgentServerProxy"
  ],
  "typeshed.typeshed.stubs.paramiko.paramiko.auth_strategy.AuthSource.__init__": [
    "typeshed.typeshed.stubs.paramiko.paramiko.auth_strategy.Password"
  ],
  "typeshed.typeshed.stubs.paramiko.paramiko.auth_strategy.AuthSource.authenticate": [
    "typeshed.typeshed.stubs.paramiko.paramiko.auth_strategy.NoneAuth",
    "typeshed.typeshed.stubs.paramiko.paramiko.auth_strategy.Password",
    "typeshed.typeshed.stubs.paramiko.paramiko.auth_strategy.PrivateKey"
  ],
  "typeshed.typeshed.stubs.paramiko.paramiko.client.MissingHostKeyPolicy.missing_host_key": [
    "typeshed.typeshed.stubs.paramiko.paramiko.client.AutoAddPolicy",
    "typeshed.typeshed.stubs.paramiko.paramiko.client.RejectPolicy",
    "typeshed.typeshed.stubs.paramiko.paramiko.client.WarningPolicy"
  ],
  "typeshed.typeshed.stubs.paramiko.paramiko.ssh_gss._SSH_GSSAuth.__init__": [
    "typeshed.typeshed.stubs.paramiko.paramiko.ssh_gss._SSH_GSSAPI_NEW",
    "typeshed.typeshed.stubs.paramiko.paramiko.ssh_gss._SSH_GSSAPI_OLD",
    "typeshed.typeshed.stubs.paramiko.paramiko.ssh_gss._SSH_SSPI"
  ],
  "typeshed.typeshed.stubs.parsimonious.parsimonious.expressions.Compound.__init__": [
    "typeshed.typeshed.stubs.parsimonious.parsimonious.expressions.Lookahead",
    "typeshed.typeshed.stubs.parsimonious.parsimonious.expressions.Quantifier"
  ],
  "typeshed.typeshed.stubs.parsimonious.parsimonious.expressions.Expression.__init__": [
    "typeshed.typeshed.stubs.parsimonious.parsimonious.expressions.Compound",
    "typeshed.typeshed.stubs.parsimonious.parsimonious.expressions.Literal",
    "typeshed.typeshed.stubs.parsimonious.parsimonious.expressions.Regex"
  ],
  "typeshed.typeshed.stubs.parsimonious.parsimonious.grammar.RuleVisitor.visit_regex": [
    "typeshed.typeshed.stubs.parsimonious.parsimonious.grammar.TokenRuleVisitor"
  ],
  "typeshed.typeshed.stubs.parsimonious.parsimonious.grammar.RuleVisitor.visit_spaceless_literal": [
    "typeshed.typeshed.stubs.parsimonious.parsimonious.grammar.TokenRuleVisitor"
  ],
  "typeshed.typeshed.stubs.passlib.passlib.apache._CommonFile.__init__": [
    "typeshed.typeshed.stubs.passlib.passlib.apache.HtdigestFile",
    "typeshed.typeshed.stubs.passlib.passlib.apache.HtpasswdFile"
  ],
  "typeshed.typeshed.stubs.passlib.passlib.context.CryptContext.__init__": [
    "typeshed.typeshed.stubs.passlib.passlib.context.LazyCryptContext"
  ],
  "typeshed.typeshed.stubs.passlib.passlib.exc.PasswordSizeError.__init__": [
    "typeshed.typeshed.stubs.passlib.passlib.exc.PasswordTruncateError"
  ],
  "typeshed.typeshed.stubs.passlib.passlib.exc.TokenError.__init__": [
    "typeshed.typeshed.stubs.passlib.passlib.exc.UsedTokenError"
  ],
  "typeshed.typeshed.stubs.passlib.passlib.ext.django.utils.DjangoTranslator.__init__": [
    "typeshed.typeshed.stubs.passlib.passlib.ext.django.utils.DjangoContextAdapter"
  ],
  "typeshed.typeshed.stubs.passlib.passlib.ext.django.utils.DjangoTranslator.reset_hashers": [
    "typeshed.typeshed.stubs.passlib.passlib.ext.django.utils.DjangoContextAdapter"
  ],
  "typeshed.typeshed.stubs.passlib.passlib.handlers.bcrypt._BcryptCommon.from_string": [
    "typeshed.typeshed.stubs.passlib.passlib.handlers.bcrypt.bcrypt_sha256"
  ],
  "typeshed.typeshed.stubs.passlib.passlib.handlers.django.DjangoSaltedHash.from_string": [
    "typeshed.typeshed.stubs.passlib.passlib.handlers.django.DjangoVariableHash"
  ],
  "typeshed.typeshed.stubs.passlib.passlib.pwd.SequenceGenerator.__init__": [
    "typeshed.typeshed.stubs.passlib.passlib.pwd.PhraseGenerator",
    "typeshed.typeshed.stubs.passlib.passlib.pwd.WordGenerator"
  ],
  "typeshed.typeshed.stubs.passlib.passlib.pwd.SequenceGenerator.__next__": [
    "typeshed.typeshed.stubs.passlib.passlib.pwd.PhraseGenerator",
    "typeshed.typeshed.stubs.passlib.passlib.pwd.WordGenerator"
  ],
  "typeshed.typeshed.stubs.passlib.passlib.pwd.SequenceGenerator.symbol_count": [
    "typeshed.typeshed.stubs.passlib.passlib.pwd.PhraseGenerator",
    "typeshed.typeshed.stubs.passlib.passlib.pwd.WordGenerator"
  ],
  "typeshed.typeshed.stubs.passlib.passlib.utils.binary.Base64Engine.__init__": [
    "typeshed.typeshed.stubs.passlib.passlib.utils.binary.LazyBase64Engine"
  ],
  "typeshed.typeshed.stubs.passlib.passlib.utils.handlers.GenericHandler.__init__": [
    "typeshed.typeshed.stubs.passlib.passlib.utils.handlers.HasEncodingContext",
    "typeshed.typeshed.stubs.passlib.passlib.utils.handlers.HasManyIdents",
    "typeshed.typeshed.stubs.passlib.passlib.utils.handlers.HasRounds",
    "typeshed.typeshed.stubs.passlib.passlib.utils.handlers.HasSalt",
    "typeshed.typeshed.stubs.passlib.passlib.utils.handlers.HasUserContext",
    "typeshed.typeshed.stubs.passlib.passlib.utils.handlers.ParallelismMixin"
  ],
  "typeshed.typeshed.stubs.passlib.passlib.utils.handlers.GenericHandler.bitsize": [
    "typeshed.typeshed.stubs.passlib.passlib.utils.handlers.HasRounds",
    "typeshed.typeshed.stubs.passlib.passlib.utils.handlers.HasSalt"
  ],
  "typeshed.typeshed.stubs.passlib.passlib.utils.handlers.GenericHandler.genhash": [
    "typeshed.typeshed.stubs.passlib.passlib.utils.handlers.HasUserContext"
  ],
  "typeshed.typeshed.stubs.passlib.passlib.utils.handlers.GenericHandler.hash": [
    "typeshed.typeshed.stubs.passlib.passlib.utils.handlers.HasUserContext"
  ],
  "typeshed.typeshed.stubs.passlib.passlib.utils.handlers.GenericHandler.verify": [
    "typeshed.typeshed.stubs.passlib.passlib.utils.handlers.HasUserContext"
  ],
  "typeshed.typeshed.stubs.passlib.passlib.utils.handlers.MinimalHandler.using": [
    "typeshed.typeshed.stubs.passlib.passlib.utils.handlers.HasManyIdents",
    "typeshed.typeshed.stubs.passlib.passlib.utils.handlers.HasRounds",
    "typeshed.typeshed.stubs.passlib.passlib.utils.handlers.HasSalt",
    "typeshed.typeshed.stubs.passlib.passlib.utils.handlers.ParallelismMixin",
    "typeshed.typeshed.stubs.passlib.passlib.utils.handlers.TruncateMixin"
  ],
  "typeshed.typeshed.stubs.peewee.peewee.AutoField.__init__": [
    "typeshed.typeshed.stubs.peewee.peewee.IdentityField",
    "typeshed.typeshed.stubs.peewee.peewee.PrimaryKeyField"
  ],
  "typeshed.typeshed.stubs.peewee.peewee.BaseModelCursorWrapper.__init__": [
    "typeshed.typeshed.stubs.peewee.peewee.ModelCursorWrapper"
  ],
  "typeshed.typeshed.stubs.peewee.peewee.BaseModelCursorWrapper.initialize": [
    "typeshed.typeshed.stubs.peewee.peewee.ModelCursorWrapper",
    "typeshed.typeshed.stubs.peewee.peewee.ModelNamedTupleCursorWrapper"
  ],
  "typeshed.typeshed.stubs.peewee.peewee.BaseModelCursorWrapper.process_row": [
    "typeshed.typeshed.stubs.peewee.peewee.ModelCursorWrapper",
    "typeshed.typeshed.stubs.peewee.peewee.ModelDictCursorWrapper"
  ],
  "typeshed.typeshed.stubs.peewee.peewee.BaseQuery.__init__": [
    "typeshed.typeshed.stubs.peewee.peewee.Query",
    "typeshed.typeshed.stubs.peewee.peewee.RawQuery"
  ],
  "typeshed.typeshed.stubs.peewee.peewee.BaseQuery.__sql__": [
    "typeshed.typeshed.stubs.peewee.peewee.Query",
    "typeshed.typeshed.stubs.peewee.peewee.RawQuery"
  ],
  "typeshed.typeshed.stubs.peewee.peewee.BaseQuery.clone": [
    "typeshed.typeshed.stubs.peewee.peewee.Select"
  ],
  "typeshed.typeshed.stubs.peewee.peewee.BitwiseMixin.__invert__": [
    "typeshed.typeshed.stubs.peewee.peewee.BitwiseNegated"
  ],
  "typeshed.typeshed.stubs.peewee.peewee.BlobField.db_value": [
    "typeshed.typeshed.stubs.peewee.peewee.BigBitField",
    "typeshed.typeshed.stubs.peewee.peewee.BinaryUUIDField"
  ],
  "typeshed.typeshed.stubs.peewee.peewee.ColumnBase.__add__": [
    "typeshed.typeshed.stubs.peewee.peewee.StringExpression",
    "typeshed.typeshed.stubs.peewee.peewee._StringField"
  ],
  "typeshed.typeshed.stubs.peewee.peewee.ColumnBase.__invert__": [
    "typeshed.typeshed.stubs.peewee.peewee.DQ",
    "typeshed.typeshed.stubs.peewee.peewee.Negated"
  ],
  "typeshed.typeshed.stubs.peewee.peewee.ColumnBase.__radd__": [
    "typeshed.typeshed.stubs.peewee.peewee.StringExpression",
    "typeshed.typeshed.stubs.peewee.peewee._StringField"
  ],
  "typeshed.typeshed.stubs.peewee.peewee.ColumnBase.alias": [
    "typeshed.typeshed.stubs.peewee.peewee.Alias"
  ],
  "typeshed.typeshed.stubs.peewee.peewee.ColumnBase.collate": [
    "typeshed.typeshed.stubs.peewee.peewee.Ordering"
  ],
  "typeshed.typeshed.stubs.peewee.peewee.ColumnBase.get_sort_key": [
    "typeshed.typeshed.stubs.peewee.peewee.Column",
    "typeshed.typeshed.stubs.peewee.peewee.Entity",
    "typeshed.typeshed.stubs.peewee.peewee.Field"
  ],
  "typeshed.typeshed.stubs.peewee.peewee.ColumnBase.unalias": [
    "typeshed.typeshed.stubs.peewee.peewee.Alias"
  ],
  "typeshed.typeshed.stubs.peewee.peewee.CursorWrapper.initialize": [
    "typeshed.typeshed.stubs.peewee.peewee.NamedTupleCursorWrapper"
  ],
  "typeshed.typeshed.stubs.peewee.peewee.CursorWrapper.process_row": [
    "typeshed.typeshed.stubs.peewee.peewee.NamedTupleCursorWrapper"
  ],
  "typeshed.typeshed.stubs.peewee.peewee.Database.__init__": [
    "typeshed.typeshed.stubs.peewee.peewee.SqliteDatabase"
  ],
  "typeshed.typeshed.stubs.peewee.peewee.Database.begin": [
    "typeshed.typeshed.stubs.peewee.peewee.MySQLDatabase",
    "typeshed.typeshed.stubs.peewee.peewee.PostgresqlDatabase",
    "typeshed.typeshed.stubs.peewee.peewee.SqliteDatabase"
  ],
  "typeshed.typeshed.stubs.peewee.peewee.Database.conflict_statement": [
    "typeshed.typeshed.stubs.peewee.peewee.MySQLDatabase",
    "typeshed.typeshed.stubs.peewee.peewee.PostgresqlDatabase",
    "typeshed.typeshed.stubs.peewee.peewee.SqliteDatabase"
  ],
  "typeshed.typeshed.stubs.peewee.peewee.Database.conflict_update": [
    "typeshed.typeshed.stubs.peewee.peewee.MySQLDatabase",
    "typeshed.typeshed.stubs.peewee.peewee.PostgresqlDatabase",
    "typeshed.typeshed.stubs.peewee.peewee.SqliteDatabase"
  ],
  "typeshed.typeshed.stubs.peewee.peewee.Database.default_values_insert": [
    "typeshed.typeshed.stubs.peewee.peewee.MySQLDatabase"
  ],
  "typeshed.typeshed.stubs.peewee.peewee.Database.extract_date": [
    "typeshed.typeshed.stubs.peewee.peewee.MySQLDatabase",
    "typeshed.typeshed.stubs.peewee.peewee.PostgresqlDatabase",
    "typeshed.typeshed.stubs.peewee.peewee.SqliteDatabase"
  ],
  "typeshed.typeshed.stubs.peewee.peewee.Database.from_timestamp": [
    "typeshed.typeshed.stubs.peewee.peewee.MySQLDatabase",
    "typeshed.typeshed.stubs.peewee.peewee.PostgresqlDatabase",
    "typeshed.typeshed.stubs.peewee.peewee.SqliteDatabase"
  ],
  "typeshed.typeshed.stubs.peewee.peewee.Database.get_columns": [
    "typeshed.typeshed.stubs.peewee.peewee.MySQLDatabase",
    "typeshed.typeshed.stubs.peewee.peewee.PostgresqlDatabase",
    "typeshed.typeshed.stubs.peewee.peewee.SqliteDatabase"
  ],
  "typeshed.typeshed.stubs.peewee.peewee.Database.get_foreign_keys": [
    "typeshed.typeshed.stubs.peewee.peewee.MySQLDatabase",
    "typeshed.typeshed.stubs.peewee.peewee.PostgresqlDatabase",
    "typeshed.typeshed.stubs.peewee.peewee.SqliteDatabase"
  ],
  "typeshed.typeshed.stubs.peewee.peewee.Database.get_indexes": [
    "typeshed.typeshed.stubs.peewee.peewee.MySQLDatabase",
    "typeshed.typeshed.stubs.peewee.peewee.PostgresqlDatabase",
    "typeshed.typeshed.stubs.peewee.peewee.SqliteDatabase"
  ],
  "typeshed.typeshed.stubs.peewee.peewee.Database.get_noop_select": [
    "typeshed.typeshed.stubs.peewee.peewee.MySQLDatabase",
    "typeshed.typeshed.stubs.peewee.peewee.PostgresqlDatabase"
  ],
  "typeshed.typeshed.stubs.peewee.peewee.Database.get_primary_keys": [
    "typeshed.typeshed.stubs.peewee.peewee.MySQLDatabase",
    "typeshed.typeshed.stubs.peewee.peewee.PostgresqlDatabase",
    "typeshed.typeshed.stubs.peewee.peewee.SqliteDatabase"
  ],
  "typeshed.typeshed.stubs.peewee.peewee.Database.get_tables": [
    "typeshed.typeshed.stubs.peewee.peewee.MySQLDatabase",
    "typeshed.typeshed.stubs.peewee.peewee.PostgresqlDatabase",
    "typeshed.typeshed.stubs.peewee.peewee.SqliteDatabase"
  ],
  "typeshed.typeshed.stubs.peewee.peewee.Database.init": [
    "typeshed.typeshed.stubs.peewee.peewee.MySQLDatabase",
    "typeshed.typeshed.stubs.peewee.peewee.PostgresqlDatabase",
    "typeshed.typeshed.stubs.peewee.peewee.SqliteDatabase"
  ],
  "typeshed.typeshed.stubs.peewee.peewee.Database.is_connection_usable": [
    "typeshed.typeshed.stubs.peewee.peewee.MySQLDatabase",
    "typeshed.typeshed.stubs.peewee.peewee.PostgresqlDatabase"
  ],
  "typeshed.typeshed.stubs.peewee.peewee.Database.last_insert_id": [
    "typeshed.typeshed.stubs.peewee.peewee.PostgresqlDatabase",
    "typeshed.typeshed.stubs.peewee.peewee.SqliteDatabase"
  ],
  "typeshed.typeshed.stubs.peewee.peewee.Database.random": [
    "typeshed.typeshed.stubs.peewee.peewee.MySQLDatabase"
  ],
  "typeshed.typeshed.stubs.peewee.peewee.Database.rows_affected": [
    "typeshed.typeshed.stubs.peewee.peewee.PostgresqlDatabase",
    "typeshed.typeshed.stubs.peewee.peewee.SqliteDatabase"
  ],
  "typeshed.typeshed.stubs.peewee.peewee.Database.sequence_exists": [
    "typeshed.typeshed.stubs.peewee.peewee.PostgresqlDatabase"
  ],
  "typeshed.typeshed.stubs.peewee.peewee.Database.to_timestamp": [
    "typeshed.typeshed.stubs.peewee.peewee.MySQLDatabase",
    "typeshed.typeshed.stubs.peewee.peewee.PostgresqlDatabase",
    "typeshed.typeshed.stubs.peewee.peewee.SqliteDatabase"
  ],
  "typeshed.typeshed.stubs.peewee.peewee.Database.truncate_date": [
    "typeshed.typeshed.stubs.peewee.peewee.MySQLDatabase",
    "typeshed.typeshed.stubs.peewee.peewee.PostgresqlDatabase",
    "typeshed.typeshed.stubs.peewee.peewee.SqliteDatabase"
  ],
  "typeshed.typeshed.stubs.peewee.peewee.DictCursorWrapper.process_row": [
    "typeshed.typeshed.stubs.peewee.peewee.BaseModelCursorWrapper",
    "typeshed.typeshed.stubs.peewee.peewee.ObjectCursorWrapper"
  ],
  "typeshed.typeshed.stubs.peewee.peewee.Field.__init__": [
    "typeshed.typeshed.stubs.peewee.peewee.BareField",
    "typeshed.typeshed.stubs.peewee.peewee.DecimalField",
    "typeshed.typeshed.stubs.peewee.peewee.DeferredForeignKey",
    "typeshed.typeshed.stubs.peewee.peewee.FieldAlias",
    "typeshed.typeshed.stubs.peewee.peewee.ForeignKeyField",
    "typeshed.typeshed.stubs.peewee.peewee._BaseFormattedField"
  ],
  "typeshed.typeshed.stubs.peewee.peewee.Field.__sql__": [
    "typeshed.typeshed.stubs.peewee.peewee.CompositeKey",
    "typeshed.typeshed.stubs.peewee.peewee.FieldAlias"
  ],
  "typeshed.typeshed.stubs.peewee.peewee.Field.adapt": [
    "typeshed.typeshed.stubs.peewee.peewee.DateField",
    "typeshed.typeshed.stubs.peewee.peewee.DateTimeField",
    "typeshed.typeshed.stubs.peewee.peewee.FieldAlias",
    "typeshed.typeshed.stubs.peewee.peewee.FloatField",
    "typeshed.typeshed.stubs.peewee.peewee.ForeignKeyField",
    "typeshed.typeshed.stubs.peewee.peewee.IntegerField",
    "typeshed.typeshed.stubs.peewee.peewee.TimeField",
    "typeshed.typeshed.stubs.peewee.peewee._StringField"
  ],
  "typeshed.typeshed.stubs.peewee.peewee.Field.bind": [
    "typeshed.typeshed.stubs.peewee.peewee.BlobField",
    "typeshed.typeshed.stubs.peewee.peewee.CompositeKey",
    "typeshed.typeshed.stubs.peewee.peewee.ForeignKeyField",
    "typeshed.typeshed.stubs.peewee.peewee.ManyToManyField",
    "typeshed.typeshed.stubs.peewee.peewee.VirtualField"
  ],
  "typeshed.typeshed.stubs.peewee.peewee.Field.db_value": [
    "typeshed.typeshed.stubs.peewee.peewee.BlobField",
    "typeshed.typeshed.stubs.peewee.peewee.DecimalField",
    "typeshed.typeshed.stubs.peewee.peewee.FieldAlias",
    "typeshed.typeshed.stubs.peewee.peewee.ForeignKeyField",
    "typeshed.typeshed.stubs.peewee.peewee.IPField",
    "typeshed.typeshed.stubs.peewee.peewee.TimestampField",
    "typeshed.typeshed.stubs.peewee.peewee.UUIDField",
    "typeshed.typeshed.stubs.peewee.peewee.VirtualField"
  ],
  "typeshed.typeshed.stubs.peewee.peewee.Field.ddl_datatype": [
    "typeshed.typeshed.stubs.peewee.peewee.BareField"
  ],
  "typeshed.typeshed.stubs.peewee.peewee.Field.field_type": [
    "typeshed.typeshed.stubs.peewee.peewee.ForeignKeyField"
  ],
  "typeshed.typeshed.stubs.peewee.peewee.Field.get_modifiers": [
    "typeshed.typeshed.stubs.peewee.peewee.CharField",
    "typeshed.typeshed.stubs.peewee.peewee.DecimalField",
    "typeshed.typeshed.stubs.peewee.peewee.ForeignKeyField"
  ],
  "typeshed.typeshed.stubs.peewee.peewee.Field.python_value": [
    "typeshed.typeshed.stubs.peewee.peewee.BinaryUUIDField",
    "typeshed.typeshed.stubs.peewee.peewee.DecimalField",
    "typeshed.typeshed.stubs.peewee.peewee.FieldAlias",
    "typeshed.typeshed.stubs.peewee.peewee.FixedCharField",
    "typeshed.typeshed.stubs.peewee.peewee.ForeignKeyField",
    "typeshed.typeshed.stubs.peewee.peewee.IPField",
    "typeshed.typeshed.stubs.peewee.peewee.TimestampField",
    "typeshed.typeshed.stubs.peewee.peewee.UUIDField",
    "typeshed.typeshed.stubs.peewee.peewee.VirtualField"
  ],
  "typeshed.typeshed.stubs.peewee.peewee.FieldAccessor.__get__": [
    "typeshed.typeshed.stubs.peewee.peewee.BigBitFieldAccessor",
    "typeshed.typeshed.stubs.peewee.peewee.ForeignKeyAccessor",
    "typeshed.typeshed.stubs.peewee.peewee.ManyToManyFieldAccessor"
  ],
  "typeshed.typeshed.stubs.peewee.peewee.FieldAccessor.__init__": [
    "typeshed.typeshed.stubs.peewee.peewee.ForeignKeyAccessor",
    "typeshed.typeshed.stubs.peewee.peewee.ManyToManyFieldAccessor"
  ],
  "typeshed.typeshed.stubs.peewee.peewee.FieldAccessor.__set__": [
    "typeshed.typeshed.stubs.peewee.peewee.BigBitFieldAccessor",
    "typeshed.typeshed.stubs.peewee.peewee.ForeignKeyAccessor",
    "typeshed.typeshed.stubs.peewee.peewee.ManyToManyFieldAccessor"
  ],
  "typeshed.typeshed.stubs.peewee.peewee.Index.__init__": [
    "typeshed.typeshed.stubs.peewee.peewee.ModelIndex"
  ],
  "typeshed.typeshed.stubs.peewee.peewee.Insert.get_default_columns": [
    "typeshed.typeshed.stubs.peewee.peewee.ModelInsert"
  ],
  "typeshed.typeshed.stubs.peewee.peewee.Insert.get_default_data": [
    "typeshed.typeshed.stubs.peewee.peewee.ModelInsert"
  ],
  "typeshed.typeshed.stubs.peewee.peewee.Metadata.__init__": [
    "typeshed.typeshed.stubs.peewee.peewee.SubclassAwareMetadata"
  ],
  "typeshed.typeshed.stubs.peewee.peewee.ModelDictCursorWrapper.process_row": [
    "typeshed.typeshed.stubs.peewee.peewee.ModelObjectCursorWrapper",
    "typeshed.typeshed.stubs.peewee.peewee.ModelTupleCursorWrapper"
  ],
  "typeshed.typeshed.stubs.peewee.peewee.ModelSelect.__init__": [
    "typeshed.typeshed.stubs.peewee.peewee.ManyToManyQuery"
  ],
  "typeshed.typeshed.stubs.peewee.peewee.Node.__sql__": [
    "typeshed.typeshed.stubs.peewee.peewee.Alias",
    "typeshed.typeshed.stubs.peewee.peewee.BaseQuery",
    "typeshed.typeshed.stubs.peewee.peewee.BindTo",
    "typeshed.typeshed.stubs.peewee.peewee.BitwiseNegated",
    "typeshed.typeshed.stubs.peewee.peewee.CTE",
    "typeshed.typeshed.stubs.peewee.peewee.Cast",
    "typeshed.typeshed.stubs.peewee.peewee.Column",
    "typeshed.typeshed.stubs.peewee.peewee.Entity",
    "typeshed.typeshed.stubs.peewee.peewee.Expression",
    "typeshed.typeshed.stubs.peewee.peewee.Field",
    "typeshed.typeshed.stubs.peewee.peewee.ForUpdate",
    "typeshed.typeshed.stubs.peewee.peewee.Function",
    "typeshed.typeshed.stubs.peewee.peewee.Index",
    "typeshed.typeshed.stubs.peewee.peewee.Join",
    "typeshed.typeshed.stubs.peewee.peewee.ModelAlias",
    "typeshed.typeshed.stubs.peewee.peewee.NamespaceAttribute",
    "typeshed.typeshed.stubs.peewee.peewee.Negated",
    "typeshed.typeshed.stubs.peewee.peewee.NodeList",
    "typeshed.typeshed.stubs.peewee.peewee.Ordering",
    "typeshed.typeshed.stubs.peewee.peewee.QualifiedNames",
    "typeshed.typeshed.stubs.peewee.peewee.SQL",
    "typeshed.typeshed.stubs.peewee.peewee.Table",
    "typeshed.typeshed.stubs.peewee.peewee.Value",
    "typeshed.typeshed.stubs.peewee.peewee.ValueLiterals",
    "typeshed.typeshed.stubs.peewee.peewee.ValuesList",
    "typeshed.typeshed.stubs.peewee.peewee.Window",
    "typeshed.typeshed.stubs.peewee.peewee.WindowAlias"
  ],
  "typeshed.typeshed.stubs.peewee.peewee.Node.clone": [
    "typeshed.typeshed.stubs.peewee.peewee.BaseQuery",
    "typeshed.typeshed.stubs.peewee.peewee.DQ",
    "typeshed.typeshed.stubs.peewee.peewee.FieldAlias",
    "typeshed.typeshed.stubs.peewee.peewee.Table"
  ],
  "typeshed.typeshed.stubs.peewee.peewee.Node.is_alias": [
    "typeshed.typeshed.stubs.peewee.peewee.WrappedNode"
  ],
  "typeshed.typeshed.stubs.peewee.peewee.Node.unwrap": [
    "typeshed.typeshed.stubs.peewee.peewee.WrappedNode"
  ],
  "typeshed.typeshed.stubs.peewee.peewee.Query.__init__": [
    "typeshed.typeshed.stubs.peewee.peewee._WriteQuery"
  ],
  "typeshed.typeshed.stubs.peewee.peewee.Query.__sql__": [
    "typeshed.typeshed.stubs.peewee.peewee.CompoundSelectQuery",
    "typeshed.typeshed.stubs.peewee.peewee.Select",
    "typeshed.typeshed.stubs.peewee.peewee._WriteQuery"
  ],
  "typeshed.typeshed.stubs.peewee.peewee.Query.where": [
    "typeshed.typeshed.stubs.peewee.peewee.Insert"
  ],
  "typeshed.typeshed.stubs.peewee.peewee.Select.__sql__": [
    "typeshed.typeshed.stubs.peewee.peewee.NoopModelSelect"
  ],
  "typeshed.typeshed.stubs.peewee.peewee.Select.__sql_selection__": [
    "typeshed.typeshed.stubs.peewee.peewee.ModelSelect"
  ],
  "typeshed.typeshed.stubs.peewee.peewee.Select.clone": [
    "typeshed.typeshed.stubs.peewee.peewee.ModelSelect"
  ],
  "typeshed.typeshed.stubs.peewee.peewee.Select.join": [
    "typeshed.typeshed.stubs.peewee.peewee.ModelSelect"
  ],
  "typeshed.typeshed.stubs.peewee.peewee.Select.left_outer_join": [
    "typeshed.typeshed.stubs.peewee.peewee.ModelSelect"
  ],
  "typeshed.typeshed.stubs.peewee.peewee.Select.select": [
    "typeshed.typeshed.stubs.peewee.peewee.ModelSelect"
  ],
  "typeshed.typeshed.stubs.peewee.peewee.Select.select_extend": [
    "typeshed.typeshed.stubs.peewee.peewee.ModelSelect"
  ],
  "typeshed.typeshed.stubs.peewee.peewee.SelectBase.exists": [
    "typeshed.typeshed.stubs.peewee.peewee.CompoundSelectQuery"
  ],
  "typeshed.typeshed.stubs.peewee.peewee.Source.join": [
    "typeshed.typeshed.stubs.peewee.peewee.Select"
  ],
  "typeshed.typeshed.stubs.peewee.peewee.Source.left_outer_join": [
    "typeshed.typeshed.stubs.peewee.peewee.Select"
  ],
  "typeshed.typeshed.stubs.peewee.peewee.Source.select": [
    "typeshed.typeshed.stubs.peewee.peewee.Table"
  ],
  "typeshed.typeshed.stubs.peewee.peewee.WrappedNode.__init__": [
    "typeshed.typeshed.stubs.peewee.peewee.Alias",
    "typeshed.typeshed.stubs.peewee.peewee.BindTo",
    "typeshed.typeshed.stubs.peewee.peewee.Cast",
    "typeshed.typeshed.stubs.peewee.peewee.Ordering"
  ],
  "typeshed.typeshed.stubs.peewee.peewee.WrappedNode.is_alias": [
    "typeshed.typeshed.stubs.peewee.peewee.Alias"
  ],
  "typeshed.typeshed.stubs.peewee.peewee._HashableSource.__init__": [
    "typeshed.typeshed.stubs.peewee.peewee.CTE",
    "typeshed.typeshed.stubs.peewee.peewee.Table",
    "typeshed.typeshed.stubs.peewee.peewee.ValuesList"
  ],
  "typeshed.typeshed.stubs.peewee.peewee._ModelQueryHelper.__init__": [
    "typeshed.typeshed.stubs.peewee.peewee.ModelRaw",
    "typeshed.typeshed.stubs.peewee.peewee._ModelWriteQueryHelper"
  ],
  "typeshed.typeshed.stubs.peewee.peewee._ModelWriteQueryHelper.__init__": [
    "typeshed.typeshed.stubs.peewee.peewee.ModelInsert"
  ],
  "typeshed.typeshed.stubs.peewee.peewee._ModelWriteQueryHelper.returning": [
    "typeshed.typeshed.stubs.peewee.peewee.ModelInsert"
  ],
  "typeshed.typeshed.stubs.peewee.peewee._WriteQuery.__init__": [
    "typeshed.typeshed.stubs.peewee.peewee.Insert",
    "typeshed.typeshed.stubs.peewee.peewee.Update"
  ],
  "typeshed.typeshed.stubs.peewee.peewee._WriteQuery.__sql__": [
    "typeshed.typeshed.stubs.peewee.peewee.Delete",
    "typeshed.typeshed.stubs.peewee.peewee.Insert",
    "typeshed.typeshed.stubs.peewee.peewee.Update"
  ],
  "typeshed.typeshed.stubs.peewee.peewee._WriteQuery.handle_result": [
    "typeshed.typeshed.stubs.peewee.peewee.Insert"
  ],
  "typeshed.typeshed.stubs.pexpect.pexpect.ANSI.term.__init__": [
    "typeshed.typeshed.stubs.pexpect.pexpect.ANSI.ANSI"
  ],
  "typeshed.typeshed.stubs.pexpect.pexpect.screen.screen.__init__": [
    "typeshed.typeshed.stubs.pexpect.pexpect.ANSI.term"
  ],
  "typeshed.typeshed.stubs.pexpect.pexpect.spawnbase.SpawnBase.__init__": [
    "typeshed.typeshed.stubs.pexpect.pexpect.fdpexpect.fdspawn",
    "typeshed.typeshed.stubs.pexpect.pexpect.popen_spawn.PopenSpawn",
    "typeshed.typeshed.stubs.pexpect.pexpect.pty_spawn.spawn"
  ],
  "typeshed.typeshed.stubs.pexpect.pexpect.spawnbase.SpawnBase.flag_eof": [
    "typeshed.typeshed.stubs.pexpect.pexpect.pty_spawn.spawn"
  ],
  "typeshed.typeshed.stubs.pexpect.pexpect.spawnbase.SpawnBase.flag_eof@setter": [
    "typeshed.typeshed.stubs.pexpect.pexpect.pty_spawn.spawn"
  ],
  "typeshed.typeshed.stubs.pexpect.pexpect.spawnbase.SpawnBase.isatty": [
    "typeshed.typeshed.stubs.pexpect.pexpect.pty_spawn.spawn"
  ],
  "typeshed.typeshed.stubs.pexpect.pexpect.spawnbase.SpawnBase.read_nonblocking": [
    "typeshed.typeshed.stubs.pexpect.pexpect.fdpexpect.fdspawn",
    "typeshed.typeshed.stubs.pexpect.pexpect.popen_spawn.PopenSpawn",
    "typeshed.typeshed.stubs.pexpect.pexpect.pty_spawn.spawn"
  ],
  "typeshed.typeshed.stubs.pika.pika.amqp_object.Method.synchronous": [
    "typeshed.typeshed.stubs.pika.pika.spec.Access.Request",
    "typeshed.typeshed.stubs.pika.pika.spec.Access.RequestOk",
    "typeshed.typeshed.stubs.pika.pika.spec.Basic.Ack",
    "typeshed.typeshed.stubs.pika.pika.spec.Basic.Cancel",
    "typeshed.typeshed.stubs.pika.pika.spec.Basic.CancelOk",
    "typeshed.typeshed.stubs.pika.pika.spec.Basic.Consume",
    "typeshed.typeshed.stubs.pika.pika.spec.Basic.ConsumeOk",
    "typeshed.typeshed.stubs.pika.pika.spec.Basic.Deliver",
    "typeshed.typeshed.stubs.pika.pika.spec.Basic.Get",
    "typeshed.typeshed.stubs.pika.pika.spec.Basic.GetEmpty",
    "typeshed.typeshed.stubs.pika.pika.spec.Basic.GetOk",
    "typeshed.typeshed.stubs.pika.pika.spec.Basic.Nack",
    "typeshed.typeshed.stubs.pika.pika.spec.Basic.Publish",
    "typeshed.typeshed.stubs.pika.pika.spec.Basic.Qos",
    "typeshed.typeshed.stubs.pika.pika.spec.Basic.QosOk",
    "typeshed.typeshed.stubs.pika.pika.spec.Basic.Recover",
    "typeshed.typeshed.stubs.pika.pika.spec.Basic.RecoverAsync",
    "typeshed.typeshed.stubs.pika.pika.spec.Basic.RecoverOk",
    "typeshed.typeshed.stubs.pika.pika.spec.Basic.Reject",
    "typeshed.typeshed.stubs.pika.pika.spec.Basic.Return",
    "typeshed.typeshed.stubs.pika.pika.spec.Channel.Close",
    "typeshed.typeshed.stubs.pika.pika.spec.Channel.CloseOk",
    "typeshed.typeshed.stubs.pika.pika.spec.Channel.Flow",
    "typeshed.typeshed.stubs.pika.pika.spec.Channel.FlowOk",
    "typeshed.typeshed.stubs.pika.pika.spec.Channel.Open",
    "typeshed.typeshed.stubs.pika.pika.spec.Channel.OpenOk",
    "typeshed.typeshed.stubs.pika.pika.spec.Confirm.Select",
    "typeshed.typeshed.stubs.pika.pika.spec.Confirm.SelectOk",
    "typeshed.typeshed.stubs.pika.pika.spec.Connection.Blocked",
    "typeshed.typeshed.stubs.pika.pika.spec.Connection.Close",
    "typeshed.typeshed.stubs.pika.pika.spec.Connection.CloseOk",
    "typeshed.typeshed.stubs.pika.pika.spec.Connection.Open",
    "typeshed.typeshed.stubs.pika.pika.spec.Connection.OpenOk",
    "typeshed.typeshed.stubs.pika.pika.spec.Connection.Secure",
    "typeshed.typeshed.stubs.pika.pika.spec.Connection.SecureOk",
    "typeshed.typeshed.stubs.pika.pika.spec.Connection.Start",
    "typeshed.typeshed.stubs.pika.pika.spec.Connection.StartOk",
    "typeshed.typeshed.stubs.pika.pika.spec.Connection.Tune",
    "typeshed.typeshed.stubs.pika.pika.spec.Connection.TuneOk",
    "typeshed.typeshed.stubs.pika.pika.spec.Connection.Unblocked",
    "typeshed.typeshed.stubs.pika.pika.spec.Connection.UpdateSecret",
    "typeshed.typeshed.stubs.pika.pika.spec.Connection.UpdateSecretOk",
    "typeshed.typeshed.stubs.pika.pika.spec.Exchange.Bind",
    "typeshed.typeshed.stubs.pika.pika.spec.Exchange.BindOk",
    "typeshed.typeshed.stubs.pika.pika.spec.Exchange.Declare",
    "typeshed.typeshed.stubs.pika.pika.spec.Exchange.DeclareOk",
    "typeshed.typeshed.stubs.pika.pika.spec.Exchange.Delete",
    "typeshed.typeshed.stubs.pika.pika.spec.Exchange.DeleteOk",
    "typeshed.typeshed.stubs.pika.pika.spec.Exchange.Unbind",
    "typeshed.typeshed.stubs.pika.pika.spec.Exchange.UnbindOk",
    "typeshed.typeshed.stubs.pika.pika.spec.Queue.Bind",
    "typeshed.typeshed.stubs.pika.pika.spec.Queue.BindOk",
    "typeshed.typeshed.stubs.pika.pika.spec.Queue.Declare",
    "typeshed.typeshed.stubs.pika.pika.spec.Queue.DeclareOk",
    "typeshed.typeshed.stubs.pika.pika.spec.Queue.Delete",
    "typeshed.typeshed.stubs.pika.pika.spec.Queue.DeleteOk",
    "typeshed.typeshed.stubs.pika.pika.spec.Queue.Purge",
    "typeshed.typeshed.stubs.pika.pika.spec.Queue.PurgeOk",
    "typeshed.typeshed.stubs.pika.pika.spec.Queue.Unbind",
    "typeshed.typeshed.stubs.pika.pika.spec.Queue.UnbindOk",
    "typeshed.typeshed.stubs.pika.pika.spec.Tx.Commit",
    "typeshed.typeshed.stubs.pika.pika.spec.Tx.CommitOk",
    "typeshed.typeshed.stubs.pika.pika.spec.Tx.Rollback",
    "typeshed.typeshed.stubs.pika.pika.spec.Tx.RollbackOk",
    "typeshed.typeshed.stubs.pika.pika.spec.Tx.Select",
    "typeshed.typeshed.stubs.pika.pika.spec.Tx.SelectOk"
  ],
  "typeshed.typeshed.stubs.pika.pika.connection.Connection.__init__": [
    "typeshed.typeshed.stubs.pika.pika.adapters.base_connection.BaseConnection"
  ],
  "typeshed.typeshed.stubs.pika.pika.connection.Parameters.__init__": [
    "typeshed.typeshed.stubs.pika.pika.connection.ConnectionParameters",
    "typeshed.typeshed.stubs.pika.pika.connection.URLParameters"
  ],
  "typeshed.typeshed.stubs.pika.pika.frame.Frame.__init__": [
    "typeshed.typeshed.stubs.pika.pika.frame.Body",
    "typeshed.typeshed.stubs.pika.pika.frame.Header",
    "typeshed.typeshed.stubs.pika.pika.frame.Heartbeat",
    "typeshed.typeshed.stubs.pika.pika.frame.Method"
  ],
  "typeshed.typeshed.stubs.pika.pika.frame.Frame.marshal": [
    "typeshed.typeshed.stubs.pika.pika.frame.Body",
    "typeshed.typeshed.stubs.pika.pika.frame.Header",
    "typeshed.typeshed.stubs.pika.pika.frame.Heartbeat",
    "typeshed.typeshed.stubs.pika.pika.frame.Method"
  ],
  "typeshed.typeshed.stubs.polib.polib._BaseEntry.__eq__": [
    "typeshed.typeshed.stubs.polib.polib.POEntry"
  ],
  "typeshed.typeshed.stubs.polib.polib._BaseEntry.__init__": [
    "typeshed.typeshed.stubs.polib.polib.MOEntry",
    "typeshed.typeshed.stubs.polib.polib.POEntry"
  ],
  "typeshed.typeshed.stubs.polib.polib._BaseEntry.__unicode__": [
    "typeshed.typeshed.stubs.polib.polib.POEntry"
  ],
  "typeshed.typeshed.stubs.polib.polib._BaseEntry.msgid_with_context": [
    "typeshed.typeshed.stubs.polib.polib.POEntry"
  ],
  "typeshed.typeshed.stubs.polib.polib._BaseFile.__init__": [
    "typeshed.typeshed.stubs.polib.polib.MOFile"
  ],
  "typeshed.typeshed.stubs.polib.polib._BaseFile.__unicode__": [
    "typeshed.typeshed.stubs.polib.polib.POFile"
  ],
  "typeshed.typeshed.stubs.polib.polib._BaseFile.save": [
    "typeshed.typeshed.stubs.polib.polib.MOFile"
  ],
  "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor.DescriptorBase.GetOptions": [
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor.Descriptor",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor.EnumDescriptor",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor.EnumValueDescriptor",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor.FieldDescriptor",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor.FileDescriptor",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor.MethodDescriptor",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor.ServiceDescriptor"
  ],
  "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor.DescriptorBase.__init__": [
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor.EnumValueDescriptor",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor.FieldDescriptor",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor.FileDescriptor",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor.MethodDescriptor",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor._NestedDescriptorBase"
  ],
  "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor._NestedDescriptorBase.CopyToProto": [
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor.Descriptor",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor.EnumDescriptor",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor.ServiceDescriptor"
  ],
  "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor._NestedDescriptorBase.__init__": [
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor.Descriptor",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor.EnumDescriptor",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.descriptor.ServiceDescriptor"
  ],
  "typeshed.typeshed.stubs.protobuf.google.protobuf.internal.containers.BaseContainer.__init__": [
    "typeshed.typeshed.stubs.protobuf.google.protobuf.internal.containers.RepeatedCompositeFieldContainer",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.internal.containers.RepeatedScalarFieldContainer"
  ],
  "typeshed.typeshed.stubs.protobuf.google.protobuf.internal.message_listener.MessageListener.Modified": [
    "typeshed.typeshed.stubs.protobuf.google.protobuf.internal.message_listener.NullMessageListener"
  ],
  "typeshed.typeshed.stubs.protobuf.google.protobuf.internal.type_checkers.TypeChecker.__init__": [
    "typeshed.typeshed.stubs.protobuf.google.protobuf.internal.type_checkers.TypeCheckerWithDefault"
  ],
  "typeshed.typeshed.stubs.psutil.psutil.Process.__init__": [
    "typeshed.typeshed.stubs.psutil.psutil.Popen"
  ],
  "typeshed.typeshed.stubs.psutil.psutil._common.Error.__init__": [
    "typeshed.typeshed.stubs.psutil.psutil._common.AccessDenied",
    "typeshed.typeshed.stubs.psutil.psutil._common.NoSuchProcess",
    "typeshed.typeshed.stubs.psutil.psutil._common.TimeoutExpired"
  ],
  "typeshed.typeshed.stubs.psutil.psutil._common.NoSuchProcess.__init__": [
    "typeshed.typeshed.stubs.psutil.psutil._common.ZombieProcess"
  ],
  "typeshed.typeshed.stubs.psycopg2.psycopg2._psycopg.connection.__init__": [
    "typeshed.typeshed.stubs.psycopg2.psycopg2._psycopg.ReplicationConnection"
  ],
  "typeshed.typeshed.stubs.psycopg2.psycopg2._psycopg.cursor.__init__": [
    "typeshed.typeshed.stubs.psycopg2.psycopg2._psycopg.ReplicationCursor"
  ],
  "typeshed.typeshed.stubs.psycopg2.psycopg2._range.RangeAdapter.getquoted": [
    "typeshed.typeshed.stubs.psycopg2.psycopg2._range.NumberRangeAdapter"
  ],
  "typeshed.typeshed.stubs.psycopg2.psycopg2.extras.DictCursorBase.__init__": [
    "typeshed.typeshed.stubs.psycopg2.psycopg2.extras.DictCursor",
    "typeshed.typeshed.stubs.psycopg2.psycopg2.extras.RealDictCursor"
  ],
  "typeshed.typeshed.stubs.psycopg2.psycopg2.extras.LoggingConnection.cursor": [
    "typeshed.typeshed.stubs.psycopg2.psycopg2.extras.MinTimeLoggingConnection"
  ],
  "typeshed.typeshed.stubs.psycopg2.psycopg2.extras.LoggingConnection.filter": [
    "typeshed.typeshed.stubs.psycopg2.psycopg2.extras.MinTimeLoggingConnection"
  ],
  "typeshed.typeshed.stubs.psycopg2.psycopg2.extras.LoggingConnection.initialize": [
    "typeshed.typeshed.stubs.psycopg2.psycopg2.extras.MinTimeLoggingConnection"
  ],
  "typeshed.typeshed.stubs.psycopg2.psycopg2.extras.LoggingCursor.callproc": [
    "typeshed.typeshed.stubs.psycopg2.psycopg2.extras.MinTimeLoggingCursor"
  ],
  "typeshed.typeshed.stubs.psycopg2.psycopg2.extras.LoggingCursor.execute": [
    "typeshed.typeshed.stubs.psycopg2.psycopg2.extras.MinTimeLoggingCursor"
  ],
  "typeshed.typeshed.stubs.psycopg2.psycopg2.pool.AbstractConnectionPool.putconn": [
    "typeshed.typeshed.stubs.psycopg2.psycopg2.pool.ThreadedConnectionPool"
  ],
  "typeshed.typeshed.stubs.psycopg2.psycopg2.sql.Composable.__add__": [
    "typeshed.typeshed.stubs.psycopg2.psycopg2.sql.Composed"
  ],
  "typeshed.typeshed.stubs.psycopg2.psycopg2.sql.Composable.__init__": [
    "typeshed.typeshed.stubs.psycopg2.psycopg2.sql.Composed",
    "typeshed.typeshed.stubs.psycopg2.psycopg2.sql.Identifier",
    "typeshed.typeshed.stubs.psycopg2.psycopg2.sql.Literal",
    "typeshed.typeshed.stubs.psycopg2.psycopg2.sql.Placeholder",
    "typeshed.typeshed.stubs.psycopg2.psycopg2.sql.SQL"
  ],
  "typeshed.typeshed.stubs.pyasn1.pyasn1.codec.ber.decoder.AbstractPayloadDecoder.indefLenValueDecoder": [
    "typeshed.typeshed.stubs.pyasn1.pyasn1.codec.ber.decoder.AnyPayloadDecoder",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.codec.ber.decoder.BitStringPayloadDecoder",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.codec.ber.decoder.ChoicePayloadDecoder",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.codec.ber.decoder.ConstructedPayloadDecoderBase",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.codec.ber.decoder.OctetStringPayloadDecoder",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.codec.ber.decoder.RawPayloadDecoder"
  ],
  "typeshed.typeshed.stubs.pyasn1.pyasn1.codec.ber.decoder.AbstractPayloadDecoder.valueDecoder": [
    "typeshed.typeshed.stubs.pyasn1.pyasn1.codec.ber.decoder.AnyPayloadDecoder",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.codec.ber.decoder.BitStringPayloadDecoder",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.codec.ber.decoder.ChoicePayloadDecoder",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.codec.ber.decoder.ConstructedPayloadDecoderBase",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.codec.ber.decoder.IntegerPayloadDecoder",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.codec.ber.decoder.NullPayloadDecoder",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.codec.ber.decoder.ObjectIdentifierPayloadDecoder",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.codec.ber.decoder.OctetStringPayloadDecoder",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.codec.ber.decoder.RawPayloadDecoder",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.codec.ber.decoder.RealPayloadDecoder"
  ],
  "typeshed.typeshed.stubs.pyasn1.pyasn1.codec.ber.encoder.AbstractItemEncoder.encodeValue": [
    "typeshed.typeshed.stubs.pyasn1.pyasn1.codec.ber.encoder.BitStringEncoder",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.codec.ber.encoder.BooleanEncoder",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.codec.ber.encoder.ChoiceEncoder",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.codec.ber.encoder.EndOfOctetsEncoder",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.codec.ber.encoder.IntegerEncoder",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.codec.ber.encoder.NullEncoder",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.codec.ber.encoder.ObjectIdentifierEncoder",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.codec.ber.encoder.OctetStringEncoder",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.codec.ber.encoder.RealEncoder",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.codec.ber.encoder.SequenceEncoder",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.codec.ber.encoder.SequenceOfEncoder"
  ],
  "typeshed.typeshed.stubs.pyasn1.pyasn1.codec.ber.encoder.OctetStringEncoder.encodeValue": [
    "typeshed.typeshed.stubs.pyasn1.pyasn1.codec.ber.encoder.AnyEncoder"
  ],
  "typeshed.typeshed.stubs.pyasn1.pyasn1.codec.native.decoder.AbstractScalarPayloadDecoder.__call__": [
    "typeshed.typeshed.stubs.pyasn1.pyasn1.codec.native.decoder.BitStringPayloadDecoder"
  ],
  "typeshed.typeshed.stubs.pyasn1.pyasn1.codec.native.encoder.AbstractItemEncoder.encode": [
    "typeshed.typeshed.stubs.pyasn1.pyasn1.codec.native.encoder.AnyEncoder",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.codec.native.encoder.BitStringEncoder",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.codec.native.encoder.BooleanEncoder",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.codec.native.encoder.IntegerEncoder",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.codec.native.encoder.NullEncoder",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.codec.native.encoder.ObjectIdentifierEncoder",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.codec.native.encoder.OctetStringEncoder",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.codec.native.encoder.RealEncoder",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.codec.native.encoder.SequenceOfEncoder",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.codec.native.encoder.SetEncoder",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.codec.native.encoder.TextStringEncoder"
  ],
  "typeshed.typeshed.stubs.pyasn1.pyasn1.error.PyAsn1Error.__init__": [
    "typeshed.typeshed.stubs.pyasn1.pyasn1.error.PyAsn1UnicodeError"
  ],
  "typeshed.typeshed.stubs.pyasn1.pyasn1.type.base.Asn1Type.__init__": [
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.base.ConstructedAsn1Type",
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.base.SimpleAsn1Type"
  ],
  "typeshed.typeshed.stubs.pyasn1.pyasn1.type.base.Asn1Type.prettyPrint": [
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.base.SimpleAsn1Type"
  ],
  "typeshed.typeshed.stubs.pyasn1.pyasn1.type.univ.OctetString.prettyIn": [
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.univ.Null"
  ],
  "typeshed.typeshed.stubs.pyasn1.pyasn1.type.univ.SequenceAndSetBase.__contains__": [
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.univ.Choice"
  ],
  "typeshed.typeshed.stubs.pyasn1.pyasn1.type.univ.SequenceAndSetBase.__iter__": [
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.univ.Choice"
  ],
  "typeshed.typeshed.stubs.pyasn1.pyasn1.type.univ.SequenceAndSetBase.__len__": [
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.univ.Choice"
  ],
  "typeshed.typeshed.stubs.pyasn1.pyasn1.type.univ.SequenceAndSetBase.clear": [
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.univ.Choice"
  ],
  "typeshed.typeshed.stubs.pyasn1.pyasn1.type.univ.SequenceAndSetBase.getComponentByPosition": [
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.univ.Choice"
  ],
  "typeshed.typeshed.stubs.pyasn1.pyasn1.type.univ.SequenceAndSetBase.isValue": [
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.univ.Choice"
  ],
  "typeshed.typeshed.stubs.pyasn1.pyasn1.type.univ.SequenceAndSetBase.items": [
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.univ.Choice"
  ],
  "typeshed.typeshed.stubs.pyasn1.pyasn1.type.univ.SequenceAndSetBase.keys": [
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.univ.Choice"
  ],
  "typeshed.typeshed.stubs.pyasn1.pyasn1.type.univ.SequenceAndSetBase.setComponentByPosition": [
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.univ.Choice"
  ],
  "typeshed.typeshed.stubs.pyasn1.pyasn1.type.univ.SequenceAndSetBase.values": [
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.univ.Choice"
  ],
  "typeshed.typeshed.stubs.pyasn1.pyasn1.type.univ.Set.getComponent": [
    "typeshed.typeshed.stubs.pyasn1.pyasn1.type.univ.Choice"
  ],
  "typeshed.typeshed.stubs.pyflakes.pyflakes.checker.Binding.__init__": [
    "typeshed.typeshed.stubs.pyflakes.pyflakes.checker.ExportBinding"
  ],
  "typeshed.typeshed.stubs.pyflakes.pyflakes.checker.Binding.redefines": [
    "typeshed.typeshed.stubs.pyflakes.pyflakes.checker.Annotation"
  ],
  "typeshed.typeshed.stubs.pyflakes.pyflakes.checker.Importation.__init__": [
    "typeshed.typeshed.stubs.pyflakes.pyflakes.checker.ImportationFrom",
    "typeshed.typeshed.stubs.pyflakes.pyflakes.checker.StarImportation",
    "typeshed.typeshed.stubs.pyflakes.pyflakes.checker.SubmoduleImportation"
  ],
  "typeshed.typeshed.stubs.pyflakes.pyflakes.checker.ImportationFrom.__init__": [
    "typeshed.typeshed.stubs.pyflakes.pyflakes.checker.FutureImportation"
  ],
  "typeshed.typeshed.stubs.pyflakes.pyflakes.messages.Message.__init__": [
    "typeshed.typeshed.stubs.pyflakes.pyflakes.messages.DoctestSyntaxError",
    "typeshed.typeshed.stubs.pyflakes.pyflakes.messages.DuplicateArgument",
    "typeshed.typeshed.stubs.pyflakes.pyflakes.messages.ForwardAnnotationSyntaxError",
    "typeshed.typeshed.stubs.pyflakes.pyflakes.messages.FutureFeatureNotDefined",
    "typeshed.typeshed.stubs.pyflakes.pyflakes.messages.ImportShadowedByLoopVar",
    "typeshed.typeshed.stubs.pyflakes.pyflakes.messages.ImportStarNotPermitted",
    "typeshed.typeshed.stubs.pyflakes.pyflakes.messages.ImportStarUsage",
    "typeshed.typeshed.stubs.pyflakes.pyflakes.messages.ImportStarUsed",
    "typeshed.typeshed.stubs.pyflakes.pyflakes.messages.LateFutureImport",
    "typeshed.typeshed.stubs.pyflakes.pyflakes.messages.MultiValueRepeatedKeyLiteral",
    "typeshed.typeshed.stubs.pyflakes.pyflakes.messages.MultiValueRepeatedKeyVariable",
    "typeshed.typeshed.stubs.pyflakes.pyflakes.messages.PercentFormatExtraNamedArguments",
    "typeshed.typeshed.stubs.pyflakes.pyflakes.messages.PercentFormatInvalidFormat",
    "typeshed.typeshed.stubs.pyflakes.pyflakes.messages.PercentFormatMissingArgument",
    "typeshed.typeshed.stubs.pyflakes.pyflakes.messages.PercentFormatPositionalCountMismatch",
    "typeshed.typeshed.stubs.pyflakes.pyflakes.messages.PercentFormatUnsupportedFormatCharacter",
    "typeshed.typeshed.stubs.pyflakes.pyflakes.messages.RedefinedWhileUnused",
    "typeshed.typeshed.stubs.pyflakes.pyflakes.messages.StringDotFormatExtraNamedArguments",
    "typeshed.typeshed.stubs.pyflakes.pyflakes.messages.StringDotFormatExtraPositionalArguments",
    "typeshed.typeshed.stubs.pyflakes.pyflakes.messages.StringDotFormatInvalidFormat",
    "typeshed.typeshed.stubs.pyflakes.pyflakes.messages.StringDotFormatMissingArgument",
    "typeshed.typeshed.stubs.pyflakes.pyflakes.messages.UndefinedExport",
    "typeshed.typeshed.stubs.pyflakes.pyflakes.messages.UndefinedLocal",
    "typeshed.typeshed.stubs.pyflakes.pyflakes.messages.UndefinedName",
    "typeshed.typeshed.stubs.pyflakes.pyflakes.messages.UnusedAnnotation",
    "typeshed.typeshed.stubs.pyflakes.pyflakes.messages.UnusedImport",
    "typeshed.typeshed.stubs.pyflakes.pyflakes.messages.UnusedVariable"
  ],
  "typeshed.typeshed.stubs.pyinstaller.PyInstaller.building.datastruct.Target.__init__": [
    "typeshed.typeshed.stubs.pyinstaller.PyInstaller.building.datastruct.Tree"
  ],
  "typeshed.typeshed.stubs.pyinstaller.PyInstaller.lib.modulegraph.modulegraph.Node.__init__": [
    "typeshed.typeshed.stubs.pyinstaller.PyInstaller.lib.modulegraph.modulegraph.BaseModule"
  ],
  "typeshed.typeshed.stubs.pyinstaller.PyInstaller.lib.modulegraph.modulegraph.Node.infoTuple": [
    "typeshed.typeshed.stubs.pyinstaller.PyInstaller.lib.modulegraph.modulegraph.BaseModule"
  ],
  "typeshed.typeshed.stubs.pyjks.jks.bks.AbstractBksEntry.__init__": [
    "typeshed.typeshed.stubs.pyjks.jks.bks.BksKeyEntry"
  ],
  "typeshed.typeshed.stubs.pyjks.jks.bks.BksKeyStore.__init__": [
    "typeshed.typeshed.stubs.pyjks.jks.bks.UberKeyStore"
  ],
  "typeshed.typeshed.stubs.pyjks.jks.util.AbstractKeystore.__init__": [
    "typeshed.typeshed.stubs.pyjks.jks.bks.BksKeyStore",
    "typeshed.typeshed.stubs.pyjks.jks.jks.KeyStore"
  ],
  "typeshed.typeshed.stubs.pyjks.jks.util.AbstractKeystoreEntry.__init__": [
    "typeshed.typeshed.stubs.pyjks.jks.bks.AbstractBksEntry",
    "typeshed.typeshed.stubs.pyjks.jks.jks.PrivateKeyEntry",
    "typeshed.typeshed.stubs.pyjks.jks.jks.SecretKeyEntry",
    "typeshed.typeshed.stubs.pyjks.jks.jks.TrustedCertEntry"
  ],
  "typeshed.typeshed.stubs.pyjks.jks.util.AbstractKeystoreEntry.encrypt": [
    "typeshed.typeshed.stubs.pyjks.jks.jks.SecretKeyEntry"
  ],
  "typeshed.typeshed.stubs.pyjks.jks.util.AbstractKeystoreEntry.is_decrypted": [
    "typeshed.typeshed.stubs.pyjks.jks.bks.BksKeyEntry",
    "typeshed.typeshed.stubs.pyjks.jks.bks.BksSecretKeyEntry",
    "typeshed.typeshed.stubs.pyjks.jks.jks.TrustedCertEntry"
  ],
  "typeshed.typeshed.stubs.pyjks.jks.util.AbstractKeystoreEntry.new": [
    "typeshed.typeshed.stubs.pyjks.jks.jks.PrivateKeyEntry",
    "typeshed.typeshed.stubs.pyjks.jks.jks.SecretKeyEntry",
    "typeshed.typeshed.stubs.pyjks.jks.jks.TrustedCertEntry"
  ],
  "typeshed.typeshed.stubs.pynput.pynput.keyboard._base.Listener.__init__": [
    "typeshed.typeshed.stubs.pynput.pynput.keyboard.GlobalHotKeys"
  ],
  "typeshed.typeshed.stubs.pyserial.serial.serialposix.Serial.cancel_read": [
    "typeshed.typeshed.stubs.pyserial.serial.serialposix.VTIMESerial"
  ],
  "typeshed.typeshed.stubs.python-crontab.cronlog.LogReader.__init__": [
    "typeshed.typeshed.stubs.python-crontab.cronlog.CronLog"
  ],
  "typeshed.typeshed.stubs.python-crontab.cronlog.LogReader.__iter__": [
    "typeshed.typeshed.stubs.python-crontab.cronlog.CronLog"
  ],
  "typeshed.typeshed.stubs.python-dateutil.dateutil.rrule.rrulebase.__init__": [
    "typeshed.typeshed.stubs.python-dateutil.dateutil.rrule.rrule",
    "typeshed.typeshed.stubs.python-dateutil.dateutil.rrule.rruleset"
  ],
  "typeshed.typeshed.stubs.python-dateutil.dateutil.tz._common._tzinfo.fromutc": [
    "typeshed.typeshed.stubs.python-dateutil.dateutil.tz._common.tzrangebase"
  ],
  "typeshed.typeshed.stubs.python-dateutil.dateutil.tz._common._tzinfo.is_ambiguous": [
    "typeshed.typeshed.stubs.python-dateutil.dateutil.tz._common.tzrangebase",
    "typeshed.typeshed.stubs.python-dateutil.dateutil.tz.tz.tzfile",
    "typeshed.typeshed.stubs.python-dateutil.dateutil.tz.tz.tzlocal"
  ],
  "typeshed.typeshed.stubs.python-dateutil.dateutil.tz._common.tzrangebase.__init__": [
    "typeshed.typeshed.stubs.python-dateutil.dateutil.tz.tz.tzrange"
  ],
  "typeshed.typeshed.stubs.python-dateutil.dateutil.tz.tz.tzrange.__init__": [
    "typeshed.typeshed.stubs.python-dateutil.dateutil.tz.tz.tzstr"
  ],
  "typeshed.typeshed.stubs.python-gflags.gflags.ArgumentParser.WriteCustomInfoInXMLFormat": [
    "typeshed.typeshed.stubs.python-gflags.gflags.NumericParser"
  ],
  "typeshed.typeshed.stubs.python-gflags.gflags.ArgumentSerializer.Serialize": [
    "typeshed.typeshed.stubs.python-gflags.gflags.ListSerializer"
  ],
  "typeshed.typeshed.stubs.python-gflags.gflags.BaseListParser.__init__": [
    "typeshed.typeshed.stubs.python-gflags.gflags.ListParser",
    "typeshed.typeshed.stubs.python-gflags.gflags.WhitespaceSeparatedListParser"
  ],
  "typeshed.typeshed.stubs.python-gflags.gflags.BooleanFlag.__init__": [
    "typeshed.typeshed.stubs.python-gflags.gflags.HelpFlag",
    "typeshed.typeshed.stubs.python-gflags.gflags.HelpXMLFlag",
    "typeshed.typeshed.stubs.python-gflags.gflags.HelpshortFlag"
  ],
  "typeshed.typeshed.stubs.python-gflags.gflags.Flag.Parse": [
    "typeshed.typeshed.stubs.python-gflags.gflags.HelpFlag",
    "typeshed.typeshed.stubs.python-gflags.gflags.HelpXMLFlag",
    "typeshed.typeshed.stubs.python-gflags.gflags.HelpshortFlag",
    "typeshed.typeshed.stubs.python-gflags.gflags.MultiFlag"
  ],
  "typeshed.typeshed.stubs.python-gflags.gflags.Flag.Serialize": [
    "typeshed.typeshed.stubs.python-gflags.gflags.MultiFlag"
  ],
  "typeshed.typeshed.stubs.python-gflags.gflags.Flag.__init__": [
    "typeshed.typeshed.stubs.python-gflags.gflags.BooleanFlag",
    "typeshed.typeshed.stubs.python-gflags.gflags.EnumFlag",
    "typeshed.typeshed.stubs.python-gflags.gflags.MultiFlag"
  ],
  "typeshed.typeshed.stubs.python-gflags.gflags.NumericParser.Convert": [
    "typeshed.typeshed.stubs.python-gflags.gflags.FloatParser",
    "typeshed.typeshed.stubs.python-gflags.gflags.IntegerParser"
  ],
  "typeshed.typeshed.stubs.python-jose.jose.backends.base.Key.__init__": [
    "typeshed.typeshed.stubs.python-jose.jose.backends.base.DIRKey",
    "typeshed.typeshed.stubs.python-jose.jose.backends.cryptography_backend.CryptographyAESKey",
    "typeshed.typeshed.stubs.python-jose.jose.backends.cryptography_backend.CryptographyECKey",
    "typeshed.typeshed.stubs.python-jose.jose.backends.cryptography_backend.CryptographyHMACKey",
    "typeshed.typeshed.stubs.python-jose.jose.backends.cryptography_backend.CryptographyRSAKey",
    "typeshed.typeshed.stubs.python-jose.jose.backends.ecdsa_backend.ECDSAECKey",
    "typeshed.typeshed.stubs.python-jose.jose.backends.native.HMACKey",
    "typeshed.typeshed.stubs.python-jose.jose.backends.rsa_backend.RSAKey"
  ],
  "typeshed.typeshed.stubs.python-jose.jose.backends.base.Key.decrypt": [
    "typeshed.typeshed.stubs.python-jose.jose.backends.cryptography_backend.CryptographyAESKey"
  ],
  "typeshed.typeshed.stubs.python-jose.jose.backends.base.Key.encrypt": [
    "typeshed.typeshed.stubs.python-jose.jose.backends.cryptography_backend.CryptographyAESKey"
  ],
  "typeshed.typeshed.stubs.python-jose.jose.backends.base.Key.public_key": [
    "typeshed.typeshed.stubs.python-jose.jose.backends.cryptography_backend.CryptographyECKey",
    "typeshed.typeshed.stubs.python-jose.jose.backends.cryptography_backend.CryptographyRSAKey",
    "typeshed.typeshed.stubs.python-jose.jose.backends.ecdsa_backend.ECDSAECKey",
    "typeshed.typeshed.stubs.python-jose.jose.backends.rsa_backend.RSAKey"
  ],
  "typeshed.typeshed.stubs.python-jose.jose.backends.base.Key.sign": [
    "typeshed.typeshed.stubs.python-jose.jose.backends.cryptography_backend.CryptographyECKey",
    "typeshed.typeshed.stubs.python-jose.jose.backends.cryptography_backend.CryptographyHMACKey",
    "typeshed.typeshed.stubs.python-jose.jose.backends.cryptography_backend.CryptographyRSAKey",
    "typeshed.typeshed.stubs.python-jose.jose.backends.ecdsa_backend.ECDSAECKey",
    "typeshed.typeshed.stubs.python-jose.jose.backends.native.HMACKey",
    "typeshed.typeshed.stubs.python-jose.jose.backends.rsa_backend.RSAKey"
  ],
  "typeshed.typeshed.stubs.python-jose.jose.backends.base.Key.to_dict": [
    "typeshed.typeshed.stubs.python-jose.jose.backends.base.DIRKey",
    "typeshed.typeshed.stubs.python-jose.jose.backends.cryptography_backend.CryptographyAESKey",
    "typeshed.typeshed.stubs.python-jose.jose.backends.cryptography_backend.CryptographyECKey",
    "typeshed.typeshed.stubs.python-jose.jose.backends.cryptography_backend.CryptographyHMACKey",
    "typeshed.typeshed.stubs.python-jose.jose.backends.cryptography_backend.CryptographyRSAKey",
    "typeshed.typeshed.stubs.python-jose.jose.backends.ecdsa_backend.ECDSAECKey",
    "typeshed.typeshed.stubs.python-jose.jose.backends.native.HMACKey",
    "typeshed.typeshed.stubs.python-jose.jose.backends.rsa_backend.RSAKey"
  ],
  "typeshed.typeshed.stubs.python-jose.jose.backends.base.Key.to_pem": [
    "typeshed.typeshed.stubs.python-jose.jose.backends.cryptography_backend.CryptographyECKey",
    "typeshed.typeshed.stubs.python-jose.jose.backends.cryptography_backend.CryptographyRSAKey",
    "typeshed.typeshed.stubs.python-jose.jose.backends.ecdsa_backend.ECDSAECKey",
    "typeshed.typeshed.stubs.python-jose.jose.backends.rsa_backend.RSAKey"
  ],
  "typeshed.typeshed.stubs.python-jose.jose.backends.base.Key.unwrap_key": [
    "typeshed.typeshed.stubs.python-jose.jose.backends.cryptography_backend.CryptographyAESKey",
    "typeshed.typeshed.stubs.python-jose.jose.backends.cryptography_backend.CryptographyRSAKey",
    "typeshed.typeshed.stubs.python-jose.jose.backends.rsa_backend.RSAKey"
  ],
  "typeshed.typeshed.stubs.python-jose.jose.backends.base.Key.verify": [
    "typeshed.typeshed.stubs.python-jose.jose.backends.cryptography_backend.CryptographyECKey",
    "typeshed.typeshed.stubs.python-jose.jose.backends.cryptography_backend.CryptographyHMACKey",
    "typeshed.typeshed.stubs.python-jose.jose.backends.cryptography_backend.CryptographyRSAKey",
    "typeshed.typeshed.stubs.python-jose.jose.backends.ecdsa_backend.ECDSAECKey",
    "typeshed.typeshed.stubs.python-jose.jose.backends.native.HMACKey",
    "typeshed.typeshed.stubs.python-jose.jose.backends.rsa_backend.RSAKey"
  ],
  "typeshed.typeshed.stubs.python-jose.jose.backends.base.Key.wrap_key": [
    "typeshed.typeshed.stubs.python-jose.jose.backends.cryptography_backend.CryptographyAESKey",
    "typeshed.typeshed.stubs.python-jose.jose.backends.cryptography_backend.CryptographyRSAKey",
    "typeshed.typeshed.stubs.python-jose.jose.backends.rsa_backend.RSAKey"
  ],
  "typeshed.typeshed.stubs.python-nmap.nmap.nmap.PortScannerAsync.__init__": [
    "typeshed.typeshed.stubs.python-nmap.nmap.nmap.PortScannerYield"
  ],
  "typeshed.typeshed.stubs.python-nmap.nmap.nmap.PortScannerAsync.scan": [
    "typeshed.typeshed.stubs.python-nmap.nmap.nmap.PortScannerYield"
  ],
  "typeshed.typeshed.stubs.python-nmap.nmap.nmap.PortScannerAsync.still_scanning": [
    "typeshed.typeshed.stubs.python-nmap.nmap.nmap.PortScannerYield"
  ],
  "typeshed.typeshed.stubs.python-nmap.nmap.nmap.PortScannerAsync.stop": [
    "typeshed.typeshed.stubs.python-nmap.nmap.nmap.PortScannerYield"
  ],
  "typeshed.typeshed.stubs.python-nmap.nmap.nmap.PortScannerAsync.wait": [
    "typeshed.typeshed.stubs.python-nmap.nmap.nmap.PortScannerYield"
  ],
  "typeshed.typeshed.stubs.pytz.pytz.tzinfo.BaseTzInfo.dst": [
    "typeshed.typeshed.stubs.pytz.pytz._UTCclass",
    "typeshed.typeshed.stubs.pytz.pytz.tzinfo.DstTzInfo",
    "typeshed.typeshed.stubs.pytz.pytz.tzinfo.StaticTzInfo"
  ],
  "typeshed.typeshed.stubs.pytz.pytz.tzinfo.BaseTzInfo.localize": [
    "typeshed.typeshed.stubs.pytz.pytz._UTCclass",
    "typeshed.typeshed.stubs.pytz.pytz.tzinfo.DstTzInfo",
    "typeshed.typeshed.stubs.pytz.pytz.tzinfo.StaticTzInfo"
  ],
  "typeshed.typeshed.stubs.pytz.pytz.tzinfo.BaseTzInfo.normalize": [
    "typeshed.typeshed.stubs.pytz.pytz._UTCclass",
    "typeshed.typeshed.stubs.pytz.pytz.tzinfo.DstTzInfo",
    "typeshed.typeshed.stubs.pytz.pytz.tzinfo.StaticTzInfo"
  ],
  "typeshed.typeshed.stubs.pytz.pytz.tzinfo.BaseTzInfo.tzname": [
    "typeshed.typeshed.stubs.pytz.pytz._UTCclass",
    "typeshed.typeshed.stubs.pytz.pytz.tzinfo.DstTzInfo",
    "typeshed.typeshed.stubs.pytz.pytz.tzinfo.StaticTzInfo"
  ],
  "typeshed.typeshed.stubs.pytz.pytz.tzinfo.BaseTzInfo.utcoffset": [
    "typeshed.typeshed.stubs.pytz.pytz._UTCclass",
    "typeshed.typeshed.stubs.pytz.pytz.tzinfo.DstTzInfo",
    "typeshed.typeshed.stubs.pytz.pytz.tzinfo.StaticTzInfo"
  ],
  "typeshed.typeshed.stubs.pywin32.win32.lib.win32pdhquery.BaseQuery.__getinitargs__": [
    "typeshed.typeshed.stubs.pywin32.win32.lib.win32pdhquery.Query"
  ],
  "typeshed.typeshed.stubs.pywin32.win32.lib.win32pdhquery.BaseQuery.__init__": [
    "typeshed.typeshed.stubs.pywin32.win32.lib.win32pdhquery.Query"
  ],
  "typeshed.typeshed.stubs.pywin32.win32.lib.win32pdhquery.BaseQuery.open": [
    "typeshed.typeshed.stubs.pywin32.win32.lib.win32pdhquery.Query"
  ],
  "typeshed.typeshed.stubs.pywin32.win32com.client.build.DispatchItem.__init__": [
    "typeshed.typeshed.stubs.pywin32.win32com.client.build.LazyDispatchItem"
  ],
  "typeshed.typeshed.stubs.pywin32.win32com.client.build.OleItem.__init__": [
    "typeshed.typeshed.stubs.pywin32.win32com.client.build.DispatchItem"
  ],
  "typeshed.typeshed.stubs.pywin32.win32com.server.dispatcher.DispatcherBase.__init__": [
    "typeshed.typeshed.stubs.pywin32.win32com.server.dispatcher.DispatcherWin32dbg"
  ],
  "typeshed.typeshed.stubs.pywin32.win32com.server.policy.BasicWrapPolicy._invokeex_": [
    "typeshed.typeshed.stubs.pywin32.win32com.server.policy.DynamicPolicy",
    "typeshed.typeshed.stubs.pywin32.win32com.server.policy.MappedWrapPolicy"
  ],
  "typeshed.typeshed.stubs.pywin32.win32com.server.util.ListEnumerator.Next": [
    "typeshed.typeshed.stubs.pywin32.win32com.server.util.ListEnumeratorGateway"
  ],
  "typeshed.typeshed.stubs.pywin32.win32comext.axdebug.codecontainer.SourceCodeContainer.GetName": [
    "typeshed.typeshed.stubs.pywin32.win32comext.axdebug.codecontainer.SourceModuleContainer"
  ],
  "typeshed.typeshed.stubs.pywin32.win32comext.axdebug.codecontainer.SourceCodeContainer.GetText": [
    "typeshed.typeshed.stubs.pywin32.win32comext.axdebug.codecontainer.SourceModuleContainer"
  ],
  "typeshed.typeshed.stubs.pywin32.win32comext.axdebug.codecontainer.SourceCodeContainer.__init__": [
    "typeshed.typeshed.stubs.pywin32.win32comext.axdebug.codecontainer.SourceModuleContainer"
  ],
  "typeshed.typeshed.stubs.pyxdg.xdg.Exceptions.Error.__init__": [
    "typeshed.typeshed.stubs.pyxdg.xdg.Exceptions.DuplicateGroupError",
    "typeshed.typeshed.stubs.pyxdg.xdg.Exceptions.DuplicateKeyError",
    "typeshed.typeshed.stubs.pyxdg.xdg.Exceptions.NoGroupError",
    "typeshed.typeshed.stubs.pyxdg.xdg.Exceptions.NoKeyError",
    "typeshed.typeshed.stubs.pyxdg.xdg.Exceptions.NoThemeError",
    "typeshed.typeshed.stubs.pyxdg.xdg.Exceptions.ParsingError",
    "typeshed.typeshed.stubs.pyxdg.xdg.Exceptions.ValidationError"
  ],
  "typeshed.typeshed.stubs.qrcode.qrcode.image.base.BaseImage.__init__": [
    "typeshed.typeshed.stubs.qrcode.qrcode.image.base.BaseImageWithDrawer"
  ],
  "typeshed.typeshed.stubs.qrcode.qrcode.image.base.BaseImage.drawrect_context": [
    "typeshed.typeshed.stubs.qrcode.qrcode.image.base.BaseImageWithDrawer"
  ],
  "typeshed.typeshed.stubs.qrcode.qrcode.image.base.BaseImage.init_new_image": [
    "typeshed.typeshed.stubs.qrcode.qrcode.image.base.BaseImageWithDrawer"
  ],
  "typeshed.typeshed.stubs.qrcode.qrcode.image.styles.colormasks.QRColorMask.apply_mask": [
    "typeshed.typeshed.stubs.qrcode.qrcode.image.styles.colormasks.SolidFillColorMask"
  ],
  "typeshed.typeshed.stubs.qrcode.qrcode.image.styles.colormasks.QRColorMask.get_fg_pixel": [
    "typeshed.typeshed.stubs.qrcode.qrcode.image.styles.colormasks.HorizontalGradiantColorMask",
    "typeshed.typeshed.stubs.qrcode.qrcode.image.styles.colormasks.ImageColorMask",
    "typeshed.typeshed.stubs.qrcode.qrcode.image.styles.colormasks.RadialGradiantColorMask",
    "typeshed.typeshed.stubs.qrcode.qrcode.image.styles.colormasks.SolidFillColorMask",
    "typeshed.typeshed.stubs.qrcode.qrcode.image.styles.colormasks.SquareGradiantColorMask",
    "typeshed.typeshed.stubs.qrcode.qrcode.image.styles.colormasks.VerticalGradiantColorMask"
  ],
  "typeshed.typeshed.stubs.qrcode.qrcode.image.styles.colormasks.QRColorMask.initialize": [
    "typeshed.typeshed.stubs.qrcode.qrcode.image.styles.colormasks.ImageColorMask"
  ],
  "typeshed.typeshed.stubs.qrcode.qrcode.image.styles.moduledrawers.svg.BaseSvgQRModuleDrawer.initialize": [
    "typeshed.typeshed.stubs.qrcode.qrcode.image.styles.moduledrawers.svg.SvgPathCircleDrawer",
    "typeshed.typeshed.stubs.qrcode.qrcode.image.styles.moduledrawers.svg.SvgQRModuleDrawer"
  ],
  "typeshed.typeshed.stubs.qrcode.qrcode.image.styles.moduledrawers.svg.SvgPathQRModuleDrawer.subpath": [
    "typeshed.typeshed.stubs.qrcode.qrcode.image.styles.moduledrawers.svg.SvgPathCircleDrawer",
    "typeshed.typeshed.stubs.qrcode.qrcode.image.styles.moduledrawers.svg.SvgPathSquareDrawer"
  ],
  "typeshed.typeshed.stubs.qrcode.qrcode.image.styles.moduledrawers.svg.SvgQRModuleDrawer.el": [
    "typeshed.typeshed.stubs.qrcode.qrcode.image.styles.moduledrawers.svg.SvgCircleDrawer",
    "typeshed.typeshed.stubs.qrcode.qrcode.image.styles.moduledrawers.svg.SvgSquareDrawer"
  ],
  "typeshed.typeshed.stubs.qrcode.qrcode.image.styles.moduledrawers.svg.SvgQRModuleDrawer.initialize": [
    "typeshed.typeshed.stubs.qrcode.qrcode.image.styles.moduledrawers.svg.SvgCircleDrawer",
    "typeshed.typeshed.stubs.qrcode.qrcode.image.styles.moduledrawers.svg.SvgSquareDrawer"
  ],
  "typeshed.typeshed.stubs.redis.redis.asyncio.client.Redis.__aenter__": [
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.asyncio.client.Redis.__aexit__": [
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.asyncio.client.Redis.__await__": [
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.asyncio.client.Redis.__init__": [
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.asyncio.client.Redis.execute_command": [
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.asyncio.client.Redis.parse_response": [
    "typeshed.typeshed.stubs.redis.redis.asyncio.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.asyncio.connection.BaseParser.__init__": [
    "typeshed.typeshed.stubs.redis.redis.asyncio.connection.HiredisParser",
    "typeshed.typeshed.stubs.redis.redis.asyncio.connection.PythonParser"
  ],
  "typeshed.typeshed.stubs.redis.redis.asyncio.connection.BaseParser.on_connect": [
    "typeshed.typeshed.stubs.redis.redis.asyncio.connection.HiredisParser",
    "typeshed.typeshed.stubs.redis.redis.asyncio.connection.PythonParser"
  ],
  "typeshed.typeshed.stubs.redis.redis.asyncio.connection.BaseParser.on_disconnect": [
    "typeshed.typeshed.stubs.redis.redis.asyncio.connection.HiredisParser",
    "typeshed.typeshed.stubs.redis.redis.asyncio.connection.PythonParser"
  ],
  "typeshed.typeshed.stubs.redis.redis.asyncio.connection.BaseParser.read_response": [
    "typeshed.typeshed.stubs.redis.redis.asyncio.connection.HiredisParser",
    "typeshed.typeshed.stubs.redis.redis.asyncio.connection.PythonParser"
  ],
  "typeshed.typeshed.stubs.redis.redis.asyncio.connection.Connection.__init__": [
    "typeshed.typeshed.stubs.redis.redis.asyncio.connection.SSLConnection",
    "typeshed.typeshed.stubs.redis.redis.asyncio.connection.UnixDomainSocketConnection"
  ],
  "typeshed.typeshed.stubs.redis.redis.asyncio.connection.Connection.repr_pieces": [
    "typeshed.typeshed.stubs.redis.redis.asyncio.connection.UnixDomainSocketConnection"
  ],
  "typeshed.typeshed.stubs.redis.redis.asyncio.connection.ConnectionPool.__init__": [
    "typeshed.typeshed.stubs.redis.redis.asyncio.connection.BlockingConnectionPool"
  ],
  "typeshed.typeshed.stubs.redis.redis.asyncio.connection.ConnectionPool.disconnect": [
    "typeshed.typeshed.stubs.redis.redis.asyncio.connection.BlockingConnectionPool"
  ],
  "typeshed.typeshed.stubs.redis.redis.asyncio.connection.ConnectionPool.get_connection": [
    "typeshed.typeshed.stubs.redis.redis.asyncio.connection.BlockingConnectionPool"
  ],
  "typeshed.typeshed.stubs.redis.redis.asyncio.connection.ConnectionPool.make_connection": [
    "typeshed.typeshed.stubs.redis.redis.asyncio.connection.BlockingConnectionPool"
  ],
  "typeshed.typeshed.stubs.redis.redis.asyncio.connection.ConnectionPool.release": [
    "typeshed.typeshed.stubs.redis.redis.asyncio.connection.BlockingConnectionPool"
  ],
  "typeshed.typeshed.stubs.redis.redis.asyncio.connection.ConnectionPool.reset": [
    "typeshed.typeshed.stubs.redis.redis.asyncio.connection.BlockingConnectionPool"
  ],
  "typeshed.typeshed.stubs.redis.redis.backoff.AbstractBackoff.compute": [
    "typeshed.typeshed.stubs.redis.redis.backoff.ConstantBackoff",
    "typeshed.typeshed.stubs.redis.redis.backoff.DecorrelatedJitterBackoff",
    "typeshed.typeshed.stubs.redis.redis.backoff.EqualJitterBackoff",
    "typeshed.typeshed.stubs.redis.redis.backoff.ExponentialBackoff",
    "typeshed.typeshed.stubs.redis.redis.backoff.FullJitterBackoff"
  ],
  "typeshed.typeshed.stubs.redis.redis.backoff.ConstantBackoff.__init__": [
    "typeshed.typeshed.stubs.redis.redis.backoff.NoBackoff"
  ],
  "typeshed.typeshed.stubs.redis.redis.client.Redis.__del__": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.client.Redis.__enter__": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.client.Redis.__exit__": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.client.Redis.__init__": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.client.Redis.client": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.client.Redis.execute_command": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.client.Redis.monitor": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.client.Redis.parse_response": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.client.Redis.pipeline": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.client.Redis.set_response_callback": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.cluster.RedisCluster.__init__": [
    "typeshed.typeshed.stubs.redis.redis.cluster.ClusterPipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.cluster.RedisCluster.execute_command": [
    "typeshed.typeshed.stubs.redis.redis.cluster.ClusterPipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.ACLCommands.acl_cat": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.ACLCommands.acl_deluser": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.ACLCommands.acl_genpass": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.ACLCommands.acl_getuser": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.ACLCommands.acl_list": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.ACLCommands.acl_load": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.ACLCommands.acl_setuser": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.ACLCommands.acl_users": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.ACLCommands.acl_whoami": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.BasicKeyCommands.__contains__": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.BasicKeyCommands.__delitem__": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.BasicKeyCommands.__getitem__": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.BasicKeyCommands.__setitem__": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.BasicKeyCommands.append": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.BasicKeyCommands.bitcount": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.BasicKeyCommands.bitop": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.BasicKeyCommands.bitpos": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.BasicKeyCommands.blmove": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.BasicKeyCommands.decr": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.BasicKeyCommands.delete": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.BasicKeyCommands.dump": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.BasicKeyCommands.exists": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.BasicKeyCommands.expire": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.BasicKeyCommands.expireat": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.BasicKeyCommands.get": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.BasicKeyCommands.getbit": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.BasicKeyCommands.getrange": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.BasicKeyCommands.getset": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.BasicKeyCommands.incr": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.BasicKeyCommands.incrby": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.BasicKeyCommands.incrbyfloat": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.BasicKeyCommands.keys": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.BasicKeyCommands.lmove": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.BasicKeyCommands.mget": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.BasicKeyCommands.move": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.BasicKeyCommands.mset": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.BasicKeyCommands.msetnx": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.BasicKeyCommands.persist": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.BasicKeyCommands.pexpire": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.BasicKeyCommands.pexpireat": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.BasicKeyCommands.psetex": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.BasicKeyCommands.pttl": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.BasicKeyCommands.randomkey": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.BasicKeyCommands.rename": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.BasicKeyCommands.renamenx": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.BasicKeyCommands.restore": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.BasicKeyCommands.set": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.BasicKeyCommands.setbit": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.BasicKeyCommands.setex": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.BasicKeyCommands.setnx": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.BasicKeyCommands.setrange": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.BasicKeyCommands.stralgo": [
    "typeshed.typeshed.stubs.redis.redis.commands.cluster.ClusterDataAccessCommands"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.BasicKeyCommands.strlen": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.BasicKeyCommands.substr": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.BasicKeyCommands.ttl": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.BasicKeyCommands.type": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.BasicKeyCommands.unlink": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.BasicKeyCommands.unwatch": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.BasicKeyCommands.watch": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.ClusterCommands.cluster": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.ClusterCommands.readonly": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.ClusterCommands.readwrite": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.HashCommands.hdel": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.HashCommands.hexists": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.HashCommands.hget": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.HashCommands.hgetall": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.HashCommands.hincrby": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.HashCommands.hincrbyfloat": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.HashCommands.hkeys": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.HashCommands.hlen": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.HashCommands.hmget": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.HashCommands.hmset": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.HashCommands.hset": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.HashCommands.hsetnx": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.HashCommands.hvals": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.HyperlogCommands.pfadd": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.HyperlogCommands.pfcount": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.HyperlogCommands.pfmerge": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.ListCommands.blpop": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.ListCommands.brpop": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.ListCommands.brpoplpush": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.ListCommands.lindex": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.ListCommands.linsert": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.ListCommands.llen": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.ListCommands.lpop": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.ListCommands.lpush": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.ListCommands.lpushx": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.ListCommands.lrange": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.ListCommands.lrem": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.ListCommands.lset": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.ListCommands.ltrim": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.ListCommands.rpop": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.ListCommands.rpoplpush": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.ListCommands.rpush": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.ListCommands.rpushx": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.ListCommands.sort": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.ManagementCommands.bgrewriteaof": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.ManagementCommands.bgsave": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.ManagementCommands.client_getname": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.ManagementCommands.client_id": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.ManagementCommands.client_kill": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.ManagementCommands.client_list": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.ManagementCommands.client_setname": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.ManagementCommands.config_get": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.ManagementCommands.config_resetstat": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.ManagementCommands.config_rewrite": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.ManagementCommands.config_set": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.ManagementCommands.dbsize": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.ManagementCommands.debug_object": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.ManagementCommands.echo": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.ManagementCommands.flushall": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.ManagementCommands.flushdb": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.ManagementCommands.info": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.ManagementCommands.lastsave": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.ManagementCommands.object": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.ManagementCommands.ping": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.ManagementCommands.replicaof": [
    "typeshed.typeshed.stubs.redis.redis.commands.cluster.ClusterManagementCommands"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.ManagementCommands.reset": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.ManagementCommands.save": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.ManagementCommands.slaveof": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline",
    "typeshed.typeshed.stubs.redis.redis.commands.cluster.ClusterManagementCommands"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.ManagementCommands.slowlog_get": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.ManagementCommands.slowlog_len": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.ManagementCommands.slowlog_reset": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.ManagementCommands.swapdb": [
    "typeshed.typeshed.stubs.redis.redis.commands.cluster.ClusterManagementCommands"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.ManagementCommands.time": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.ModuleCommands.command_info": [
    "typeshed.typeshed.stubs.redis.redis.commands.core.AsyncModuleCommands"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.PubSubCommands.publish": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.PubSubCommands.pubsub_channels": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.PubSubCommands.pubsub_numpat": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.PubSubCommands.pubsub_numsub": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.ScanCommands.hscan": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.ScanCommands.hscan_iter": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.ScanCommands.scan": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.ScanCommands.scan_iter": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.ScanCommands.sscan": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.ScanCommands.sscan_iter": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.ScanCommands.zscan_iter": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.ScriptCommands.eval": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.ScriptCommands.evalsha": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.ScriptCommands.script_exists": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.ScriptCommands.script_flush": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.ScriptCommands.script_kill": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.ScriptCommands.script_load": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.SetCommands.sadd": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.SetCommands.scard": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.SetCommands.sdiff": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.SetCommands.sdiffstore": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.SetCommands.sinter": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.SetCommands.sinterstore": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.SetCommands.sismember": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.SetCommands.smembers": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.SetCommands.smove": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.SetCommands.spop": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.SetCommands.srandmember": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.SetCommands.srem": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.SetCommands.sunion": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.SetCommands.sunionstore": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.SortedSetCommands.bzpopmax": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.SortedSetCommands.bzpopmin": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.SortedSetCommands.zadd": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.SortedSetCommands.zcard": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.SortedSetCommands.zcount": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.SortedSetCommands.zincrby": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.SortedSetCommands.zinterstore": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.SortedSetCommands.zlexcount": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.SortedSetCommands.zpopmax": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.SortedSetCommands.zpopmin": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.SortedSetCommands.zrange": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.SortedSetCommands.zrangebylex": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.SortedSetCommands.zrangebyscore": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.SortedSetCommands.zrank": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.SortedSetCommands.zrem": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.SortedSetCommands.zremrangebylex": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.SortedSetCommands.zremrangebyrank": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.SortedSetCommands.zremrangebyscore": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.SortedSetCommands.zrevrange": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.SortedSetCommands.zrevrangebylex": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.SortedSetCommands.zrevrangebyscore": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.SortedSetCommands.zrevrank": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.SortedSetCommands.zscore": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.SortedSetCommands.zunionstore": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.StreamCommands.xack": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.StreamCommands.xadd": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.StreamCommands.xclaim": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.StreamCommands.xdel": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.StreamCommands.xgroup_create": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.StreamCommands.xgroup_delconsumer": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.StreamCommands.xgroup_destroy": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.StreamCommands.xgroup_setid": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.StreamCommands.xinfo_consumers": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.StreamCommands.xinfo_groups": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.StreamCommands.xinfo_stream": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.StreamCommands.xlen": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.StreamCommands.xpending": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.StreamCommands.xpending_range": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.StreamCommands.xrange": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.StreamCommands.xread": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.StreamCommands.xreadgroup": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.StreamCommands.xrevrange": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.core.StreamCommands.xtrim": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.search.query.Filter.__init__": [
    "typeshed.typeshed.stubs.redis.redis.commands.search.query.GeoFilter",
    "typeshed.typeshed.stubs.redis.redis.commands.search.query.NumericFilter"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.sentinel.SentinelCommands.sentinel": [
    "typeshed.typeshed.stubs.redis.redis.commands.sentinel.AsyncSentinelCommands"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.sentinel.SentinelCommands.sentinel_get_master_addr_by_name": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.sentinel.SentinelCommands.sentinel_master": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.sentinel.SentinelCommands.sentinel_masters": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.sentinel.SentinelCommands.sentinel_monitor": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.sentinel.SentinelCommands.sentinel_remove": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.sentinel.SentinelCommands.sentinel_sentinels": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.sentinel.SentinelCommands.sentinel_set": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.commands.sentinel.SentinelCommands.sentinel_slaves": [
    "typeshed.typeshed.stubs.redis.redis.client.Pipeline"
  ],
  "typeshed.typeshed.stubs.redis.redis.connection.AbstractConnection.__init__": [
    "typeshed.typeshed.stubs.redis.redis.connection.Connection",
    "typeshed.typeshed.stubs.redis.redis.connection.UnixDomainSocketConnection"
  ],
  "typeshed.typeshed.stubs.redis.redis.connection.AbstractConnection.repr_pieces": [
    "typeshed.typeshed.stubs.redis.redis.connection.Connection",
    "typeshed.typeshed.stubs.redis.redis.connection.UnixDomainSocketConnection"
  ],
  "typeshed.typeshed.stubs.redis.redis.connection.Connection.__init__": [
    "typeshed.typeshed.stubs.redis.redis.connection.SSLConnection"
  ],
  "typeshed.typeshed.stubs.redis.redis.connection.ConnectionPool.__init__": [
    "typeshed.typeshed.stubs.redis.redis.connection.BlockingConnectionPool"
  ],
  "typeshed.typeshed.stubs.redis.redis.connection.ConnectionPool.disconnect": [
    "typeshed.typeshed.stubs.redis.redis.connection.BlockingConnectionPool"
  ],
  "typeshed.typeshed.stubs.redis.redis.credentials.CredentialProvider.get_credentials": [
    "typeshed.typeshed.stubs.redis.redis.credentials.UsernamePasswordCredentialProvider"
  ],
  "typeshed.typeshed.stubs.requests.requests.adapters.BaseAdapter.__init__": [
    "typeshed.typeshed.stubs.requests.requests.adapters.HTTPAdapter"
  ],
  "typeshed.typeshed.stubs.requests.requests.adapters.BaseAdapter.close": [
    "typeshed.typeshed.stubs.requests.requests.adapters.HTTPAdapter"
  ],
  "typeshed.typeshed.stubs.requests.requests.adapters.BaseAdapter.send": [
    "typeshed.typeshed.stubs.requests.requests.adapters.HTTPAdapter"
  ],
  "typeshed.typeshed.stubs.requests.requests.auth.AuthBase.__call__": [
    "typeshed.typeshed.stubs.requests.requests.auth.HTTPBasicAuth",
    "typeshed.typeshed.stubs.requests.requests.auth.HTTPDigestAuth"
  ],
  "typeshed.typeshed.stubs.requests.requests.auth.HTTPBasicAuth.__call__": [
    "typeshed.typeshed.stubs.requests.requests.auth.HTTPProxyAuth"
  ],
  "typeshed.typeshed.stubs.seaborn.seaborn._core.properties.IntervalProperty.default_range": [
    "typeshed.typeshed.stubs.seaborn.seaborn._core.properties.EdgeWidth",
    "typeshed.typeshed.stubs.seaborn.seaborn._core.properties.FontSize",
    "typeshed.typeshed.stubs.seaborn.seaborn._core.properties.LineWidth"
  ],
  "typeshed.typeshed.stubs.seaborn.seaborn._core.properties.Property.default_scale": [
    "typeshed.typeshed.stubs.seaborn.seaborn._core.properties.Fill",
    "typeshed.typeshed.stubs.seaborn.seaborn._core.properties.ObjectProperty"
  ],
  "typeshed.typeshed.stubs.seaborn.seaborn._core.properties.Property.get_mapping": [
    "typeshed.typeshed.stubs.seaborn.seaborn._core.properties.Color",
    "typeshed.typeshed.stubs.seaborn.seaborn._core.properties.Fill",
    "typeshed.typeshed.stubs.seaborn.seaborn._core.properties.IntervalProperty",
    "typeshed.typeshed.stubs.seaborn.seaborn._core.properties.ObjectProperty"
  ],
  "typeshed.typeshed.stubs.seaborn.seaborn._core.properties.Property.infer_scale": [
    "typeshed.typeshed.stubs.seaborn.seaborn._core.properties.Color",
    "typeshed.typeshed.stubs.seaborn.seaborn._core.properties.Fill",
    "typeshed.typeshed.stubs.seaborn.seaborn._core.properties.IntervalProperty",
    "typeshed.typeshed.stubs.seaborn.seaborn._core.properties.ObjectProperty"
  ],
  "typeshed.typeshed.stubs.seaborn.seaborn._core.properties.Property.standardize": [
    "typeshed.typeshed.stubs.seaborn.seaborn._core.properties.Color",
    "typeshed.typeshed.stubs.seaborn.seaborn._core.properties.Fill",
    "typeshed.typeshed.stubs.seaborn.seaborn._core.properties.LineStyle",
    "typeshed.typeshed.stubs.seaborn.seaborn._core.properties.Marker"
  ],
  "typeshed.typeshed.stubs.seaborn.seaborn._core.scales.Scale.label": [
    "typeshed.typeshed.stubs.seaborn.seaborn._core.scales.Boolean",
    "typeshed.typeshed.stubs.seaborn.seaborn._core.scales.Continuous",
    "typeshed.typeshed.stubs.seaborn.seaborn._core.scales.Nominal",
    "typeshed.typeshed.stubs.seaborn.seaborn._core.scales.Temporal"
  ],
  "typeshed.typeshed.stubs.seaborn.seaborn._core.scales.Scale.tick": [
    "typeshed.typeshed.stubs.seaborn.seaborn._core.scales.Boolean",
    "typeshed.typeshed.stubs.seaborn.seaborn._core.scales.Continuous",
    "typeshed.typeshed.stubs.seaborn.seaborn._core.scales.Nominal",
    "typeshed.typeshed.stubs.seaborn.seaborn._core.scales.Temporal"
  ],
  "typeshed.typeshed.stubs.seaborn.seaborn.axisgrid.Grid.__init__": [
    "typeshed.typeshed.stubs.seaborn.seaborn.axisgrid.FacetGrid",
    "typeshed.typeshed.stubs.seaborn.seaborn.axisgrid.PairGrid",
    "typeshed.typeshed.stubs.seaborn.seaborn.matrix.ClusterGrid"
  ],
  "typeshed.typeshed.stubs.seaborn.seaborn.external.docscrape.NumpyDocString.__init__": [
    "typeshed.typeshed.stubs.seaborn.seaborn.external.docscrape.ClassDoc",
    "typeshed.typeshed.stubs.seaborn.seaborn.external.docscrape.FunctionDoc"
  ],
  "typeshed.typeshed.stubs.setuptools.pkg_resources.EmptyProvider.__init__": [
    "typeshed.typeshed.stubs.setuptools.pkg_resources.FileMetadata"
  ],
  "typeshed.typeshed.stubs.setuptools.pkg_resources.NullProvider.__init__": [
    "typeshed.typeshed.stubs.setuptools.pkg_resources.Distribution",
    "typeshed.typeshed.stubs.setuptools.pkg_resources.EmptyProvider"
  ],
  "typeshed.typeshed.stubs.setuptools.pkg_resources.NullProvider.egg_name": [
    "typeshed.typeshed.stubs.setuptools.pkg_resources.Distribution"
  ],
  "typeshed.typeshed.stubs.setuptools.pkg_resources._vendor.packaging.requirements.Requirement.__eq__": [
    "typeshed.typeshed.stubs.setuptools.pkg_resources.Requirement"
  ],
  "typeshed.typeshed.stubs.setuptools.pkg_resources._vendor.packaging.requirements.Requirement.__init__": [
    "typeshed.typeshed.stubs.setuptools.pkg_resources.Requirement"
  ],
  "typeshed.typeshed.stubs.setuptools.pkg_resources._vendor.packaging.specifiers.BaseSpecifier.__eq__": [
    "typeshed.typeshed.stubs.setuptools.pkg_resources._vendor.packaging.specifiers.Specifier",
    "typeshed.typeshed.stubs.setuptools.pkg_resources._vendor.packaging.specifiers.SpecifierSet"
  ],
  "typeshed.typeshed.stubs.setuptools.pkg_resources._vendor.packaging.specifiers.BaseSpecifier.__hash__": [
    "typeshed.typeshed.stubs.setuptools.pkg_resources._vendor.packaging.specifiers.Specifier",
    "typeshed.typeshed.stubs.setuptools.pkg_resources._vendor.packaging.specifiers.SpecifierSet"
  ],
  "typeshed.typeshed.stubs.setuptools.pkg_resources._vendor.packaging.specifiers.BaseSpecifier.__str__": [
    "typeshed.typeshed.stubs.setuptools.pkg_resources._vendor.packaging.specifiers.Specifier",
    "typeshed.typeshed.stubs.setuptools.pkg_resources._vendor.packaging.specifiers.SpecifierSet"
  ],
  "typeshed.typeshed.stubs.setuptools.pkg_resources._vendor.packaging.specifiers.BaseSpecifier.contains": [
    "typeshed.typeshed.stubs.setuptools.pkg_resources._vendor.packaging.specifiers.Specifier",
    "typeshed.typeshed.stubs.setuptools.pkg_resources._vendor.packaging.specifiers.SpecifierSet"
  ],
  "typeshed.typeshed.stubs.setuptools.pkg_resources._vendor.packaging.specifiers.BaseSpecifier.filter": [
    "typeshed.typeshed.stubs.setuptools.pkg_resources._vendor.packaging.specifiers.Specifier",
    "typeshed.typeshed.stubs.setuptools.pkg_resources._vendor.packaging.specifiers.SpecifierSet"
  ],
  "typeshed.typeshed.stubs.setuptools.pkg_resources._vendor.packaging.specifiers.BaseSpecifier.prereleases": [
    "typeshed.typeshed.stubs.setuptools.pkg_resources._vendor.packaging.specifiers.Specifier",
    "typeshed.typeshed.stubs.setuptools.pkg_resources._vendor.packaging.specifiers.SpecifierSet"
  ],
  "typeshed.typeshed.stubs.setuptools.pkg_resources._vendor.packaging.specifiers.BaseSpecifier.prereleases@setter": [
    "typeshed.typeshed.stubs.setuptools.pkg_resources._vendor.packaging.specifiers.Specifier",
    "typeshed.typeshed.stubs.setuptools.pkg_resources._vendor.packaging.specifiers.SpecifierSet"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools.Command.finalize_options": [
    "typeshed.typeshed.stubs.setuptools.setuptools.command.bdist_egg.bdist_egg",
    "typeshed.typeshed.stubs.setuptools.setuptools.command.easy_install.easy_install",
    "typeshed.typeshed.stubs.setuptools.setuptools.command.editable_wheel.editable_wheel",
    "typeshed.typeshed.stubs.setuptools.setuptools.command.egg_info.egg_info",
    "typeshed.typeshed.stubs.setuptools.setuptools.command.install_egg_info.install_egg_info",
    "typeshed.typeshed.stubs.setuptools.setuptools.command.rotate.rotate",
    "typeshed.typeshed.stubs.setuptools.setuptools.command.setopt.option_base",
    "typeshed.typeshed.stubs.setuptools.setuptools.command.test.test"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools.Command.initialize_options": [
    "typeshed.typeshed.stubs.setuptools.setuptools.command.bdist_egg.bdist_egg",
    "typeshed.typeshed.stubs.setuptools.setuptools.command.easy_install.easy_install",
    "typeshed.typeshed.stubs.setuptools.setuptools.command.editable_wheel.editable_wheel",
    "typeshed.typeshed.stubs.setuptools.setuptools.command.egg_info.egg_info",
    "typeshed.typeshed.stubs.setuptools.setuptools.command.install_egg_info.install_egg_info",
    "typeshed.typeshed.stubs.setuptools.setuptools.command.rotate.rotate",
    "typeshed.typeshed.stubs.setuptools.setuptools.command.setopt.option_base",
    "typeshed.typeshed.stubs.setuptools.setuptools.command.test.test"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools.Command.run": [
    "typeshed.typeshed.stubs.setuptools.setuptools.command.bdist_egg.bdist_egg",
    "typeshed.typeshed.stubs.setuptools.setuptools.command.easy_install.easy_install",
    "typeshed.typeshed.stubs.setuptools.setuptools.command.editable_wheel.editable_wheel",
    "typeshed.typeshed.stubs.setuptools.setuptools.command.egg_info.egg_info",
    "typeshed.typeshed.stubs.setuptools.setuptools.command.install_egg_info.install_egg_info",
    "typeshed.typeshed.stubs.setuptools.setuptools.command.rotate.rotate",
    "typeshed.typeshed.stubs.setuptools.setuptools.command.setopt.option_base",
    "typeshed.typeshed.stubs.setuptools.setuptools.command.test.test"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools._distutils.cmd.Command.__init__": [
    "typeshed.typeshed.stubs.setuptools.setuptools.Command"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools._distutils.cmd.Command.copy_tree": [
    "typeshed.typeshed.stubs.setuptools.setuptools.command.install_lib.install_lib"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools._distutils.cmd.Command.ensure_string_list": [
    "typeshed.typeshed.stubs.setuptools.setuptools.Command"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools._distutils.cmd.Command.finalize_options": [
    "typeshed.typeshed.stubs.setuptools.setuptools.Command",
    "typeshed.typeshed.stubs.setuptools.setuptools._distutils.command.bdist_rpm.bdist_rpm",
    "typeshed.typeshed.stubs.setuptools.setuptools._distutils.command.build.build",
    "typeshed.typeshed.stubs.setuptools.setuptools._distutils.command.build_clib.build_clib",
    "typeshed.typeshed.stubs.setuptools.setuptools._distutils.command.build_ext.build_ext",
    "typeshed.typeshed.stubs.setuptools.setuptools._distutils.command.build_py.build_py",
    "typeshed.typeshed.stubs.setuptools.setuptools._distutils.command.install.install",
    "typeshed.typeshed.stubs.setuptools.setuptools._distutils.command.install_lib.install_lib",
    "typeshed.typeshed.stubs.setuptools.setuptools._distutils.command.install_scripts.install_scripts",
    "typeshed.typeshed.stubs.setuptools.setuptools._distutils.command.sdist.sdist",
    "typeshed.typeshed.stubs.setuptools.setuptools._distutils.config.PyPIRCCommand",
    "typeshed.typeshed.stubs.setuptools.setuptools.command.dist_info.dist_info"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools._distutils.cmd.Command.get_sub_commands": [
    "typeshed.typeshed.stubs.setuptools.setuptools.command.build.build"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools._distutils.cmd.Command.initialize_options": [
    "typeshed.typeshed.stubs.setuptools.setuptools.Command",
    "typeshed.typeshed.stubs.setuptools.setuptools._distutils.command.bdist_rpm.bdist_rpm",
    "typeshed.typeshed.stubs.setuptools.setuptools._distutils.command.build.build",
    "typeshed.typeshed.stubs.setuptools.setuptools._distutils.command.build_clib.build_clib",
    "typeshed.typeshed.stubs.setuptools.setuptools._distutils.command.build_ext.build_ext",
    "typeshed.typeshed.stubs.setuptools.setuptools._distutils.command.build_py.build_py",
    "typeshed.typeshed.stubs.setuptools.setuptools._distutils.command.install.install",
    "typeshed.typeshed.stubs.setuptools.setuptools._distutils.command.install_lib.install_lib",
    "typeshed.typeshed.stubs.setuptools.setuptools._distutils.command.install_scripts.install_scripts",
    "typeshed.typeshed.stubs.setuptools.setuptools._distutils.command.sdist.sdist",
    "typeshed.typeshed.stubs.setuptools.setuptools._distutils.config.PyPIRCCommand",
    "typeshed.typeshed.stubs.setuptools.setuptools.command.dist_info.dist_info"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools._distutils.cmd.Command.reinitialize_command": [
    "typeshed.typeshed.stubs.setuptools.setuptools.Command"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools._distutils.cmd.Command.run": [
    "typeshed.typeshed.stubs.setuptools.setuptools.Command",
    "typeshed.typeshed.stubs.setuptools.setuptools._distutils.command.bdist_rpm.bdist_rpm",
    "typeshed.typeshed.stubs.setuptools.setuptools._distutils.command.build.build",
    "typeshed.typeshed.stubs.setuptools.setuptools._distutils.command.build_clib.build_clib",
    "typeshed.typeshed.stubs.setuptools.setuptools._distutils.command.build_ext.build_ext",
    "typeshed.typeshed.stubs.setuptools.setuptools._distutils.command.build_py.build_py",
    "typeshed.typeshed.stubs.setuptools.setuptools._distutils.command.install.install",
    "typeshed.typeshed.stubs.setuptools.setuptools._distutils.command.install_lib.install_lib",
    "typeshed.typeshed.stubs.setuptools.setuptools._distutils.command.install_scripts.install_scripts",
    "typeshed.typeshed.stubs.setuptools.setuptools._distutils.command.sdist.sdist",
    "typeshed.typeshed.stubs.setuptools.setuptools._distutils.config.PyPIRCCommand",
    "typeshed.typeshed.stubs.setuptools.setuptools.command.dist_info.dist_info"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools._distutils.cmd.Command.warn": [
    "typeshed.typeshed.stubs.setuptools.setuptools.command.egg_info.manifest_maker"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools._distutils.command.bdist_rpm.bdist_rpm.run": [
    "typeshed.typeshed.stubs.setuptools.setuptools.command.bdist_rpm.bdist_rpm"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools._distutils.command.build_clib.build_clib.build_libraries": [
    "typeshed.typeshed.stubs.setuptools.setuptools.command.build_clib.build_clib"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools._distutils.command.build_ext.build_ext.build_extension": [
    "typeshed.typeshed.stubs.setuptools.setuptools.command.build_ext.build_ext"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools._distutils.command.build_ext.build_ext.finalize_options": [
    "typeshed.typeshed.stubs.setuptools.setuptools.command.build_ext.build_ext"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools._distutils.command.build_ext.build_ext.get_export_symbols": [
    "typeshed.typeshed.stubs.setuptools.setuptools.command.build_ext.build_ext"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools._distutils.command.build_ext.build_ext.get_ext_filename": [
    "typeshed.typeshed.stubs.setuptools.setuptools.command.build_ext.build_ext"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools._distutils.command.build_ext.build_ext.get_outputs": [
    "typeshed.typeshed.stubs.setuptools.setuptools.command.build_ext.build_ext"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools._distutils.command.build_ext.build_ext.initialize_options": [
    "typeshed.typeshed.stubs.setuptools.setuptools.command.build_ext.build_ext"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools._distutils.command.build_ext.build_ext.run": [
    "typeshed.typeshed.stubs.setuptools.setuptools.command.build_ext.build_ext"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools._distutils.command.build_py.build_py.build_module": [
    "typeshed.typeshed.stubs.setuptools.setuptools.command.build_py.build_py"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools._distutils.command.build_py.build_py.build_package_data": [
    "typeshed.typeshed.stubs.setuptools.setuptools.command.build_py.build_py"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools._distutils.command.build_py.build_py.check_package": [
    "typeshed.typeshed.stubs.setuptools.setuptools.command.build_py.build_py"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools._distutils.command.build_py.build_py.finalize_options": [
    "typeshed.typeshed.stubs.setuptools.setuptools.command.build_py.build_py"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools._distutils.command.build_py.build_py.find_data_files": [
    "typeshed.typeshed.stubs.setuptools.setuptools.command.build_py.build_py"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools._distutils.command.build_py.build_py.get_data_files": [
    "typeshed.typeshed.stubs.setuptools.setuptools.command.build_py.build_py"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools._distutils.command.build_py.build_py.get_package_dir": [
    "typeshed.typeshed.stubs.setuptools.setuptools.command.build_py.build_py"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools._distutils.command.build_py.build_py.initialize_options": [
    "typeshed.typeshed.stubs.setuptools.setuptools.command.build_py.build_py"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools._distutils.command.build_py.build_py.run": [
    "typeshed.typeshed.stubs.setuptools.setuptools.command.build_py.build_py"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools._distutils.command.install.install.finalize_options": [
    "typeshed.typeshed.stubs.setuptools.setuptools.command.install.install"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools._distutils.command.install.install.handle_extra_path": [
    "typeshed.typeshed.stubs.setuptools.setuptools.command.install.install"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools._distutils.command.install.install.initialize_options": [
    "typeshed.typeshed.stubs.setuptools.setuptools.command.install.install"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools._distutils.command.install.install.run": [
    "typeshed.typeshed.stubs.setuptools.setuptools.command.install.install"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools._distutils.command.install_lib.install_lib.get_outputs": [
    "typeshed.typeshed.stubs.setuptools.setuptools.command.install_lib.install_lib"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools._distutils.command.install_lib.install_lib.run": [
    "typeshed.typeshed.stubs.setuptools.setuptools.command.install_lib.install_lib"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools._distutils.command.install_scripts.install_scripts.initialize_options": [
    "typeshed.typeshed.stubs.setuptools.setuptools.command.install_scripts.install_scripts"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools._distutils.command.install_scripts.install_scripts.run": [
    "typeshed.typeshed.stubs.setuptools.setuptools.command.install_scripts.install_scripts"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools._distutils.command.register.register.run": [
    "typeshed.typeshed.stubs.setuptools.setuptools.command.register.register"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools._distutils.command.sdist.sdist.add_defaults": [
    "typeshed.typeshed.stubs.setuptools.setuptools.command.egg_info.manifest_maker"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools._distutils.command.sdist.sdist.finalize_options": [
    "typeshed.typeshed.stubs.setuptools.setuptools.command.egg_info.manifest_maker"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools._distutils.command.sdist.sdist.initialize_options": [
    "typeshed.typeshed.stubs.setuptools.setuptools.command.sdist.sdist"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools._distutils.command.sdist.sdist.make_distribution": [
    "typeshed.typeshed.stubs.setuptools.setuptools.command.sdist.sdist"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools._distutils.command.sdist.sdist.make_release_tree": [
    "typeshed.typeshed.stubs.setuptools.setuptools.command.sdist.sdist"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools._distutils.command.sdist.sdist.prune_file_list": [
    "typeshed.typeshed.stubs.setuptools.setuptools.command.egg_info.manifest_maker"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools._distutils.command.sdist.sdist.read_manifest": [
    "typeshed.typeshed.stubs.setuptools.setuptools.command.sdist.sdist"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools._distutils.command.sdist.sdist.run": [
    "typeshed.typeshed.stubs.setuptools.setuptools.command.sdist.sdist"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools._distutils.command.sdist.sdist.write_manifest": [
    "typeshed.typeshed.stubs.setuptools.setuptools.command.egg_info.manifest_maker"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools._distutils.command.upload.upload.finalize_options": [
    "typeshed.typeshed.stubs.setuptools.setuptools.command.upload_docs.upload_docs"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools._distutils.command.upload.upload.initialize_options": [
    "typeshed.typeshed.stubs.setuptools.setuptools.command.upload_docs.upload_docs"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools._distutils.command.upload.upload.run": [
    "typeshed.typeshed.stubs.setuptools.setuptools.command.upload.upload"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools._distutils.command.upload.upload.upload_file": [
    "typeshed.typeshed.stubs.setuptools.setuptools.command.upload_docs.upload_docs"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools._distutils.config.PyPIRCCommand.finalize_options": [
    "typeshed.typeshed.stubs.setuptools.setuptools._distutils.command.register.register",
    "typeshed.typeshed.stubs.setuptools.setuptools._distutils.command.upload.upload"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools._distutils.config.PyPIRCCommand.initialize_options": [
    "typeshed.typeshed.stubs.setuptools.setuptools._distutils.command.register.register",
    "typeshed.typeshed.stubs.setuptools.setuptools._distutils.command.upload.upload"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools._distutils.config.PyPIRCCommand.run": [
    "typeshed.typeshed.stubs.setuptools.setuptools._distutils.command.register.register",
    "typeshed.typeshed.stubs.setuptools.setuptools._distutils.command.upload.upload"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools._distutils.dist.Distribution.__init__": [
    "typeshed.typeshed.stubs.setuptools.setuptools.dist.Distribution"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools._distutils.dist.Distribution.get_command_class": [
    "typeshed.typeshed.stubs.setuptools.setuptools.dist.Distribution"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools._distutils.dist.Distribution.handle_display_options": [
    "typeshed.typeshed.stubs.setuptools.setuptools.dist.Distribution"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools._distutils.dist.Distribution.parse_config_files": [
    "typeshed.typeshed.stubs.setuptools.setuptools.dist.Distribution"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools._distutils.extension.Extension.__init__": [
    "typeshed.typeshed.stubs.setuptools.setuptools.extension.Extension"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools._distutils.filelist.FileList.__init__": [
    "typeshed.typeshed.stubs.setuptools.setuptools.command.egg_info.FileList"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools._distutils.filelist.FileList.append": [
    "typeshed.typeshed.stubs.setuptools.setuptools.command.egg_info.FileList"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools._distutils.filelist.FileList.extend": [
    "typeshed.typeshed.stubs.setuptools.setuptools.command.egg_info.FileList"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools._distutils.filelist.FileList.process_template_line": [
    "typeshed.typeshed.stubs.setuptools.setuptools.command.egg_info.FileList"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools.build_meta._BuildMetaBackend.run_setup": [
    "typeshed.typeshed.stubs.setuptools.setuptools.build_meta._BuildMetaLegacyBackend"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools.command.easy_install.ScriptWriter.best": [
    "typeshed.typeshed.stubs.setuptools.setuptools.command.easy_install.WindowsScriptWriter"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools.command.easy_install.easy_install.finalize_options": [
    "typeshed.typeshed.stubs.setuptools.setuptools.command.develop.develop"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools.command.easy_install.easy_install.initialize_options": [
    "typeshed.typeshed.stubs.setuptools.setuptools.command.develop.develop"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools.command.easy_install.easy_install.install_egg_scripts": [
    "typeshed.typeshed.stubs.setuptools.setuptools.command.develop.develop"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools.command.easy_install.easy_install.install_wrapper_scripts": [
    "typeshed.typeshed.stubs.setuptools.setuptools.command.develop.develop"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools.command.easy_install.easy_install.run": [
    "typeshed.typeshed.stubs.setuptools.setuptools.command.develop.develop"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools.command.editable_wheel._StaticPth.__call__": [
    "typeshed.typeshed.stubs.setuptools.setuptools.command.editable_wheel._LinkTree"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools.command.editable_wheel._StaticPth.__enter__": [
    "typeshed.typeshed.stubs.setuptools.setuptools.command.editable_wheel._LinkTree"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools.command.editable_wheel._StaticPth.__exit__": [
    "typeshed.typeshed.stubs.setuptools.setuptools.command.editable_wheel._LinkTree"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools.command.editable_wheel._StaticPth.__init__": [
    "typeshed.typeshed.stubs.setuptools.setuptools.command.editable_wheel._LinkTree"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools.command.sdist.sdist.initialize_options": [
    "typeshed.typeshed.stubs.setuptools.setuptools.command.egg_info.manifest_maker"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools.command.sdist.sdist.run": [
    "typeshed.typeshed.stubs.setuptools.setuptools.command.egg_info.manifest_maker"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools.command.setopt.option_base.finalize_options": [
    "typeshed.typeshed.stubs.setuptools.setuptools.command.alias.alias",
    "typeshed.typeshed.stubs.setuptools.setuptools.command.setopt.setopt"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools.command.setopt.option_base.initialize_options": [
    "typeshed.typeshed.stubs.setuptools.setuptools.command.alias.alias",
    "typeshed.typeshed.stubs.setuptools.setuptools.command.setopt.setopt"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools.command.setopt.option_base.run": [
    "typeshed.typeshed.stubs.setuptools.setuptools.command.alias.alias",
    "typeshed.typeshed.stubs.setuptools.setuptools.command.saveopts.saveopts",
    "typeshed.typeshed.stubs.setuptools.setuptools.command.setopt.setopt"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools.command.upload.upload.run": [
    "typeshed.typeshed.stubs.setuptools.setuptools.command.upload_docs.upload_docs"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools.config.expand.EnsurePackagesDiscovered.__enter__": [
    "typeshed.typeshed.stubs.setuptools.setuptools.config.pyprojecttoml._EnsurePackagesDiscovered"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools.config.expand.EnsurePackagesDiscovered.__exit__": [
    "typeshed.typeshed.stubs.setuptools.setuptools.config.pyprojecttoml._EnsurePackagesDiscovered"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools.config.expand.EnsurePackagesDiscovered.__init__": [
    "typeshed.typeshed.stubs.setuptools.setuptools.config.pyprojecttoml._EnsurePackagesDiscovered"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools.config.setupcfg.ConfigHandler.__init__": [
    "typeshed.typeshed.stubs.setuptools.setuptools.config.setupcfg.ConfigMetadataHandler",
    "typeshed.typeshed.stubs.setuptools.setuptools.config.setupcfg.ConfigOptionsHandler"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools.config.setupcfg.ConfigHandler.parsers": [
    "typeshed.typeshed.stubs.setuptools.setuptools.config.setupcfg.ConfigMetadataHandler",
    "typeshed.typeshed.stubs.setuptools.setuptools.config.setupcfg.ConfigOptionsHandler"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools.dist.Distribution.fetch_build_eggs": [
    "typeshed.typeshed.stubs.setuptools.setuptools.build_meta.Distribution"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools.package_index.ContentChecker.feed": [
    "typeshed.typeshed.stubs.setuptools.setuptools.package_index.HashChecker"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools.package_index.ContentChecker.is_valid": [
    "typeshed.typeshed.stubs.setuptools.setuptools.package_index.HashChecker"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools.package_index.ContentChecker.report": [
    "typeshed.typeshed.stubs.setuptools.setuptools.package_index.HashChecker"
  ],
  "typeshed.typeshed.stubs.setuptools.setuptools.sandbox.AbstractSandbox.open": [
    "typeshed.typeshed.stubs.setuptools.setuptools.sandbox.DirectorySandbox"
  ],
  "typeshed.typeshed.stubs.six.six._LazyDescr.__init__": [
    "typeshed.typeshed.stubs.six.six.MovedAttribute",
    "typeshed.typeshed.stubs.six.six.MovedModule"
  ],
  "typeshed.typeshed.stubs.stripe.stripe.error.StripeError.__init__": [
    "typeshed.typeshed.stubs.stripe.stripe.error.APIConnectionError",
    "typeshed.typeshed.stubs.stripe.stripe.error.SignatureVerificationError"
  ],
  "typeshed.typeshed.stubs.stripe.stripe.http_client.HTTPClient.__init__": [
    "typeshed.typeshed.stubs.stripe.stripe.http_client.PycurlClient",
    "typeshed.typeshed.stubs.stripe.stripe.http_client.RequestsClient",
    "typeshed.typeshed.stubs.stripe.stripe.http_client.UrlFetchClient",
    "typeshed.typeshed.stubs.stripe.stripe.http_client.Urllib2Client"
  ],
  "typeshed.typeshed.stubs.stripe.stripe.http_client.HTTPClient.close": [
    "typeshed.typeshed.stubs.stripe.stripe.http_client.PycurlClient",
    "typeshed.typeshed.stubs.stripe.stripe.http_client.RequestsClient",
    "typeshed.typeshed.stubs.stripe.stripe.http_client.UrlFetchClient",
    "typeshed.typeshed.stubs.stripe.stripe.http_client.Urllib2Client"
  ],
  "typeshed.typeshed.stubs.stripe.stripe.http_client.HTTPClient.request": [
    "typeshed.typeshed.stubs.stripe.stripe.http_client.PycurlClient",
    "typeshed.typeshed.stubs.stripe.stripe.http_client.RequestsClient",
    "typeshed.typeshed.stubs.stripe.stripe.http_client.UrlFetchClient",
    "typeshed.typeshed.stubs.stripe.stripe.http_client.Urllib2Client"
  ],
  "typeshed.typeshed.stubs.stripe.stripe.http_client.HTTPClient.request_stream": [
    "typeshed.typeshed.stubs.stripe.stripe.http_client.PycurlClient",
    "typeshed.typeshed.stubs.stripe.stripe.http_client.RequestsClient",
    "typeshed.typeshed.stubs.stripe.stripe.http_client.UrlFetchClient",
    "typeshed.typeshed.stubs.stripe.stripe.http_client.Urllib2Client"
  ],
  "typeshed.typeshed.stubs.stripe.stripe.stripe_response.StripeResponseBase.__init__": [
    "typeshed.typeshed.stubs.stripe.stripe.stripe_response.StripeResponse",
    "typeshed.typeshed.stubs.stripe.stripe.stripe_response.StripeStreamResponse"
  ],
  "typeshed.typeshed.stubs.tensorflow.tensorflow.Tensor.__getattr__": [
    "typeshed.typeshed.stubs.tensorflow.tensorflow.Variable"
  ],
  "typeshed.typeshed.stubs.tensorflow.tensorflow.Tensor.__init__": [
    "typeshed.typeshed.stubs.tensorflow.tensorflow.Variable"
  ],
  "typeshed.typeshed.stubs.tensorflow.tensorflow.TypeSpec.is_compatible_with": [
    "typeshed.typeshed.stubs.tensorflow.tensorflow.TensorSpec"
  ],
  "typeshed.typeshed.stubs.tensorflow.tensorflow.TypeSpec.value_type": [
    "typeshed.typeshed.stubs.tensorflow.tensorflow.RaggedTensorSpec",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.SparseTensorSpec",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.TensorSpec"
  ],
  "typeshed.typeshed.stubs.tensorflow.tensorflow.data.Dataset.element_spec": [
    "typeshed.typeshed.stubs.tensorflow.tensorflow.data.TFRecordDataset"
  ],
  "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.layers.Layer.__init__": [
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.layers.BatchNormalization",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.layers.Dense",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.layers.Dropout",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.layers.Embedding",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.layers.ReLU"
  ],
  "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.losses.Loss.__init__": [
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.losses.BinaryCrossentropy",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.losses.BinaryFocalCrossentropy",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.losses.CategoricalCrossentropy",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.losses.CategoricalHinge",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.losses.CosineSimilarity",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.losses.Hinge",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.losses.Huber",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.losses.KLDivergence",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.losses.LogCosh",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.losses.MeanAbsoluteError",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.losses.MeanAbsolutePercentageError",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.losses.MeanSquaredError",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.losses.MeanSquaredLogarithmicError",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.losses.Poisson",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.losses.SparseCategoricalCrossentropy",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.losses.SquaredHinge"
  ],
  "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.losses.Loss.call": [
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.losses.BinaryCrossentropy",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.losses.BinaryFocalCrossentropy",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.losses.CategoricalCrossentropy",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.losses.CategoricalHinge",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.losses.CosineSimilarity",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.losses.Hinge",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.losses.Huber",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.losses.KLDivergence",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.losses.LogCosh",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.losses.MeanAbsoluteError",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.losses.MeanAbsolutePercentageError",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.losses.MeanSquaredError",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.losses.MeanSquaredLogarithmicError",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.losses.Poisson",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.losses.SparseCategoricalCrossentropy",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.losses.SquaredHinge"
  ],
  "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.optimizers.legacy.Optimizer.__init__": [
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.optimizers.legacy.Adagrad",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.optimizers.legacy.Adam",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.optimizers.legacy.SGD"
  ],
  "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.optimizers.legacy.Optimizer.get_config": [
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.optimizers.legacy.Adagrad",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.optimizers.legacy.Adam",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.optimizers.legacy.SGD"
  ],
  "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.optimizers.schedules.LearningRateSchedule.__call__": [
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.optimizers.schedules.CosineDecay",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.optimizers.schedules.CosineDecayRestarts",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.optimizers.schedules.ExponentialDecay",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.optimizers.schedules.InverseTimeDecay",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.optimizers.schedules.PiecewiseConstantDecay",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.optimizers.schedules.PolynomialDecay"
  ],
  "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.optimizers.schedules.LearningRateSchedule.from_config": [
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.optimizers.schedules.CosineDecay",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.optimizers.schedules.CosineDecayRestarts",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.optimizers.schedules.ExponentialDecay",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.optimizers.schedules.InverseTimeDecay",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.optimizers.schedules.PiecewiseConstantDecay",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.optimizers.schedules.PolynomialDecay"
  ],
  "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.optimizers.schedules.LearningRateSchedule.get_config": [
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.optimizers.schedules.CosineDecay",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.optimizers.schedules.CosineDecayRestarts",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.optimizers.schedules.ExponentialDecay",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.optimizers.schedules.InverseTimeDecay",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.optimizers.schedules.PiecewiseConstantDecay",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.keras.optimizers.schedules.PolynomialDecay"
  ],
  "typeshed.typeshed.stubs.tensorflow.tensorflow.python.feature_column.feature_column_v2.CategoricalColumn.num_buckets": [
    "typeshed.typeshed.stubs.tensorflow.tensorflow.python.feature_column.feature_column_v2.BucketizedColumn",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.python.feature_column.feature_column_v2.CrossedColumn",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.python.feature_column.feature_column_v2.HashedCategoricalColumn",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.python.feature_column.feature_column_v2.IdentityCategoricalColumn",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.python.feature_column.feature_column_v2.SequenceCategoricalColumn",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.python.feature_column.feature_column_v2.VocabularyFileCategoricalColumn",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.python.feature_column.feature_column_v2.VocabularyListCategoricalColumn",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.python.feature_column.feature_column_v2.WeightedCategoricalColumn"
  ],
  "typeshed.typeshed.stubs.tensorflow.tensorflow.python.feature_column.feature_column_v2.FeatureColumn.name": [
    "typeshed.typeshed.stubs.tensorflow.tensorflow.python.feature_column.feature_column_v2.BucketizedColumn",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.python.feature_column.feature_column_v2.CrossedColumn",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.python.feature_column.feature_column_v2.EmbeddingColumn",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.python.feature_column.feature_column_v2.HashedCategoricalColumn",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.python.feature_column.feature_column_v2.IdentityCategoricalColumn",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.python.feature_column.feature_column_v2.IndicatorColumn",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.python.feature_column.feature_column_v2.NumericColumn",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.python.feature_column.feature_column_v2.SequenceCategoricalColumn",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.python.feature_column.feature_column_v2.SharedEmbeddingColumn",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.python.feature_column.feature_column_v2.VocabularyFileCategoricalColumn",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.python.feature_column.feature_column_v2.VocabularyListCategoricalColumn",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.python.feature_column.feature_column_v2.WeightedCategoricalColumn"
  ],
  "typeshed.typeshed.stubs.tensorflow.tensorflow.python.feature_column.feature_column_v2.FeatureColumn.parents": [
    "typeshed.typeshed.stubs.tensorflow.tensorflow.python.feature_column.feature_column_v2.BucketizedColumn",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.python.feature_column.feature_column_v2.CrossedColumn",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.python.feature_column.feature_column_v2.EmbeddingColumn",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.python.feature_column.feature_column_v2.HashedCategoricalColumn",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.python.feature_column.feature_column_v2.IdentityCategoricalColumn",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.python.feature_column.feature_column_v2.IndicatorColumn",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.python.feature_column.feature_column_v2.NumericColumn",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.python.feature_column.feature_column_v2.SequenceCategoricalColumn",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.python.feature_column.feature_column_v2.SharedEmbeddingColumn",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.python.feature_column.feature_column_v2.VocabularyFileCategoricalColumn",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.python.feature_column.feature_column_v2.VocabularyListCategoricalColumn",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.python.feature_column.feature_column_v2.WeightedCategoricalColumn"
  ],
  "typeshed.typeshed.stubs.tensorflow.tensorflow.python.feature_column.feature_column_v2.FeatureColumn.parse_example_spec": [
    "typeshed.typeshed.stubs.tensorflow.tensorflow.python.feature_column.feature_column_v2.BucketizedColumn",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.python.feature_column.feature_column_v2.CrossedColumn",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.python.feature_column.feature_column_v2.EmbeddingColumn",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.python.feature_column.feature_column_v2.HashedCategoricalColumn",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.python.feature_column.feature_column_v2.IdentityCategoricalColumn",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.python.feature_column.feature_column_v2.IndicatorColumn",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.python.feature_column.feature_column_v2.NumericColumn",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.python.feature_column.feature_column_v2.SequenceCategoricalColumn",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.python.feature_column.feature_column_v2.SharedEmbeddingColumn",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.python.feature_column.feature_column_v2.VocabularyFileCategoricalColumn",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.python.feature_column.feature_column_v2.VocabularyListCategoricalColumn",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.python.feature_column.feature_column_v2.WeightedCategoricalColumn"
  ],
  "typeshed.typeshed.stubs.toml.toml.decoder.TomlDecoder.__init__": [
    "typeshed.typeshed.stubs.toml.toml.ordered.TomlOrderedDecoder"
  ],
  "typeshed.typeshed.stubs.toml.toml.encoder.TomlEncoder.__init__": [
    "typeshed.typeshed.stubs.toml.toml.encoder.TomlArraySeparatorEncoder",
    "typeshed.typeshed.stubs.toml.toml.encoder.TomlPreserveInlineDictEncoder",
    "typeshed.typeshed.stubs.toml.toml.ordered.TomlOrderedEncoder"
  ],
  "typeshed.typeshed.stubs.toml.toml.encoder.TomlEncoder.dump_list": [
    "typeshed.typeshed.stubs.toml.toml.encoder.TomlArraySeparatorEncoder"
  ],
  "typeshed.typeshed.stubs.tqdm.tqdm.asyncio.tqdm_asyncio.__init__": [
    "typeshed.typeshed.stubs.tqdm.tqdm.contrib.discord.tqdm_discord",
    "typeshed.typeshed.stubs.tqdm.tqdm.contrib.slack.tqdm_slack",
    "typeshed.typeshed.stubs.tqdm.tqdm.contrib.telegram.tqdm_telegram"
  ],
  "typeshed.typeshed.stubs.tqdm.tqdm.dask._Callback.__init__": [
    "typeshed.typeshed.stubs.tqdm.tqdm.dask.TqdmCallback"
  ],
  "typeshed.typeshed.stubs.tqdm.tqdm.keras._Callback.__init__": [
    "typeshed.typeshed.stubs.tqdm.tqdm.keras.TqdmCallback"
  ],
  "typeshed.typeshed.stubs.tqdm.tqdm.keras._Callback.on_epoch_begin": [
    "typeshed.typeshed.stubs.tqdm.tqdm.keras.TqdmCallback"
  ],
  "typeshed.typeshed.stubs.tqdm.tqdm.keras._Callback.on_train_begin": [
    "typeshed.typeshed.stubs.tqdm.tqdm.keras.TqdmCallback"
  ],
  "typeshed.typeshed.stubs.tqdm.tqdm.keras._Callback.on_train_end": [
    "typeshed.typeshed.stubs.tqdm.tqdm.keras.TqdmCallback"
  ],
  "typeshed.typeshed.stubs.tqdm.tqdm.rich._ProgressColumn.__init__": [
    "typeshed.typeshed.stubs.tqdm.tqdm.rich.FractionColumn",
    "typeshed.typeshed.stubs.tqdm.tqdm.rich.RateColumn"
  ],
  "typeshed.typeshed.stubs.tqdm.tqdm.rich._ProgressColumn.render": [
    "typeshed.typeshed.stubs.tqdm.tqdm.rich.FractionColumn",
    "typeshed.typeshed.stubs.tqdm.tqdm.rich.RateColumn"
  ],
  "typeshed.typeshed.stubs.tqdm.tqdm.std.tqdm.__init__": [
    "typeshed.typeshed.stubs.tqdm.tqdm.asyncio.tqdm_asyncio",
    "typeshed.typeshed.stubs.tqdm.tqdm.gui.tqdm_gui",
    "typeshed.typeshed.stubs.tqdm.tqdm.notebook.tqdm_notebook",
    "typeshed.typeshed.stubs.tqdm.tqdm.rich.tqdm_rich",
    "typeshed.typeshed.stubs.tqdm.tqdm.tk.tqdm_tk"
  ],
  "typeshed.typeshed.stubs.tqdm.tqdm.std.tqdm.__iter__": [
    "typeshed.typeshed.stubs.tqdm.tqdm.notebook.tqdm_notebook"
  ],
  "typeshed.typeshed.stubs.tqdm.tqdm.std.tqdm.clear": [
    "typeshed.typeshed.stubs.tqdm.tqdm.contrib.discord.tqdm_discord",
    "typeshed.typeshed.stubs.tqdm.tqdm.contrib.slack.tqdm_slack",
    "typeshed.typeshed.stubs.tqdm.tqdm.contrib.telegram.tqdm_telegram",
    "typeshed.typeshed.stubs.tqdm.tqdm.gui.tqdm_gui",
    "typeshed.typeshed.stubs.tqdm.tqdm.notebook.tqdm_notebook",
    "typeshed.typeshed.stubs.tqdm.tqdm.rich.tqdm_rich",
    "typeshed.typeshed.stubs.tqdm.tqdm.tk.tqdm_tk"
  ],
  "typeshed.typeshed.stubs.tqdm.tqdm.std.tqdm.close": [
    "typeshed.typeshed.stubs.tqdm.tqdm.contrib.telegram.tqdm_telegram",
    "typeshed.typeshed.stubs.tqdm.tqdm.gui.tqdm_gui",
    "typeshed.typeshed.stubs.tqdm.tqdm.notebook.tqdm_notebook",
    "typeshed.typeshed.stubs.tqdm.tqdm.rich.tqdm_rich",
    "typeshed.typeshed.stubs.tqdm.tqdm.tk.tqdm_tk"
  ],
  "typeshed.typeshed.stubs.tqdm.tqdm.std.tqdm.colour": [
    "typeshed.typeshed.stubs.tqdm.tqdm.notebook.tqdm_notebook"
  ],
  "typeshed.typeshed.stubs.tqdm.tqdm.std.tqdm.colour@setter": [
    "typeshed.typeshed.stubs.tqdm.tqdm.notebook.tqdm_notebook"
  ],
  "typeshed.typeshed.stubs.tqdm.tqdm.std.tqdm.display": [
    "typeshed.typeshed.stubs.tqdm.tqdm.contrib.discord.tqdm_discord",
    "typeshed.typeshed.stubs.tqdm.tqdm.contrib.slack.tqdm_slack",
    "typeshed.typeshed.stubs.tqdm.tqdm.contrib.telegram.tqdm_telegram",
    "typeshed.typeshed.stubs.tqdm.tqdm.gui.tqdm_gui",
    "typeshed.typeshed.stubs.tqdm.tqdm.notebook.tqdm_notebook",
    "typeshed.typeshed.stubs.tqdm.tqdm.rich.tqdm_rich",
    "typeshed.typeshed.stubs.tqdm.tqdm.tk.tqdm_tk"
  ],
  "typeshed.typeshed.stubs.tqdm.tqdm.std.tqdm.reset": [
    "typeshed.typeshed.stubs.tqdm.tqdm.notebook.tqdm_notebook",
    "typeshed.typeshed.stubs.tqdm.tqdm.rich.tqdm_rich",
    "typeshed.typeshed.stubs.tqdm.tqdm.tk.tqdm_tk"
  ],
  "typeshed.typeshed.stubs.tqdm.tqdm.std.tqdm.set_description": [
    "typeshed.typeshed.stubs.tqdm.tqdm.tk.tqdm_tk"
  ],
  "typeshed.typeshed.stubs.tqdm.tqdm.std.tqdm.set_description_str": [
    "typeshed.typeshed.stubs.tqdm.tqdm.tk.tqdm_tk"
  ],
  "typeshed.typeshed.stubs.tqdm.tqdm.std.tqdm.status_printer": [
    "typeshed.typeshed.stubs.tqdm.tqdm.notebook.tqdm_notebook"
  ],
  "typeshed.typeshed.stubs.tqdm.tqdm.std.tqdm.update": [
    "typeshed.typeshed.stubs.tqdm.tqdm.notebook.tqdm_notebook"
  ],
  "typeshed.typeshed.stubs.tqdm.tqdm.utils.ObjectWrapper.__init__": [
    "typeshed.typeshed.stubs.tqdm.tqdm.contrib.DummyTqdmFile",
    "typeshed.typeshed.stubs.tqdm.tqdm.utils.CallbackIOWrapper",
    "typeshed.typeshed.stubs.tqdm.tqdm.utils.DisableOnWriteError",
    "typeshed.typeshed.stubs.tqdm.tqdm.utils.SimpleTextIOWrapper"
  ],
  "typeshed.typeshed.stubs.ttkthemes.ttkthemes._widget.ThemedWidget.set_theme": [
    "typeshed.typeshed.stubs.ttkthemes.ttkthemes.themed_tk.ThemedTk"
  ],
  "typeshed.typeshed.stubs.vobject.vobject.base.Component.__init__": [
    "typeshed.typeshed.stubs.vobject.vobject.icalendar.RecurringComponent",
    "typeshed.typeshed.stubs.vobject.vobject.icalendar.TimezoneComponent"
  ],
  "typeshed.typeshed.stubs.vobject.vobject.base.Component.__setattr__": [
    "typeshed.typeshed.stubs.vobject.vobject.icalendar.RecurringComponent"
  ],
  "typeshed.typeshed.stubs.vobject.vobject.base.Component.prettyPrint": [
    "typeshed.typeshed.stubs.vobject.vobject.icalendar.TimezoneComponent"
  ],
  "typeshed.typeshed.stubs.vobject.vobject.base.VBase.__init__": [
    "typeshed.typeshed.stubs.vobject.vobject.base.Component",
    "typeshed.typeshed.stubs.vobject.vobject.base.ContentLine"
  ],
  "typeshed.typeshed.stubs.vobject.vobject.base.VBase.copy": [
    "typeshed.typeshed.stubs.vobject.vobject.base.Component",
    "typeshed.typeshed.stubs.vobject.vobject.base.ContentLine"
  ],
  "typeshed.typeshed.stubs.vobject.vobject.base.VBase.getChildren": [
    "typeshed.typeshed.stubs.vobject.vobject.base.Component"
  ],
  "typeshed.typeshed.stubs.vobject.vobject.base.VBase.transformChildrenFromNative": [
    "typeshed.typeshed.stubs.vobject.vobject.base.Component"
  ],
  "typeshed.typeshed.stubs.vobject.vobject.base.VBase.transformChildrenToNative": [
    "typeshed.typeshed.stubs.vobject.vobject.base.Component"
  ],
  "typeshed.typeshed.stubs.vobject.vobject.behavior.Behavior.decode": [
    "typeshed.typeshed.stubs.vobject.vobject.icalendar.MultiTextBehavior",
    "typeshed.typeshed.stubs.vobject.vobject.icalendar.TextBehavior",
    "typeshed.typeshed.stubs.vobject.vobject.vcard.VCardTextBehavior"
  ],
  "typeshed.typeshed.stubs.vobject.vobject.behavior.Behavior.encode": [
    "typeshed.typeshed.stubs.vobject.vobject.icalendar.MultiTextBehavior",
    "typeshed.typeshed.stubs.vobject.vobject.icalendar.TextBehavior",
    "typeshed.typeshed.stubs.vobject.vobject.vcard.VCardTextBehavior"
  ],
  "typeshed.typeshed.stubs.vobject.vobject.behavior.Behavior.generateImplicitParameters": [
    "typeshed.typeshed.stubs.vobject.vobject.icalendar.RecurringBehavior",
    "typeshed.typeshed.stubs.vobject.vobject.icalendar.VAlarm",
    "typeshed.typeshed.stubs.vobject.vobject.icalendar.VCalendar2_0",
    "typeshed.typeshed.stubs.vobject.vobject.vcard.VCard3_0"
  ],
  "typeshed.typeshed.stubs.vobject.vobject.behavior.Behavior.serialize": [
    "typeshed.typeshed.stubs.vobject.vobject.icalendar.VCalendar2_0",
    "typeshed.typeshed.stubs.vobject.vobject.vcard.Photo"
  ],
  "typeshed.typeshed.stubs.vobject.vobject.behavior.Behavior.transformFromNative": [
    "typeshed.typeshed.stubs.vobject.vobject.icalendar.DateOrDateTimeBehavior",
    "typeshed.typeshed.stubs.vobject.vobject.icalendar.DateTimeBehavior",
    "typeshed.typeshed.stubs.vobject.vobject.icalendar.Duration",
    "typeshed.typeshed.stubs.vobject.vobject.icalendar.MultiDateBehavior",
    "typeshed.typeshed.stubs.vobject.vobject.icalendar.PeriodBehavior",
    "typeshed.typeshed.stubs.vobject.vobject.icalendar.RecurringBehavior",
    "typeshed.typeshed.stubs.vobject.vobject.icalendar.Trigger",
    "typeshed.typeshed.stubs.vobject.vobject.icalendar.VTimezone",
    "typeshed.typeshed.stubs.vobject.vobject.vcard.AddressBehavior",
    "typeshed.typeshed.stubs.vobject.vobject.vcard.NameBehavior",
    "typeshed.typeshed.stubs.vobject.vobject.vcard.OrgBehavior"
  ],
  "typeshed.typeshed.stubs.vobject.vobject.behavior.Behavior.transformToNative": [
    "typeshed.typeshed.stubs.vobject.vobject.icalendar.DateOrDateTimeBehavior",
    "typeshed.typeshed.stubs.vobject.vobject.icalendar.DateTimeBehavior",
    "typeshed.typeshed.stubs.vobject.vobject.icalendar.Duration",
    "typeshed.typeshed.stubs.vobject.vobject.icalendar.MultiDateBehavior",
    "typeshed.typeshed.stubs.vobject.vobject.icalendar.PeriodBehavior",
    "typeshed.typeshed.stubs.vobject.vobject.icalendar.RecurringBehavior",
    "typeshed.typeshed.stubs.vobject.vobject.icalendar.Trigger",
    "typeshed.typeshed.stubs.vobject.vobject.icalendar.VTimezone",
    "typeshed.typeshed.stubs.vobject.vobject.vcard.AddressBehavior",
    "typeshed.typeshed.stubs.vobject.vobject.vcard.NameBehavior",
    "typeshed.typeshed.stubs.vobject.vobject.vcard.OrgBehavior"
  ],
  "typeshed.typeshed.stubs.vobject.vobject.behavior.Behavior.validate": [
    "typeshed.typeshed.stubs.vobject.vobject.icalendar.Available",
    "typeshed.typeshed.stubs.vobject.vobject.icalendar.VAlarm",
    "typeshed.typeshed.stubs.vobject.vobject.icalendar.VAvailability",
    "typeshed.typeshed.stubs.vobject.vobject.icalendar.VEvent",
    "typeshed.typeshed.stubs.vobject.vobject.icalendar.VTimezone",
    "typeshed.typeshed.stubs.vobject.vobject.icalendar.VTodo"
  ],
  "typeshed.typeshed.stubs.vobject.vobject.behavior.Behavior.valueRepr": [
    "typeshed.typeshed.stubs.vobject.vobject.vcard.Photo"
  ],
  "typeshed.typeshed.stubs.vobject.vobject.icalendar.VCalendar2_0.serialize": [
    "typeshed.typeshed.stubs.vobject.vobject.hcalendar.HCalendar"
  ],
  "typeshed.typeshed.stubs.waitress.waitress.buffers.FileBasedBuffer.__init__": [
    "typeshed.typeshed.stubs.waitress.waitress.buffers.BytesIOBasedBuffer",
    "typeshed.typeshed.stubs.waitress.waitress.buffers.ReadOnlyFileBasedBuffer",
    "typeshed.typeshed.stubs.waitress.waitress.buffers.TempfileBasedBuffer"
  ],
  "typeshed.typeshed.stubs.waitress.waitress.buffers.FileBasedBuffer.append": [
    "typeshed.typeshed.stubs.waitress.waitress.buffers.ReadOnlyFileBasedBuffer"
  ],
  "typeshed.typeshed.stubs.waitress.waitress.buffers.FileBasedBuffer.get": [
    "typeshed.typeshed.stubs.waitress.waitress.buffers.ReadOnlyFileBasedBuffer"
  ],
  "typeshed.typeshed.stubs.waitress.waitress.buffers.FileBasedBuffer.newfile": [
    "typeshed.typeshed.stubs.waitress.waitress.buffers.BytesIOBasedBuffer",
    "typeshed.typeshed.stubs.waitress.waitress.buffers.TempfileBasedBuffer"
  ],
  "typeshed.typeshed.stubs.waitress.waitress.server.BaseWSGIServer.__init__": [
    "typeshed.typeshed.stubs.waitress.waitress.server.UnixWSGIServer"
  ],
  "typeshed.typeshed.stubs.waitress.waitress.server.BaseWSGIServer.bind_server_socket": [
    "typeshed.typeshed.stubs.waitress.waitress.server.TcpWSGIServer",
    "typeshed.typeshed.stubs.waitress.waitress.server.UnixWSGIServer"
  ],
  "typeshed.typeshed.stubs.waitress.waitress.server.BaseWSGIServer.fix_addr": [
    "typeshed.typeshed.stubs.waitress.waitress.server.UnixWSGIServer"
  ],
  "typeshed.typeshed.stubs.waitress.waitress.server.BaseWSGIServer.get_server_name": [
    "typeshed.typeshed.stubs.waitress.waitress.server.UnixWSGIServer"
  ],
  "typeshed.typeshed.stubs.waitress.waitress.server.BaseWSGIServer.getsockname": [
    "typeshed.typeshed.stubs.waitress.waitress.server.TcpWSGIServer",
    "typeshed.typeshed.stubs.waitress.waitress.server.UnixWSGIServer"
  ],
  "typeshed.typeshed.stubs.waitress.waitress.server.BaseWSGIServer.set_socket_options": [
    "typeshed.typeshed.stubs.waitress.waitress.server.TcpWSGIServer"
  ],
  "typeshed.typeshed.stubs.waitress.waitress.wasyncore.dispatcher.__init__": [
    "typeshed.typeshed.stubs.waitress.waitress.channel.HTTPChannel",
    "typeshed.typeshed.stubs.waitress.waitress.wasyncore.dispatcher_with_send",
    "typeshed.typeshed.stubs.waitress.waitress.wasyncore.file_dispatcher"
  ],
  "typeshed.typeshed.stubs.waitress.waitress.wasyncore.dispatcher.add_channel": [
    "typeshed.typeshed.stubs.waitress.waitress.channel.HTTPChannel"
  ],
  "typeshed.typeshed.stubs.waitress.waitress.wasyncore.dispatcher.del_channel": [
    "typeshed.typeshed.stubs.waitress.waitress.channel.HTTPChannel"
  ],
  "typeshed.typeshed.stubs.waitress.waitress.wasyncore.dispatcher.handle_close": [
    "typeshed.typeshed.stubs.waitress.waitress.channel.HTTPChannel"
  ],
  "typeshed.typeshed.stubs.waitress.waitress.wasyncore.dispatcher.handle_read": [
    "typeshed.typeshed.stubs.waitress.waitress.channel.HTTPChannel"
  ],
  "typeshed.typeshed.stubs.waitress.waitress.wasyncore.dispatcher.handle_write": [
    "typeshed.typeshed.stubs.waitress.waitress.channel.HTTPChannel"
  ],
  "typeshed.typeshed.stubs.waitress.waitress.wasyncore.dispatcher.readable": [
    "typeshed.typeshed.stubs.waitress.waitress.channel.HTTPChannel"
  ],
  "typeshed.typeshed.stubs.waitress.waitress.wasyncore.dispatcher.send": [
    "typeshed.typeshed.stubs.waitress.waitress.wasyncore.dispatcher_with_send"
  ],
  "typeshed.typeshed.stubs.waitress.waitress.wasyncore.dispatcher.writable": [
    "typeshed.typeshed.stubs.waitress.waitress.channel.HTTPChannel",
    "typeshed.typeshed.stubs.waitress.waitress.wasyncore.dispatcher_with_send"
  ],
  "typeshed.typeshed.stubs.workalendar.workalendar.america.brazil.Brazil.get_variable_days": [
    "typeshed.typeshed.stubs.workalendar.workalendar.america.brazil.BrazilBankCalendar",
    "typeshed.typeshed.stubs.workalendar.workalendar.america.brazil.BrazilRioDeJaneiro",
    "typeshed.typeshed.stubs.workalendar.workalendar.america.brazil.BrazilSerraCity"
  ],
  "typeshed.typeshed.stubs.workalendar.workalendar.america.canada.Canada.get_variable_days": [
    "typeshed.typeshed.stubs.workalendar.workalendar.america.canada.Alberta",
    "typeshed.typeshed.stubs.workalendar.workalendar.america.canada.BritishColumbia",
    "typeshed.typeshed.stubs.workalendar.workalendar.america.canada.Manitoba",
    "typeshed.typeshed.stubs.workalendar.workalendar.america.canada.NewBrunswick",
    "typeshed.typeshed.stubs.workalendar.workalendar.america.canada.NorthwestTerritories",
    "typeshed.typeshed.stubs.workalendar.workalendar.america.canada.NovaScotia",
    "typeshed.typeshed.stubs.workalendar.workalendar.america.canada.Nunavut",
    "typeshed.typeshed.stubs.workalendar.workalendar.america.canada.Ontario",
    "typeshed.typeshed.stubs.workalendar.workalendar.america.canada.PrinceEdwardIsland",
    "typeshed.typeshed.stubs.workalendar.workalendar.america.canada.Quebec",
    "typeshed.typeshed.stubs.workalendar.workalendar.america.canada.Saskatchewan",
    "typeshed.typeshed.stubs.workalendar.workalendar.america.canada.Yukon"
  ],
  "typeshed.typeshed.stubs.workalendar.workalendar.core.Calendar.get_fixed_holidays": [
    "typeshed.typeshed.stubs.workalendar.workalendar.africa.kenya.Kenya",
    "typeshed.typeshed.stubs.workalendar.workalendar.africa.nigeria.Nigeria",
    "typeshed.typeshed.stubs.workalendar.workalendar.africa.south_africa.SouthAfrica",
    "typeshed.typeshed.stubs.workalendar.workalendar.africa.tunisia.Tunisia",
    "typeshed.typeshed.stubs.workalendar.workalendar.america.barbados.Barbados",
    "typeshed.typeshed.stubs.workalendar.workalendar.america.paraguay.Paraguay",
    "typeshed.typeshed.stubs.workalendar.workalendar.asia.japan.Japan",
    "typeshed.typeshed.stubs.workalendar.workalendar.europe.croatia.Croatia",
    "typeshed.typeshed.stubs.workalendar.workalendar.europe.luxembourg.Luxembourg",
    "typeshed.typeshed.stubs.workalendar.workalendar.europe.portugal.Portugal",
    "typeshed.typeshed.stubs.workalendar.workalendar.europe.scotland.Scotland",
    "typeshed.typeshed.stubs.workalendar.workalendar.usa.core.UnitedStates"
  ],
  "typeshed.typeshed.stubs.workalendar.workalendar.core.Calendar.get_variable_days": [
    "typeshed.typeshed.stubs.workalendar.workalendar.asia.israel.Israel",
    "typeshed.typeshed.stubs.workalendar.workalendar.asia.japan.Japan"
  ],
  "typeshed.typeshed.stubs.workalendar.workalendar.core.CalverterMixin.get_delta_islamic_holidays": [
    "typeshed.typeshed.stubs.workalendar.workalendar.europe.turkey.Turkey"
  ],
  "typeshed.typeshed.stubs.workalendar.workalendar.core.CalverterMixin.get_islamic_holidays": [
    "typeshed.typeshed.stubs.workalendar.workalendar.core.IslamicMixin"
  ],
  "typeshed.typeshed.stubs.workalendar.workalendar.core.CalverterMixin.get_variable_days": [
    "typeshed.typeshed.stubs.workalendar.workalendar.asia.malaysia.Malaysia"
  ],
  "typeshed.typeshed.stubs.workalendar.workalendar.core.ChineseNewYearMixin.get_calendar_holidays": [
    "typeshed.typeshed.stubs.workalendar.workalendar.asia.china.China"
  ],
  "typeshed.typeshed.stubs.workalendar.workalendar.core.ChineseNewYearMixin.get_variable_days": [
    "typeshed.typeshed.stubs.workalendar.workalendar.asia.china.China",
    "typeshed.typeshed.stubs.workalendar.workalendar.asia.south_korea.SouthKorea",
    "typeshed.typeshed.stubs.workalendar.workalendar.asia.taiwan.Taiwan"
  ],
  "typeshed.typeshed.stubs.workalendar.workalendar.core.ChristianMixin.get_corpus_christi": [
    "typeshed.typeshed.stubs.workalendar.workalendar.america.colombia.Colombia"
  ],
  "typeshed.typeshed.stubs.workalendar.workalendar.core.ChristianMixin.get_variable_days": [
    "typeshed.typeshed.stubs.workalendar.workalendar.africa.south_africa.SouthAfrica",
    "typeshed.typeshed.stubs.workalendar.workalendar.america.argentina.Argentina",
    "typeshed.typeshed.stubs.workalendar.workalendar.america.barbados.Barbados",
    "typeshed.typeshed.stubs.workalendar.workalendar.america.brazil.Brazil",
    "typeshed.typeshed.stubs.workalendar.workalendar.america.canada.Canada",
    "typeshed.typeshed.stubs.workalendar.workalendar.america.chile.Chile",
    "typeshed.typeshed.stubs.workalendar.workalendar.america.colombia.Colombia",
    "typeshed.typeshed.stubs.workalendar.workalendar.america.mexico.Mexico",
    "typeshed.typeshed.stubs.workalendar.workalendar.america.panama.Panama",
    "typeshed.typeshed.stubs.workalendar.workalendar.asia.hong_kong.HongKong",
    "typeshed.typeshed.stubs.workalendar.workalendar.asia.kazakhstan.Kazakhstan",
    "typeshed.typeshed.stubs.workalendar.workalendar.asia.singapore.Singapore",
    "typeshed.typeshed.stubs.workalendar.workalendar.europe.belarus.Belarus",
    "typeshed.typeshed.stubs.workalendar.workalendar.europe.bulgaria.Bulgaria",
    "typeshed.typeshed.stubs.workalendar.workalendar.europe.cayman_islands.CaymanIslands",
    "typeshed.typeshed.stubs.workalendar.workalendar.europe.cyprus.Cyprus",
    "typeshed.typeshed.stubs.workalendar.workalendar.europe.czech_republic.CzechRepublic",
    "typeshed.typeshed.stubs.workalendar.workalendar.europe.denmark.Denmark",
    "typeshed.typeshed.stubs.workalendar.workalendar.europe.finland.Finland",
    "typeshed.typeshed.stubs.workalendar.workalendar.europe.germany.Germany",
    "typeshed.typeshed.stubs.workalendar.workalendar.europe.guernsey.Guernsey",
    "typeshed.typeshed.stubs.workalendar.workalendar.europe.hungary.Hungary",
    "typeshed.typeshed.stubs.workalendar.workalendar.europe.iceland.Iceland",
    "typeshed.typeshed.stubs.workalendar.workalendar.europe.ireland.Ireland",
    "typeshed.typeshed.stubs.workalendar.workalendar.europe.latvia.Latvia",
    "typeshed.typeshed.stubs.workalendar.workalendar.europe.lithuania.Lithuania",
    "typeshed.typeshed.stubs.workalendar.workalendar.europe.netherlands.Netherlands",
    "typeshed.typeshed.stubs.workalendar.workalendar.europe.portugal.Portugal",
    "typeshed.typeshed.stubs.workalendar.workalendar.europe.romania.Romania",
    "typeshed.typeshed.stubs.workalendar.workalendar.europe.scotland.Scotland",
    "typeshed.typeshed.stubs.workalendar.workalendar.europe.slovenia.Slovenia",
    "typeshed.typeshed.stubs.workalendar.workalendar.europe.sweden.Sweden",
    "typeshed.typeshed.stubs.workalendar.workalendar.europe.switzerland.Switzerland",
    "typeshed.typeshed.stubs.workalendar.workalendar.europe.ukraine.Ukraine",
    "typeshed.typeshed.stubs.workalendar.workalendar.europe.united_kingdom.UnitedKingdom",
    "typeshed.typeshed.stubs.workalendar.workalendar.oceania.australia.Australia",
    "typeshed.typeshed.stubs.workalendar.workalendar.oceania.marshall_islands.MarshallIslands",
    "typeshed.typeshed.stubs.workalendar.workalendar.oceania.new_zealand.NewZealand",
    "typeshed.typeshed.stubs.workalendar.workalendar.usa.core.UnitedStates"
  ],
  "typeshed.typeshed.stubs.workalendar.workalendar.core.ChristianMixin.shift_christmas_boxing_days": [
    "typeshed.typeshed.stubs.workalendar.workalendar.europe.bulgaria.Bulgaria"
  ],
  "typeshed.typeshed.stubs.workalendar.workalendar.core.CoreCalendar.__init__": [
    "typeshed.typeshed.stubs.workalendar.workalendar.core.Calendar"
  ],
  "typeshed.typeshed.stubs.workalendar.workalendar.core.CoreCalendar.add_working_days": [
    "typeshed.typeshed.stubs.workalendar.workalendar.asia.china.China"
  ],
  "typeshed.typeshed.stubs.workalendar.workalendar.core.CoreCalendar.find_following_working_day": [
    "typeshed.typeshed.stubs.workalendar.workalendar.america.brazil.BrazilBankCalendar"
  ],
  "typeshed.typeshed.stubs.workalendar.workalendar.core.CoreCalendar.get_calendar_holidays": [
    "typeshed.typeshed.stubs.workalendar.workalendar.africa.kenya.Kenya",
    "typeshed.typeshed.stubs.workalendar.workalendar.africa.south_africa.SouthAfrica",
    "typeshed.typeshed.stubs.workalendar.workalendar.america.mexico.Mexico",
    "typeshed.typeshed.stubs.workalendar.workalendar.europe.russia.Russia",
    "typeshed.typeshed.stubs.workalendar.workalendar.usa.core.UnitedStates"
  ],
  "typeshed.typeshed.stubs.workalendar.workalendar.core.CoreCalendar.get_fixed_holidays": [
    "typeshed.typeshed.stubs.workalendar.workalendar.core.Calendar"
  ],
  "typeshed.typeshed.stubs.workalendar.workalendar.core.CoreCalendar.get_variable_days": [
    "typeshed.typeshed.stubs.workalendar.workalendar.core.Calendar"
  ],
  "typeshed.typeshed.stubs.workalendar.workalendar.core.CoreCalendar.holidays": [
    "typeshed.typeshed.stubs.workalendar.workalendar.africa.south_africa.SouthAfrica"
  ],
  "typeshed.typeshed.stubs.workalendar.workalendar.core.CoreCalendar.is_working_day": [
    "typeshed.typeshed.stubs.workalendar.workalendar.asia.china.China",
    "typeshed.typeshed.stubs.workalendar.workalendar.asia.taiwan.Taiwan",
    "typeshed.typeshed.stubs.workalendar.workalendar.europe.russia.Russia"
  ],
  "typeshed.typeshed.stubs.workalendar.workalendar.core.CoreCalendar.sub_working_days": [
    "typeshed.typeshed.stubs.workalendar.workalendar.asia.china.China"
  ],
  "typeshed.typeshed.stubs.workalendar.workalendar.core.OrthodoxMixin.get_fixed_holidays": [
    "typeshed.typeshed.stubs.workalendar.workalendar.asia.kazakhstan.Kazakhstan",
    "typeshed.typeshed.stubs.workalendar.workalendar.europe.bulgaria.Bulgaria",
    "typeshed.typeshed.stubs.workalendar.workalendar.europe.russia.Russia"
  ],
  "typeshed.typeshed.stubs.workalendar.workalendar.europe.germany.Germany.get_variable_days": [
    "typeshed.typeshed.stubs.workalendar.workalendar.europe.germany.Berlin",
    "typeshed.typeshed.stubs.workalendar.workalendar.europe.germany.Saxony"
  ],
  "typeshed.typeshed.stubs.workalendar.workalendar.europe.netherlands.Netherlands.__init__": [
    "typeshed.typeshed.stubs.workalendar.workalendar.europe.netherlands.NetherlandsWithSchoolHolidays"
  ],
  "typeshed.typeshed.stubs.workalendar.workalendar.europe.netherlands.Netherlands.get_variable_days": [
    "typeshed.typeshed.stubs.workalendar.workalendar.europe.netherlands.NetherlandsWithSchoolHolidays"
  ],
  "typeshed.typeshed.stubs.workalendar.workalendar.europe.scotland.Scotland.get_autumn_holiday": [
    "typeshed.typeshed.stubs.workalendar.workalendar.europe.scotland.Edinburgh"
  ],
  "typeshed.typeshed.stubs.workalendar.workalendar.europe.scotland.Scotland.get_spring_holiday": [
    "typeshed.typeshed.stubs.workalendar.workalendar.europe.scotland.Edinburgh"
  ],
  "typeshed.typeshed.stubs.workalendar.workalendar.europe.scotland.Scotland.get_variable_days": [
    "typeshed.typeshed.stubs.workalendar.workalendar.europe.scotland.Fife",
    "typeshed.typeshed.stubs.workalendar.workalendar.europe.scotland.Galashiels",
    "typeshed.typeshed.stubs.workalendar.workalendar.europe.scotland.Hawick",
    "typeshed.typeshed.stubs.workalendar.workalendar.europe.scotland.Inverness",
    "typeshed.typeshed.stubs.workalendar.workalendar.europe.scotland.Lanark",
    "typeshed.typeshed.stubs.workalendar.workalendar.europe.scotland.Linlithgow",
    "typeshed.typeshed.stubs.workalendar.workalendar.europe.scotland.Lochaber"
  ],
  "typeshed.typeshed.stubs.workalendar.workalendar.europe.scotland.Scotland.get_victoria_day": [
    "typeshed.typeshed.stubs.workalendar.workalendar.europe.scotland.Edinburgh"
  ],
  "typeshed.typeshed.stubs.workalendar.workalendar.europe.scotland.mixins.LateSummer.get_variable_days": [
    "typeshed.typeshed.stubs.workalendar.workalendar.europe.scotland.Inverclyde"
  ],
  "typeshed.typeshed.stubs.workalendar.workalendar.europe.switzerland.Switzerland.get_variable_days": [
    "typeshed.typeshed.stubs.workalendar.workalendar.europe.switzerland.Geneva",
    "typeshed.typeshed.stubs.workalendar.workalendar.europe.switzerland.Neuchatel",
    "typeshed.typeshed.stubs.workalendar.workalendar.europe.switzerland.Vaud"
  ],
  "typeshed.typeshed.stubs.workalendar.workalendar.europe.switzerland.Switzerland.has_berchtolds_day": [
    "typeshed.typeshed.stubs.workalendar.workalendar.europe.switzerland.Neuchatel"
  ],
  "typeshed.typeshed.stubs.workalendar.workalendar.europe.united_kingdom.UnitedKingdom.get_variable_days": [
    "typeshed.typeshed.stubs.workalendar.workalendar.europe.united_kingdom.UnitedKingdomNorthernIreland"
  ],
  "typeshed.typeshed.stubs.workalendar.workalendar.oceania.australia.Australia.get_variable_days": [
    "typeshed.typeshed.stubs.workalendar.workalendar.oceania.australia.AustralianCapitalTerritory",
    "typeshed.typeshed.stubs.workalendar.workalendar.oceania.australia.NorthernTerritory",
    "typeshed.typeshed.stubs.workalendar.workalendar.oceania.australia.Queensland",
    "typeshed.typeshed.stubs.workalendar.workalendar.oceania.australia.SouthAustralia",
    "typeshed.typeshed.stubs.workalendar.workalendar.oceania.australia.Tasmania",
    "typeshed.typeshed.stubs.workalendar.workalendar.oceania.australia.Victoria",
    "typeshed.typeshed.stubs.workalendar.workalendar.oceania.australia.WesternAustralia"
  ],
  "typeshed.typeshed.stubs.workalendar.workalendar.oceania.australia.Tasmania.get_variable_days": [
    "typeshed.typeshed.stubs.workalendar.workalendar.oceania.australia.Hobart"
  ],
  "typeshed.typeshed.stubs.workalendar.workalendar.oceania.australia.Tasmania.has_recreation_day": [
    "typeshed.typeshed.stubs.workalendar.workalendar.oceania.australia.Hobart"
  ],
  "typeshed.typeshed.stubs.workalendar.workalendar.usa.core.UnitedStates.get_cesar_chavez_days": [
    "typeshed.typeshed.stubs.workalendar.workalendar.usa.california.California"
  ],
  "typeshed.typeshed.stubs.workalendar.workalendar.usa.core.UnitedStates.get_confederate_day": [
    "typeshed.typeshed.stubs.workalendar.workalendar.usa.florida.FloridaLegal",
    "typeshed.typeshed.stubs.workalendar.workalendar.usa.georgia.Georgia"
  ],
  "typeshed.typeshed.stubs.workalendar.workalendar.usa.core.UnitedStates.get_fixed_holidays": [
    "typeshed.typeshed.stubs.workalendar.workalendar.usa.michigan.Michigan",
    "typeshed.typeshed.stubs.workalendar.workalendar.usa.texas.TexasBase",
    "typeshed.typeshed.stubs.workalendar.workalendar.usa.west_virginia.WestVirginia"
  ],
  "typeshed.typeshed.stubs.workalendar.workalendar.usa.core.UnitedStates.get_jefferson_davis_birthday": [
    "typeshed.typeshed.stubs.workalendar.workalendar.usa.florida.FloridaLegal"
  ],
  "typeshed.typeshed.stubs.workalendar.workalendar.usa.core.UnitedStates.get_variable_days": [
    "typeshed.typeshed.stubs.workalendar.workalendar.usa.alabama.AlabamaPerryCounty",
    "typeshed.typeshed.stubs.workalendar.workalendar.usa.alaska.Alaska",
    "typeshed.typeshed.stubs.workalendar.workalendar.usa.american_samoa.AmericanSamoa",
    "typeshed.typeshed.stubs.workalendar.workalendar.usa.california.CaliforniaEducation",
    "typeshed.typeshed.stubs.workalendar.workalendar.usa.florida.FloridaCircuitCourts",
    "typeshed.typeshed.stubs.workalendar.workalendar.usa.georgia.Georgia",
    "typeshed.typeshed.stubs.workalendar.workalendar.usa.hawaii.Hawaii",
    "typeshed.typeshed.stubs.workalendar.workalendar.usa.illinois.ChicagoIllinois",
    "typeshed.typeshed.stubs.workalendar.workalendar.usa.indiana.Indiana",
    "typeshed.typeshed.stubs.workalendar.workalendar.usa.maryland.Maryland",
    "typeshed.typeshed.stubs.workalendar.workalendar.usa.montana.Montana",
    "typeshed.typeshed.stubs.workalendar.workalendar.usa.nebraska.Nebraska",
    "typeshed.typeshed.stubs.workalendar.workalendar.usa.nevada.Nevada",
    "typeshed.typeshed.stubs.workalendar.workalendar.usa.north_carolina.NorthCarolina",
    "typeshed.typeshed.stubs.workalendar.workalendar.usa.rhode_island.RhodeIsland",
    "typeshed.typeshed.stubs.workalendar.workalendar.usa.vermont.Vermont",
    "typeshed.typeshed.stubs.workalendar.workalendar.usa.virginia.Virginia"
  ],
  "typing.AbstractSet.__and__": [
    "_weakrefset.WeakSet",
    "frozenset",
    "set",
    "typeshed.typeshed.stdlib._weakrefset.WeakSet",
    "typeshed.typeshed.stdlib.builtins.frozenset",
    "typeshed.typeshed.stdlib.builtins.set",
    "typing.ItemsView",
    "typing.KeysView"
  ],
  "typing.AbstractSet.__contains__": [
    "_weakrefset.WeakSet",
    "django.utils.datastructures.OrderedSet",
    "frozenset",
    "marshmallow.orderedset.OrderedSet",
    "set",
    "typeshed.typeshed.stdlib._weakrefset.WeakSet",
    "typeshed.typeshed.stdlib.builtins.frozenset",
    "typeshed.typeshed.stdlib.builtins.set",
    "typeshed.typeshed.stubs.boltons.boltons.setutils.IndexedSet",
    "typing.ItemsView",
    "typing.KeysView"
  ],
  "typing.AbstractSet.__ge__": [
    "_weakrefset.WeakSet",
    "frozenset",
    "set",
    "typeshed.typeshed.stdlib._weakrefset.WeakSet",
    "typeshed.typeshed.stdlib.builtins.frozenset",
    "typeshed.typeshed.stdlib.builtins.set"
  ],
  "typing.AbstractSet.__gt__": [
    "_weakrefset.WeakSet",
    "frozenset",
    "set",
    "typeshed.typeshed.stdlib._weakrefset.WeakSet",
    "typeshed.typeshed.stdlib.builtins.frozenset",
    "typeshed.typeshed.stdlib.builtins.set"
  ],
  "typing.AbstractSet.__le__": [
    "_weakrefset.WeakSet",
    "frozenset",
    "set",
    "typeshed.typeshed.stdlib._weakrefset.WeakSet",
    "typeshed.typeshed.stdlib.builtins.frozenset",
    "typeshed.typeshed.stdlib.builtins.set"
  ],
  "typing.AbstractSet.__lt__": [
    "_weakrefset.WeakSet",
    "frozenset",
    "set",
    "typeshed.typeshed.stdlib._weakrefset.WeakSet",
    "typeshed.typeshed.stdlib.builtins.frozenset",
    "typeshed.typeshed.stdlib.builtins.set"
  ],
  "typing.AbstractSet.__or__": [
    "_weakrefset.WeakSet",
    "frozenset",
    "set",
    "typeshed.typeshed.stdlib._weakrefset.WeakSet",
    "typeshed.typeshed.stdlib.builtins.frozenset",
    "typeshed.typeshed.stdlib.builtins.set",
    "typing.ItemsView",
    "typing.KeysView"
  ],
  "typing.AbstractSet.__sub__": [
    "_weakrefset.WeakSet",
    "frozenset",
    "set",
    "typeshed.typeshed.stdlib._weakrefset.WeakSet",
    "typeshed.typeshed.stdlib.builtins.frozenset",
    "typeshed.typeshed.stdlib.builtins.set",
    "typing.ItemsView",
    "typing.KeysView"
  ],
  "typing.AbstractSet.__xor__": [
    "_weakrefset.WeakSet",
    "frozenset",
    "set",
    "typeshed.typeshed.stdlib._weakrefset.WeakSet",
    "typeshed.typeshed.stdlib.builtins.frozenset",
    "typeshed.typeshed.stdlib.builtins.set",
    "typing.ItemsView",
    "typing.KeysView"
  ],
  "typing.AbstractSet.isdisjoint": [
    "_weakrefset.WeakSet",
    "frozenset",
    "set",
    "typeshed.typeshed.stdlib._weakrefset.WeakSet",
    "typeshed.typeshed.stdlib.builtins.frozenset",
    "typeshed.typeshed.stdlib.builtins.set",
    "typeshed.typeshed.stubs.boltons.boltons.setutils.IndexedSet"
  ],
  "typing.AsyncGenerator.__anext__": [
    "types.AsyncGeneratorType",
    "typeshed.typeshed.stdlib.types.AsyncGeneratorType"
  ],
  "typing.AsyncGenerator.aclose": [
    "types.AsyncGeneratorType",
    "typeshed.typeshed.stdlib.types.AsyncGeneratorType"
  ],
  "typing.AsyncGenerator.ag_await": [
    "types.AsyncGeneratorType",
    "typeshed.typeshed.stdlib.types.AsyncGeneratorType"
  ],
  "typing.AsyncGenerator.asend": [
    "types.AsyncGeneratorType",
    "typeshed.typeshed.stdlib.types.AsyncGeneratorType"
  ],
  "typing.AsyncGenerator.athrow": [
    "types.AsyncGeneratorType",
    "typeshed.typeshed.stdlib.types.AsyncGeneratorType"
  ],
  "typing.AsyncIterable.__aiter__": [
    "django.http.response.StreamingHttpResponse",
    "typing.AsyncIterator"
  ],
  "typing.AsyncIterator.__aiter__": [
    "asyncio.streams.StreamReader",
    "types.AsyncGeneratorType",
    "typeshed.typeshed.stdlib.asyncio.streams.StreamReader",
    "typeshed.typeshed.stdlib.types.AsyncGeneratorType"
  ],
  "typing.AsyncIterator.__anext__": [
    "asyncio.streams.StreamReader",
    "typeshed.typeshed.stdlib.asyncio.streams.StreamReader",
    "typing.AsyncGenerator"
  ],
  "typing.Awaitable.__await__": [
    "asyncio.futures.Future",
    "types.CoroutineType",
    "typeshed.typeshed.stdlib.asyncio.futures.Future",
    "typeshed.typeshed.stdlib.types.CoroutineType"
  ],
  "typing.BinaryIO.__enter__": [
    "codecs.StreamRecoder",
    "typeshed.typeshed.stdlib.codecs.StreamRecoder",
    "typeshed.typeshed.stdlib.urllib.response.addbase",
    "urllib.response.addbase"
  ],
  "typing.Collection.__len__": [
    "PIL.Image.Exif",
    "PIL.TiffImagePlugin.ImageFileDirectory_v2",
    "_weakrefset.WeakSet",
    "array.array",
    "babel.localedata.LocaleDataDict",
    "bytearray",
    "bytes",
    "cachetools.Cache",
    "collections.ChainMap",
    "collections.UserDict",
    "collections.UserList",
    "collections.UserString",
    "collections.deque",
    "configparser.ConverterMapping",
    "configparser.RawConfigParser",
    "configparser.SectionProxy",
    "contextvars.Context",
    "dbm._Database",
    "dbm.dumb._Database",
    "dict",
    "django.core.paginator.Page",
    "django.db.models.query._QuerySet",
    "django.utils.datastructures.CaseInsensitiveMapping",
    "django.utils.datastructures.OrderedSet",
    "django.utils.functional._StrPromise",
    "frozenset",
    "google.protobuf.internal.containers.BaseContainer",
    "google.protobuf.internal.containers.MessageMap",
    "google.protobuf.internal.containers.ScalarMap",
    "html5lib._trie.py.Trie",
    "html5lib._utils.BoundMethodDispatcher",
    "jsonschema._utils.URIDict",
    "ldap3.utils.ciDict.CaseInsensitiveDict",
    "libcst._flatten_sentinel.FlattenSentinel",
    "list",
    "marshmallow.orderedset.OrderedSet",
    "memoryview",
    "multiprocessing.managers.BaseListProxy",
    "multiprocessing.managers.DictProxy",
    "os._Environ",
    "paramiko.hostkeys.HostKeys",
    "paramiko.hostkeys._SubDict",
    "parso.python.tree.UsedNamesMapping",
    "passlib.pwd.WordsetDict",
    "pip._internal.resolution.resolvelib.found_candidates.FoundCandidates",
    "pip._vendor.distlib.compat.ChainMap",
    "pip._vendor.requests.structures.CaseInsensitiveDict",
    "pip._vendor.resolvelib.structs.IteratorMapping",
    "pip._vendor.urllib3._collections.HTTPHeaderDict",
    "pip._vendor.urllib3._collections.RecentlyUsedContainer",
    "pytz.lazy.LazyDict",
    "range",
    "requests.structures.CaseInsensitiveDict",
    "set",
    "shelve.Shelf",
    "sqlalchemy.sql.base._DialectArgDict",
    "sqlalchemy.sql.base._DialectArgView",
    "str",
    "tracemalloc.Traceback",
    "tuple",
    "types.MappingProxyType",
    "typeshed.typeshed.stdlib._weakrefset.WeakSet",
    "typeshed.typeshed.stdlib.array.array",
    "typeshed.typeshed.stdlib.builtins.bytearray",
    "typeshed.typeshed.stdlib.builtins.bytes",
    "typeshed.typeshed.stdlib.builtins.dict",
    "typeshed.typeshed.stdlib.builtins.frozenset",
    "typeshed.typeshed.stdlib.builtins.list",
    "typeshed.typeshed.stdlib.builtins.memoryview",
    "typeshed.typeshed.stdlib.builtins.range",
    "typeshed.typeshed.stdlib.builtins.set",
    "typeshed.typeshed.stdlib.builtins.str",
    "typeshed.typeshed.stdlib.builtins.tuple",
    "typeshed.typeshed.stdlib.collections.ChainMap",
    "typeshed.typeshed.stdlib.collections.UserDict",
    "typeshed.typeshed.stdlib.collections.UserList",
    "typeshed.typeshed.stdlib.collections.UserString",
    "typeshed.typeshed.stdlib.collections.deque",
    "typeshed.typeshed.stdlib.configparser.ConverterMapping",
    "typeshed.typeshed.stdlib.configparser.RawConfigParser",
    "typeshed.typeshed.stdlib.configparser.SectionProxy",
    "typeshed.typeshed.stdlib.contextvars.Context",
    "typeshed.typeshed.stdlib.dbm._Database",
    "typeshed.typeshed.stdlib.dbm.dumb._Database",
    "typeshed.typeshed.stdlib.multiprocessing.managers.BaseListProxy",
    "typeshed.typeshed.stdlib.multiprocessing.managers.DictProxy",
    "typeshed.typeshed.stdlib.os._Environ",
    "typeshed.typeshed.stdlib.shelve.Shelf",
    "typeshed.typeshed.stdlib.tracemalloc.Traceback",
    "typeshed.typeshed.stdlib.types.MappingProxyType",
    "typeshed.typeshed.stdlib.weakref.WeakKeyDictionary",
    "typeshed.typeshed.stdlib.weakref.WeakValueDictionary",
    "typeshed.typeshed.stubs.Pillow.PIL.Image.Exif",
    "typeshed.typeshed.stubs.Pillow.PIL.TiffImagePlugin.ImageFileDirectory_v2",
    "typeshed.typeshed.stubs.WebOb.webob.cookies.RequestCookies",
    "typeshed.typeshed.stubs.WebOb.webob.headers.EnvironHeaders",
    "typeshed.typeshed.stubs.WebOb.webob.multidict.MultiDict",
    "typeshed.typeshed.stubs.boltons.boltons.setutils.IndexedSet",
    "typeshed.typeshed.stubs.cachetools.cachetools.Cache",
    "typeshed.typeshed.stubs.html5lib.html5lib._trie.py.Trie",
    "typeshed.typeshed.stubs.html5lib.html5lib._utils.BoundMethodDispatcher",
    "typeshed.typeshed.stubs.inifile.inifile.IniData",
    "typeshed.typeshed.stubs.jsonschema.jsonschema._utils.URIDict",
    "typeshed.typeshed.stubs.ldap3.ldap3.utils.ciDict.CaseInsensitiveDict",
    "typeshed.typeshed.stubs.libsass.sass.SassMap",
    "typeshed.typeshed.stubs.paramiko.paramiko.hostkeys.HostKeys",
    "typeshed.typeshed.stubs.paramiko.paramiko.hostkeys._SubDict",
    "typeshed.typeshed.stubs.passlib.passlib.pwd.WordsetDict",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.internal.containers.BaseContainer",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.internal.containers.MessageMap",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.internal.containers.ScalarMap",
    "typeshed.typeshed.stubs.pytz.pytz.lazy.LazyDict",
    "typeshed.typeshed.stubs.requests.requests.structures.CaseInsensitiveDict",
    "typeshed.typeshed.stubs.seaborn.seaborn.external.docscrape.NumpyDocString",
    "typeshed.typeshed.stubs.setuptools.setuptools.config.expand.LazyMappingProxy",
    "urllib3._collections.HTTPHeaderDict",
    "urllib3._collections.RecentlyUsedContainer",
    "weakref.WeakKeyDictionary",
    "weakref.WeakValueDictionary",
    "werkzeug.datastructures.etag.ETags"
  ],
  "typing.Container.__contains__": [
    "django.db.models.query._QuerySet",
    "ipaddress._BaseNetwork",
    "typing.AbstractSet",
    "typing.Mapping",
    "typing.Sequence",
    "typing.ValuesView",
    "werkzeug.datastructures.etag.ETags"
  ],
  "typing.Coroutine.close": [
    "types.CoroutineType",
    "typeshed.typeshed.stdlib.types.CoroutineType"
  ],
  "typing.Coroutine.send": [
    "types.CoroutineType",
    "typeshed.typeshed.stdlib.types.CoroutineType"
  ],
  "typing.Coroutine.throw": [
    "types.CoroutineType",
    "typeshed.typeshed.stdlib.types.CoroutineType"
  ],
  "typing.Generator.__iter__": [
    "types.GeneratorType",
    "typeshed.typeshed.stdlib.types.GeneratorType"
  ],
  "typing.Generator.__next__": [
    "types.GeneratorType",
    "typeshed.typeshed.stdlib.types.GeneratorType"
  ],
  "typing.Generator.gi_yieldfrom": [
    "types.GeneratorType",
    "typeshed.typeshed.stdlib.types.GeneratorType"
  ],
  "typing.Generator.send": [
    "types.GeneratorType",
    "typeshed.typeshed.stdlib.types.GeneratorType"
  ],
  "typing.Generator.throw": [
    "types.GeneratorType",
    "typeshed.typeshed.stdlib.types.GeneratorType"
  ],
  "typing.GenericMeta.__getitem__": [
    "IPython.core.guarded_eval.HasGetItem",
    "PIL.Image.Exif",
    "PIL.TiffImagePlugin.ImageFileDirectory_v2",
    "_FormatMapMapping",
    "_GetItemIterable",
    "_TranslateTable",
    "_typeshed.SupportsGetItem",
    "_typeshed.SupportsKeysAndGetItem",
    "_typeshed.SupportsLenAndGetItem",
    "babel.localedata.LocaleDataDict",
    "cachetools.Cache",
    "cgi._Environ",
    "collections.ChainMap",
    "collections.UserDict",
    "configparser.ConverterMapping",
    "configparser.RawConfigParser",
    "configparser.SectionProxy",
    "crontab.OrderedVariableList",
    "ctypes.Array",
    "ctypes.LibraryLoader",
    "ctypes._Pointer",
    "dbm._Database",
    "dbm.dumb._Database",
    "dict",
    "django.db.models.query.RawQuerySet",
    "django.db.models.query._QuerySet",
    "django.template.context.BaseContext",
    "django.utils.connection.BaseConnectionHandler",
    "enum.EnumMeta",
    "fileinput.FileInput",
    "fpdf.encryption._SupportsGetItem",
    "google.protobuf.internal.containers.MessageMap",
    "google.protobuf.internal.containers.ScalarMap",
    "google.protobuf.internal.extension_dict._ExtensionDict",
    "graphql.pyutils.enum.EnumMeta",
    "humanfriendly.case.CaseInsensitiveDict",
    "importlib.metadata._meta.PackageMetadata",
    "importlib_metadata._meta.PackageMetadata",
    "ipaddress._BaseNetwork",
    "jsonschema._utils.URIDict",
    "ldap3.utils.ciDict.CaseInsensitiveDict",
    "mailbox.Mailbox",
    "mmap.mmap",
    "multiprocessing.managers.DictProxy",
    "multiprocessing.shared_memory.ShareableList",
    "multiprocessing.sharedctypes.SynchronizedArray",
    "openpyxl.utils.bound_dictionary.BoundDictionary",
    "os._Environ",
    "paramiko.hostkeys.HostKeys",
    "paramiko.hostkeys._SubDict",
    "passlib.pwd.WordsetDict",
    "peewee.ModelBase",
    "pip._vendor.distlib.compat.ChainMap",
    "pip._vendor.requests.cookies.RequestsCookieJar",
    "pip._vendor.requests.structures.CaseInsensitiveDict",
    "pip._vendor.urllib3._collections.HTTPHeaderDict",
    "pip._vendor.urllib3._collections.RecentlyUsedContainer",
    "re.Match",
    "redis.commands.core.AsyncBasicKeyCommands",
    "redis.commands.core.BasicKeyCommands",
    "regex.regex.Match",
    "requests.cookies.RequestsCookieJar",
    "requests.structures.CaseInsensitiveDict",
    "shelve.Shelf",
    "six._SupportsGetItem",
    "sqlalchemy.orm.query.Query",
    "sqlalchemy.sql.base._DialectArgDict",
    "sqlalchemy.sql.base._DialectArgView",
    "sqlalchemy.sql.operators.ColumnOperators",
    "sqlalchemy.sql.sqltypes.Indexable.Comparator",
    "sqlalchemy.util._collections.OrderedSet",
    "sqlalchemy.util._collections.Properties",
    "traceback.FrameSummary",
    "typeshed.typeshed.stdlib._ctypes.Array",
    "typeshed.typeshed.stdlib._ctypes._Pointer",
    "typeshed.typeshed.stdlib._typeshed.IndexableBuffer",
    "typeshed.typeshed.stdlib._typeshed.SliceableBuffer",
    "typeshed.typeshed.stdlib._typeshed.SupportsGetItem",
    "typeshed.typeshed.stdlib._typeshed.SupportsKeysAndGetItem",
    "typeshed.typeshed.stdlib._typeshed.SupportsLenAndGetItem",
    "typeshed.typeshed.stdlib.builtins._FormatMapMapping",
    "typeshed.typeshed.stdlib.builtins._GetItemIterable",
    "typeshed.typeshed.stdlib.builtins._TranslateTable",
    "typeshed.typeshed.stdlib.builtins.dict",
    "typeshed.typeshed.stdlib.cgi._Environ",
    "typeshed.typeshed.stdlib.collections.ChainMap",
    "typeshed.typeshed.stdlib.collections.UserDict",
    "typeshed.typeshed.stdlib.configparser.ConverterMapping",
    "typeshed.typeshed.stdlib.configparser.RawConfigParser",
    "typeshed.typeshed.stdlib.configparser.SectionProxy",
    "typeshed.typeshed.stdlib.ctypes.LibraryLoader",
    "typeshed.typeshed.stdlib.dbm._Database",
    "typeshed.typeshed.stdlib.dbm.dumb._Database",
    "typeshed.typeshed.stdlib.enum.EnumMeta",
    "typeshed.typeshed.stdlib.fileinput.FileInput",
    "typeshed.typeshed.stdlib.importlib.metadata._meta.PackageMetadata",
    "typeshed.typeshed.stdlib.ipaddress._BaseNetwork",
    "typeshed.typeshed.stdlib.mailbox.Mailbox",
    "typeshed.typeshed.stdlib.mmap.mmap",
    "typeshed.typeshed.stdlib.multiprocessing.managers.DictProxy",
    "typeshed.typeshed.stdlib.multiprocessing.shared_memory.ShareableList",
    "typeshed.typeshed.stdlib.multiprocessing.sharedctypes.SynchronizedArray",
    "typeshed.typeshed.stdlib.os._Environ",
    "typeshed.typeshed.stdlib.re.Match",
    "typeshed.typeshed.stdlib.shelve.Shelf",
    "typeshed.typeshed.stdlib.traceback.FrameSummary",
    "typeshed.typeshed.stdlib.weakref.WeakKeyDictionary",
    "typeshed.typeshed.stdlib.weakref.WeakValueDictionary",
    "typeshed.typeshed.stubs.Markdown.markdown.util.Registry",
    "typeshed.typeshed.stubs.Pillow.PIL.Image.Exif",
    "typeshed.typeshed.stubs.Pillow.PIL.TiffImagePlugin.ImageFileDirectory_v2",
    "typeshed.typeshed.stubs.Pillow.PIL._imaging._PixelAccessor",
    "typeshed.typeshed.stubs.WTForms.wtforms.fields.form.FormField",
    "typeshed.typeshed.stubs.WTForms.wtforms.fields.list.FieldList",
    "typeshed.typeshed.stubs.WebOb.webob.cookies.RequestCookies",
    "typeshed.typeshed.stubs.WebOb.webob.headers.EnvironHeaders",
    "typeshed.typeshed.stubs.WebOb.webob.multidict.MultiDict",
    "typeshed.typeshed.stubs.boltons.boltons.cacheutils.ThresholdCounter",
    "typeshed.typeshed.stubs.boltons.boltons.setutils.IndexedSet",
    "typeshed.typeshed.stubs.cachetools.cachetools.Cache",
    "typeshed.typeshed.stubs.fpdf2.fpdf.encryption._SupportsGetItem",
    "typeshed.typeshed.stubs.humanfriendly.humanfriendly.case.CaseInsensitiveDict",
    "typeshed.typeshed.stubs.inifile.inifile.IniData",
    "typeshed.typeshed.stubs.jsonschema.jsonschema._utils.URIDict",
    "typeshed.typeshed.stubs.ldap3.ldap3.utils.ciDict.CaseInsensitiveDict",
    "typeshed.typeshed.stubs.openpyxl.openpyxl.packaging.custom.CustomPropertyList",
    "typeshed.typeshed.stubs.paramiko.paramiko.hostkeys.HostKeys",
    "typeshed.typeshed.stubs.paramiko.paramiko.hostkeys._SubDict",
    "typeshed.typeshed.stubs.passlib.passlib.pwd.WordsetDict",
    "typeshed.typeshed.stubs.peewee.peewee.ModelBase",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.internal.containers.MessageMap",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.internal.containers.ScalarMap",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.internal.extension_dict._ExtensionDict",
    "typeshed.typeshed.stubs.python-crontab.crontab.OrderedVariableList",
    "typeshed.typeshed.stubs.redis.redis.commands.core.AsyncBasicKeyCommands",
    "typeshed.typeshed.stubs.redis.redis.commands.core.BasicKeyCommands",
    "typeshed.typeshed.stubs.regex.regex.regex.Match",
    "typeshed.typeshed.stubs.requests.requests.cookies.RequestsCookieJar",
    "typeshed.typeshed.stubs.requests.requests.structures.CaseInsensitiveDict",
    "typeshed.typeshed.stubs.six.six._SupportsGetItem",
    "typing.Mapping",
    "typing.Sequence",
    "urllib3._collections.HTTPHeaderDict",
    "urllib3._collections.RecentlyUsedContainer",
    "weakref.WeakKeyDictionary",
    "weakref.WeakValueDictionary",
    "werkzeug.datastructures.structures.HeaderSet"
  ],
  "typing.IO.__enter__": [
    "django.core.files.base.File",
    "pip._vendor.rich._null_file.NullFile",
    "tempfile.SpooledTemporaryFile",
    "tempfile._TemporaryFileWrapper",
    "typeshed.typeshed.stdlib.tempfile.SpooledTemporaryFile",
    "typeshed.typeshed.stdlib.tempfile._TemporaryFileWrapper",
    "typing.BinaryIO",
    "typing.TextIO"
  ],
  "typing.IO.__exit__": [
    "codecs.StreamReaderWriter",
    "codecs.StreamRecoder",
    "django.core.files.base.File",
    "pip._vendor.rich._null_file.NullFile",
    "tempfile.SpooledTemporaryFile",
    "tempfile._TemporaryFileWrapper",
    "typeshed.typeshed.stdlib.codecs.StreamReaderWriter",
    "typeshed.typeshed.stdlib.codecs.StreamRecoder",
    "typeshed.typeshed.stdlib.tempfile.SpooledTemporaryFile",
    "typeshed.typeshed.stdlib.tempfile._TemporaryFileWrapper",
    "typeshed.typeshed.stdlib.urllib.response.addbase",
    "urllib.response.addbase"
  ],
  "typing.IO.__iter__": [
    "codecs.StreamReaderWriter",
    "codecs.StreamRecoder",
    "pip._vendor.rich._null_file.NullFile",
    "tempfile.SpooledTemporaryFile",
    "tempfile._TemporaryFileWrapper",
    "typeshed.typeshed.stdlib.codecs.StreamReaderWriter",
    "typeshed.typeshed.stdlib.codecs.StreamRecoder",
    "typeshed.typeshed.stdlib.tempfile.SpooledTemporaryFile",
    "typeshed.typeshed.stdlib.tempfile._TemporaryFileWrapper",
    "typeshed.typeshed.stdlib.urllib.response.addbase",
    "urllib.response.addbase"
  ],
  "typing.IO.__next__": [
    "codecs.StreamReaderWriter",
    "codecs.StreamRecoder",
    "django.core.files.base.File",
    "pip._vendor.rich._null_file.NullFile",
    "tempfile.SpooledTemporaryFile",
    "tempfile._TemporaryFileWrapper",
    "typeshed.typeshed.stdlib.codecs.StreamReaderWriter",
    "typeshed.typeshed.stdlib.codecs.StreamRecoder",
    "typeshed.typeshed.stdlib.tempfile.SpooledTemporaryFile",
    "typeshed.typeshed.stdlib.tempfile._TemporaryFileWrapper",
    "typeshed.typeshed.stdlib.urllib.response.addbase",
    "urllib.response.addbase"
  ],
  "typing.IO.close": [
    "codecs.StreamReaderWriter",
    "codecs.StreamRecoder",
    "django.core.files.base.File",
    "pip._vendor.rich._null_file.NullFile",
    "tempfile.SpooledTemporaryFile",
    "tempfile._TemporaryFileWrapper",
    "typeshed.typeshed.stdlib.codecs.StreamReaderWriter",
    "typeshed.typeshed.stdlib.codecs.StreamRecoder",
    "typeshed.typeshed.stdlib.tempfile.SpooledTemporaryFile",
    "typeshed.typeshed.stdlib.tempfile._TemporaryFileWrapper",
    "typeshed.typeshed.stdlib.urllib.response.addbase",
    "urllib.response.addbase"
  ],
  "typing.IO.fileno": [
    "codecs.StreamReaderWriter",
    "codecs.StreamRecoder",
    "pip._vendor.rich._null_file.NullFile",
    "tempfile.SpooledTemporaryFile",
    "tempfile._TemporaryFileWrapper",
    "typeshed.typeshed.stdlib.codecs.StreamReaderWriter",
    "typeshed.typeshed.stdlib.codecs.StreamRecoder",
    "typeshed.typeshed.stdlib.tempfile.SpooledTemporaryFile",
    "typeshed.typeshed.stdlib.tempfile._TemporaryFileWrapper",
    "typeshed.typeshed.stdlib.urllib.response.addbase",
    "urllib.response.addbase"
  ],
  "typing.IO.flush": [
    "codecs.StreamReaderWriter",
    "codecs.StreamRecoder",
    "pip._vendor.rich._null_file.NullFile",
    "tempfile.SpooledTemporaryFile",
    "tempfile._TemporaryFileWrapper",
    "typeshed.typeshed.stdlib.codecs.StreamReaderWriter",
    "typeshed.typeshed.stdlib.codecs.StreamRecoder",
    "typeshed.typeshed.stdlib.tempfile.SpooledTemporaryFile",
    "typeshed.typeshed.stdlib.tempfile._TemporaryFileWrapper",
    "typeshed.typeshed.stdlib.urllib.response.addbase",
    "urllib.response.addbase"
  ],
  "typing.IO.isatty": [
    "codecs.StreamReaderWriter",
    "codecs.StreamRecoder",
    "pip._vendor.rich._null_file.NullFile",
    "tempfile.SpooledTemporaryFile",
    "tempfile._TemporaryFileWrapper",
    "typeshed.typeshed.stdlib.codecs.StreamReaderWriter",
    "typeshed.typeshed.stdlib.codecs.StreamRecoder",
    "typeshed.typeshed.stdlib.tempfile.SpooledTemporaryFile",
    "typeshed.typeshed.stdlib.tempfile._TemporaryFileWrapper",
    "typeshed.typeshed.stdlib.urllib.response.addbase",
    "urllib.response.addbase"
  ],
  "typing.IO.mode": [
    "click.testing._NamedTextIOWrapper",
    "pip._vendor.rich.progress._Reader"
  ],
  "typing.IO.name": [
    "click.testing._NamedTextIOWrapper",
    "pip._vendor.rich.progress._Reader"
  ],
  "typing.IO.read": [
    "codecs.StreamReaderWriter",
    "codecs.StreamRecoder",
    "pip._vendor.rich._null_file.NullFile",
    "tempfile.SpooledTemporaryFile",
    "tempfile._TemporaryFileWrapper",
    "typeshed.typeshed.stdlib.codecs.StreamReaderWriter",
    "typeshed.typeshed.stdlib.codecs.StreamRecoder",
    "typeshed.typeshed.stdlib.tempfile.SpooledTemporaryFile",
    "typeshed.typeshed.stdlib.tempfile._TemporaryFileWrapper",
    "typeshed.typeshed.stdlib.urllib.response.addbase",
    "urllib.response.addbase"
  ],
  "typing.IO.readable": [
    "codecs.StreamReaderWriter",
    "codecs.StreamRecoder",
    "pip._vendor.rich._null_file.NullFile",
    "tempfile.SpooledTemporaryFile",
    "tempfile._TemporaryFileWrapper",
    "typeshed.typeshed.stdlib.codecs.StreamReaderWriter",
    "typeshed.typeshed.stdlib.codecs.StreamRecoder",
    "typeshed.typeshed.stdlib.tempfile.SpooledTemporaryFile",
    "typeshed.typeshed.stdlib.tempfile._TemporaryFileWrapper",
    "typeshed.typeshed.stdlib.urllib.response.addbase",
    "urllib.response.addbase"
  ],
  "typing.IO.readline": [
    "codecs.StreamReaderWriter",
    "codecs.StreamRecoder",
    "pip._vendor.rich._null_file.NullFile",
    "tempfile.SpooledTemporaryFile",
    "tempfile._TemporaryFileWrapper",
    "typeshed.typeshed.stdlib.codecs.StreamReaderWriter",
    "typeshed.typeshed.stdlib.codecs.StreamRecoder",
    "typeshed.typeshed.stdlib.tempfile.SpooledTemporaryFile",
    "typeshed.typeshed.stdlib.tempfile._TemporaryFileWrapper",
    "typeshed.typeshed.stdlib.urllib.response.addbase",
    "urllib.response.addbase"
  ],
  "typing.IO.readlines": [
    "codecs.StreamReaderWriter",
    "codecs.StreamRecoder",
    "pip._vendor.rich._null_file.NullFile",
    "tempfile.SpooledTemporaryFile",
    "tempfile._TemporaryFileWrapper",
    "typeshed.typeshed.stdlib.codecs.StreamReaderWriter",
    "typeshed.typeshed.stdlib.codecs.StreamRecoder",
    "typeshed.typeshed.stdlib.tempfile.SpooledTemporaryFile",
    "typeshed.typeshed.stdlib.tempfile._TemporaryFileWrapper",
    "typeshed.typeshed.stdlib.urllib.response.addbase",
    "urllib.response.addbase"
  ],
  "typing.IO.seek": [
    "codecs.StreamReaderWriter",
    "codecs.StreamRecoder",
    "pip._vendor.rich._null_file.NullFile",
    "tempfile.SpooledTemporaryFile",
    "tempfile._TemporaryFileWrapper",
    "typeshed.typeshed.stdlib.codecs.StreamReaderWriter",
    "typeshed.typeshed.stdlib.codecs.StreamRecoder",
    "typeshed.typeshed.stdlib.tempfile.SpooledTemporaryFile",
    "typeshed.typeshed.stdlib.tempfile._TemporaryFileWrapper",
    "typeshed.typeshed.stdlib.urllib.response.addbase",
    "urllib.response.addbase"
  ],
  "typing.IO.seekable": [
    "codecs.StreamReaderWriter",
    "codecs.StreamRecoder",
    "pip._vendor.rich._null_file.NullFile",
    "tempfile.SpooledTemporaryFile",
    "tempfile._TemporaryFileWrapper",
    "typeshed.typeshed.stdlib.codecs.StreamReaderWriter",
    "typeshed.typeshed.stdlib.codecs.StreamRecoder",
    "typeshed.typeshed.stdlib.tempfile.SpooledTemporaryFile",
    "typeshed.typeshed.stdlib.tempfile._TemporaryFileWrapper",
    "typeshed.typeshed.stdlib.urllib.response.addbase",
    "urllib.response.addbase"
  ],
  "typing.IO.tell": [
    "codecs.StreamReaderWriter",
    "codecs.StreamRecoder",
    "pip._vendor.rich._null_file.NullFile",
    "tempfile.SpooledTemporaryFile",
    "tempfile._TemporaryFileWrapper",
    "typeshed.typeshed.stdlib.codecs.StreamReaderWriter",
    "typeshed.typeshed.stdlib.codecs.StreamRecoder",
    "typeshed.typeshed.stdlib.tempfile.SpooledTemporaryFile",
    "typeshed.typeshed.stdlib.tempfile._TemporaryFileWrapper",
    "typeshed.typeshed.stdlib.urllib.response.addbase",
    "urllib.response.addbase"
  ],
  "typing.IO.truncate": [
    "codecs.StreamReaderWriter",
    "codecs.StreamRecoder",
    "pip._vendor.rich._null_file.NullFile",
    "tempfile.SpooledTemporaryFile",
    "tempfile._TemporaryFileWrapper",
    "typeshed.typeshed.stdlib.codecs.StreamReaderWriter",
    "typeshed.typeshed.stdlib.codecs.StreamRecoder",
    "typeshed.typeshed.stdlib.tempfile.SpooledTemporaryFile",
    "typeshed.typeshed.stdlib.tempfile._TemporaryFileWrapper",
    "typeshed.typeshed.stdlib.urllib.response.addbase",
    "urllib.response.addbase"
  ],
  "typing.IO.writable": [
    "codecs.StreamReaderWriter",
    "codecs.StreamRecoder",
    "pip._vendor.rich._null_file.NullFile",
    "tempfile.SpooledTemporaryFile",
    "tempfile._TemporaryFileWrapper",
    "typeshed.typeshed.stdlib.codecs.StreamReaderWriter",
    "typeshed.typeshed.stdlib.codecs.StreamRecoder",
    "typeshed.typeshed.stdlib.tempfile.SpooledTemporaryFile",
    "typeshed.typeshed.stdlib.tempfile._TemporaryFileWrapper",
    "typeshed.typeshed.stdlib.urllib.response.addbase",
    "urllib.response.addbase"
  ],
  "typing.IO.write": [
    "codecs.StreamReaderWriter",
    "codecs.StreamRecoder",
    "pip._vendor.rich._null_file.NullFile",
    "tempfile.SpooledTemporaryFile",
    "tempfile._TemporaryFileWrapper",
    "typeshed.typeshed.stdlib.codecs.StreamReaderWriter",
    "typeshed.typeshed.stdlib.codecs.StreamRecoder",
    "typeshed.typeshed.stdlib.tempfile.SpooledTemporaryFile",
    "typeshed.typeshed.stdlib.tempfile._TemporaryFileWrapper",
    "typeshed.typeshed.stdlib.urllib.response.addbase",
    "urllib.response.addbase"
  ],
  "typing.IO.writelines": [
    "codecs.StreamReaderWriter",
    "codecs.StreamRecoder",
    "pip._vendor.rich._null_file.NullFile",
    "tempfile.SpooledTemporaryFile",
    "tempfile._TemporaryFileWrapper",
    "typeshed.typeshed.stdlib.codecs.StreamReaderWriter",
    "typeshed.typeshed.stdlib.codecs.StreamRecoder",
    "typeshed.typeshed.stdlib.tempfile.SpooledTemporaryFile",
    "typeshed.typeshed.stdlib.tempfile._TemporaryFileWrapper",
    "typeshed.typeshed.stdlib.urllib.response.addbase",
    "urllib.response.addbase"
  ],
  "typing.ItemsView.__reversed__": [
    "collections._OrderedDictItemsView",
    "collections._odict_items",
    "typeshed.typeshed.stdlib.collections._OrderedDictItemsView",
    "typeshed.typeshed.stdlib.collections._odict_items"
  ],
  "typing.Iterable.__iter__": [
    "PIL.Image.Exif",
    "PIL.TiffImagePlugin.ImageFileDirectory_v2",
    "_weakrefset.WeakSet",
    "asyncio.futures.Future",
    "babel.localedata.LocaleDataDict",
    "boto.s3.bucketlistresultset.BucketListResultSet",
    "cachetools.Cache",
    "collections.ChainMap",
    "collections.UserDict",
    "configparser.ConverterMapping",
    "configparser.RawConfigParser",
    "configparser.SectionProxy",
    "contextvars.Context",
    "dbm._Database",
    "dbm.dumb._Database",
    "dict",
    "django.db.models.query.RawQuerySet",
    "django.db.models.query._QuerySet",
    "django.template.context.BaseContext",
    "django.utils.datastructures.CaseInsensitiveMapping",
    "django.utils.datastructures.OrderedSet",
    "frozenset",
    "google.protobuf.internal.containers.MessageMap",
    "google.protobuf.internal.containers.ScalarMap",
    "html5lib._trie.py.Trie",
    "html5lib._utils.BoundMethodDispatcher",
    "http.cookiejar.CookieJar",
    "ipaddress._BaseNetwork",
    "jsonschema._utils.URIDict",
    "ldap3.utils.ciDict.CaseInsensitiveDict",
    "marshmallow.orderedset.OrderedSet",
    "mmap.mmap",
    "multiprocessing.managers.DictProxy",
    "os._Environ",
    "paramiko.hostkeys.HostKeys",
    "paramiko.hostkeys._SubDict",
    "parso.python.tree.UsedNamesMapping",
    "passlib.pwd.WordsetDict",
    "pip._vendor.distlib.compat.ChainMap",
    "pip._vendor.requests.structures.CaseInsensitiveDict",
    "pip._vendor.resolvelib.structs.IteratorMapping",
    "pip._vendor.urllib3._collections.HTTPHeaderDict",
    "pip._vendor.urllib3._collections.RecentlyUsedContainer",
    "pytz.lazy.LazyDict",
    "requests.structures.CaseInsensitiveDict",
    "set",
    "shelve.Shelf",
    "shlex.shlex",
    "sqlalchemy.sql.base._DialectArgDict",
    "sqlalchemy.sql.base._DialectArgView",
    "tqdm.std.tqdm",
    "traceback.FrameSummary",
    "types.MappingProxyType",
    "typeshed.typeshed.stdlib._weakrefset.WeakSet",
    "typeshed.typeshed.stdlib.asyncio.futures.Future",
    "typeshed.typeshed.stdlib.builtins.dict",
    "typeshed.typeshed.stdlib.builtins.frozenset",
    "typeshed.typeshed.stdlib.builtins.set",
    "typeshed.typeshed.stdlib.collections.ChainMap",
    "typeshed.typeshed.stdlib.collections.UserDict",
    "typeshed.typeshed.stdlib.configparser.ConverterMapping",
    "typeshed.typeshed.stdlib.configparser.RawConfigParser",
    "typeshed.typeshed.stdlib.configparser.SectionProxy",
    "typeshed.typeshed.stdlib.contextvars.Context",
    "typeshed.typeshed.stdlib.dbm._Database",
    "typeshed.typeshed.stdlib.dbm.dumb._Database",
    "typeshed.typeshed.stdlib.http.cookiejar.CookieJar",
    "typeshed.typeshed.stdlib.mmap.mmap",
    "typeshed.typeshed.stdlib.multiprocessing.managers.DictProxy",
    "typeshed.typeshed.stdlib.os._Environ",
    "typeshed.typeshed.stdlib.shelve.Shelf",
    "typeshed.typeshed.stdlib.shlex.shlex",
    "typeshed.typeshed.stdlib.traceback.FrameSummary",
    "typeshed.typeshed.stdlib.types.MappingProxyType",
    "typeshed.typeshed.stdlib.unittest.suite.BaseTestSuite",
    "typeshed.typeshed.stdlib.weakref.WeakKeyDictionary",
    "typeshed.typeshed.stdlib.weakref.WeakValueDictionary",
    "typeshed.typeshed.stubs.Pillow.PIL.Image.Exif",
    "typeshed.typeshed.stubs.Pillow.PIL.TiffImagePlugin.ImageFileDirectory_v2",
    "typeshed.typeshed.stubs.WebOb.webob.cookies.RequestCookies",
    "typeshed.typeshed.stubs.WebOb.webob.headers.EnvironHeaders",
    "typeshed.typeshed.stubs.boltons.boltons.setutils.IndexedSet",
    "typeshed.typeshed.stubs.boto.boto.s3.bucketlistresultset.BucketListResultSet",
    "typeshed.typeshed.stubs.cachetools.cachetools.Cache",
    "typeshed.typeshed.stubs.html5lib.html5lib._trie.py.Trie",
    "typeshed.typeshed.stubs.html5lib.html5lib._utils.BoundMethodDispatcher",
    "typeshed.typeshed.stubs.inifile.inifile.IniData",
    "typeshed.typeshed.stubs.jsonschema.jsonschema._utils.URIDict",
    "typeshed.typeshed.stubs.ldap3.ldap3.utils.ciDict.CaseInsensitiveDict",
    "typeshed.typeshed.stubs.libsass.sass.SassMap",
    "typeshed.typeshed.stubs.paramiko.paramiko.hostkeys.HostKeys",
    "typeshed.typeshed.stubs.paramiko.paramiko.hostkeys._SubDict",
    "typeshed.typeshed.stubs.passlib.passlib.pwd.WordsetDict",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.internal.containers.MessageMap",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.internal.containers.ScalarMap",
    "typeshed.typeshed.stubs.pytz.pytz.lazy.LazyDict",
    "typeshed.typeshed.stubs.requests.requests.structures.CaseInsensitiveDict",
    "typeshed.typeshed.stubs.seaborn.seaborn.external.docscrape.NumpyDocString",
    "typeshed.typeshed.stubs.setuptools.setuptools.config.expand.LazyMappingProxy",
    "typing.ItemsView",
    "typing.Iterator",
    "typing.KeysView",
    "typing.Sequence",
    "typing.ValuesView",
    "unittest.suite.BaseTestSuite",
    "urllib3._collections.HTTPHeaderDict",
    "urllib3._collections.RecentlyUsedContainer",
    "weakref.WeakKeyDictionary",
    "weakref.WeakValueDictionary",
    "werkzeug.datastructures.etag.ETags"
  ],
  "typing.Iterator.__iter__": [
    "croniter.croniter.croniter",
    "csv.DictReader",
    "enumerate",
    "fileinput.FileInput",
    "filter",
    "gdb.LineTable",
    "influxdb_client.client.flux_table.CSVIterator",
    "itertools.accumulate",
    "itertools.chain",
    "itertools.combinations",
    "itertools.combinations_with_replacement",
    "itertools.compress",
    "itertools.count",
    "itertools.cycle",
    "itertools.dropwhile",
    "itertools.filterfalse",
    "itertools.groupby",
    "itertools.islice",
    "itertools.permutations",
    "itertools.product",
    "itertools.repeat",
    "itertools.starmap",
    "itertools.takewhile",
    "itertools.zip_longest",
    "map",
    "multiprocessing.pool.IMapIterator",
    "reversed",
    "sqlite3.dbapi2.Cursor",
    "typeshed.typeshed.stdlib.builtins.enumerate",
    "typeshed.typeshed.stdlib.builtins.filter",
    "typeshed.typeshed.stdlib.builtins.map",
    "typeshed.typeshed.stdlib.builtins.reversed",
    "typeshed.typeshed.stdlib.builtins.zip",
    "typeshed.typeshed.stdlib.csv.DictReader",
    "typeshed.typeshed.stdlib.fileinput.FileInput",
    "typeshed.typeshed.stdlib.itertools.accumulate",
    "typeshed.typeshed.stdlib.itertools.chain",
    "typeshed.typeshed.stdlib.itertools.combinations",
    "typeshed.typeshed.stdlib.itertools.combinations_with_replacement",
    "typeshed.typeshed.stdlib.itertools.compress",
    "typeshed.typeshed.stdlib.itertools.count",
    "typeshed.typeshed.stdlib.itertools.cycle",
    "typeshed.typeshed.stdlib.itertools.dropwhile",
    "typeshed.typeshed.stdlib.itertools.filterfalse",
    "typeshed.typeshed.stdlib.itertools.groupby",
    "typeshed.typeshed.stdlib.itertools.islice",
    "typeshed.typeshed.stdlib.itertools.permutations",
    "typeshed.typeshed.stdlib.itertools.product",
    "typeshed.typeshed.stdlib.itertools.repeat",
    "typeshed.typeshed.stdlib.itertools.starmap",
    "typeshed.typeshed.stdlib.itertools.takewhile",
    "typeshed.typeshed.stdlib.itertools.zip_longest",
    "typeshed.typeshed.stdlib.multiprocessing.pool.IMapIterator",
    "typeshed.typeshed.stdlib.sqlite3.dbapi2.Cursor",
    "typeshed.typeshed.stubs.croniter.croniter.croniter.croniter",
    "typeshed.typeshed.stubs.gdb.gdb.LineTable",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.client.flux_table.CSVIterator",
    "typing.Generator",
    "typing.IO",
    "zip"
  ],
  "typing.Iterator.__next__": [
    "_csv._reader",
    "csv.DictReader",
    "enumerate",
    "fileinput.FileInput",
    "filter",
    "gdb.LineTable",
    "gdb.RegisterDescriptorIterator",
    "gdb.RegisterGroupsIterator",
    "influxdb_client.client.flux_table.CSVIterator",
    "itertools.accumulate",
    "itertools.chain",
    "itertools.combinations",
    "itertools.combinations_with_replacement",
    "itertools.compress",
    "itertools.count",
    "itertools.cycle",
    "itertools.dropwhile",
    "itertools.filterfalse",
    "itertools.groupby",
    "itertools.islice",
    "itertools.permutations",
    "itertools.product",
    "itertools.repeat",
    "itertools.starmap",
    "itertools.takewhile",
    "itertools.zip_longest",
    "map",
    "multiprocessing.pool.IMapIterator",
    "os._ScandirIterator",
    "reversed",
    "sqlite3.dbapi2.Cursor",
    "typeshed.typeshed.stdlib._csv._reader",
    "typeshed.typeshed.stdlib.builtins.enumerate",
    "typeshed.typeshed.stdlib.builtins.filter",
    "typeshed.typeshed.stdlib.builtins.map",
    "typeshed.typeshed.stdlib.builtins.reversed",
    "typeshed.typeshed.stdlib.builtins.zip",
    "typeshed.typeshed.stdlib.csv.DictReader",
    "typeshed.typeshed.stdlib.fileinput.FileInput",
    "typeshed.typeshed.stdlib.itertools.accumulate",
    "typeshed.typeshed.stdlib.itertools.chain",
    "typeshed.typeshed.stdlib.itertools.combinations",
    "typeshed.typeshed.stdlib.itertools.combinations_with_replacement",
    "typeshed.typeshed.stdlib.itertools.compress",
    "typeshed.typeshed.stdlib.itertools.count",
    "typeshed.typeshed.stdlib.itertools.cycle",
    "typeshed.typeshed.stdlib.itertools.dropwhile",
    "typeshed.typeshed.stdlib.itertools.filterfalse",
    "typeshed.typeshed.stdlib.itertools.groupby",
    "typeshed.typeshed.stdlib.itertools.islice",
    "typeshed.typeshed.stdlib.itertools.permutations",
    "typeshed.typeshed.stdlib.itertools.product",
    "typeshed.typeshed.stdlib.itertools.repeat",
    "typeshed.typeshed.stdlib.itertools.starmap",
    "typeshed.typeshed.stdlib.itertools.takewhile",
    "typeshed.typeshed.stdlib.itertools.zip_longest",
    "typeshed.typeshed.stdlib.multiprocessing.pool.IMapIterator",
    "typeshed.typeshed.stdlib.os._ScandirIterator",
    "typeshed.typeshed.stdlib.sqlite3.dbapi2.Cursor",
    "typeshed.typeshed.stubs.gdb.gdb.LineTable",
    "typeshed.typeshed.stubs.gdb.gdb.RegisterDescriptorIterator",
    "typeshed.typeshed.stubs.gdb.gdb.RegisterGroupsIterator",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.client.flux_table.CSVIterator",
    "typing.Generator",
    "typing.IO",
    "zip"
  ],
  "typing.KeysView.__contains__": [
    "sqlalchemy.engine.result.RMKeyView",
    "sqlalchemy.engine.row.ROMappingView"
  ],
  "typing.KeysView.__init__": [
    "sqlalchemy.engine.result.RMKeyView",
    "sqlalchemy.engine.row.ROMappingView"
  ],
  "typing.KeysView.__iter__": [
    "sqlalchemy.engine.result.RMKeyView",
    "sqlalchemy.engine.row.ROMappingView"
  ],
  "typing.KeysView.__reversed__": [
    "collections._OrderedDictKeysView",
    "collections._odict_keys",
    "typeshed.typeshed.stdlib.collections._OrderedDictKeysView",
    "typeshed.typeshed.stdlib.collections._odict_keys"
  ],
  "typing.Mapping.__contains__": [
    "PIL.Image.Exif",
    "PIL.TiffImagePlugin.ImageFileDirectory_v2",
    "collections.ChainMap",
    "collections.UserDict",
    "configparser.RawConfigParser",
    "configparser.SectionProxy",
    "html5lib._trie.py.Trie",
    "html5lib._utils.BoundMethodDispatcher",
    "humanfriendly.case.CaseInsensitiveDict",
    "ldap3.utils.ciDict.CaseInsensitiveDict",
    "oauthlib.common.CaseInsensitiveDict",
    "passlib.pwd.WordsetDict",
    "pip._vendor.distlib.compat.ChainMap",
    "pip._vendor.requests.cookies.RequestsCookieJar",
    "pip._vendor.resolvelib.structs.IteratorMapping",
    "pip._vendor.urllib3._collections.HTTPHeaderDict",
    "pytz.lazy.LazyDict",
    "shelve.Shelf",
    "sqlalchemy.engine.row.RowMapping",
    "traitlets.config.loader.Config",
    "traitlets.config.loader._DefaultOptionDict",
    "typeshed.typeshed.stdlib.collections.ChainMap",
    "typeshed.typeshed.stdlib.collections.UserDict",
    "typeshed.typeshed.stdlib.configparser.RawConfigParser",
    "typeshed.typeshed.stdlib.configparser.SectionProxy",
    "typeshed.typeshed.stdlib.shelve.Shelf",
    "typeshed.typeshed.stdlib.weakref.WeakKeyDictionary",
    "typeshed.typeshed.stdlib.weakref.WeakValueDictionary",
    "typeshed.typeshed.stubs.Pillow.PIL.Image.Exif",
    "typeshed.typeshed.stubs.Pillow.PIL.TiffImagePlugin.ImageFileDirectory_v2",
    "typeshed.typeshed.stubs.WebOb.webob.cookies.RequestCookies",
    "typeshed.typeshed.stubs.WebOb.webob.headers.EnvironHeaders",
    "typeshed.typeshed.stubs.WebOb.webob.multidict.MultiDict",
    "typeshed.typeshed.stubs.html5lib.html5lib._trie.py.Trie",
    "typeshed.typeshed.stubs.html5lib.html5lib._utils.BoundMethodDispatcher",
    "typeshed.typeshed.stubs.humanfriendly.humanfriendly.case.CaseInsensitiveDict",
    "typeshed.typeshed.stubs.ldap3.ldap3.utils.ciDict.CaseInsensitiveDict",
    "typeshed.typeshed.stubs.oauthlib.oauthlib.common.CaseInsensitiveDict",
    "typeshed.typeshed.stubs.passlib.passlib.pwd.WordsetDict",
    "typeshed.typeshed.stubs.pytz.pytz.lazy.LazyDict",
    "urllib3._collections.HTTPHeaderDict",
    "weakref.WeakKeyDictionary",
    "weakref.WeakValueDictionary",
    "werkzeug.datastructures.headers.Headers",
    "werkzeug.datastructures.structures.CombinedMultiDict"
  ],
  "typing.Mapping.__getitem__": [
    "contextvars.Context",
    "django.utils.datastructures.CaseInsensitiveMapping",
    "html5lib._trie.py.Trie",
    "html5lib._utils.BoundMethodDispatcher",
    "parso.python.tree.UsedNamesMapping",
    "pip._vendor.resolvelib.structs.IteratorMapping",
    "pytz.lazy.LazyDict",
    "types.MappingProxyType",
    "typeshed.typeshed.stdlib.contextvars.Context",
    "typeshed.typeshed.stdlib.types.MappingProxyType",
    "typeshed.typeshed.stubs.html5lib.html5lib._trie.py.Trie",
    "typeshed.typeshed.stubs.html5lib.html5lib._utils.BoundMethodDispatcher",
    "typeshed.typeshed.stubs.libsass.sass.SassMap",
    "typeshed.typeshed.stubs.pytz.pytz.lazy.LazyDict",
    "typeshed.typeshed.stubs.seaborn.seaborn.external.docscrape.NumpyDocString",
    "typeshed.typeshed.stubs.setuptools.setuptools.config.expand.LazyMappingProxy"
  ],
  "typing.Mapping.get": [
    "configparser.RawConfigParser",
    "configparser.SectionProxy",
    "contextvars.Context",
    "dict",
    "google.protobuf.internal.containers.MessageMap",
    "google.protobuf.internal.containers.ScalarMap",
    "html5lib._utils.BoundMethodDispatcher",
    "multiprocessing.managers.DictProxy",
    "pip._vendor.distlib.compat.ChainMap",
    "pip._vendor.requests.cookies.RequestsCookieJar",
    "requests.cookies.RequestsCookieJar",
    "shelve.Shelf",
    "typeshed.typeshed.stdlib.builtins.dict",
    "typeshed.typeshed.stdlib.collections.ChainMap",
    "typeshed.typeshed.stdlib.configparser.RawConfigParser",
    "typeshed.typeshed.stdlib.configparser.SectionProxy",
    "typeshed.typeshed.stdlib.contextvars.Context",
    "typeshed.typeshed.stdlib.multiprocessing.managers.DictProxy",
    "typeshed.typeshed.stdlib.shelve.Shelf",
    "typeshed.typeshed.stdlib.weakref.WeakKeyDictionary",
    "typeshed.typeshed.stdlib.weakref.WeakValueDictionary",
    "typeshed.typeshed.stubs.WebOb.webob.cookies.RequestCookies",
    "typeshed.typeshed.stubs.WebOb.webob.multidict.MultiDict",
    "typeshed.typeshed.stubs.html5lib.html5lib._utils.BoundMethodDispatcher",
    "typeshed.typeshed.stubs.inifile.inifile.IniData",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.internal.containers.MessageMap",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.internal.containers.ScalarMap",
    "typeshed.typeshed.stubs.requests.requests.cookies.RequestsCookieJar"
  ],
  "typing.Mapping.items": [
    "configparser.RawConfigParser",
    "dict",
    "ldap3.utils.ciDict.CaseInsensitiveDict",
    "multiprocessing.managers.DictProxy",
    "mypy_extensions._TypedDict",
    "pip._vendor.requests.cookies.RequestsCookieJar",
    "pip._vendor.urllib3._collections.HTTPHeaderDict",
    "requests.cookies.RequestsCookieJar",
    "sqlalchemy.engine.row.RowMapping",
    "types.MappingProxyType",
    "typeshed.typeshed.stdlib.builtins.dict",
    "typeshed.typeshed.stdlib.configparser.RawConfigParser",
    "typeshed.typeshed.stdlib.multiprocessing.managers.DictProxy",
    "typeshed.typeshed.stdlib.types.MappingProxyType",
    "typeshed.typeshed.stdlib.typing_extensions._TypedDict",
    "typeshed.typeshed.stdlib.weakref.WeakKeyDictionary",
    "typeshed.typeshed.stdlib.weakref.WeakValueDictionary",
    "typeshed.typeshed.stubs.WebOb.webob.cookies.RequestCookies",
    "typeshed.typeshed.stubs.WebOb.webob.multidict.MultiDict",
    "typeshed.typeshed.stubs.inifile.inifile.IniData",
    "typeshed.typeshed.stubs.ldap3.ldap3.utils.ciDict.CaseInsensitiveDict",
    "typeshed.typeshed.stubs.mypy-extensions.mypy_extensions._TypedDict",
    "typeshed.typeshed.stubs.requests.requests.cookies.RequestsCookieJar",
    "typing._TypedDict",
    "typing_extensions._TypedDict",
    "urllib3._collections.HTTPHeaderDict",
    "weakref.WeakKeyDictionary",
    "weakref.WeakValueDictionary"
  ],
  "typing.Mapping.keys": [
    "dict",
    "html5lib._trie._base.Trie",
    "ldap3.utils.ciDict.CaseInsensitiveDict",
    "multiprocessing.managers.DictProxy",
    "mypy_extensions._TypedDict",
    "paramiko.hostkeys.HostKeys",
    "paramiko.hostkeys._SubDict",
    "pip._vendor.requests.cookies.RequestsCookieJar",
    "pip._vendor.urllib3._collections.RecentlyUsedContainer",
    "requests.cookies.RequestsCookieJar",
    "sqlalchemy.engine.row.RowMapping",
    "types.MappingProxyType",
    "typeshed.typeshed.stdlib.builtins.dict",
    "typeshed.typeshed.stdlib.multiprocessing.managers.DictProxy",
    "typeshed.typeshed.stdlib.types.MappingProxyType",
    "typeshed.typeshed.stdlib.typing_extensions._TypedDict",
    "typeshed.typeshed.stdlib.weakref.WeakKeyDictionary",
    "typeshed.typeshed.stdlib.weakref.WeakValueDictionary",
    "typeshed.typeshed.stubs.WebOb.webob.cookies.RequestCookies",
    "typeshed.typeshed.stubs.WebOb.webob.headers.EnvironHeaders",
    "typeshed.typeshed.stubs.WebOb.webob.multidict.MultiDict",
    "typeshed.typeshed.stubs.html5lib.html5lib._trie._base.Trie",
    "typeshed.typeshed.stubs.inifile.inifile.IniData",
    "typeshed.typeshed.stubs.ldap3.ldap3.utils.ciDict.CaseInsensitiveDict",
    "typeshed.typeshed.stubs.mypy-extensions.mypy_extensions._TypedDict",
    "typeshed.typeshed.stubs.paramiko.paramiko.hostkeys.HostKeys",
    "typeshed.typeshed.stubs.paramiko.paramiko.hostkeys._SubDict",
    "typeshed.typeshed.stubs.requests.requests.cookies.RequestsCookieJar",
    "typing._TypedDict",
    "typing_extensions._TypedDict",
    "urllib3._collections.RecentlyUsedContainer",
    "weakref.WeakKeyDictionary",
    "weakref.WeakValueDictionary"
  ],
  "typing.Mapping.values": [
    "dict",
    "ldap3.utils.ciDict.CaseInsensitiveDict",
    "multiprocessing.managers.DictProxy",
    "mypy_extensions._TypedDict",
    "paramiko.hostkeys.HostKeys",
    "pip._vendor.requests.cookies.RequestsCookieJar",
    "requests.cookies.RequestsCookieJar",
    "sqlalchemy.engine.row.RowMapping",
    "types.MappingProxyType",
    "typeshed.typeshed.stdlib.builtins.dict",
    "typeshed.typeshed.stdlib.multiprocessing.managers.DictProxy",
    "typeshed.typeshed.stdlib.types.MappingProxyType",
    "typeshed.typeshed.stdlib.typing_extensions._TypedDict",
    "typeshed.typeshed.stdlib.weakref.WeakKeyDictionary",
    "typeshed.typeshed.stdlib.weakref.WeakValueDictionary",
    "typeshed.typeshed.stubs.WebOb.webob.cookies.RequestCookies",
    "typeshed.typeshed.stubs.WebOb.webob.multidict.MultiDict",
    "typeshed.typeshed.stubs.inifile.inifile.IniData",
    "typeshed.typeshed.stubs.ldap3.ldap3.utils.ciDict.CaseInsensitiveDict",
    "typeshed.typeshed.stubs.mypy-extensions.mypy_extensions._TypedDict",
    "typeshed.typeshed.stubs.paramiko.paramiko.hostkeys.HostKeys",
    "typeshed.typeshed.stubs.requests.requests.cookies.RequestsCookieJar",
    "typing._TypedDict",
    "typing_extensions._TypedDict",
    "weakref.WeakKeyDictionary",
    "weakref.WeakValueDictionary"
  ],
  "typing.MappingView.__init__": [
    "typing.ItemsView",
    "typing.KeysView",
    "typing.ValuesView"
  ],
  "typing.MappingView.__len__": [
    "sqlalchemy.engine.result.RMKeyView",
    "sqlalchemy.engine.row.ROMappingView"
  ],
  "typing.MutableMapping.__delitem__": [
    "PIL.Image.Exif",
    "PIL.TiffImagePlugin.ImageFileDirectory_v2",
    "babel.localedata.LocaleDataDict",
    "cachetools.Cache",
    "collections.ChainMap",
    "collections.UserDict",
    "configparser.ConverterMapping",
    "configparser.RawConfigParser",
    "configparser.SectionProxy",
    "dbm._Database",
    "dbm.dumb._Database",
    "dict",
    "google.protobuf.internal.containers.MessageMap",
    "google.protobuf.internal.containers.ScalarMap",
    "jsonschema._utils.URIDict",
    "ldap3.utils.ciDict.CaseInsensitiveDict",
    "multiprocessing.managers.DictProxy",
    "os._Environ",
    "paramiko.hostkeys.HostKeys",
    "paramiko.hostkeys._SubDict",
    "passlib.pwd.WordsetDict",
    "pip._vendor.distlib.compat.ChainMap",
    "pip._vendor.requests.cookies.RequestsCookieJar",
    "pip._vendor.requests.structures.CaseInsensitiveDict",
    "pip._vendor.urllib3._collections.HTTPHeaderDict",
    "pip._vendor.urllib3._collections.RecentlyUsedContainer",
    "requests.cookies.RequestsCookieJar",
    "requests.structures.CaseInsensitiveDict",
    "shelve.Shelf",
    "sqlalchemy.sql.base._DialectArgDict",
    "sqlalchemy.sql.base._DialectArgView",
    "typeshed.typeshed.stdlib.builtins.dict",
    "typeshed.typeshed.stdlib.collections.ChainMap",
    "typeshed.typeshed.stdlib.collections.UserDict",
    "typeshed.typeshed.stdlib.configparser.ConverterMapping",
    "typeshed.typeshed.stdlib.configparser.RawConfigParser",
    "typeshed.typeshed.stdlib.configparser.SectionProxy",
    "typeshed.typeshed.stdlib.dbm._Database",
    "typeshed.typeshed.stdlib.dbm.dumb._Database",
    "typeshed.typeshed.stdlib.multiprocessing.managers.DictProxy",
    "typeshed.typeshed.stdlib.os._Environ",
    "typeshed.typeshed.stdlib.shelve.Shelf",
    "typeshed.typeshed.stdlib.weakref.WeakKeyDictionary",
    "typeshed.typeshed.stdlib.weakref.WeakValueDictionary",
    "typeshed.typeshed.stubs.Pillow.PIL.Image.Exif",
    "typeshed.typeshed.stubs.Pillow.PIL.TiffImagePlugin.ImageFileDirectory_v2",
    "typeshed.typeshed.stubs.WebOb.webob.cookies.RequestCookies",
    "typeshed.typeshed.stubs.WebOb.webob.headers.EnvironHeaders",
    "typeshed.typeshed.stubs.WebOb.webob.multidict.MultiDict",
    "typeshed.typeshed.stubs.cachetools.cachetools.Cache",
    "typeshed.typeshed.stubs.inifile.inifile.IniData",
    "typeshed.typeshed.stubs.jsonschema.jsonschema._utils.URIDict",
    "typeshed.typeshed.stubs.ldap3.ldap3.utils.ciDict.CaseInsensitiveDict",
    "typeshed.typeshed.stubs.paramiko.paramiko.hostkeys.HostKeys",
    "typeshed.typeshed.stubs.paramiko.paramiko.hostkeys._SubDict",
    "typeshed.typeshed.stubs.passlib.passlib.pwd.WordsetDict",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.internal.containers.MessageMap",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.internal.containers.ScalarMap",
    "typeshed.typeshed.stubs.requests.requests.cookies.RequestsCookieJar",
    "typeshed.typeshed.stubs.requests.requests.structures.CaseInsensitiveDict",
    "urllib3._collections.HTTPHeaderDict",
    "urllib3._collections.RecentlyUsedContainer",
    "weakref.WeakKeyDictionary",
    "weakref.WeakValueDictionary"
  ],
  "typing.MutableMapping.__setitem__": [
    "PIL.Image.Exif",
    "PIL.TiffImagePlugin.ImageFileDirectory_v2",
    "babel.localedata.LocaleDataDict",
    "cachetools.Cache",
    "collections.ChainMap",
    "collections.UserDict",
    "configparser.ConverterMapping",
    "configparser.RawConfigParser",
    "configparser.SectionProxy",
    "dbm._Database",
    "dbm.dumb._Database",
    "dict",
    "google.protobuf.internal.containers.MessageMap",
    "google.protobuf.internal.containers.ScalarMap",
    "jsonschema._utils.URIDict",
    "ldap3.utils.ciDict.CaseInsensitiveDict",
    "multiprocessing.managers.DictProxy",
    "os._Environ",
    "paramiko.hostkeys.HostKeys",
    "paramiko.hostkeys._SubDict",
    "passlib.pwd.WordsetDict",
    "pip._vendor.distlib.compat.ChainMap",
    "pip._vendor.requests.cookies.RequestsCookieJar",
    "pip._vendor.requests.structures.CaseInsensitiveDict",
    "pip._vendor.urllib3._collections.HTTPHeaderDict",
    "pip._vendor.urllib3._collections.RecentlyUsedContainer",
    "requests.cookies.RequestsCookieJar",
    "requests.structures.CaseInsensitiveDict",
    "shelve.Shelf",
    "sqlalchemy.sql.base._DialectArgDict",
    "sqlalchemy.sql.base._DialectArgView",
    "typeshed.typeshed.stdlib.builtins.dict",
    "typeshed.typeshed.stdlib.collections.ChainMap",
    "typeshed.typeshed.stdlib.collections.UserDict",
    "typeshed.typeshed.stdlib.configparser.ConverterMapping",
    "typeshed.typeshed.stdlib.configparser.RawConfigParser",
    "typeshed.typeshed.stdlib.configparser.SectionProxy",
    "typeshed.typeshed.stdlib.dbm._Database",
    "typeshed.typeshed.stdlib.dbm.dumb._Database",
    "typeshed.typeshed.stdlib.multiprocessing.managers.DictProxy",
    "typeshed.typeshed.stdlib.os._Environ",
    "typeshed.typeshed.stdlib.shelve.Shelf",
    "typeshed.typeshed.stdlib.weakref.WeakKeyDictionary",
    "typeshed.typeshed.stdlib.weakref.WeakValueDictionary",
    "typeshed.typeshed.stubs.Pillow.PIL.Image.Exif",
    "typeshed.typeshed.stubs.Pillow.PIL.TiffImagePlugin.ImageFileDirectory_v2",
    "typeshed.typeshed.stubs.WebOb.webob.cookies.RequestCookies",
    "typeshed.typeshed.stubs.WebOb.webob.headers.EnvironHeaders",
    "typeshed.typeshed.stubs.WebOb.webob.multidict.MultiDict",
    "typeshed.typeshed.stubs.cachetools.cachetools.Cache",
    "typeshed.typeshed.stubs.inifile.inifile.IniData",
    "typeshed.typeshed.stubs.jsonschema.jsonschema._utils.URIDict",
    "typeshed.typeshed.stubs.ldap3.ldap3.utils.ciDict.CaseInsensitiveDict",
    "typeshed.typeshed.stubs.paramiko.paramiko.hostkeys.HostKeys",
    "typeshed.typeshed.stubs.paramiko.paramiko.hostkeys._SubDict",
    "typeshed.typeshed.stubs.passlib.passlib.pwd.WordsetDict",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.internal.containers.MessageMap",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.internal.containers.ScalarMap",
    "typeshed.typeshed.stubs.requests.requests.cookies.RequestsCookieJar",
    "typeshed.typeshed.stubs.requests.requests.structures.CaseInsensitiveDict",
    "urllib3._collections.HTTPHeaderDict",
    "urllib3._collections.RecentlyUsedContainer",
    "weakref.WeakKeyDictionary",
    "weakref.WeakValueDictionary"
  ],
  "typing.MutableMapping.clear": [
    "django.contrib.sessions.backends.base.SessionBase",
    "django.http.request.QueryDict",
    "paramiko.hostkeys.HostKeys",
    "passlib.utils.compat._ordered_dict.OrderedDict",
    "pip._vendor.distlib.compat.ChainMap",
    "pip._vendor.distlib.compat.OrderedDict",
    "pip._vendor.urllib3._collections.RecentlyUsedContainer",
    "sqlalchemy.ext.mutable.MutableDict",
    "typeshed.typeshed.stubs.WebOb.webob.cookies.RequestCookies",
    "typeshed.typeshed.stubs.WebOb.webob.multidict.MultiDict",
    "typeshed.typeshed.stubs.boltons.boltons.cacheutils.LRI",
    "typeshed.typeshed.stubs.boltons.boltons.dictutils.FrozenDict",
    "typeshed.typeshed.stubs.boltons.boltons.dictutils.OneToOne",
    "typeshed.typeshed.stubs.boltons.boltons.dictutils.OrderedMultiDict",
    "typeshed.typeshed.stubs.paramiko.paramiko.hostkeys.HostKeys",
    "typeshed.typeshed.stubs.passlib.passlib.utils.compat._ordered_dict.OrderedDict",
    "urllib3._collections.RecentlyUsedContainer",
    "werkzeug.datastructures.headers.Headers",
    "werkzeug.datastructures.mixins.ImmutableDictMixin",
    "werkzeug.datastructures.mixins.UpdateDictMixin"
  ],
  "typing.MutableMapping.pop": [
    "cachetools.Cache",
    "collections.ChainMap",
    "dict",
    "multiprocessing.managers.DictProxy",
    "pip._vendor.distlib.compat.ChainMap",
    "pip._vendor.urllib3._collections.HTTPHeaderDict",
    "typeshed.typeshed.stdlib.builtins.dict",
    "typeshed.typeshed.stdlib.collections.ChainMap",
    "typeshed.typeshed.stdlib.multiprocessing.managers.DictProxy",
    "typeshed.typeshed.stdlib.weakref.WeakKeyDictionary",
    "typeshed.typeshed.stdlib.weakref.WeakValueDictionary",
    "typeshed.typeshed.stubs.WebOb.webob.multidict.MultiDict",
    "typeshed.typeshed.stubs.cachetools.cachetools.Cache",
    "urllib3._collections.HTTPHeaderDict",
    "weakref.WeakKeyDictionary",
    "weakref.WeakValueDictionary"
  ],
  "typing.MutableMapping.popitem": [
    "collections.OrderedDict",
    "django.http.request.QueryDict",
    "passlib.utils.compat._ordered_dict.OrderedDict",
    "pip._vendor.distlib.compat.ChainMap",
    "pip._vendor.distlib.compat.OrderedDict",
    "sqlalchemy.ext.mutable.MutableDict",
    "typeshed.typeshed.stdlib.collections.OrderedDict",
    "typeshed.typeshed.stubs.WebOb.webob.multidict.MultiDict",
    "typeshed.typeshed.stubs.boltons.boltons.cacheutils.LRI",
    "typeshed.typeshed.stubs.boltons.boltons.dictutils.FrozenDict",
    "typeshed.typeshed.stubs.boltons.boltons.dictutils.OneToOne",
    "typeshed.typeshed.stubs.passlib.passlib.utils.compat._ordered_dict.OrderedDict",
    "werkzeug.datastructures.headers.Headers",
    "werkzeug.datastructures.mixins.ImmutableDictMixin",
    "werkzeug.datastructures.mixins.UpdateDictMixin",
    "werkzeug.datastructures.structures.MultiDict"
  ],
  "typing.MutableMapping.setdefault": [
    "cachetools.Cache",
    "collections.ChainMap",
    "collections.OrderedDict",
    "django.utils.datastructures.MultiValueDict",
    "http.cookies.Morsel",
    "os._Environ",
    "passlib.utils.compat._ordered_dict.OrderedDict",
    "pip._vendor.distlib.compat.OrderedDict",
    "sqlalchemy.ext.mutable.MutableDict",
    "sqlalchemy.util._collections.LRUCache",
    "typeshed.typeshed.stdlib.collections.ChainMap",
    "typeshed.typeshed.stdlib.collections.OrderedDict",
    "typeshed.typeshed.stdlib.http.cookies.Morsel",
    "typeshed.typeshed.stdlib.os._Environ",
    "typeshed.typeshed.stdlib.weakref.WeakKeyDictionary",
    "typeshed.typeshed.stdlib.weakref.WeakValueDictionary",
    "typeshed.typeshed.stubs.WebOb.webob.multidict.MultiDict",
    "typeshed.typeshed.stubs.boltons.boltons.cacheutils.LRI",
    "typeshed.typeshed.stubs.boltons.boltons.dictutils.FrozenDict",
    "typeshed.typeshed.stubs.boltons.boltons.dictutils.OneToOne",
    "typeshed.typeshed.stubs.boltons.boltons.dictutils.OrderedMultiDict",
    "typeshed.typeshed.stubs.cachetools.cachetools.Cache",
    "typeshed.typeshed.stubs.passlib.passlib.utils.compat._ordered_dict.OrderedDict",
    "weakref.WeakKeyDictionary",
    "weakref.WeakValueDictionary",
    "werkzeug.datastructures.headers.Headers",
    "werkzeug.datastructures.mixins.ImmutableDictMixin",
    "werkzeug.datastructures.mixins.UpdateDictMixin",
    "werkzeug.datastructures.structures.MultiDict"
  ],
  "typing.MutableMapping.update": [
    "collections.Counter",
    "http.cookies.Morsel",
    "humanfriendly.case.CaseInsensitiveDict",
    "oauthlib.common.CaseInsensitiveDict",
    "passlib.utils.compat._ordered_dict.OrderedDict",
    "pip._vendor.distlib.compat.OrderedDict",
    "pip._vendor.requests.cookies.RequestsCookieJar",
    "redis.client.CaseInsensitiveDict",
    "requests.cookies.RequestsCookieJar",
    "sqlalchemy.ext.mutable.MutableDict",
    "stripe.stripe_object.StripeObject",
    "typeshed.typeshed.stdlib.collections.Counter",
    "typeshed.typeshed.stdlib.http.cookies.Morsel",
    "typeshed.typeshed.stubs.WebOb.webob.multidict.MultiDict",
    "typeshed.typeshed.stubs.boltons.boltons.cacheutils.LRI",
    "typeshed.typeshed.stubs.boltons.boltons.dictutils.ManyToMany",
    "typeshed.typeshed.stubs.boltons.boltons.dictutils.OneToOne",
    "typeshed.typeshed.stubs.boltons.boltons.dictutils.OrderedMultiDict",
    "typeshed.typeshed.stubs.humanfriendly.humanfriendly.case.CaseInsensitiveDict",
    "typeshed.typeshed.stubs.oauthlib.oauthlib.common.CaseInsensitiveDict",
    "typeshed.typeshed.stubs.passlib.passlib.utils.compat._ordered_dict.OrderedDict",
    "typeshed.typeshed.stubs.redis.redis.client.CaseInsensitiveDict",
    "typeshed.typeshed.stubs.requests.requests.cookies.RequestsCookieJar",
    "typeshed.typeshed.stubs.stripe.stripe.stripe_object.StripeObject",
    "werkzeug.datastructures.headers.Headers",
    "werkzeug.datastructures.mixins.ImmutableDictMixin",
    "werkzeug.datastructures.mixins.UpdateDictMixin",
    "werkzeug.datastructures.structures.MultiDict"
  ],
  "typing.MutableSequence.__delitem__": [
    "array.array",
    "bytearray",
    "collections.UserList",
    "collections.deque",
    "list",
    "multiprocessing.managers.BaseListProxy",
    "typeshed.typeshed.stdlib.array.array",
    "typeshed.typeshed.stdlib.builtins.bytearray",
    "typeshed.typeshed.stdlib.builtins.list",
    "typeshed.typeshed.stdlib.collections.UserList",
    "typeshed.typeshed.stdlib.collections.deque",
    "typeshed.typeshed.stdlib.multiprocessing.managers.BaseListProxy"
  ],
  "typing.MutableSequence.__getitem__": [
    "array.array",
    "bytearray",
    "collections.UserList",
    "collections.deque",
    "list",
    "multiprocessing.managers.BaseListProxy",
    "typeshed.typeshed.stdlib.array.array",
    "typeshed.typeshed.stdlib.builtins.bytearray",
    "typeshed.typeshed.stdlib.builtins.list",
    "typeshed.typeshed.stdlib.collections.UserList",
    "typeshed.typeshed.stdlib.collections.deque",
    "typeshed.typeshed.stdlib.multiprocessing.managers.BaseListProxy"
  ],
  "typing.MutableSequence.__iadd__": [
    "array.array",
    "bytearray",
    "collections.UserList",
    "collections.deque",
    "list",
    "multiprocessing.managers.ListProxy",
    "typeshed.typeshed.stdlib.array.array",
    "typeshed.typeshed.stdlib.builtins.bytearray",
    "typeshed.typeshed.stdlib.builtins.list",
    "typeshed.typeshed.stdlib.collections.UserList",
    "typeshed.typeshed.stdlib.collections.deque",
    "typeshed.typeshed.stdlib.multiprocessing.managers.ListProxy"
  ],
  "typing.MutableSequence.__setitem__": [
    "array.array",
    "bytearray",
    "collections.UserList",
    "collections.deque",
    "list",
    "multiprocessing.managers.BaseListProxy",
    "typeshed.typeshed.stdlib.array.array",
    "typeshed.typeshed.stdlib.builtins.bytearray",
    "typeshed.typeshed.stdlib.builtins.list",
    "typeshed.typeshed.stdlib.collections.UserList",
    "typeshed.typeshed.stdlib.collections.deque",
    "typeshed.typeshed.stdlib.multiprocessing.managers.BaseListProxy"
  ],
  "typing.MutableSequence.append": [
    "array.array",
    "bytearray",
    "collections.UserList",
    "collections.deque",
    "list",
    "multiprocessing.managers.BaseListProxy",
    "typeshed.typeshed.stdlib.array.array",
    "typeshed.typeshed.stdlib.builtins.bytearray",
    "typeshed.typeshed.stdlib.builtins.list",
    "typeshed.typeshed.stdlib.collections.UserList",
    "typeshed.typeshed.stdlib.collections.deque",
    "typeshed.typeshed.stdlib.multiprocessing.managers.BaseListProxy"
  ],
  "typing.MutableSequence.clear": [
    "crontab.CronSlices",
    "sqlalchemy.ext.mutable.MutableList",
    "typeshed.typeshed.stubs.python-crontab.crontab.CronSlices"
  ],
  "typing.MutableSequence.extend": [
    "array.array",
    "bytearray",
    "collections.UserList",
    "collections.deque",
    "list",
    "multiprocessing.managers.BaseListProxy",
    "typeshed.typeshed.stdlib.array.array",
    "typeshed.typeshed.stdlib.builtins.bytearray",
    "typeshed.typeshed.stdlib.builtins.list",
    "typeshed.typeshed.stdlib.collections.UserList",
    "typeshed.typeshed.stdlib.collections.deque",
    "typeshed.typeshed.stdlib.multiprocessing.managers.BaseListProxy"
  ],
  "typing.MutableSequence.insert": [
    "array.array",
    "bytearray",
    "collections.UserList",
    "collections.deque",
    "list",
    "multiprocessing.managers.BaseListProxy",
    "typeshed.typeshed.stdlib.array.array",
    "typeshed.typeshed.stdlib.builtins.bytearray",
    "typeshed.typeshed.stdlib.builtins.list",
    "typeshed.typeshed.stdlib.collections.UserList",
    "typeshed.typeshed.stdlib.collections.deque",
    "typeshed.typeshed.stdlib.multiprocessing.managers.BaseListProxy"
  ],
  "typing.MutableSequence.pop": [
    "array.array",
    "bytearray",
    "collections.UserList",
    "collections.deque",
    "list",
    "multiprocessing.managers.BaseListProxy",
    "typeshed.typeshed.stdlib.array.array",
    "typeshed.typeshed.stdlib.builtins.bytearray",
    "typeshed.typeshed.stdlib.builtins.list",
    "typeshed.typeshed.stdlib.collections.UserList",
    "typeshed.typeshed.stdlib.collections.deque",
    "typeshed.typeshed.stdlib.multiprocessing.managers.BaseListProxy"
  ],
  "typing.MutableSequence.remove": [
    "array.array",
    "bytearray",
    "collections.UserList",
    "collections.deque",
    "list",
    "multiprocessing.managers.BaseListProxy",
    "typeshed.typeshed.stdlib.array.array",
    "typeshed.typeshed.stdlib.builtins.bytearray",
    "typeshed.typeshed.stdlib.builtins.list",
    "typeshed.typeshed.stdlib.collections.UserList",
    "typeshed.typeshed.stdlib.collections.deque",
    "typeshed.typeshed.stdlib.multiprocessing.managers.BaseListProxy"
  ],
  "typing.MutableSequence.reverse": [
    "sqlalchemy.ext.mutable.MutableList",
    "typeshed.typeshed.stubs.boltons.boltons.listutils.BarrelList",
    "werkzeug.datastructures.mixins.ImmutableListMixin"
  ],
  "typing.MutableSet.__iand__": [
    "_weakrefset.WeakSet",
    "set",
    "typeshed.typeshed.stdlib._weakrefset.WeakSet",
    "typeshed.typeshed.stdlib.builtins.set"
  ],
  "typing.MutableSet.__ior__": [
    "_weakrefset.WeakSet",
    "set",
    "typeshed.typeshed.stdlib._weakrefset.WeakSet",
    "typeshed.typeshed.stdlib.builtins.set"
  ],
  "typing.MutableSet.__isub__": [
    "_weakrefset.WeakSet",
    "set",
    "typeshed.typeshed.stdlib._weakrefset.WeakSet",
    "typeshed.typeshed.stdlib.builtins.set"
  ],
  "typing.MutableSet.__ixor__": [
    "_weakrefset.WeakSet",
    "set",
    "typeshed.typeshed.stdlib._weakrefset.WeakSet",
    "typeshed.typeshed.stdlib.builtins.set"
  ],
  "typing.MutableSet.add": [
    "_weakrefset.WeakSet",
    "django.utils.datastructures.OrderedSet",
    "marshmallow.orderedset.OrderedSet",
    "set",
    "typeshed.typeshed.stdlib._weakrefset.WeakSet",
    "typeshed.typeshed.stdlib.builtins.set",
    "typeshed.typeshed.stubs.boltons.boltons.setutils.IndexedSet"
  ],
  "typing.MutableSet.clear": [
    "sqlalchemy.ext.mutable.MutableSet",
    "sqlalchemy.util._collections.OrderedSet",
    "typeshed.typeshed.stubs.boltons.boltons.setutils.IndexedSet",
    "werkzeug.datastructures.structures.HeaderSet"
  ],
  "typing.MutableSet.discard": [
    "_weakrefset.WeakSet",
    "django.utils.datastructures.OrderedSet",
    "marshmallow.orderedset.OrderedSet",
    "set",
    "typeshed.typeshed.stdlib._weakrefset.WeakSet",
    "typeshed.typeshed.stdlib.builtins.set",
    "typeshed.typeshed.stubs.boltons.boltons.setutils.IndexedSet"
  ],
  "typing.MutableSet.pop": [
    "marshmallow.orderedset.OrderedSet",
    "sqlalchemy.ext.mutable.MutableSet",
    "sqlalchemy.testing.util.RandomSet",
    "typeshed.typeshed.stubs.boltons.boltons.setutils.IndexedSet"
  ],
  "typing.MutableSet.remove": [
    "_weakrefset.WeakSet",
    "django.utils.datastructures.OrderedSet",
    "set",
    "typeshed.typeshed.stdlib._weakrefset.WeakSet",
    "typeshed.typeshed.stdlib.builtins.set",
    "typeshed.typeshed.stubs.boltons.boltons.setutils.IndexedSet"
  ],
  "typing.NamedTuple.__init__": [
    "IPython.core.guarded_eval.EvaluationContext",
    "IPython.core.guarded_eval._DummyNamedTuple",
    "IPython.utils.tokenutil.Token",
    "PIL.TiffTags._TagInfo",
    "_curses._ncurses_version",
    "_decimal.DecimalTuple",
    "aifc._aifc_params",
    "asttokens.util.Token",
    "babel.messages.jslexer.Token",
    "concurrent.futures._base.DoneAndNotDoneFutures",
    "consolemenu.prompt_utils.InputResult",
    "dataclasses_json.core.FieldOverride",
    "datetime._IsoCalendarDate",
    "difflib.Match",
    "dis.Instruction",
    "django.contrib.gis.db.models.fields.SRIDCacheEntry",
    "django.db.backends.base.introspection.FieldInfo",
    "django.db.backends.base.introspection.TableInfo",
    "django.db.backends.mysql.introspection.InfoLine",
    "django.db.migrations.operations.utils.FieldReference",
    "django.db.models.query_utils.PathInfo",
    "django.db.models.sql.query.JoinInfo",
    "django.template.defaulttags.GroupedResult",
    "docutils._VersionInfo",
    "executing._VersionInfo",
    "fpdf.annotations.FileSpec",
    "fpdf.drawing.Arc",
    "fpdf.drawing.BezierCurve",
    "fpdf.drawing.Close",
    "fpdf.drawing.Ellipse",
    "fpdf.drawing.HorizontalLine",
    "fpdf.drawing.ImplicitClose",
    "fpdf.drawing.Line",
    "fpdf.drawing.Move",
    "fpdf.drawing.Point",
    "fpdf.drawing.QuadraticBezierCurve",
    "fpdf.drawing.Rectangle",
    "fpdf.drawing.RelativeArc",
    "fpdf.drawing.RelativeBezierCurve",
    "fpdf.drawing.RelativeHorizontalLine",
    "fpdf.drawing.RelativeLine",
    "fpdf.drawing.RelativeMove",
    "fpdf.drawing.RelativeQuadraticBezierCurve",
    "fpdf.drawing.RelativeVerticalLine",
    "fpdf.drawing.RoundedRectangle",
    "fpdf.drawing.Transform",
    "fpdf.drawing.VerticalLine",
    "fpdf.drawing._DeviceCMYKBase",
    "fpdf.drawing._DeviceGrayBase",
    "fpdf.drawing._DeviceRGBBase",
    "fpdf.fpdf.TitleStyle",
    "fpdf.fpdf.ToCPlaceholder",
    "fpdf.line_break.HyphenHint",
    "fpdf.line_break.SpaceHint",
    "fpdf.line_break.TextLine",
    "fpdf.outline.OutlineSection",
    "functools._CacheInfo",
    "google.cloud.ndb._eventloop._Event",
    "google.cloud.ndb.context._ContextTuple",
    "graphql.execution.tests.test_benchmark.Container",
    "graphql.execution.tests.test_lists.Data",
    "graphql.execution.tests.test_subscribe.Email",
    "graphql.type.introspection.Field",
    "graphql.type.introspection.InputField",
    "graphql.type.schema.InterfaceImplementations",
    "humanfriendly.CombinedUnit",
    "humanfriendly.SizeUnit",
    "importlib.metadata._EntryPointBase",
    "importlib_metadata._collections.Pair",
    "inspect.ArgInfo",
    "inspect.ArgSpec",
    "inspect.Arguments",
    "inspect.Attribute",
    "inspect.ClosureVars",
    "inspect.FrameInfo",
    "inspect.FullArgSpec",
    "inspect.Traceback",
    "invoke.util.ExceptionWrapper",
    "jinja2.compiler.CodeGenerator._FinalizeInfo",
    "jinja2.filters._GroupTuple",
    "jinja2.lexer.Token",
    "jinja2.lexer._Rule",
    "keyboard._mouse_event.ButtonEvent",
    "keyboard._mouse_event.MoveEvent",
    "keyboard._mouse_event.WheelEvent",
    "ldap3.abstract.cursor.Operation",
    "libcst._parser.parso.python.tokenize.Token",
    "mypy_django_plugin.transformers.manytomany.M2MArguments",
    "mypy_django_plugin.transformers.manytomany.M2MThrough",
    "mypy_django_plugin.transformers.manytomany.M2MTo",
    "nntplib.ArticleInfo",
    "nntplib.GroupInfo",
    "opentracing.tracer.Reference",
    "packaging._manylinux._GLibCVersion",
    "packaging._musllinux._MuslVersion",
    "packaging._parser.ParsedRequirement",
    "packaging.version._Version",
    "parso.python.diff._NodesTreeNode._ChildrenGroup",
    "parso.python.tokenize.Token",
    "parso.python.tokenize.TokenCollection",
    "parso.utils.Version",
    "parso.utils._PythonVersionInfo",
    "peewee.ColumnMetadata",
    "peewee.ForeignKeyMetadata",
    "peewee.IndexMetadata",
    "peewee.ViewMetadata",
    "pika.adapters.blocking_connection.BlockingChannel._FlowOkCallbackResultArgs",
    "pika.adapters.blocking_connection.BlockingChannel._MethodFrameCallbackResultArgs",
    "pika.adapters.blocking_connection.BlockingChannel._OnMessageConfirmationReportArgs",
    "pika.adapters.blocking_connection.BlockingChannel._RxMessageArgs",
    "pika.adapters.blocking_connection.BlockingConnection._OnChannelOpenedArgs",
    "pika.adapters.blocking_connection.BlockingConnection._OnClosedArgs",
    "pika.adapters.twisted_connection.ReceivedMessage",
    "pip._internal.commands.CommandInfo",
    "pip._internal.commands.show._PackageInfo",
    "pip._internal.index.collector.CollectedSources",
    "pip._internal.metadata.base.RequiresEntry",
    "pip._internal.metadata.pkg_resources.EntryPoint",
    "pip._internal.models.link._CleanResult",
    "pip._internal.network.auth.Credentials",
    "pip._internal.operations.check.PackageDetails",
    "pip._internal.operations.freeze._EditableInfo",
    "pip._internal.pyproject.BuildSystemDetails",
    "pip._internal.resolution.resolvelib.factory.CollectedRootRequirements",
    "pip._vendor.chardet.sbcharsetprober.SingleByteCharSetModel",
    "pip._vendor.packaging._manylinux._GLibCVersion",
    "pip._vendor.packaging._musllinux._MuslVersion",
    "pip._vendor.packaging.version._Version",
    "pip._vendor.pkg_resources.MemoizedZipManifests.manifest_mod",
    "pip._vendor.pyparsing.core.ParserElement.DebugActions",
    "pip._vendor.pyparsing.diagram.NamedDiagram",
    "pip._vendor.pyparsing.version_info",
    "pip._vendor.resolvelib.resolvers.RequirementInformation",
    "pip._vendor.resolvelib.resolvers.Result",
    "pip._vendor.resolvelib.resolvers.State",
    "pip._vendor.rich._win32_console.WindowsCoordinates",
    "pip._vendor.rich.ansi._AnsiToken",
    "pip._vendor.rich.color.Color",
    "pip._vendor.rich.color_triplet.ColorTriplet",
    "pip._vendor.rich.console.ConsoleDimensions",
    "pip._vendor.rich.layout.LayoutRender",
    "pip._vendor.rich.markup.Tag",
    "pip._vendor.rich.measure.Measurement",
    "pip._vendor.rich.pretty._dummy_namedtuple",
    "pip._vendor.rich.progress.ProgressSample",
    "pip._vendor.rich.region.Region",
    "pip._vendor.rich.segment.Segment",
    "pip._vendor.rich.syntax._SyntaxHighlightRange",
    "pip._vendor.rich.table._Cell",
    "pip._vendor.rich.text.Span",
    "pip._vendor.tomli._parser.Output",
    "pip._vendor.typing_extensions._make_nmtuple.nm_tpl",
    "pip._vendor.urllib3.poolmanager.PoolKey",
    "pip._vendor.urllib3.poolmanager.ProxyConfig",
    "pip._vendor.urllib3.util.retry.RequestHistory",
    "pkgutil.ModuleInfo",
    "platform.uname_result",
    "promise.dataloader.Loader",
    "prompt_toolkit.completion.fuzzy_completer._FuzzyMatch",
    "prompt_toolkit.data_structures.Point",
    "prompt_toolkit.data_structures.Size",
    "prompt_toolkit.layout.controls._ProcessedLine",
    "prompt_toolkit.styles.base.Attrs",
    "psutil._common.addr",
    "psutil._common.pconn",
    "psutil._common.pcputimes",
    "psutil._common.pctxsw",
    "psutil._common.pgids",
    "psutil._common.pio",
    "psutil._common.pionice",
    "psutil._common.popenfile",
    "psutil._common.pthread",
    "psutil._common.puids",
    "psutil._common.sbattery",
    "psutil._common.sconn",
    "psutil._common.scpufreq",
    "psutil._common.scpustats",
    "psutil._common.sdiskio",
    "psutil._common.sdiskpart",
    "psutil._common.sdiskusage",
    "psutil._common.sfan",
    "psutil._common.shwtemp",
    "psutil._common.snetio",
    "psutil._common.snicaddr",
    "psutil._common.snicstats",
    "psutil._common.sswap",
    "psutil._common.suser",
    "psutil._psaix.pmem",
    "psutil._psaix.scputimes",
    "psutil._psaix.svmem",
    "psutil._psbsd.Process.nt_mmap_ext",
    "psutil._psbsd.Process.nt_mmap_grouped",
    "psutil._psbsd.pcputimes",
    "psutil._psbsd.pmem",
    "psutil._psbsd.pmmap_ext",
    "psutil._psbsd.pmmap_grouped",
    "psutil._psbsd.scputimes",
    "psutil._psbsd.sdiskio",
    "psutil._psbsd.svmem",
    "psutil._pslinux.pcputimes",
    "psutil._pslinux.pfullmem",
    "psutil._pslinux.pio",
    "psutil._pslinux.pmem",
    "psutil._pslinux.pmmap_grouped",
    "psutil._pslinux.popenfile",
    "psutil._pslinux.sdiskio",
    "psutil._pslinux.svmem",
    "psutil._psosx.pfullmem",
    "psutil._psosx.pmem",
    "psutil._psosx.scputimes",
    "psutil._psosx.svmem",
    "psutil._pssunos.Process.nt_mmap_ext",
    "psutil._pssunos.Process.nt_mmap_grouped",
    "psutil._pssunos.pcputimes",
    "psutil._pssunos.pmem",
    "psutil._pssunos.pmmap_grouped",
    "psutil._pssunos.scputimes",
    "psutil._pssunos.svmem",
    "psutil._pswindows.pfullmem",
    "psutil._pswindows.pio",
    "psutil._pswindows.pmem",
    "psutil._pswindows.pmmap_grouped",
    "psutil._pswindows.scputimes",
    "psutil._pswindows.svmem",
    "pyautogui.Point",
    "pyautogui.Size",
    "pyscreeze.Box",
    "pyscreeze.Point",
    "pyscreeze.RGB",
    "sched.Event",
    "selectors.SelectorKey",
    "shutil._ntuple_diskusage",
    "sndhdr.SndHeaders",
    "sqlalchemy.engine.url._URLTuple",
    "sqlalchemy.orm.attributes._HasEntityNamespace",
    "sqlalchemy.orm.strategies.SelectInLoader.query_info",
    "sqlalchemy.sql.compiler.ExpandedState",
    "sqlalchemy.util.compat.FullArgSpec",
    "ssl.DefaultVerifyPaths",
    "ssl._ASN1ObjectBase",
    "stack_data.core.MarkerInLine",
    "stack_data.core.RangeInLine",
    "stack_data.core.Variable",
    "sunau._sunau_params",
    "tabulate.DataRow",
    "tabulate.Line",
    "tabulate.TableFormat",
    "tokenize._TokenInfo",
    "tomli._parser.Output",
    "typeshed.typeshed.stdlib._curses._ncurses_version",
    "typeshed.typeshed.stdlib._decimal.DecimalTuple",
    "typeshed.typeshed.stdlib.aifc._aifc_params",
    "typeshed.typeshed.stdlib.concurrent.futures._base.DoneAndNotDoneFutures",
    "typeshed.typeshed.stdlib.datetime._IsoCalendarDate",
    "typeshed.typeshed.stdlib.difflib.Match",
    "typeshed.typeshed.stdlib.dis.Instruction",
    "typeshed.typeshed.stdlib.functools._CacheInfo",
    "typeshed.typeshed.stdlib.importlib.metadata._EntryPointBase",
    "typeshed.typeshed.stdlib.inspect.ArgInfo",
    "typeshed.typeshed.stdlib.inspect.ArgSpec",
    "typeshed.typeshed.stdlib.inspect.Arguments",
    "typeshed.typeshed.stdlib.inspect.Attribute",
    "typeshed.typeshed.stdlib.inspect.ClosureVars",
    "typeshed.typeshed.stdlib.inspect.FrameInfo",
    "typeshed.typeshed.stdlib.inspect.FullArgSpec",
    "typeshed.typeshed.stdlib.inspect.Traceback",
    "typeshed.typeshed.stdlib.nntplib.ArticleInfo",
    "typeshed.typeshed.stdlib.nntplib.GroupInfo",
    "typeshed.typeshed.stdlib.pkgutil.ModuleInfo",
    "typeshed.typeshed.stdlib.platform.uname_result",
    "typeshed.typeshed.stdlib.sched.Event",
    "typeshed.typeshed.stdlib.selectors.SelectorKey",
    "typeshed.typeshed.stdlib.shutil._ntuple_diskusage",
    "typeshed.typeshed.stdlib.sndhdr.SndHeaders",
    "typeshed.typeshed.stdlib.ssl.DefaultVerifyPaths",
    "typeshed.typeshed.stdlib.ssl._ASN1ObjectBase",
    "typeshed.typeshed.stdlib.sunau._sunau_params",
    "typeshed.typeshed.stdlib.tokenize._TokenInfo",
    "typeshed.typeshed.stdlib.unittest._log._LoggingWatcher",
    "typeshed.typeshed.stdlib.urllib.parse._DefragResultBase",
    "typeshed.typeshed.stdlib.urllib.parse._ParseResultBase",
    "typeshed.typeshed.stdlib.urllib.parse._SplitResultBase",
    "typeshed.typeshed.stdlib.urllib.robotparser.RequestRate",
    "typeshed.typeshed.stdlib.wave._wave_params",
    "typeshed.typeshed.stubs.Markdown.markdown.inlinepatterns.EmStrongItem",
    "typeshed.typeshed.stubs.Pillow.PIL.TiffTags._TagInfo",
    "typeshed.typeshed.stubs.PyAutoGUI.pyautogui.Point",
    "typeshed.typeshed.stubs.PyAutoGUI.pyautogui.Size",
    "typeshed.typeshed.stubs.PyScreeze.pyscreeze.Box",
    "typeshed.typeshed.stubs.PyScreeze.pyscreeze.Point",
    "typeshed.typeshed.stubs.PyScreeze.pyscreeze.RGB",
    "typeshed.typeshed.stubs.WebOb.webob.acceptparse.AcceptOffer",
    "typeshed.typeshed.stubs.WebOb.webob.descriptors._authorization",
    "typeshed.typeshed.stubs.console-menu.consolemenu.prompt_utils.InputResult",
    "typeshed.typeshed.stubs.docutils.docutils._VersionInfo",
    "typeshed.typeshed.stubs.fpdf2.fpdf.annotations.FileSpec",
    "typeshed.typeshed.stubs.fpdf2.fpdf.drawing.Arc",
    "typeshed.typeshed.stubs.fpdf2.fpdf.drawing.BezierCurve",
    "typeshed.typeshed.stubs.fpdf2.fpdf.drawing.Close",
    "typeshed.typeshed.stubs.fpdf2.fpdf.drawing.Ellipse",
    "typeshed.typeshed.stubs.fpdf2.fpdf.drawing.HorizontalLine",
    "typeshed.typeshed.stubs.fpdf2.fpdf.drawing.ImplicitClose",
    "typeshed.typeshed.stubs.fpdf2.fpdf.drawing.Line",
    "typeshed.typeshed.stubs.fpdf2.fpdf.drawing.Move",
    "typeshed.typeshed.stubs.fpdf2.fpdf.drawing.Point",
    "typeshed.typeshed.stubs.fpdf2.fpdf.drawing.QuadraticBezierCurve",
    "typeshed.typeshed.stubs.fpdf2.fpdf.drawing.Rectangle",
    "typeshed.typeshed.stubs.fpdf2.fpdf.drawing.RelativeArc",
    "typeshed.typeshed.stubs.fpdf2.fpdf.drawing.RelativeBezierCurve",
    "typeshed.typeshed.stubs.fpdf2.fpdf.drawing.RelativeHorizontalLine",
    "typeshed.typeshed.stubs.fpdf2.fpdf.drawing.RelativeLine",
    "typeshed.typeshed.stubs.fpdf2.fpdf.drawing.RelativeMove",
    "typeshed.typeshed.stubs.fpdf2.fpdf.drawing.RelativeQuadraticBezierCurve",
    "typeshed.typeshed.stubs.fpdf2.fpdf.drawing.RelativeVerticalLine",
    "typeshed.typeshed.stubs.fpdf2.fpdf.drawing.RoundedRectangle",
    "typeshed.typeshed.stubs.fpdf2.fpdf.drawing.Transform",
    "typeshed.typeshed.stubs.fpdf2.fpdf.drawing.VerticalLine",
    "typeshed.typeshed.stubs.fpdf2.fpdf.drawing._DeviceCMYKBase",
    "typeshed.typeshed.stubs.fpdf2.fpdf.drawing._DeviceGrayBase",
    "typeshed.typeshed.stubs.fpdf2.fpdf.drawing._DeviceRGBBase",
    "typeshed.typeshed.stubs.fpdf2.fpdf.fpdf.ToCPlaceholder",
    "typeshed.typeshed.stubs.fpdf2.fpdf.line_break.HyphenHint",
    "typeshed.typeshed.stubs.fpdf2.fpdf.line_break.SpaceHint",
    "typeshed.typeshed.stubs.fpdf2.fpdf.line_break.TextLine",
    "typeshed.typeshed.stubs.fpdf2.fpdf.outline.OutlineSection",
    "typeshed.typeshed.stubs.fpdf2.fpdf.text_region.Extents",
    "typeshed.typeshed.stubs.fpdf2.fpdf.text_region.LineWrapper",
    "typeshed.typeshed.stubs.fpdf2.fpdf.util.Padding",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb._eventloop._Event",
    "typeshed.typeshed.stubs.google-cloud-ndb.google.cloud.ndb.context._ContextTuple",
    "typeshed.typeshed.stubs.humanfriendly.humanfriendly.CombinedUnit",
    "typeshed.typeshed.stubs.humanfriendly.humanfriendly.SizeUnit",
    "typeshed.typeshed.stubs.keyboard.keyboard._mouse_event.ButtonEvent",
    "typeshed.typeshed.stubs.keyboard.keyboard._mouse_event.MoveEvent",
    "typeshed.typeshed.stubs.keyboard.keyboard._mouse_event.WheelEvent",
    "typeshed.typeshed.stubs.ldap3.ldap3.abstract.cursor.Operation",
    "typeshed.typeshed.stubs.libsass.sass._SassColor",
    "typeshed.typeshed.stubs.libsass.sass._SassError",
    "typeshed.typeshed.stubs.libsass.sass._SassList",
    "typeshed.typeshed.stubs.libsass.sass._SassNumber",
    "typeshed.typeshed.stubs.libsass.sass._SassWarning",
    "typeshed.typeshed.stubs.opentracing.opentracing.tracer.Reference",
    "typeshed.typeshed.stubs.paramiko.paramiko.auth_strategy.SourceResult",
    "typeshed.typeshed.stubs.peewee.peewee.ColumnMetadata",
    "typeshed.typeshed.stubs.peewee.peewee.ForeignKeyMetadata",
    "typeshed.typeshed.stubs.peewee.peewee.IndexMetadata",
    "typeshed.typeshed.stubs.peewee.peewee.ViewMetadata",
    "typeshed.typeshed.stubs.pika.pika.adapters.blocking_connection.BlockingChannel._FlowOkCallbackResultArgs",
    "typeshed.typeshed.stubs.pika.pika.adapters.blocking_connection.BlockingChannel._MethodFrameCallbackResultArgs",
    "typeshed.typeshed.stubs.pika.pika.adapters.blocking_connection.BlockingChannel._OnMessageConfirmationReportArgs",
    "typeshed.typeshed.stubs.pika.pika.adapters.blocking_connection.BlockingChannel._RxMessageArgs",
    "typeshed.typeshed.stubs.pika.pika.adapters.blocking_connection.BlockingConnection._OnChannelOpenedArgs",
    "typeshed.typeshed.stubs.pika.pika.adapters.blocking_connection.BlockingConnection._OnClosedArgs",
    "typeshed.typeshed.stubs.pika.pika.adapters.twisted_connection.ReceivedMessage",
    "typeshed.typeshed.stubs.psutil.psutil._common.addr",
    "typeshed.typeshed.stubs.psutil.psutil._common.pconn",
    "typeshed.typeshed.stubs.psutil.psutil._common.pcputimes",
    "typeshed.typeshed.stubs.psutil.psutil._common.pctxsw",
    "typeshed.typeshed.stubs.psutil.psutil._common.pgids",
    "typeshed.typeshed.stubs.psutil.psutil._common.pio",
    "typeshed.typeshed.stubs.psutil.psutil._common.pionice",
    "typeshed.typeshed.stubs.psutil.psutil._common.popenfile",
    "typeshed.typeshed.stubs.psutil.psutil._common.pthread",
    "typeshed.typeshed.stubs.psutil.psutil._common.puids",
    "typeshed.typeshed.stubs.psutil.psutil._common.sbattery",
    "typeshed.typeshed.stubs.psutil.psutil._common.sconn",
    "typeshed.typeshed.stubs.psutil.psutil._common.scpufreq",
    "typeshed.typeshed.stubs.psutil.psutil._common.scpustats",
    "typeshed.typeshed.stubs.psutil.psutil._common.sdiskio",
    "typeshed.typeshed.stubs.psutil.psutil._common.sdiskpart",
    "typeshed.typeshed.stubs.psutil.psutil._common.sdiskusage",
    "typeshed.typeshed.stubs.psutil.psutil._common.sfan",
    "typeshed.typeshed.stubs.psutil.psutil._common.shwtemp",
    "typeshed.typeshed.stubs.psutil.psutil._common.snetio",
    "typeshed.typeshed.stubs.psutil.psutil._common.snicaddr",
    "typeshed.typeshed.stubs.psutil.psutil._common.snicstats",
    "typeshed.typeshed.stubs.psutil.psutil._common.sswap",
    "typeshed.typeshed.stubs.psutil.psutil._common.suser",
    "typeshed.typeshed.stubs.psutil.psutil._psaix.pmem",
    "typeshed.typeshed.stubs.psutil.psutil._psaix.scputimes",
    "typeshed.typeshed.stubs.psutil.psutil._psaix.svmem",
    "typeshed.typeshed.stubs.psutil.psutil._psbsd.Process.nt_mmap_ext",
    "typeshed.typeshed.stubs.psutil.psutil._psbsd.Process.nt_mmap_grouped",
    "typeshed.typeshed.stubs.psutil.psutil._psbsd.pcputimes",
    "typeshed.typeshed.stubs.psutil.psutil._psbsd.pmem",
    "typeshed.typeshed.stubs.psutil.psutil._psbsd.pmmap_ext",
    "typeshed.typeshed.stubs.psutil.psutil._psbsd.pmmap_grouped",
    "typeshed.typeshed.stubs.psutil.psutil._psbsd.scputimes",
    "typeshed.typeshed.stubs.psutil.psutil._psbsd.sdiskio",
    "typeshed.typeshed.stubs.psutil.psutil._psbsd.svmem",
    "typeshed.typeshed.stubs.psutil.psutil._pslinux.pcputimes",
    "typeshed.typeshed.stubs.psutil.psutil._pslinux.pfullmem",
    "typeshed.typeshed.stubs.psutil.psutil._pslinux.pio",
    "typeshed.typeshed.stubs.psutil.psutil._pslinux.pmem",
    "typeshed.typeshed.stubs.psutil.psutil._pslinux.pmmap_grouped",
    "typeshed.typeshed.stubs.psutil.psutil._pslinux.popenfile",
    "typeshed.typeshed.stubs.psutil.psutil._pslinux.sdiskio",
    "typeshed.typeshed.stubs.psutil.psutil._pslinux.svmem",
    "typeshed.typeshed.stubs.psutil.psutil._psosx.pfullmem",
    "typeshed.typeshed.stubs.psutil.psutil._psosx.pmem",
    "typeshed.typeshed.stubs.psutil.psutil._psosx.scputimes",
    "typeshed.typeshed.stubs.psutil.psutil._psosx.svmem",
    "typeshed.typeshed.stubs.psutil.psutil._pssunos.Process.nt_mmap_ext",
    "typeshed.typeshed.stubs.psutil.psutil._pssunos.Process.nt_mmap_grouped",
    "typeshed.typeshed.stubs.psutil.psutil._pssunos.pcputimes",
    "typeshed.typeshed.stubs.psutil.psutil._pssunos.pmem",
    "typeshed.typeshed.stubs.psutil.psutil._pssunos.pmmap_grouped",
    "typeshed.typeshed.stubs.psutil.psutil._pssunos.scputimes",
    "typeshed.typeshed.stubs.psutil.psutil._pssunos.svmem",
    "typeshed.typeshed.stubs.psutil.psutil._pswindows.pfullmem",
    "typeshed.typeshed.stubs.psutil.psutil._pswindows.pio",
    "typeshed.typeshed.stubs.psutil.psutil._pswindows.pmem",
    "typeshed.typeshed.stubs.psutil.psutil._pswindows.pmmap_grouped",
    "typeshed.typeshed.stubs.psutil.psutil._pswindows.scputimes",
    "typeshed.typeshed.stubs.psutil.psutil._pswindows.svmem",
    "typeshed.typeshed.stubs.pywin32.win32.lib.win32gui_struct._LVCOLUMN",
    "typeshed.typeshed.stubs.pywin32.win32.lib.win32gui_struct._LVDISPINFO",
    "typeshed.typeshed.stubs.pywin32.win32.lib.win32gui_struct._LVHITTEST",
    "typeshed.typeshed.stubs.pywin32.win32.lib.win32gui_struct._LVITEM",
    "typeshed.typeshed.stubs.pywin32.win32.lib.win32gui_struct._MENUINFO",
    "typeshed.typeshed.stubs.pywin32.win32.lib.win32gui_struct._MENUITEMINFO",
    "typeshed.typeshed.stubs.pywin32.win32.lib.win32gui_struct._NMITEMACTIVATE",
    "typeshed.typeshed.stubs.pywin32.win32.lib.win32gui_struct._TVDISPINFO",
    "typeshed.typeshed.stubs.pywin32.win32.lib.win32gui_struct._TVITEM",
    "typeshed.typeshed.stubs.pywin32.win32.lib.win32gui_struct._TVNOTIFY",
    "typeshed.typeshed.stubs.pywin32.win32.lib.win32gui_struct._UnpackLVNOTIFY",
    "typeshed.typeshed.stubs.pywin32.win32.lib.win32gui_struct._WMNOTIFY",
    "typeshed.typeshed.stubs.qrcode.qrcode.base.RSBlock",
    "typeshed.typeshed.stubs.qrcode.qrcode.image.styles.moduledrawers.svg.Coords",
    "typeshed.typeshed.stubs.qrcode.qrcode.main.ActiveWithNeighbors",
    "typeshed.typeshed.stubs.seaborn.seaborn.external.docscrape.Parameter",
    "typeshed.typeshed.stubs.tabulate.tabulate.DataRow",
    "typeshed.typeshed.stubs.tabulate.tabulate.Line",
    "typeshed.typeshed.stubs.tabulate.tabulate.TableFormat",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.io.FixedLenFeature",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.io.FixedLenSequenceFeature",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.io.RaggedFeature",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.io.SparseFeature",
    "typeshed.typeshed.stubs.tensorflow.tensorflow.io.VarLenFeature",
    "typeshed.typeshed.stubs.waitress.waitress.proxy_headers.Forwarded",
    "typeshed.typeshed.stubs.whatthepatch.whatthepatch.patch.Change",
    "typeshed.typeshed.stubs.whatthepatch.whatthepatch.patch.diffobj",
    "typeshed.typeshed.stubs.whatthepatch.whatthepatch.patch.header",
    "unittest._log._LoggingWatcher",
    "urllib.parse._DefragResultBase",
    "urllib.parse._ParseResultBase",
    "urllib.parse._SplitResultBase",
    "urllib.robotparser.RequestRate",
    "urllib3.util.retry.RequestHistory",
    "urllib3.util.url._UrlBase",
    "waitress.proxy_headers.Forwarded",
    "wave._wave_params",
    "werkzeug.routing.rules.Weighting",
    "whatthepatch.patch.Change",
    "whatthepatch.patch.diffobj",
    "whatthepatch.patch.header",
    "win32.lib.win32gui_struct._LVCOLUMN",
    "win32.lib.win32gui_struct._LVDISPINFO",
    "win32.lib.win32gui_struct._LVHITTEST",
    "win32.lib.win32gui_struct._LVITEM",
    "win32.lib.win32gui_struct._MENUINFO",
    "win32.lib.win32gui_struct._MENUITEMINFO",
    "win32.lib.win32gui_struct._NMITEMACTIVATE",
    "win32.lib.win32gui_struct._TVDISPINFO",
    "win32.lib.win32gui_struct._TVITEM",
    "win32.lib.win32gui_struct._TVNOTIFY",
    "win32.lib.win32gui_struct._UnpackLVNOTIFY",
    "win32.lib.win32gui_struct._WMNOTIFY"
  ],
  "typing.Reversible.__reversed__": [
    "django.db.models.query._QuerySet",
    "typing.Sequence"
  ],
  "typing.Sequence.__contains__": [
    "bytearray",
    "bytes",
    "collections.UserList",
    "collections.UserString",
    "collections.deque",
    "django.utils.functional._StrPromise",
    "list",
    "memoryview",
    "range",
    "sqlalchemy.engine.row.Row",
    "str",
    "tracemalloc.Traceback",
    "tuple",
    "typeshed.typeshed.stdlib.builtins.bytearray",
    "typeshed.typeshed.stdlib.builtins.bytes",
    "typeshed.typeshed.stdlib.builtins.list",
    "typeshed.typeshed.stdlib.builtins.memoryview",
    "typeshed.typeshed.stdlib.builtins.range",
    "typeshed.typeshed.stdlib.builtins.str",
    "typeshed.typeshed.stdlib.builtins.tuple",
    "typeshed.typeshed.stdlib.collections.UserList",
    "typeshed.typeshed.stdlib.collections.UserString",
    "typeshed.typeshed.stdlib.collections.deque",
    "typeshed.typeshed.stdlib.tracemalloc.Traceback"
  ],
  "typing.Sequence.__getitem__": [
    "bytes",
    "collections.UserString",
    "django.core.paginator.Page",
    "django.utils.functional._StrPromise",
    "google.protobuf.internal.containers.BaseContainer",
    "libcst._flatten_sentinel.FlattenSentinel",
    "memoryview",
    "pip._internal.resolution.resolvelib.found_candidates.FoundCandidates",
    "range",
    "str",
    "tracemalloc.Traceback",
    "tuple",
    "typeshed.typeshed.stdlib.builtins.bytes",
    "typeshed.typeshed.stdlib.builtins.memoryview",
    "typeshed.typeshed.stdlib.builtins.range",
    "typeshed.typeshed.stdlib.builtins.str",
    "typeshed.typeshed.stdlib.builtins.tuple",
    "typeshed.typeshed.stdlib.collections.UserString",
    "typeshed.typeshed.stdlib.tracemalloc.Traceback",
    "typeshed.typeshed.stubs.protobuf.google.protobuf.internal.containers.BaseContainer",
    "typing.MutableSequence"
  ],
  "typing.Sequence.__iter__": [
    "bytearray",
    "bytes",
    "collections.UserString",
    "list",
    "memoryview",
    "pip._internal.resolution.resolvelib.found_candidates.FoundCandidates",
    "range",
    "str",
    "tuple",
    "typeshed.typeshed.stdlib.builtins.bytearray",
    "typeshed.typeshed.stdlib.builtins.bytes",
    "typeshed.typeshed.stdlib.builtins.list",
    "typeshed.typeshed.stdlib.builtins.memoryview",
    "typeshed.typeshed.stdlib.builtins.range",
    "typeshed.typeshed.stdlib.builtins.str",
    "typeshed.typeshed.stdlib.builtins.tuple",
    "typeshed.typeshed.stdlib.collections.UserString"
  ],
  "typing.Sequence.__reversed__": [
    "collections.UserString",
    "list",
    "multiprocessing.managers.BaseListProxy",
    "range",
    "typeshed.typeshed.stdlib.builtins.list",
    "typeshed.typeshed.stdlib.builtins.range",
    "typeshed.typeshed.stdlib.collections.UserString",
    "typeshed.typeshed.stdlib.multiprocessing.managers.BaseListProxy"
  ],
  "typing.Sequence.count": [
    "array.array",
    "bytearray",
    "bytes",
    "collections.UserList",
    "collections.UserString",
    "collections.deque",
    "list",
    "multiprocessing.managers.BaseListProxy",
    "range",
    "sqlalchemy.engine.row.Row",
    "str",
    "tuple",
    "typeshed.typeshed.stdlib.array.array",
    "typeshed.typeshed.stdlib.builtins.bytearray",
    "typeshed.typeshed.stdlib.builtins.bytes",
    "typeshed.typeshed.stdlib.builtins.list",
    "typeshed.typeshed.stdlib.builtins.range",
    "typeshed.typeshed.stdlib.builtins.str",
    "typeshed.typeshed.stdlib.builtins.tuple",
    "typeshed.typeshed.stdlib.collections.UserList",
    "typeshed.typeshed.stdlib.collections.UserString",
    "typeshed.typeshed.stdlib.collections.deque",
    "typeshed.typeshed.stdlib.multiprocessing.managers.BaseListProxy"
  ],
  "typing.Sequence.index": [
    "array.array",
    "bytearray",
    "bytes",
    "collections.UserList",
    "collections.UserString",
    "collections.deque",
    "list",
    "multiprocessing.managers.BaseListProxy",
    "range",
    "sqlalchemy.engine.row.Row",
    "str",
    "tuple",
    "typeshed.typeshed.stdlib.array.array",
    "typeshed.typeshed.stdlib.builtins.bytearray",
    "typeshed.typeshed.stdlib.builtins.bytes",
    "typeshed.typeshed.stdlib.builtins.list",
    "typeshed.typeshed.stdlib.builtins.range",
    "typeshed.typeshed.stdlib.builtins.str",
    "typeshed.typeshed.stdlib.builtins.tuple",
    "typeshed.typeshed.stdlib.collections.UserList",
    "typeshed.typeshed.stdlib.collections.UserString",
    "typeshed.typeshed.stdlib.collections.deque",
    "typeshed.typeshed.stdlib.multiprocessing.managers.BaseListProxy"
  ],
  "typing.Sized.__len__": [
    "django.db.models.query.RawQuerySet",
    "mmap.mmap",
    "typeshed.typeshed.stdlib.mmap.mmap",
    "typing.MappingView"
  ],
  "typing.SupportsFloat.__float__": [
    "numbers.Real",
    "typeshed.typeshed.stdlib.numbers.Real"
  ],
  "typing.SupportsInt.__int__": [
    "ipaddress._BaseAddress",
    "typeshed.typeshed.stdlib.ipaddress._BaseAddress"
  ],
  "typing.TextIO.__enter__": [
    "codecs.StreamReaderWriter",
    "typeshed.typeshed.stdlib.codecs.StreamReaderWriter"
  ],
  "typing.TextIO.buffer": [
    "io.TextIOWrapper",
    "typeshed.typeshed.stdlib.io.TextIOWrapper"
  ],
  "typing.TextIO.line_buffering": [
    "io.TextIOWrapper",
    "typeshed.typeshed.stdlib.io.TextIOWrapper"
  ],
  "typing.ValuesView.__reversed__": [
    "collections._OrderedDictValuesView",
    "collections._odict_values",
    "typeshed.typeshed.stdlib.collections._OrderedDictValuesView",
    "typeshed.typeshed.stdlib.collections._odict_values"
  ],
  "typing._SpecialForm.__getitem__": [
    "pip._vendor.typing_extensions._ConcatenateForm",
    "pip._vendor.typing_extensions._FinalForm",
    "pip._vendor.typing_extensions._LiteralForm",
    "pip._vendor.typing_extensions._RequiredForm",
    "pip._vendor.typing_extensions._TypeGuardForm",
    "pip._vendor.typing_extensions._UnpackForm"
  ],
  "unittest.loader.TestLoader.loadTestsFromModule": [
    "setuptools.command.test.ScanningLoader",
    "typeshed.typeshed.stubs.setuptools.setuptools.command.test.ScanningLoader"
  ],
  "unittest.mock.Base.__init__": [
    "unittest.mock.AsyncMockMixin",
    "unittest.mock.CallableMixin",
    "unittest.mock.NonCallableMock"
  ],
  "unittest.mock.MagicMixin.__init__": [
    "unittest.mock.AsyncMagicMixin"
  ],
  "unittest.result.TestResult.__init__": [
    "typeshed.typeshed.stdlib.unittest.runner.TextTestResult",
    "unittest.runner.TextTestResult"
  ],
  "unittest.result.TestResult.addError": [
    "django.test.runner.DebugSQLTextTestResult"
  ],
  "unittest.result.TestResult.addFailure": [
    "django.test.runner.DebugSQLTextTestResult"
  ],
  "unittest.result.TestResult.startTest": [
    "django.test.runner.DebugSQLTextTestResult"
  ],
  "unittest.result.TestResult.stopTest": [
    "django.test.runner.DebugSQLTextTestResult"
  ],
  "unittest.runner.TextTestResult.__init__": [
    "django.test.runner.DebugSQLTextTestResult"
  ],
  "unittest.suite.BaseTestSuite.run": [
    "unittest.suite.TestSuite"
  ],
  "unittest.suite.TestSuite.run": [
    "django.test.runner.ParallelTestSuite"
  ],
  "urllib.error.URLError.__init__": [
    "urllib.error.ContentTooShortError",
    "urllib.error.HTTPError"
  ],
  "urllib.error.URLError.reason": [
    "urllib.error.HTTPError"
  ],
  "urllib.request.AbstractHTTPHandler.__init__": [
    "urllib.request.HTTPSHandler"
  ],
  "urllib.request.HTTPHandler.http_open": [
    "pip._vendor.distlib.util.HTTPSOnlyHandler"
  ],
  "urllib.request.HTTPPasswordMgr.add_password": [
    "urllib.request.HTTPPasswordMgrWithDefaultRealm"
  ],
  "urllib.request.HTTPPasswordMgr.find_user_password": [
    "urllib.request.HTTPPasswordMgrWithDefaultRealm"
  ],
  "urllib.request.HTTPPasswordMgrWithDefaultRealm.add_password": [
    "urllib.request.HTTPPasswordMgrWithPriorAuth"
  ],
  "urllib.request.HTTPRedirectHandler.http_error_302": [
    "pip._vendor.distlib.locators.RedirectHandler"
  ],
  "urllib.request.HTTPSHandler.__init__": [
    "pip._vendor.distlib.util.HTTPSHandler"
  ],
  "urllib.request.HTTPSHandler.https_open": [
    "pip._vendor.distlib.util.HTTPSHandler"
  ],
  "urllib.request.URLopener.http_error_default": [
    "urllib.request.FancyURLopener"
  ],
  "urllib.response.addbase.__init__": [
    "urllib.response.addclosehook",
    "urllib.response.addinfo"
  ],
  "urllib.response.addinfo.__init__": [
    "urllib.response.addinfourl"
  ],
  "urllib.response.addinfo.headers": [
    "typeshed.typeshed.stdlib.urllib.error.HTTPError",
    "urllib.error.HTTPError"
  ],
  "urllib.response.addinfo.headers@setter": [
    "typeshed.typeshed.stdlib.urllib.error.HTTPError",
    "urllib.error.HTTPError"
  ],
  "urllib3.connection.HTTPConnection.__init__": [
    "urllib3.connection.HTTPSConnection",
    "urllib3.contrib.socks.SOCKSConnection"
  ],
  "urllib3.connection.HTTPConnection.connect": [
    "urllib3.connection.HTTPSConnection"
  ],
  "urllib3.connection.HTTPSConnection.connect": [
    "urllib3.connection.VerifiedHTTPSConnection"
  ],
  "urllib3.connectionpool.ConnectionPool.__init__": [
    "urllib3.connectionpool.HTTPConnectionPool"
  ],
  "urllib3.connectionpool.ConnectionPool.close": [
    "urllib3.connectionpool.HTTPConnectionPool"
  ],
  "urllib3.connectionpool.HTTPConnectionPool.__init__": [
    "urllib3.connectionpool.HTTPSConnectionPool"
  ],
  "urllib3.exceptions.PoolError.__init__": [
    "urllib3.exceptions.RequestError"
  ],
  "urllib3.exceptions.RequestError.__init__": [
    "urllib3.exceptions.HostChangedError",
    "urllib3.exceptions.MaxRetryError"
  ],
  "urllib3.poolmanager.PoolManager.__init__": [
    "urllib3.contrib.socks.SOCKSProxyManager",
    "urllib3.poolmanager.ProxyManager"
  ],
  "urllib3.poolmanager.PoolManager.connection_from_host": [
    "urllib3.poolmanager.ProxyManager"
  ],
  "urllib3.poolmanager.PoolManager.urlopen": [
    "urllib3.poolmanager.ProxyManager"
  ],
  "urllib3.request.RequestMethods.__init__": [
    "urllib3.poolmanager.PoolManager"
  ],
  "urllib3.request.RequestMethods.urlopen": [
    "urllib3.connectionpool.HTTPConnectionPool",
    "urllib3.poolmanager.PoolManager"
  ],
  "urllib3.util.retry.Retry.__init__": [
    "influxdb_client.client.write.retry.WritesRetry",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.client.write.retry.WritesRetry"
  ],
  "urllib3.util.retry.Retry.get_backoff_time": [
    "influxdb_client.client.write.retry.WritesRetry",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.client.write.retry.WritesRetry"
  ],
  "urllib3.util.retry.Retry.get_retry_after": [
    "influxdb_client.client.write.retry.WritesRetry",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.client.write.retry.WritesRetry"
  ],
  "urllib3.util.retry.Retry.increment": [
    "influxdb_client.client.write.retry.WritesRetry",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.client.write.retry.WritesRetry"
  ],
  "urllib3.util.retry.Retry.is_retry": [
    "influxdb_client.client.write.retry.WritesRetry",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.client.write.retry.WritesRetry"
  ],
  "urllib3.util.retry.Retry.new": [
    "influxdb_client.client.write.retry.WritesRetry",
    "typeshed.typeshed.stubs.influxdb-client.influxdb_client.client.write.retry.WritesRetry"
  ],
  "urllib3.util.url._UrlBase.__new__": [
    "urllib3.util.url.Url"
  ],
  "vobject.base.Component.__init__": [
    "vobject.icalendar.RecurringComponent",
    "vobject.icalendar.TimezoneComponent"
  ],
  "vobject.base.Component.__setattr__": [
    "vobject.icalendar.RecurringComponent"
  ],
  "vobject.base.Component.prettyPrint": [
    "vobject.icalendar.TimezoneComponent"
  ],
  "vobject.base.VBase.__init__": [
    "vobject.base.Component",
    "vobject.base.ContentLine"
  ],
  "vobject.base.VBase.copy": [
    "vobject.base.Component",
    "vobject.base.ContentLine"
  ],
  "vobject.base.VBase.getChildren": [
    "vobject.base.Component"
  ],
  "vobject.base.VBase.transformChildrenFromNative": [
    "vobject.base.Component"
  ],
  "vobject.base.VBase.transformChildrenToNative": [
    "vobject.base.Component"
  ],
  "vobject.behavior.Behavior.decode": [
    "vobject.icalendar.MultiTextBehavior",
    "vobject.icalendar.TextBehavior",
    "vobject.vcard.VCardTextBehavior"
  ],
  "vobject.behavior.Behavior.encode": [
    "vobject.icalendar.MultiTextBehavior",
    "vobject.icalendar.TextBehavior",
    "vobject.vcard.VCardTextBehavior"
  ],
  "vobject.behavior.Behavior.generateImplicitParameters": [
    "vobject.icalendar.RecurringBehavior",
    "vobject.icalendar.VAlarm",
    "vobject.icalendar.VCalendar2_0",
    "vobject.vcard.VCard3_0"
  ],
  "vobject.behavior.Behavior.serialize": [
    "vobject.icalendar.VCalendar2_0",
    "vobject.vcard.Photo"
  ],
  "vobject.behavior.Behavior.transformFromNative": [
    "vobject.icalendar.DateOrDateTimeBehavior",
    "vobject.icalendar.DateTimeBehavior",
    "vobject.icalendar.Duration",
    "vobject.icalendar.MultiDateBehavior",
    "vobject.icalendar.PeriodBehavior",
    "vobject.icalendar.RecurringBehavior",
    "vobject.icalendar.Trigger",
    "vobject.icalendar.VTimezone",
    "vobject.vcard.AddressBehavior",
    "vobject.vcard.NameBehavior",
    "vobject.vcard.OrgBehavior"
  ],
  "vobject.behavior.Behavior.transformToNative": [
    "vobject.icalendar.DateOrDateTimeBehavior",
    "vobject.icalendar.DateTimeBehavior",
    "vobject.icalendar.Duration",
    "vobject.icalendar.MultiDateBehavior",
    "vobject.icalendar.PeriodBehavior",
    "vobject.icalendar.RecurringBehavior",
    "vobject.icalendar.Trigger",
    "vobject.icalendar.VTimezone",
    "vobject.vcard.AddressBehavior",
    "vobject.vcard.NameBehavior",
    "vobject.vcard.OrgBehavior"
  ],
  "vobject.behavior.Behavior.validate": [
    "vobject.icalendar.Available",
    "vobject.icalendar.VAlarm",
    "vobject.icalendar.VAvailability",
    "vobject.icalendar.VEvent",
    "vobject.icalendar.VTimezone",
    "vobject.icalendar.VTodo"
  ],
  "vobject.behavior.Behavior.valueRepr": [
    "vobject.vcard.Photo"
  ],
  "vobject.icalendar.VCalendar2_0.serialize": [
    "vobject.hcalendar.HCalendar"
  ],
  "waitress.buffers.FileBasedBuffer.__init__": [
    "waitress.buffers.BytesIOBasedBuffer",
    "waitress.buffers.ReadOnlyFileBasedBuffer",
    "waitress.buffers.TempfileBasedBuffer"
  ],
  "waitress.buffers.FileBasedBuffer.append": [
    "waitress.buffers.ReadOnlyFileBasedBuffer"
  ],
  "waitress.buffers.FileBasedBuffer.get": [
    "waitress.buffers.ReadOnlyFileBasedBuffer"
  ],
  "waitress.buffers.FileBasedBuffer.newfile": [
    "waitress.buffers.BytesIOBasedBuffer",
    "waitress.buffers.TempfileBasedBuffer"
  ],
  "waitress.server.BaseWSGIServer.__init__": [
    "waitress.server.UnixWSGIServer"
  ],
  "waitress.server.BaseWSGIServer.bind_server_socket": [
    "waitress.server.TcpWSGIServer",
    "waitress.server.UnixWSGIServer"
  ],
  "waitress.server.BaseWSGIServer.fix_addr": [
    "waitress.server.UnixWSGIServer"
  ],
  "waitress.server.BaseWSGIServer.get_server_name": [
    "waitress.server.UnixWSGIServer"
  ],
  "waitress.server.BaseWSGIServer.getsockname": [
    "waitress.server.TcpWSGIServer",
    "waitress.server.UnixWSGIServer"
  ],
  "waitress.server.BaseWSGIServer.set_socket_options": [
    "waitress.server.TcpWSGIServer"
  ],
  "waitress.wasyncore.dispatcher.__init__": [
    "typeshed.typeshed.stubs.waitress.waitress.server.BaseWSGIServer",
    "waitress.channel.HTTPChannel",
    "waitress.server.BaseWSGIServer",
    "waitress.wasyncore.dispatcher_with_send",
    "waitress.wasyncore.file_dispatcher"
  ],
  "waitress.wasyncore.dispatcher.add_channel": [
    "waitress.channel.HTTPChannel"
  ],
  "waitress.wasyncore.dispatcher.close": [
    "typeshed.typeshed.stubs.waitress.waitress.server.BaseWSGIServer",
    "waitress.server.BaseWSGIServer"
  ],
  "waitress.wasyncore.dispatcher.del_channel": [
    "waitress.channel.HTTPChannel"
  ],
  "waitress.wasyncore.dispatcher.handle_accept": [
    "typeshed.typeshed.stubs.waitress.waitress.server.BaseWSGIServer",
    "waitress.server.BaseWSGIServer"
  ],
  "waitress.wasyncore.dispatcher.handle_close": [
    "waitress.channel.HTTPChannel"
  ],
  "waitress.wasyncore.dispatcher.handle_connect": [
    "typeshed.typeshed.stubs.waitress.waitress.server.BaseWSGIServer",
    "waitress.server.BaseWSGIServer"
  ],
  "waitress.wasyncore.dispatcher.handle_read": [
    "typeshed.typeshed.stubs.waitress.waitress.server.BaseWSGIServer",
    "waitress.channel.HTTPChannel",
    "waitress.server.BaseWSGIServer"
  ],
  "waitress.wasyncore.dispatcher.handle_write": [
    "waitress.channel.HTTPChannel"
  ],
  "waitress.wasyncore.dispatcher.readable": [
    "typeshed.typeshed.stubs.waitress.waitress.server.BaseWSGIServer",
    "waitress.channel.HTTPChannel",
    "waitress.server.BaseWSGIServer"
  ],
  "waitress.wasyncore.dispatcher.send": [
    "waitress.wasyncore.dispatcher_with_send"
  ],
  "waitress.wasyncore.dispatcher.writable": [
    "typeshed.typeshed.stubs.waitress.waitress.server.BaseWSGIServer",
    "waitress.channel.HTTPChannel",
    "waitress.server.BaseWSGIServer",
    "waitress.wasyncore.dispatcher_with_send"
  ],
  "webbrowser.BaseBrowser.__init__": [
    "webbrowser.GenericBrowser",
    "webbrowser.MacOSXOSAScript"
  ],
  "webbrowser.BaseBrowser.open": [
    "webbrowser.GenericBrowser",
    "webbrowser.Grail",
    "webbrowser.Konqueror",
    "webbrowser.MacOSX",
    "webbrowser.MacOSXOSAScript",
    "webbrowser.UnixBrowser"
  ],
  "werkzeug._internal._DictAccessorProperty.lookup": [
    "werkzeug.utils.environ_property",
    "werkzeug.utils.header_property"
  ],
  "werkzeug._reloader.ReloaderLoop.__enter__": [
    "werkzeug._reloader.StatReloaderLoop",
    "werkzeug._reloader.WatchdogReloaderLoop"
  ],
  "werkzeug._reloader.ReloaderLoop.__exit__": [
    "werkzeug._reloader.WatchdogReloaderLoop"
  ],
  "werkzeug._reloader.ReloaderLoop.__init__": [
    "werkzeug._reloader.WatchdogReloaderLoop"
  ],
  "werkzeug._reloader.ReloaderLoop.run": [
    "werkzeug._reloader.WatchdogReloaderLoop"
  ],
  "werkzeug._reloader.ReloaderLoop.run_step": [
    "werkzeug._reloader.StatReloaderLoop",
    "werkzeug._reloader.WatchdogReloaderLoop"
  ],
  "werkzeug._reloader.ReloaderLoop.trigger_reload": [
    "werkzeug._reloader.WatchdogReloaderLoop"
  ],
  "werkzeug.datastructures.accept.Accept._specificity": [
    "werkzeug.datastructures.accept.MIMEAccept"
  ],
  "werkzeug.datastructures.accept.Accept._value_matches": [
    "werkzeug.datastructures.accept.CharsetAccept",
    "werkzeug.datastructures.accept.LanguageAccept",
    "werkzeug.datastructures.accept.MIMEAccept"
  ],
  "werkzeug.datastructures.headers.Headers.__delitem__": [
    "werkzeug.datastructures.mixins.ImmutableHeadersMixin"
  ],
  "werkzeug.datastructures.headers.Headers.__getitem__": [
    "werkzeug.datastructures.headers.EnvironHeaders"
  ],
  "werkzeug.datastructures.headers.Headers.__iter__": [
    "werkzeug.datastructures.headers.EnvironHeaders"
  ],
  "werkzeug.datastructures.headers.Headers.__setitem__": [
    "werkzeug.datastructures.mixins.ImmutableHeadersMixin"
  ],
  "werkzeug.datastructures.headers.Headers.add": [
    "werkzeug.datastructures.mixins.ImmutableHeadersMixin"
  ],
  "werkzeug.datastructures.headers.Headers.add_header": [
    "werkzeug.datastructures.mixins.ImmutableHeadersMixin"
  ],
  "werkzeug.datastructures.headers.Headers.copy": [
    "werkzeug.datastructures.headers.EnvironHeaders"
  ],
  "werkzeug.datastructures.headers.Headers.extend": [
    "werkzeug.datastructures.mixins.ImmutableHeadersMixin"
  ],
  "werkzeug.datastructures.headers.Headers.pop": [
    "werkzeug.datastructures.mixins.ImmutableHeadersMixin"
  ],
  "werkzeug.datastructures.headers.Headers.popitem": [
    "werkzeug.datastructures.mixins.ImmutableHeadersMixin"
  ],
  "werkzeug.datastructures.headers.Headers.remove": [
    "werkzeug.datastructures.mixins.ImmutableHeadersMixin"
  ],
  "werkzeug.datastructures.headers.Headers.set": [
    "werkzeug.datastructures.mixins.ImmutableHeadersMixin"
  ],
  "werkzeug.datastructures.headers.Headers.setdefault": [
    "werkzeug.datastructures.mixins.ImmutableHeadersMixin"
  ],
  "werkzeug.datastructures.headers.Headers.setlist": [
    "werkzeug.datastructures.mixins.ImmutableHeadersMixin"
  ],
  "werkzeug.datastructures.headers.Headers.setlistdefault": [
    "werkzeug.datastructures.mixins.ImmutableHeadersMixin"
  ],
  "werkzeug.datastructures.headers.Headers.update": [
    "werkzeug.datastructures.mixins.ImmutableHeadersMixin"
  ],
  "werkzeug.datastructures.mixins.ImmutableDictMixin._iter_hashitems": [
    "werkzeug.datastructures.mixins.ImmutableMultiDictMixin"
  ],
  "werkzeug.datastructures.mixins.ImmutableDictMixin.fromkeys": [
    "werkzeug.datastructures.structures.CombinedMultiDict"
  ],
  "werkzeug.datastructures.mixins.ImmutableMultiDictMixin._iter_hashitems": [
    "werkzeug.datastructures.structures.ImmutableOrderedMultiDict"
  ],
  "werkzeug.datastructures.mixins.UpdateDictMixin.setdefault": [
    "flask.sessions.SecureCookieSession"
  ],
  "werkzeug.datastructures.structures.CallbackDict.__init__": [
    "flask.sessions.SecureCookieSession"
  ],
  "werkzeug.datastructures.structures.MultiDict.__copy__": [
    "werkzeug.datastructures.structures.ImmutableMultiDict",
    "werkzeug.datastructures.structures.ImmutableOrderedMultiDict"
  ],
  "werkzeug.datastructures.structures.MultiDict.__getitem__": [
    "werkzeug.datastructures.structures.CombinedMultiDict",
    "werkzeug.datastructures.structures.OrderedMultiDict"
  ],
  "werkzeug.datastructures.structures.MultiDict.__init__": [
    "werkzeug.datastructures.structures.OrderedMultiDict"
  ],
  "werkzeug.datastructures.structures.MultiDict.__setitem__": [
    "werkzeug.datastructures.structures.OrderedMultiDict"
  ],
  "werkzeug.datastructures.structures.MultiDict.add": [
    "werkzeug.datastructures.structures.OrderedMultiDict"
  ],
  "werkzeug.datastructures.structures.MultiDict.copy": [
    "werkzeug.datastructures.structures.CombinedMultiDict",
    "werkzeug.datastructures.structures.ImmutableMultiDict",
    "werkzeug.datastructures.structures.ImmutableOrderedMultiDict"
  ],
  "werkzeug.datastructures.structures.MultiDict.getlist": [
    "werkzeug.datastructures.structures.CombinedMultiDict",
    "werkzeug.datastructures.structures.OrderedMultiDict"
  ],
  "werkzeug.datastructures.structures.MultiDict.items": [
    "werkzeug.datastructures.structures.CombinedMultiDict",
    "werkzeug.datastructures.structures.OrderedMultiDict"
  ],
  "werkzeug.datastructures.structures.MultiDict.lists": [
    "werkzeug.datastructures.structures.CombinedMultiDict",
    "werkzeug.datastructures.structures.OrderedMultiDict"
  ],
  "werkzeug.datastructures.structures.MultiDict.listvalues": [
    "werkzeug.datastructures.structures.CombinedMultiDict",
    "werkzeug.datastructures.structures.OrderedMultiDict"
  ],
  "werkzeug.datastructures.structures.MultiDict.pop": [
    "werkzeug.datastructures.structures.OrderedMultiDict"
  ],
  "werkzeug.datastructures.structures.MultiDict.popitem": [
    "werkzeug.datastructures.structures.OrderedMultiDict"
  ],
  "werkzeug.datastructures.structures.MultiDict.popitemlist": [
    "werkzeug.datastructures.structures.OrderedMultiDict"
  ],
  "werkzeug.datastructures.structures.MultiDict.poplist": [
    "werkzeug.datastructures.structures.OrderedMultiDict"
  ],
  "werkzeug.datastructures.structures.MultiDict.setlist": [
    "werkzeug.datastructures.structures.OrderedMultiDict"
  ],
  "werkzeug.datastructures.structures.MultiDict.setlistdefault": [
    "werkzeug.datastructures.structures.OrderedMultiDict"
  ],
  "werkzeug.datastructures.structures.MultiDict.to_dict": [
    "werkzeug.datastructures.structures.CombinedMultiDict"
  ],
  "werkzeug.datastructures.structures.MultiDict.update": [
    "werkzeug.datastructures.structures.OrderedMultiDict"
  ],
  "werkzeug.datastructures.structures.MultiDict.values": [
    "werkzeug.datastructures.structures.CombinedMultiDict",
    "werkzeug.datastructures.structures.OrderedMultiDict"
  ],
  "werkzeug.datastructures.structures.TypeConversionDict.get": [
    "werkzeug.datastructures.structures.CombinedMultiDict"
  ],
  "werkzeug.exceptions.BadRequest.description": [
    "werkzeug.exceptions.BadRequestKeyError"
  ],
  "werkzeug.exceptions.BadRequest.description@setter": [
    "werkzeug.exceptions.BadRequestKeyError"
  ],
  "werkzeug.exceptions.HTTPException.__init__": [
    "werkzeug.exceptions.InternalServerError",
    "werkzeug.exceptions.MethodNotAllowed",
    "werkzeug.exceptions.RequestedRangeNotSatisfiable",
    "werkzeug.exceptions.Unauthorized",
    "werkzeug.exceptions._RetryAfter",
    "werkzeug.routing.exceptions.RequestRedirect"
  ],
  "werkzeug.exceptions.HTTPException.get_headers": [
    "werkzeug.exceptions.MethodNotAllowed",
    "werkzeug.exceptions.RequestedRangeNotSatisfiable",
    "werkzeug.exceptions.Unauthorized",
    "werkzeug.exceptions._RetryAfter"
  ],
  "werkzeug.exceptions.HTTPException.get_response": [
    "werkzeug.routing.exceptions.RequestRedirect"
  ],
  "werkzeug.local._ProxyLookup.__init__": [
    "werkzeug.local._ProxyIOp"
  ],
  "werkzeug.routing.converters.BaseConverter.__init__": [
    "werkzeug.routing.converters.AnyConverter",
    "werkzeug.routing.converters.NumberConverter",
    "werkzeug.routing.converters.UnicodeConverter"
  ],
  "werkzeug.routing.converters.BaseConverter.to_python": [
    "werkzeug.routing.converters.NumberConverter",
    "werkzeug.routing.converters.UUIDConverter"
  ],
  "werkzeug.routing.converters.BaseConverter.to_url": [
    "werkzeug.routing.converters.AnyConverter",
    "werkzeug.routing.converters.NumberConverter",
    "werkzeug.routing.converters.UUIDConverter"
  ],
  "werkzeug.routing.converters.NumberConverter.__init__": [
    "werkzeug.routing.converters.FloatConverter"
  ],
  "werkzeug.routing.rules.RuleFactory.get_rules": [
    "werkzeug.routing.rules.EndpointPrefix",
    "werkzeug.routing.rules.Rule",
    "werkzeug.routing.rules.RuleTemplateFactory",
    "werkzeug.routing.rules.Subdomain",
    "werkzeug.routing.rules.Submount"
  ],
  "werkzeug.sansio.request.Request.__init__": [
    "werkzeug.wrappers.request.Request"
  ],
  "werkzeug.sansio.response.Response.__init__": [
    "werkzeug.wrappers.response.Response"
  ],
  "werkzeug.sansio.response.Response.__repr__": [
    "werkzeug.wrappers.response.Response"
  ],
  "werkzeug.sansio.response.Response.max_cookie_size": [
    "flask.wrappers.Response"
  ],
  "werkzeug.test.Client.__init__": [
    "flask.testing.FlaskClient"
  ],
  "werkzeug.test.Client.open": [
    "flask.testing.FlaskClient"
  ],
  "werkzeug.test.EnvironBuilder.__init__": [
    "flask.testing.EnvironBuilder"
  ],
  "werkzeug.test.EnvironBuilder.json_dumps": [
    "flask.testing.EnvironBuilder"
  ],
  "werkzeug.wrappers.request.Request._load_form_data": [
    "flask.wrappers.Request"
  ],
  "werkzeug.wrappers.request.Request.max_content_length": [
    "flask.wrappers.Request"
  ],
  "werkzeug.wrappers.request.Request.on_json_loading_failed": [
    "flask.wrappers.Request"
  ],
  "werkzeug.wrappers.response.Response.__init__": [
    "werkzeug.test.TestResponse"
  ],
  "win32.lib.win32pdhquery.BaseQuery.__getinitargs__": [
    "win32.lib.win32pdhquery.Query"
  ],
  "win32.lib.win32pdhquery.BaseQuery.__init__": [
    "win32.lib.win32pdhquery.Query"
  ],
  "win32.lib.win32pdhquery.BaseQuery.open": [
    "win32.lib.win32pdhquery.Query"
  ],
  "win32com.client.build.DispatchItem.__init__": [
    "win32com.client.build.LazyDispatchItem"
  ],
  "win32com.client.build.OleItem.__init__": [
    "win32com.client.build.DispatchItem"
  ],
  "win32com.client.dynamic.CDispatch.__dir__": [
    "typeshed.typeshed.stubs.pywin32.win32com.client.CDispatch",
    "win32com.client.CDispatch"
  ],
  "win32com.client.dynamic.CDispatch.__getattr__": [
    "typeshed.typeshed.stubs.pywin32.win32comext.adsi.ADSIDispatch",
    "win32comext.adsi.ADSIDispatch"
  ],
  "win32com.server.dispatcher.DispatcherBase.__init__": [
    "win32com.server.dispatcher.DispatcherWin32dbg"
  ],
  "win32com.server.dispatcher.DispatcherWin32trace.__init__": [
    "typeshed.typeshed.stubs.pywin32.win32comext.axdebug.util.Dispatcher",
    "win32comext.axdebug.util.Dispatcher"
  ],
  "win32com.server.exception.COMException.__init__": [
    "typeshed.typeshed.stubs.pywin32.win32comext.axscript.client.error.AXScriptException",
    "win32comext.axscript.client.error.AXScriptException"
  ],
  "win32com.server.policy.BasicWrapPolicy._invokeex_": [
    "win32com.server.policy.DynamicPolicy",
    "win32com.server.policy.MappedWrapPolicy"
  ],
  "win32com.server.util.ListEnumerator.Next": [
    "win32com.server.util.ListEnumeratorGateway"
  ],
  "win32com.server.util.ListEnumeratorGateway.Next": [
    "typeshed.typeshed.stubs.pywin32.win32comext.axdebug.stackframe.EnumDebugStackFrames",
    "win32comext.axdebug.stackframe.EnumDebugStackFrames"
  ],
  "win32comext.axdebug.codecontainer.SourceCodeContainer.GetName": [
    "win32comext.axdebug.codecontainer.SourceModuleContainer"
  ],
  "win32comext.axdebug.codecontainer.SourceCodeContainer.GetText": [
    "win32comext.axdebug.codecontainer.SourceModuleContainer"
  ],
  "win32comext.axdebug.codecontainer.SourceCodeContainer.__init__": [
    "win32comext.axdebug.codecontainer.SourceModuleContainer"
  ],
  "win32comext.axdebug.documents.CodeContainerProvider.Close": [
    "typeshed.typeshed.stubs.pywin32.win32comext.axdebug.debugger.CodeContainerProvider",
    "win32comext.axdebug.debugger.CodeContainerProvider"
  ],
  "win32comext.axdebug.documents.CodeContainerProvider.FromFileName": [
    "typeshed.typeshed.stubs.pywin32.win32comext.axdebug.debugger.CodeContainerProvider",
    "win32comext.axdebug.debugger.CodeContainerProvider"
  ],
  "win32comext.axdebug.gateways.DebugCodeContext.GetDocumentContext": [
    "typeshed.typeshed.stubs.pywin32.win32comext.axdebug.contexts.DebugCodeContext",
    "win32comext.axdebug.contexts.DebugCodeContext"
  ],
  "win32comext.axdebug.gateways.DebugCodeContext.SetBreakPoint": [
    "typeshed.typeshed.stubs.pywin32.win32comext.axdebug.contexts.DebugCodeContext",
    "win32comext.axdebug.contexts.DebugCodeContext"
  ],
  "win32comext.axdebug.gateways.DebugDocumentContext.EnumCodeContexts": [
    "typeshed.typeshed.stubs.pywin32.win32comext.axdebug.contexts.DebugCodeContext",
    "win32comext.axdebug.contexts.DebugCodeContext"
  ],
  "win32comext.axdebug.gateways.DebugDocumentContext.GetDocument": [
    "typeshed.typeshed.stubs.pywin32.win32comext.axdebug.contexts.DebugCodeContext",
    "win32comext.axdebug.contexts.DebugCodeContext"
  ],
  "win32comext.axdebug.gateways.DebugDocumentInfo.GetDocumentClassId": [
    "typeshed.typeshed.stubs.pywin32.win32comext.axdebug.documents.DebugDocumentProvider",
    "win32comext.axdebug.documents.DebugDocumentProvider"
  ],
  "win32comext.axdebug.gateways.DebugDocumentInfo.GetName": [
    "typeshed.typeshed.stubs.pywin32.win32comext.axdebug.documents.DebugDocumentProvider",
    "win32comext.axdebug.documents.DebugDocumentProvider"
  ],
  "win32comext.axdebug.gateways.DebugDocumentProvider.GetDocument": [
    "typeshed.typeshed.stubs.pywin32.win32comext.axdebug.documents.DebugDocumentProvider",
    "win32comext.axdebug.documents.DebugDocumentProvider"
  ],
  "win32comext.axdebug.gateways.DebugExpression.Abort": [
    "typeshed.typeshed.stubs.pywin32.win32comext.axdebug.expressions.Expression",
    "win32comext.axdebug.expressions.Expression"
  ],
  "win32comext.axdebug.gateways.DebugExpression.GetResultAsDebugProperty": [
    "typeshed.typeshed.stubs.pywin32.win32comext.axdebug.expressions.Expression",
    "win32comext.axdebug.expressions.Expression"
  ],
  "win32comext.axdebug.gateways.DebugExpression.GetResultAsString": [
    "typeshed.typeshed.stubs.pywin32.win32comext.axdebug.expressions.Expression",
    "win32comext.axdebug.expressions.Expression"
  ],
  "win32comext.axdebug.gateways.DebugExpression.QueryIsComplete": [
    "typeshed.typeshed.stubs.pywin32.win32comext.axdebug.expressions.Expression",
    "win32comext.axdebug.expressions.Expression"
  ],
  "win32comext.axdebug.gateways.DebugExpression.Start": [
    "typeshed.typeshed.stubs.pywin32.win32comext.axdebug.expressions.Expression",
    "win32comext.axdebug.expressions.Expression"
  ],
  "win32comext.axdebug.gateways.DebugExpressionContext.GetLanguageInfo": [
    "typeshed.typeshed.stubs.pywin32.win32comext.axdebug.expressions.ExpressionContext",
    "win32comext.axdebug.expressions.ExpressionContext"
  ],
  "win32comext.axdebug.gateways.DebugExpressionContext.ParseLanguageText": [
    "typeshed.typeshed.stubs.pywin32.win32comext.axdebug.expressions.ExpressionContext",
    "win32comext.axdebug.expressions.ExpressionContext"
  ],
  "win32comext.axdebug.gateways.DebugStackFrame.GetCodeContext": [
    "typeshed.typeshed.stubs.pywin32.win32comext.axdebug.stackframe.DebugStackFrame",
    "win32comext.axdebug.stackframe.DebugStackFrame"
  ],
  "win32comext.axdebug.gateways.DebugStackFrame.GetDebugProperty": [
    "typeshed.typeshed.stubs.pywin32.win32comext.axdebug.stackframe.DebugStackFrame",
    "win32comext.axdebug.stackframe.DebugStackFrame"
  ],
  "win32comext.axdebug.gateways.DebugStackFrame.GetDescriptionString": [
    "typeshed.typeshed.stubs.pywin32.win32comext.axdebug.stackframe.DebugStackFrame",
    "win32comext.axdebug.stackframe.DebugStackFrame"
  ],
  "win32comext.axdebug.gateways.DebugStackFrame.GetLanguageString": [
    "typeshed.typeshed.stubs.pywin32.win32comext.axdebug.stackframe.DebugStackFrame",
    "win32comext.axdebug.stackframe.DebugStackFrame"
  ],
  "win32comext.axdebug.gateways.DebugStackFrame.GetThread": [
    "typeshed.typeshed.stubs.pywin32.win32comext.axdebug.stackframe.DebugStackFrame",
    "win32comext.axdebug.stackframe.DebugStackFrame"
  ],
  "win32comext.axdebug.gateways.RemoteDebugApplicationEvents.OnBreakFlagChange": [
    "typeshed.typeshed.stubs.pywin32.win32comext.axdebug.adb.Adb",
    "win32comext.axdebug.adb.Adb"
  ],
  "win32comext.axdebug.gateways.RemoteDebugApplicationEvents.OnClose": [
    "typeshed.typeshed.stubs.pywin32.win32comext.axdebug.adb.Adb",
    "win32comext.axdebug.adb.Adb"
  ],
  "win32comext.axdebug.gateways.RemoteDebugApplicationEvents.OnConnectDebugger": [
    "typeshed.typeshed.stubs.pywin32.win32comext.axdebug.adb.Adb",
    "win32comext.axdebug.adb.Adb"
  ],
  "win32comext.axdebug.gateways.RemoteDebugApplicationEvents.OnCreateThread": [
    "typeshed.typeshed.stubs.pywin32.win32comext.axdebug.adb.Adb",
    "win32comext.axdebug.adb.Adb"
  ],
  "win32comext.axdebug.gateways.RemoteDebugApplicationEvents.OnDebugOutput": [
    "typeshed.typeshed.stubs.pywin32.win32comext.axdebug.adb.Adb",
    "win32comext.axdebug.adb.Adb"
  ],
  "win32comext.axdebug.gateways.RemoteDebugApplicationEvents.OnDestroyThread": [
    "typeshed.typeshed.stubs.pywin32.win32comext.axdebug.adb.Adb",
    "win32comext.axdebug.adb.Adb"
  ],
  "win32comext.axdebug.gateways.RemoteDebugApplicationEvents.OnDisconnectDebugger": [
    "typeshed.typeshed.stubs.pywin32.win32comext.axdebug.adb.Adb",
    "win32comext.axdebug.adb.Adb"
  ],
  "win32comext.axdebug.gateways.RemoteDebugApplicationEvents.OnEnterBreakPoint": [
    "typeshed.typeshed.stubs.pywin32.win32comext.axdebug.adb.Adb",
    "win32comext.axdebug.adb.Adb"
  ],
  "win32comext.axdebug.gateways.RemoteDebugApplicationEvents.OnLeaveBreakPoint": [
    "typeshed.typeshed.stubs.pywin32.win32comext.axdebug.adb.Adb",
    "win32comext.axdebug.adb.Adb"
  ],
  "win32comext.axdebug.gateways.RemoteDebugApplicationEvents.OnSetName": [
    "typeshed.typeshed.stubs.pywin32.win32comext.axdebug.adb.Adb",
    "win32comext.axdebug.adb.Adb"
  ],
  "wsgiref.handlers.BaseHandler._flush": [
    "wsgiref.handlers.SimpleHandler"
  ],
  "wsgiref.handlers.BaseHandler._write": [
    "wsgiref.handlers.SimpleHandler"
  ],
  "wsgiref.handlers.BaseHandler.add_cgi_vars": [
    "wsgiref.handlers.SimpleHandler"
  ],
  "wsgiref.handlers.BaseHandler.get_stderr": [
    "wsgiref.handlers.SimpleHandler"
  ],
  "wsgiref.handlers.BaseHandler.get_stdin": [
    "wsgiref.handlers.SimpleHandler"
  ],
  "wsgiref.handlers.BaseHandler.handle_error": [
    "django.core.servers.basehttp.ServerHandler"
  ],
  "wsgiref.simple_server.WSGIRequestHandler.get_environ": [
    "django.core.servers.basehttp.WSGIRequestHandler"
  ],
  "xml.dom.expatbuilder.ExpatBuilder.__init__": [
    "xml.dom.expatbuilder.FragmentBuilder"
  ],
  "xml.dom.expatbuilder.ExpatBuilder.end_doctype_decl_handler": [
    "xml.dom.expatbuilder.InternalSubsetExtractor"
  ],
  "xml.dom.expatbuilder.ExpatBuilder.parseFile": [
    "xml.dom.expatbuilder.InternalSubsetExtractor"
  ],
  "xml.dom.expatbuilder.ExpatBuilder.parseString": [
    "xml.dom.expatbuilder.InternalSubsetExtractor"
  ],
  "xml.dom.expatbuilder.ExpatBuilder.start_doctype_decl_handler": [
    "xml.dom.expatbuilder.InternalSubsetExtractor"
  ],
  "xml.dom.expatbuilder.ExpatBuilder.start_element_handler": [
    "xml.dom.expatbuilder.InternalSubsetExtractor"
  ],
  "xml.dom.minidom.CharacterData.__init__": [
    "xml.dom.minidom.Comment"
  ],
  "xml.dom.minidom.Node.appendChild": [
    "xml.dom.minidom.Document",
    "xml.dom.minidom.Entity"
  ],
  "xml.dom.minidom.Node.cloneNode": [
    "xml.dom.minidom.Document",
    "xml.dom.minidom.DocumentType"
  ],
  "xml.dom.minidom.Node.insertBefore": [
    "xml.dom.minidom.Entity"
  ],
  "xml.dom.minidom.Node.isSupported": [
    "xml.dom.minidom.Document"
  ],
  "xml.dom.minidom.Node.removeChild": [
    "xml.dom.minidom.Document",
    "xml.dom.minidom.Entity"
  ],
  "xml.dom.minidom.Node.replaceChild": [
    "xml.dom.minidom.Entity"
  ],
  "xml.dom.minidom.Node.unlink": [
    "xml.dom.minidom.Attr",
    "xml.dom.minidom.Document",
    "xml.dom.minidom.Element"
  ],
  "xml.dom.minidom.Text.writexml": [
    "xml.dom.minidom.CDATASection"
  ],
  "xml.dom.pulldom.PullDOM.characters": [
    "xml.dom.pulldom.SAX2DOM"
  ],
  "xml.dom.pulldom.PullDOM.ignorableWhitespace": [
    "xml.dom.pulldom.SAX2DOM"
  ],
  "xml.dom.pulldom.PullDOM.processingInstruction": [
    "xml.dom.pulldom.SAX2DOM"
  ],
  "xml.dom.pulldom.PullDOM.startElement": [
    "xml.dom.pulldom.SAX2DOM"
  ],
  "xml.dom.pulldom.PullDOM.startElementNS": [
    "xml.dom.pulldom.SAX2DOM"
  ],
  "xml.sax.SAXException.__init__": [
    "xml.sax.SAXParseException"
  ],
  "xml.sax.handler.ContentHandler.characters": [
    "netaddr.ip.iana.SaxRecordParser",
    "typeshed.typeshed.stdlib.xml.dom.pulldom.PullDOM",
    "typeshed.typeshed.stdlib.xml.sax.saxutils.XMLGenerator",
    "typeshed.typeshed.stubs.netaddr.netaddr.ip.iana.SaxRecordParser",
    "typeshed.typeshed.stubs.untangle.untangle.Handler",
    "untangle.Handler",
    "xml.dom.pulldom.PullDOM",
    "xml.sax.saxutils.XMLGenerator"
  ],
  "xml.sax.handler.ContentHandler.endDocument": [
    "typeshed.typeshed.stdlib.xml.dom.pulldom.PullDOM",
    "typeshed.typeshed.stdlib.xml.sax.saxutils.XMLGenerator",
    "xml.dom.pulldom.PullDOM",
    "xml.sax.saxutils.XMLGenerator"
  ],
  "xml.sax.handler.ContentHandler.endElement": [
    "netaddr.ip.iana.SaxRecordParser",
    "typeshed.typeshed.stdlib.xml.dom.pulldom.PullDOM",
    "typeshed.typeshed.stdlib.xml.sax.saxutils.XMLGenerator",
    "typeshed.typeshed.stubs.netaddr.netaddr.ip.iana.SaxRecordParser",
    "typeshed.typeshed.stubs.untangle.untangle.Handler",
    "untangle.Handler",
    "xml.dom.pulldom.PullDOM",
    "xml.sax.saxutils.XMLGenerator"
  ],
  "xml.sax.handler.ContentHandler.endElementNS": [
    "typeshed.typeshed.stdlib.xml.dom.pulldom.PullDOM",
    "typeshed.typeshed.stdlib.xml.sax.saxutils.XMLGenerator",
    "xml.dom.pulldom.PullDOM",
    "xml.sax.saxutils.XMLGenerator"
  ],
  "xml.sax.handler.ContentHandler.endPrefixMapping": [
    "typeshed.typeshed.stdlib.xml.dom.pulldom.PullDOM",
    "typeshed.typeshed.stdlib.xml.sax.saxutils.XMLGenerator",
    "xml.dom.pulldom.PullDOM",
    "xml.sax.saxutils.XMLGenerator"
  ],
  "xml.sax.handler.ContentHandler.ignorableWhitespace": [
    "typeshed.typeshed.stdlib.xml.dom.pulldom.PullDOM",
    "typeshed.typeshed.stdlib.xml.sax.saxutils.XMLGenerator",
    "xml.dom.pulldom.PullDOM",
    "xml.sax.saxutils.XMLGenerator"
  ],
  "xml.sax.handler.ContentHandler.processingInstruction": [
    "typeshed.typeshed.stdlib.xml.dom.pulldom.PullDOM",
    "typeshed.typeshed.stdlib.xml.sax.saxutils.XMLGenerator",
    "xml.dom.pulldom.PullDOM",
    "xml.sax.saxutils.XMLGenerator"
  ],
  "xml.sax.handler.ContentHandler.setDocumentLocator": [
    "typeshed.typeshed.stdlib.xml.dom.pulldom.PullDOM",
    "xml.dom.pulldom.PullDOM"
  ],
  "xml.sax.handler.ContentHandler.startDocument": [
    "typeshed.typeshed.stdlib.xml.dom.pulldom.PullDOM",
    "typeshed.typeshed.stdlib.xml.sax.saxutils.XMLGenerator",
    "xml.dom.pulldom.PullDOM",
    "xml.sax.saxutils.XMLGenerator"
  ],
  "xml.sax.handler.ContentHandler.startElement": [
    "netaddr.ip.iana.SaxRecordParser",
    "typeshed.typeshed.stdlib.xml.dom.pulldom.PullDOM",
    "typeshed.typeshed.stdlib.xml.sax.saxutils.XMLGenerator",
    "typeshed.typeshed.stubs.netaddr.netaddr.ip.iana.SaxRecordParser",
    "typeshed.typeshed.stubs.untangle.untangle.Handler",
    "untangle.Handler",
    "xml.dom.pulldom.PullDOM",
    "xml.sax.saxutils.XMLGenerator"
  ],
  "xml.sax.handler.ContentHandler.startElementNS": [
    "typeshed.typeshed.stdlib.xml.dom.pulldom.PullDOM",
    "typeshed.typeshed.stdlib.xml.sax.saxutils.XMLGenerator",
    "xml.dom.pulldom.PullDOM",
    "xml.sax.saxutils.XMLGenerator"
  ],
  "xml.sax.handler.ContentHandler.startPrefixMapping": [
    "typeshed.typeshed.stdlib.xml.dom.pulldom.PullDOM",
    "typeshed.typeshed.stdlib.xml.sax.saxutils.XMLGenerator",
    "xml.dom.pulldom.PullDOM",
    "xml.sax.saxutils.XMLGenerator"
  ],
  "xml.sax.saxutils.XMLGenerator.characters": [
    "django.utils.xmlutils.SimplerXMLGenerator"
  ],
  "xml.sax.saxutils.XMLGenerator.startElement": [
    "django.utils.xmlutils.SimplerXMLGenerator"
  ],
  "xml.sax.xmlreader.AttributesImpl.__init__": [
    "xml.sax.xmlreader.AttributesNSImpl"
  ],
  "xml.sax.xmlreader.AttributesImpl.copy": [
    "xml.sax.xmlreader.AttributesNSImpl"
  ],
  "xml.sax.xmlreader.AttributesImpl.getNameByQName": [
    "xml.sax.xmlreader.AttributesNSImpl"
  ],
  "xml.sax.xmlreader.AttributesImpl.getQNameByName": [
    "xml.sax.xmlreader.AttributesNSImpl"
  ],
  "xml.sax.xmlreader.AttributesImpl.getQNames": [
    "xml.sax.xmlreader.AttributesNSImpl"
  ],
  "xml.sax.xmlreader.AttributesImpl.getValueByQName": [
    "xml.sax.xmlreader.AttributesNSImpl"
  ],
  "xml.sax.xmlreader.XMLReader.getFeature": [
    "typeshed.typeshed.stdlib.xml.sax.saxutils.XMLFilterBase",
    "xml.sax.saxutils.XMLFilterBase"
  ],
  "xml.sax.xmlreader.XMLReader.getProperty": [
    "typeshed.typeshed.stdlib.xml.sax.saxutils.XMLFilterBase",
    "xml.sax.saxutils.XMLFilterBase"
  ],
  "xml.sax.xmlreader.XMLReader.parse": [
    "typeshed.typeshed.stdlib.xml.sax.saxutils.XMLFilterBase",
    "xml.sax.saxutils.XMLFilterBase",
    "xml.sax.xmlreader.IncrementalParser"
  ],
  "xml.sax.xmlreader.XMLReader.setFeature": [
    "typeshed.typeshed.stdlib.xml.sax.saxutils.XMLFilterBase",
    "xml.sax.saxutils.XMLFilterBase"
  ],
  "xml.sax.xmlreader.XMLReader.setLocale": [
    "typeshed.typeshed.stdlib.xml.sax.saxutils.XMLFilterBase",
    "xml.sax.saxutils.XMLFilterBase"
  ],
  "xml.sax.xmlreader.XMLReader.setProperty": [
    "typeshed.typeshed.stdlib.xml.sax.saxutils.XMLFilterBase",
    "xml.sax.saxutils.XMLFilterBase"
  ],
  "xmlrpc.client.SafeTransport.__init__": [
    "pip._vendor.distlib.util.SafeTransport"
  ],
  "xmlrpc.client.SafeTransport.make_connection": [
    "pip._vendor.distlib.util.SafeTransport"
  ],
  "xmlrpc.client.ServerProxy.__init__": [
    "pip._vendor.distlib.util.ServerProxy"
  ],
  "xmlrpc.client.Transport.__init__": [
    "pip._internal.network.xmlrpc.PipXmlrpcTransport",
    "pip._vendor.distlib.util.Transport",
    "xmlrpc.client.SafeTransport"
  ],
  "xmlrpc.client.Transport.make_connection": [
    "pip._vendor.distlib.util.Transport",
    "xmlrpc.client.SafeTransport"
  ],
  "xmlrpc.client.Transport.request": [
    "pip._internal.network.xmlrpc.PipXmlrpcTransport"
  ],
  "xmlrpc.server.CGIXMLRPCRequestHandler.__init__": [
    "xmlrpc.server.DocCGIXMLRPCRequestHandler"
  ],
  "xmlrpc.server.SimpleXMLRPCDispatcher.__init__": [
    "xmlrpc.server.CGIXMLRPCRequestHandler"
  ],
  "xmlrpc.server.SimpleXMLRPCServer.__init__": [
    "xmlrpc.server.DocXMLRPCServer",
    "xmlrpc.server.MultiPathXMLRPCServer"
  ],
  "yaml._yaml.CEmitter.__init__": [
    "yaml.cyaml.CBaseDumper",
    "yaml.cyaml.CDumper"
  ],
  "yaml._yaml.CParser.__init__": [
    "yaml.cyaml.CBaseLoader",
    "yaml.cyaml.CFullLoader",
    "yaml.cyaml.CLoader",
    "yaml.cyaml.CSafeLoader",
    "yaml.cyaml.CUnsafeLoader"
  ],
  "yaml.constructor.BaseConstructor.construct_mapping": [
    "yaml.constructor.SafeConstructor"
  ],
  "yaml.constructor.BaseConstructor.construct_scalar": [
    "yaml.constructor.SafeConstructor"
  ],
  "yaml.constructor.FullConstructor.find_python_module": [
    "yaml.constructor.UnsafeConstructor"
  ],
  "yaml.constructor.FullConstructor.find_python_name": [
    "yaml.constructor.UnsafeConstructor"
  ],
  "yaml.constructor.FullConstructor.make_python_instance": [
    "yaml.constructor.UnsafeConstructor"
  ],
  "yaml.constructor.FullConstructor.set_python_instance_state": [
    "yaml.constructor.UnsafeConstructor"
  ],
  "yaml.emitter.Emitter.__init__": [
    "typeshed.typeshed.stubs.PyYAML.yaml.dumper.BaseDumper",
    "typeshed.typeshed.stubs.PyYAML.yaml.dumper.Dumper",
    "typeshed.typeshed.stubs.PyYAML.yaml.dumper.SafeDumper",
    "yaml.dumper.BaseDumper",
    "yaml.dumper.Dumper",
    "yaml.dumper.SafeDumper"
  ],
  "yaml.events.Event.__init__": [
    "yaml.events.DocumentEndEvent",
    "yaml.events.DocumentStartEvent",
    "yaml.events.NodeEvent",
    "yaml.events.StreamStartEvent"
  ],
  "yaml.events.NodeEvent.__init__": [
    "yaml.events.CollectionStartEvent",
    "yaml.events.ScalarEvent"
  ],
  "yaml.nodes.Node.__init__": [
    "yaml.nodes.CollectionNode",
    "yaml.nodes.ScalarNode"
  ],
  "yaml.reader.Reader.__init__": [
    "typeshed.typeshed.stubs.PyYAML.yaml.loader.BaseLoader",
    "typeshed.typeshed.stubs.PyYAML.yaml.loader.FullLoader",
    "typeshed.typeshed.stubs.PyYAML.yaml.loader.Loader",
    "typeshed.typeshed.stubs.PyYAML.yaml.loader.SafeLoader",
    "typeshed.typeshed.stubs.PyYAML.yaml.loader.UnsafeLoader",
    "yaml.loader.BaseLoader",
    "yaml.loader.FullLoader",
    "yaml.loader.Loader",
    "yaml.loader.SafeLoader",
    "yaml.loader.UnsafeLoader"
  ],
  "yaml.representer.BaseRepresenter.ignore_aliases": [
    "yaml.representer.SafeRepresenter"
  ],
  "yaml.tokens.Token.__init__": [
    "yaml.tokens.AliasToken",
    "yaml.tokens.AnchorToken",
    "yaml.tokens.DirectiveToken",
    "yaml.tokens.ScalarToken",
    "yaml.tokens.StreamStartToken",
    "yaml.tokens.TagToken"
  ],
  "zipfile.ZipExtFile.__init__": [
    "pip._vendor.distlib.compat.ZipExtFile"
  ],
  "zipfile.ZipFile.__enter__": [
    "pip._vendor.distlib.compat.ZipFile"
  ],
  "zipfile.ZipFile.__exit__": [
    "pip._vendor.distlib.compat.ZipFile"
  ],
  "zipfile.ZipFile.__init__": [
    "zipfile.PyZipFile"
  ],
  "zipfile.ZipFile.open": [
    "pip._vendor.distlib.compat.ZipFile"
  ],
  "zipfile.ZipFile.read": [
    "django.core.management.commands.loaddata.SingleZipReader"
  ]
}